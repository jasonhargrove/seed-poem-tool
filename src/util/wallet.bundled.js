var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key2 of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key2) && key2 !== except)
        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));

// node_modules/base64-js/index.js
var require_base64_js = __commonJS({
  "node_modules/base64-js/index.js"(exports) {
    "use strict";
    init_shim();
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    var i;
    var len;
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len2 = b64.length;
      if (len2 % 4 > 0) {
        throw new Error("Invalid string. Length must be a multiple of 4");
      }
      var validLen = b64.indexOf("=");
      if (validLen === -1)
        validLen = len2;
      var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
      return [validLen, placeHoldersLen];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i2;
      for (i2 = 0; i2 < len2; i2 += 4) {
        tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i2 = start; i2 < end; i2 += 3) {
        tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len2 = uint8.length;
      var extraBytes = len2 % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
        parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
      }
      if (extraBytes === 1) {
        tmp = uint8[len2 - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==");
      } else if (extraBytes === 2) {
        tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=");
      }
      return parts.join("");
    }
  }
});

// node_modules/ieee754/index.js
var require_ieee754 = __commonJS({
  "node_modules/ieee754/index.js"(exports) {
    init_shim();
    exports.read = function(buffer, offset, isLE, mLen, nBytes) {
      var e, m;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? nBytes - 1 : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];
      i += d;
      e = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;
      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {
      }
      m = e & (1 << -nBits) - 1;
      e >>= -nBits;
      nBits += mLen;
      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {
      }
      if (e === 0) {
        e = 1 - eBias;
      } else if (e === eMax) {
        return m ? NaN : (s ? -1 : 1) * Infinity;
      } else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    };
    exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
      var e, m, c;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i = isLE ? 0 : nBytes - 1;
      var d = isLE ? 1 : -1;
      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);
      if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
      } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
          e--;
          c *= 2;
        }
        if (e + eBias >= 1) {
          value += rt / c;
        } else {
          value += rt * Math.pow(2, 1 - eBias);
        }
        if (value * c >= 2) {
          e++;
          c /= 2;
        }
        if (e + eBias >= eMax) {
          m = 0;
          e = eMax;
        } else if (e + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e = e + eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e = 0;
        }
      }
      for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {
      }
      e = e << mLen | m;
      eLen += mLen;
      for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {
      }
      buffer[offset + i - d] |= s * 128;
    };
  }
});

// node_modules/buffer/index.js
var require_buffer = __commonJS({
  "node_modules/buffer/index.js"(exports) {
    "use strict";
    init_shim();
    var base64 = require_base64_js();
    var ieee754 = require_ieee754();
    var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
    exports.Buffer = Buffer3;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    var K_MAX_LENGTH = 2147483647;
    exports.kMaxLength = K_MAX_LENGTH;
    Buffer3.TYPED_ARRAY_SUPPORT = typedArraySupport();
    if (!Buffer3.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
      console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    }
    function typedArraySupport() {
      try {
        const arr = new Uint8Array(1);
        const proto = { foo: function() {
          return 42;
        } };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
      } catch (e) {
        return false;
      }
    }
    Object.defineProperty(Buffer3.prototype, "parent", {
      enumerable: true,
      get: function() {
        if (!Buffer3.isBuffer(this))
          return void 0;
        return this.buffer;
      }
    });
    Object.defineProperty(Buffer3.prototype, "offset", {
      enumerable: true,
      get: function() {
        if (!Buffer3.isBuffer(this))
          return void 0;
        return this.byteOffset;
      }
    });
    function createBuffer(length) {
      if (length > K_MAX_LENGTH) {
        throw new RangeError('The value "' + length + '" is invalid for option "size"');
      }
      const buf = new Uint8Array(length);
      Object.setPrototypeOf(buf, Buffer3.prototype);
      return buf;
    }
    function Buffer3(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        if (typeof encodingOrOffset === "string") {
          throw new TypeError('The "string" argument must be of type string. Received type number');
        }
        return allocUnsafe(arg);
      }
      return from(arg, encodingOrOffset, length);
    }
    Buffer3.poolSize = 8192;
    function from(value, encodingOrOffset, length) {
      if (typeof value === "string") {
        return fromString(value, encodingOrOffset);
      }
      if (ArrayBuffer.isView(value)) {
        return fromArrayView(value);
      }
      if (value == null) {
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
      }
      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
        return fromArrayBuffer(value, encodingOrOffset, length);
      }
      if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
        return fromArrayBuffer(value, encodingOrOffset, length);
      }
      if (typeof value === "number") {
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      }
      const valueOf = value.valueOf && value.valueOf();
      if (valueOf != null && valueOf !== value) {
        return Buffer3.from(valueOf, encodingOrOffset, length);
      }
      const b = fromObject(value);
      if (b)
        return b;
      if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
        return Buffer3.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
      }
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }
    Buffer3.from = function(value, encodingOrOffset, length) {
      return from(value, encodingOrOffset, length);
    };
    Object.setPrototypeOf(Buffer3.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(Buffer3, Uint8Array);
    function assertSize(size) {
      if (typeof size !== "number") {
        throw new TypeError('"size" argument must be of type number');
      } else if (size < 0) {
        throw new RangeError('The value "' + size + '" is invalid for option "size"');
      }
    }
    function alloc(size, fill, encoding) {
      assertSize(size);
      if (size <= 0) {
        return createBuffer(size);
      }
      if (fill !== void 0) {
        return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
      }
      return createBuffer(size);
    }
    Buffer3.alloc = function(size, fill, encoding) {
      return alloc(size, fill, encoding);
    };
    function allocUnsafe(size) {
      assertSize(size);
      return createBuffer(size < 0 ? 0 : checked(size) | 0);
    }
    Buffer3.allocUnsafe = function(size) {
      return allocUnsafe(size);
    };
    Buffer3.allocUnsafeSlow = function(size) {
      return allocUnsafe(size);
    };
    function fromString(string, encoding) {
      if (typeof encoding !== "string" || encoding === "") {
        encoding = "utf8";
      }
      if (!Buffer3.isEncoding(encoding)) {
        throw new TypeError("Unknown encoding: " + encoding);
      }
      const length = byteLength(string, encoding) | 0;
      let buf = createBuffer(length);
      const actual = buf.write(string, encoding);
      if (actual !== length) {
        buf = buf.slice(0, actual);
      }
      return buf;
    }
    function fromArrayLike(array) {
      const length = array.length < 0 ? 0 : checked(array.length) | 0;
      const buf = createBuffer(length);
      for (let i = 0; i < length; i += 1) {
        buf[i] = array[i] & 255;
      }
      return buf;
    }
    function fromArrayView(arrayView) {
      if (isInstance(arrayView, Uint8Array)) {
        const copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
      }
      return fromArrayLike(arrayView);
    }
    function fromArrayBuffer(array, byteOffset, length) {
      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('"offset" is outside of buffer bounds');
      }
      if (array.byteLength < byteOffset + (length || 0)) {
        throw new RangeError('"length" is outside of buffer bounds');
      }
      let buf;
      if (byteOffset === void 0 && length === void 0) {
        buf = new Uint8Array(array);
      } else if (length === void 0) {
        buf = new Uint8Array(array, byteOffset);
      } else {
        buf = new Uint8Array(array, byteOffset, length);
      }
      Object.setPrototypeOf(buf, Buffer3.prototype);
      return buf;
    }
    function fromObject(obj) {
      if (Buffer3.isBuffer(obj)) {
        const len = checked(obj.length) | 0;
        const buf = createBuffer(len);
        if (buf.length === 0) {
          return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
      }
      if (obj.length !== void 0) {
        if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
          return createBuffer(0);
        }
        return fromArrayLike(obj);
      }
      if (obj.type === "Buffer" && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
      }
    }
    function checked(length) {
      if (length >= K_MAX_LENGTH) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
      }
      return length | 0;
    }
    function SlowBuffer(length) {
      if (+length != length) {
        length = 0;
      }
      return Buffer3.alloc(+length);
    }
    Buffer3.isBuffer = function isBuffer(b) {
      return b != null && b._isBuffer === true && b !== Buffer3.prototype;
    };
    Buffer3.compare = function compare(a, b) {
      if (isInstance(a, Uint8Array))
        a = Buffer3.from(a, a.offset, a.byteLength);
      if (isInstance(b, Uint8Array))
        b = Buffer3.from(b, b.offset, b.byteLength);
      if (!Buffer3.isBuffer(a) || !Buffer3.isBuffer(b)) {
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      }
      if (a === b)
        return 0;
      let x = a.length;
      let y = b.length;
      for (let i = 0, len = Math.min(x, y); i < len; ++i) {
        if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break;
        }
      }
      if (x < y)
        return -1;
      if (y < x)
        return 1;
      return 0;
    };
    Buffer3.isEncoding = function isEncoding(encoding) {
      switch (String(encoding).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    Buffer3.concat = function concat2(list, length) {
      if (!Array.isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      if (list.length === 0) {
        return Buffer3.alloc(0);
      }
      let i;
      if (length === void 0) {
        length = 0;
        for (i = 0; i < list.length; ++i) {
          length += list[i].length;
        }
      }
      const buffer = Buffer3.allocUnsafe(length);
      let pos = 0;
      for (i = 0; i < list.length; ++i) {
        let buf = list[i];
        if (isInstance(buf, Uint8Array)) {
          if (pos + buf.length > buffer.length) {
            if (!Buffer3.isBuffer(buf))
              buf = Buffer3.from(buf);
            buf.copy(buffer, pos);
          } else {
            Uint8Array.prototype.set.call(buffer, buf, pos);
          }
        } else if (!Buffer3.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        } else {
          buf.copy(buffer, pos);
        }
        pos += buf.length;
      }
      return buffer;
    };
    function byteLength(string, encoding) {
      if (Buffer3.isBuffer(string)) {
        return string.length;
      }
      if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
        return string.byteLength;
      }
      if (typeof string !== "string") {
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);
      }
      const len = string.length;
      const mustMatch = arguments.length > 2 && arguments[2] === true;
      if (!mustMatch && len === 0)
        return 0;
      let loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "ascii":
          case "latin1":
          case "binary":
            return len;
          case "utf8":
          case "utf-8":
            return utf8ToBytes(string).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return len * 2;
          case "hex":
            return len >>> 1;
          case "base64":
            return base64ToBytes(string).length;
          default:
            if (loweredCase) {
              return mustMatch ? -1 : utf8ToBytes(string).length;
            }
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer3.byteLength = byteLength;
    function slowToString(encoding, start, end) {
      let loweredCase = false;
      if (start === void 0 || start < 0) {
        start = 0;
      }
      if (start > this.length) {
        return "";
      }
      if (end === void 0 || end > this.length) {
        end = this.length;
      }
      if (end <= 0) {
        return "";
      }
      end >>>= 0;
      start >>>= 0;
      if (end <= start) {
        return "";
      }
      if (!encoding)
        encoding = "utf8";
      while (true) {
        switch (encoding) {
          case "hex":
            return hexSlice(this, start, end);
          case "utf8":
          case "utf-8":
            return utf8Slice(this, start, end);
          case "ascii":
            return asciiSlice(this, start, end);
          case "latin1":
          case "binary":
            return latin1Slice(this, start, end);
          case "base64":
            return base64Slice(this, start, end);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return utf16leSlice(this, start, end);
          default:
            if (loweredCase)
              throw new TypeError("Unknown encoding: " + encoding);
            encoding = (encoding + "").toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer3.prototype._isBuffer = true;
    function swap(b, n, m) {
      const i = b[n];
      b[n] = b[m];
      b[m] = i;
    }
    Buffer3.prototype.swap16 = function swap16() {
      const len = this.length;
      if (len % 2 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      }
      for (let i = 0; i < len; i += 2) {
        swap(this, i, i + 1);
      }
      return this;
    };
    Buffer3.prototype.swap32 = function swap32() {
      const len = this.length;
      if (len % 4 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      }
      for (let i = 0; i < len; i += 4) {
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
      }
      return this;
    };
    Buffer3.prototype.swap64 = function swap64() {
      const len = this.length;
      if (len % 8 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      }
      for (let i = 0; i < len; i += 8) {
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
      }
      return this;
    };
    Buffer3.prototype.toString = function toString() {
      const length = this.length;
      if (length === 0)
        return "";
      if (arguments.length === 0)
        return utf8Slice(this, 0, length);
      return slowToString.apply(this, arguments);
    };
    Buffer3.prototype.toLocaleString = Buffer3.prototype.toString;
    Buffer3.prototype.equals = function equals(b) {
      if (!Buffer3.isBuffer(b))
        throw new TypeError("Argument must be a Buffer");
      if (this === b)
        return true;
      return Buffer3.compare(this, b) === 0;
    };
    Buffer3.prototype.inspect = function inspect4() {
      let str = "";
      const max = exports.INSPECT_MAX_BYTES;
      str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
      if (this.length > max)
        str += " ... ";
      return "<Buffer " + str + ">";
    };
    if (customInspectSymbol) {
      Buffer3.prototype[customInspectSymbol] = Buffer3.prototype.inspect;
    }
    Buffer3.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
      if (isInstance(target, Uint8Array)) {
        target = Buffer3.from(target, target.offset, target.byteLength);
      }
      if (!Buffer3.isBuffer(target)) {
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);
      }
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = target ? target.length : 0;
      }
      if (thisStart === void 0) {
        thisStart = 0;
      }
      if (thisEnd === void 0) {
        thisEnd = this.length;
      }
      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError("out of range index");
      }
      if (thisStart >= thisEnd && start >= end) {
        return 0;
      }
      if (thisStart >= thisEnd) {
        return -1;
      }
      if (start >= end) {
        return 1;
      }
      start >>>= 0;
      end >>>= 0;
      thisStart >>>= 0;
      thisEnd >>>= 0;
      if (this === target)
        return 0;
      let x = thisEnd - thisStart;
      let y = end - start;
      const len = Math.min(x, y);
      const thisCopy = this.slice(thisStart, thisEnd);
      const targetCopy = target.slice(start, end);
      for (let i = 0; i < len; ++i) {
        if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break;
        }
      }
      if (x < y)
        return -1;
      if (y < x)
        return 1;
      return 0;
    };
    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
      if (buffer.length === 0)
        return -1;
      if (typeof byteOffset === "string") {
        encoding = byteOffset;
        byteOffset = 0;
      } else if (byteOffset > 2147483647) {
        byteOffset = 2147483647;
      } else if (byteOffset < -2147483648) {
        byteOffset = -2147483648;
      }
      byteOffset = +byteOffset;
      if (numberIsNaN(byteOffset)) {
        byteOffset = dir ? 0 : buffer.length - 1;
      }
      if (byteOffset < 0)
        byteOffset = buffer.length + byteOffset;
      if (byteOffset >= buffer.length) {
        if (dir)
          return -1;
        else
          byteOffset = buffer.length - 1;
      } else if (byteOffset < 0) {
        if (dir)
          byteOffset = 0;
        else
          return -1;
      }
      if (typeof val === "string") {
        val = Buffer3.from(val, encoding);
      }
      if (Buffer3.isBuffer(val)) {
        if (val.length === 0) {
          return -1;
        }
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
      } else if (typeof val === "number") {
        val = val & 255;
        if (typeof Uint8Array.prototype.indexOf === "function") {
          if (dir) {
            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
          } else {
            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          }
        }
        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
      }
      throw new TypeError("val must be string, number or Buffer");
    }
    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
      let indexSize = 1;
      let arrLength = arr.length;
      let valLength = val.length;
      if (encoding !== void 0) {
        encoding = String(encoding).toLowerCase();
        if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
          if (arr.length < 2 || val.length < 2) {
            return -1;
          }
          indexSize = 2;
          arrLength /= 2;
          valLength /= 2;
          byteOffset /= 2;
        }
      }
      function read2(buf, i2) {
        if (indexSize === 1) {
          return buf[i2];
        } else {
          return buf.readUInt16BE(i2 * indexSize);
        }
      }
      let i;
      if (dir) {
        let foundIndex = -1;
        for (i = byteOffset; i < arrLength; i++) {
          if (read2(arr, i) === read2(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1)
              foundIndex = i;
            if (i - foundIndex + 1 === valLength)
              return foundIndex * indexSize;
          } else {
            if (foundIndex !== -1)
              i -= i - foundIndex;
            foundIndex = -1;
          }
        }
      } else {
        if (byteOffset + valLength > arrLength)
          byteOffset = arrLength - valLength;
        for (i = byteOffset; i >= 0; i--) {
          let found = true;
          for (let j = 0; j < valLength; j++) {
            if (read2(arr, i + j) !== read2(val, j)) {
              found = false;
              break;
            }
          }
          if (found)
            return i;
        }
      }
      return -1;
    }
    Buffer3.prototype.includes = function includes(val, byteOffset, encoding) {
      return this.indexOf(val, byteOffset, encoding) !== -1;
    };
    Buffer3.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };
    Buffer3.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };
    function hexWrite(buf, string, offset, length) {
      offset = Number(offset) || 0;
      const remaining = buf.length - offset;
      if (!length) {
        length = remaining;
      } else {
        length = Number(length);
        if (length > remaining) {
          length = remaining;
        }
      }
      const strLen = string.length;
      if (length > strLen / 2) {
        length = strLen / 2;
      }
      let i;
      for (i = 0; i < length; ++i) {
        const parsed = parseInt(string.substr(i * 2, 2), 16);
        if (numberIsNaN(parsed))
          return i;
        buf[offset + i] = parsed;
      }
      return i;
    }
    function utf8Write(buf, string, offset, length) {
      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
    }
    function asciiWrite(buf, string, offset, length) {
      return blitBuffer(asciiToBytes(string), buf, offset, length);
    }
    function base64Write(buf, string, offset, length) {
      return blitBuffer(base64ToBytes(string), buf, offset, length);
    }
    function ucs2Write(buf, string, offset, length) {
      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
    }
    Buffer3.prototype.write = function write(string, offset, length, encoding) {
      if (offset === void 0) {
        encoding = "utf8";
        length = this.length;
        offset = 0;
      } else if (length === void 0 && typeof offset === "string") {
        encoding = offset;
        length = this.length;
        offset = 0;
      } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
          length = length >>> 0;
          if (encoding === void 0)
            encoding = "utf8";
        } else {
          encoding = length;
          length = void 0;
        }
      } else {
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      }
      const remaining = this.length - offset;
      if (length === void 0 || length > remaining)
        length = remaining;
      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
        throw new RangeError("Attempt to write outside buffer bounds");
      }
      if (!encoding)
        encoding = "utf8";
      let loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "hex":
            return hexWrite(this, string, offset, length);
          case "utf8":
          case "utf-8":
            return utf8Write(this, string, offset, length);
          case "ascii":
          case "latin1":
          case "binary":
            return asciiWrite(this, string, offset, length);
          case "base64":
            return base64Write(this, string, offset, length);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return ucs2Write(this, string, offset, length);
          default:
            if (loweredCase)
              throw new TypeError("Unknown encoding: " + encoding);
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    };
    Buffer3.prototype.toJSON = function toJSON2() {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };
    function base64Slice(buf, start, end) {
      if (start === 0 && end === buf.length) {
        return base64.fromByteArray(buf);
      } else {
        return base64.fromByteArray(buf.slice(start, end));
      }
    }
    function utf8Slice(buf, start, end) {
      end = Math.min(buf.length, end);
      const res = [];
      let i = start;
      while (i < end) {
        const firstByte = buf[i];
        let codePoint = null;
        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i + bytesPerSequence <= end) {
          let secondByte, thirdByte, fourthByte, tempCodePoint;
          switch (bytesPerSequence) {
            case 1:
              if (firstByte < 128) {
                codePoint = firstByte;
              }
              break;
            case 2:
              secondByte = buf[i + 1];
              if ((secondByte & 192) === 128) {
                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                if (tempCodePoint > 127) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                  codePoint = tempCodePoint;
                }
              }
          }
        }
        if (codePoint === null) {
          codePoint = 65533;
          bytesPerSequence = 1;
        } else if (codePoint > 65535) {
          codePoint -= 65536;
          res.push(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i += bytesPerSequence;
      }
      return decodeCodePointsArray(res);
    }
    var MAX_ARGUMENTS_LENGTH = 4096;
    function decodeCodePointsArray(codePoints) {
      const len = codePoints.length;
      if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints);
      }
      let res = "";
      let i = 0;
      while (i < len) {
        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
      }
      return res;
    }
    function asciiSlice(buf, start, end) {
      let ret = "";
      end = Math.min(buf.length, end);
      for (let i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i] & 127);
      }
      return ret;
    }
    function latin1Slice(buf, start, end) {
      let ret = "";
      end = Math.min(buf.length, end);
      for (let i = start; i < end; ++i) {
        ret += String.fromCharCode(buf[i]);
      }
      return ret;
    }
    function hexSlice(buf, start, end) {
      const len = buf.length;
      if (!start || start < 0)
        start = 0;
      if (!end || end < 0 || end > len)
        end = len;
      let out = "";
      for (let i = start; i < end; ++i) {
        out += hexSliceLookupTable[buf[i]];
      }
      return out;
    }
    function utf16leSlice(buf, start, end) {
      const bytes = buf.slice(start, end);
      let res = "";
      for (let i = 0; i < bytes.length - 1; i += 2) {
        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
      }
      return res;
    }
    Buffer3.prototype.slice = function slice(start, end) {
      const len = this.length;
      start = ~~start;
      end = end === void 0 ? len : ~~end;
      if (start < 0) {
        start += len;
        if (start < 0)
          start = 0;
      } else if (start > len) {
        start = len;
      }
      if (end < 0) {
        end += len;
        if (end < 0)
          end = 0;
      } else if (end > len) {
        end = len;
      }
      if (end < start)
        end = start;
      const newBuf = this.subarray(start, end);
      Object.setPrototypeOf(newBuf, Buffer3.prototype);
      return newBuf;
    };
    function checkOffset(offset, ext, length) {
      if (offset % 1 !== 0 || offset < 0)
        throw new RangeError("offset is not uint");
      if (offset + ext > length)
        throw new RangeError("Trying to access beyond buffer length");
    }
    Buffer3.prototype.readUintLE = Buffer3.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert)
        checkOffset(offset, byteLength2, this.length);
      let val = this[offset];
      let mul3 = 1;
      let i = 0;
      while (++i < byteLength2 && (mul3 *= 256)) {
        val += this[offset + i] * mul3;
      }
      return val;
    };
    Buffer3.prototype.readUintBE = Buffer3.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        checkOffset(offset, byteLength2, this.length);
      }
      let val = this[offset + --byteLength2];
      let mul3 = 1;
      while (byteLength2 > 0 && (mul3 *= 256)) {
        val += this[offset + --byteLength2] * mul3;
      }
      return val;
    };
    Buffer3.prototype.readUint8 = Buffer3.prototype.readUInt8 = function readUInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 1, this.length);
      return this[offset];
    };
    Buffer3.prototype.readUint16LE = Buffer3.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 2, this.length);
      return this[offset] | this[offset + 1] << 8;
    };
    Buffer3.prototype.readUint16BE = Buffer3.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 2, this.length);
      return this[offset] << 8 | this[offset + 1];
    };
    Buffer3.prototype.readUint32LE = Buffer3.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 4, this.length);
      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
    };
    Buffer3.prototype.readUint32BE = Buffer3.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 4, this.length);
      return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };
    Buffer3.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
      const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
      return BigInt(lo) + (BigInt(hi) << BigInt(32));
    });
    Buffer3.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
      const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
      return (BigInt(hi) << BigInt(32)) + BigInt(lo);
    });
    Buffer3.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert)
        checkOffset(offset, byteLength2, this.length);
      let val = this[offset];
      let mul3 = 1;
      let i = 0;
      while (++i < byteLength2 && (mul3 *= 256)) {
        val += this[offset + i] * mul3;
      }
      mul3 *= 128;
      if (val >= mul3)
        val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer3.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert)
        checkOffset(offset, byteLength2, this.length);
      let i = byteLength2;
      let mul3 = 1;
      let val = this[offset + --i];
      while (i > 0 && (mul3 *= 256)) {
        val += this[offset + --i] * mul3;
      }
      mul3 *= 128;
      if (val >= mul3)
        val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer3.prototype.readInt8 = function readInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 1, this.length);
      if (!(this[offset] & 128))
        return this[offset];
      return (255 - this[offset] + 1) * -1;
    };
    Buffer3.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 2, this.length);
      const val = this[offset] | this[offset + 1] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer3.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 2, this.length);
      const val = this[offset + 1] | this[offset] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer3.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 4, this.length);
      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };
    Buffer3.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 4, this.length);
      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };
    Buffer3.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
      return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
    });
    Buffer3.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const val = (first << 24) + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
      return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
    });
    Buffer3.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, true, 23, 4);
    };
    Buffer3.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, false, 23, 4);
    };
    Buffer3.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, true, 52, 8);
    };
    Buffer3.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert)
        checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, false, 52, 8);
    };
    function checkInt(buf, value, offset, ext, max, min) {
      if (!Buffer3.isBuffer(buf))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (value > max || value < min)
        throw new RangeError('"value" argument is out of bounds');
      if (offset + ext > buf.length)
        throw new RangeError("Index out of range");
    }
    Buffer3.prototype.writeUintLE = Buffer3.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      let mul3 = 1;
      let i = 0;
      this[offset] = value & 255;
      while (++i < byteLength2 && (mul3 *= 256)) {
        this[offset + i] = value / mul3 & 255;
      }
      return offset + byteLength2;
    };
    Buffer3.prototype.writeUintBE = Buffer3.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      let i = byteLength2 - 1;
      let mul3 = 1;
      this[offset + i] = value & 255;
      while (--i >= 0 && (mul3 *= 256)) {
        this[offset + i] = value / mul3 & 255;
      }
      return offset + byteLength2;
    };
    Buffer3.prototype.writeUint8 = Buffer3.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 1, 255, 0);
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer3.prototype.writeUint16LE = Buffer3.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer3.prototype.writeUint16BE = Buffer3.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer3.prototype.writeUint32LE = Buffer3.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset + 3] = value >>> 24;
      this[offset + 2] = value >>> 16;
      this[offset + 1] = value >>> 8;
      this[offset] = value & 255;
      return offset + 4;
    };
    Buffer3.prototype.writeUint32BE = Buffer3.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    function wrtBigUInt64LE(buf, value, offset, min, max) {
      checkIntBI(value, min, max, buf, offset, 7);
      let lo = Number(value & BigInt(4294967295));
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      let hi = Number(value >> BigInt(32) & BigInt(4294967295));
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      return offset;
    }
    function wrtBigUInt64BE(buf, value, offset, min, max) {
      checkIntBI(value, min, max, buf, offset, 7);
      let lo = Number(value & BigInt(4294967295));
      buf[offset + 7] = lo;
      lo = lo >> 8;
      buf[offset + 6] = lo;
      lo = lo >> 8;
      buf[offset + 5] = lo;
      lo = lo >> 8;
      buf[offset + 4] = lo;
      let hi = Number(value >> BigInt(32) & BigInt(4294967295));
      buf[offset + 3] = hi;
      hi = hi >> 8;
      buf[offset + 2] = hi;
      hi = hi >> 8;
      buf[offset + 1] = hi;
      hi = hi >> 8;
      buf[offset] = hi;
      return offset + 8;
    }
    Buffer3.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
      return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer3.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
      return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer3.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      let i = 0;
      let mul3 = 1;
      let sub = 0;
      this[offset] = value & 255;
      while (++i < byteLength2 && (mul3 *= 256)) {
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
          sub = 1;
        }
        this[offset + i] = (value / mul3 >> 0) - sub & 255;
      }
      return offset + byteLength2;
    };
    Buffer3.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      let i = byteLength2 - 1;
      let mul3 = 1;
      let sub = 0;
      this[offset + i] = value & 255;
      while (--i >= 0 && (mul3 *= 256)) {
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
          sub = 1;
        }
        this[offset + i] = (value / mul3 >> 0) - sub & 255;
      }
      return offset + byteLength2;
    };
    Buffer3.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 1, 127, -128);
      if (value < 0)
        value = 255 + value + 1;
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer3.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer3.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer3.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 4, 2147483647, -2147483648);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      this[offset + 2] = value >>> 16;
      this[offset + 3] = value >>> 24;
      return offset + 4;
    };
    Buffer3.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert)
        checkInt(this, value, offset, 4, 2147483647, -2147483648);
      if (value < 0)
        value = 4294967295 + value + 1;
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    Buffer3.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
      return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    Buffer3.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
      return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function checkIEEE754(buf, value, offset, ext, max, min) {
      if (offset + ext > buf.length)
        throw new RangeError("Index out of range");
      if (offset < 0)
        throw new RangeError("Index out of range");
    }
    function writeFloat(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
      }
      ieee754.write(buf, value, offset, littleEndian, 23, 4);
      return offset + 4;
    }
    Buffer3.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
      return writeFloat(this, value, offset, true, noAssert);
    };
    Buffer3.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
      return writeFloat(this, value, offset, false, noAssert);
    };
    function writeDouble(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
      }
      ieee754.write(buf, value, offset, littleEndian, 52, 8);
      return offset + 8;
    }
    Buffer3.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
      return writeDouble(this, value, offset, true, noAssert);
    };
    Buffer3.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
      return writeDouble(this, value, offset, false, noAssert);
    };
    Buffer3.prototype.copy = function copy(target, targetStart, start, end) {
      if (!Buffer3.isBuffer(target))
        throw new TypeError("argument should be a Buffer");
      if (!start)
        start = 0;
      if (!end && end !== 0)
        end = this.length;
      if (targetStart >= target.length)
        targetStart = target.length;
      if (!targetStart)
        targetStart = 0;
      if (end > 0 && end < start)
        end = start;
      if (end === start)
        return 0;
      if (target.length === 0 || this.length === 0)
        return 0;
      if (targetStart < 0) {
        throw new RangeError("targetStart out of bounds");
      }
      if (start < 0 || start >= this.length)
        throw new RangeError("Index out of range");
      if (end < 0)
        throw new RangeError("sourceEnd out of bounds");
      if (end > this.length)
        end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }
      const len = end - start;
      if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
        this.copyWithin(targetStart, start, end);
      } else {
        Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
      }
      return len;
    };
    Buffer3.prototype.fill = function fill(val, start, end, encoding) {
      if (typeof val === "string") {
        if (typeof start === "string") {
          encoding = start;
          start = 0;
          end = this.length;
        } else if (typeof end === "string") {
          encoding = end;
          end = this.length;
        }
        if (encoding !== void 0 && typeof encoding !== "string") {
          throw new TypeError("encoding must be a string");
        }
        if (typeof encoding === "string" && !Buffer3.isEncoding(encoding)) {
          throw new TypeError("Unknown encoding: " + encoding);
        }
        if (val.length === 1) {
          const code = val.charCodeAt(0);
          if (encoding === "utf8" && code < 128 || encoding === "latin1") {
            val = code;
          }
        }
      } else if (typeof val === "number") {
        val = val & 255;
      } else if (typeof val === "boolean") {
        val = Number(val);
      }
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
      }
      if (end <= start) {
        return this;
      }
      start = start >>> 0;
      end = end === void 0 ? this.length : end >>> 0;
      if (!val)
        val = 0;
      let i;
      if (typeof val === "number") {
        for (i = start; i < end; ++i) {
          this[i] = val;
        }
      } else {
        const bytes = Buffer3.isBuffer(val) ? val : Buffer3.from(val, encoding);
        const len = bytes.length;
        if (len === 0) {
          throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        }
        for (i = 0; i < end - start; ++i) {
          this[i + start] = bytes[i % len];
        }
      }
      return this;
    };
    var errors = {};
    function E(sym, getMessage, Base) {
      errors[sym] = class NodeError extends Base {
        constructor() {
          super();
          Object.defineProperty(this, "message", {
            value: getMessage.apply(this, arguments),
            writable: true,
            configurable: true
          });
          this.name = `${this.name} [${sym}]`;
          this.stack;
          delete this.name;
        }
        get code() {
          return sym;
        }
        set code(value) {
          Object.defineProperty(this, "code", {
            configurable: true,
            enumerable: true,
            value,
            writable: true
          });
        }
        toString() {
          return `${this.name} [${sym}]: ${this.message}`;
        }
      };
    }
    E("ERR_BUFFER_OUT_OF_BOUNDS", function(name) {
      if (name) {
        return `${name} is outside of buffer bounds`;
      }
      return "Attempt to access memory outside buffer bounds";
    }, RangeError);
    E("ERR_INVALID_ARG_TYPE", function(name, actual) {
      return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
    }, TypeError);
    E("ERR_OUT_OF_RANGE", function(str, range, input) {
      let msg = `The value of "${str}" is out of range.`;
      let received = input;
      if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
        received = addNumericalSeparator(String(input));
      } else if (typeof input === "bigint") {
        received = String(input);
        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
          received = addNumericalSeparator(received);
        }
        received += "n";
      }
      msg += ` It must be ${range}. Received ${received}`;
      return msg;
    }, RangeError);
    function addNumericalSeparator(val) {
      let res = "";
      let i = val.length;
      const start = val[0] === "-" ? 1 : 0;
      for (; i >= start + 4; i -= 3) {
        res = `_${val.slice(i - 3, i)}${res}`;
      }
      return `${val.slice(0, i)}${res}`;
    }
    function checkBounds(buf, offset, byteLength2) {
      validateNumber(offset, "offset");
      if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
        boundsError(offset, buf.length - (byteLength2 + 1));
      }
    }
    function checkIntBI(value, min, max, buf, offset, byteLength2) {
      if (value > max || value < min) {
        const n = typeof min === "bigint" ? "n" : "";
        let range;
        if (byteLength2 > 3) {
          if (min === 0 || min === BigInt(0)) {
            range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;
          } else {
            range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;
          }
        } else {
          range = `>= ${min}${n} and <= ${max}${n}`;
        }
        throw new errors.ERR_OUT_OF_RANGE("value", range, value);
      }
      checkBounds(buf, offset, byteLength2);
    }
    function validateNumber(value, name) {
      if (typeof value !== "number") {
        throw new errors.ERR_INVALID_ARG_TYPE(name, "number", value);
      }
    }
    function boundsError(value, length, type) {
      if (Math.floor(value) !== value) {
        validateNumber(value, type);
        throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
      }
      if (length < 0) {
        throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
      }
      throw new errors.ERR_OUT_OF_RANGE(type || "offset", `>= ${type ? 1 : 0} and <= ${length}`, value);
    }
    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
    function base64clean(str) {
      str = str.split("=")[0];
      str = str.trim().replace(INVALID_BASE64_RE, "");
      if (str.length < 2)
        return "";
      while (str.length % 4 !== 0) {
        str = str + "=";
      }
      return str;
    }
    function utf8ToBytes(string, units) {
      units = units || Infinity;
      let codePoint;
      const length = string.length;
      let leadSurrogate = null;
      const bytes = [];
      for (let i = 0; i < length; ++i) {
        codePoint = string.charCodeAt(i);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1)
                bytes.push(239, 191, 189);
              continue;
            } else if (i + 1 === length) {
              if ((units -= 3) > -1)
                bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1)
              bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1)
            bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0)
            break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0)
            break;
          bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0)
            break;
          bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0)
            break;
          bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else {
          throw new Error("Invalid code point");
        }
      }
      return bytes;
    }
    function asciiToBytes(str) {
      const byteArray = [];
      for (let i = 0; i < str.length; ++i) {
        byteArray.push(str.charCodeAt(i) & 255);
      }
      return byteArray;
    }
    function utf16leToBytes(str, units) {
      let c, hi, lo;
      const byteArray = [];
      for (let i = 0; i < str.length; ++i) {
        if ((units -= 2) < 0)
          break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
      }
      return byteArray;
    }
    function base64ToBytes(str) {
      return base64.toByteArray(base64clean(str));
    }
    function blitBuffer(src, dst, offset, length) {
      let i;
      for (i = 0; i < length; ++i) {
        if (i + offset >= dst.length || i >= src.length)
          break;
        dst[i + offset] = src[i];
      }
      return i;
    }
    function isInstance(obj, type) {
      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
    }
    function numberIsNaN(obj) {
      return obj !== obj;
    }
    var hexSliceLookupTable = function() {
      const alphabet = "0123456789abcdef";
      const table = new Array(256);
      for (let i = 0; i < 16; ++i) {
        const i16 = i * 16;
        for (let j = 0; j < 16; ++j) {
          table[i16 + j] = alphabet[i] + alphabet[j];
        }
      }
      return table;
    }();
    function defineBigIntMethod(fn) {
      return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
    }
    function BufferBigIntNotDefined() {
      throw new Error("BigInt not supported");
    }
  }
});

// node_modules/process/browser.js
var require_browser = __commonJS({
  "node_modules/process/browser.js"(exports, module) {
    init_shim();
    var process2 = module.exports = {};
    var cachedSetTimeout;
    var cachedClearTimeout;
    function defaultSetTimout() {
      throw new Error("setTimeout has not been defined");
    }
    function defaultClearTimeout() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        if (typeof setTimeout === "function") {
          cachedSetTimeout = setTimeout;
        } else {
          cachedSetTimeout = defaultSetTimout;
        }
      } catch (e) {
        cachedSetTimeout = defaultSetTimout;
      }
      try {
        if (typeof clearTimeout === "function") {
          cachedClearTimeout = clearTimeout;
        } else {
          cachedClearTimeout = defaultClearTimeout;
        }
      } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
      }
    })();
    function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) {
        return setTimeout(fun, 0);
      }
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
      }
      try {
        return cachedSetTimeout(fun, 0);
      } catch (e) {
        try {
          return cachedSetTimeout.call(null, fun, 0);
        } catch (e2) {
          return cachedSetTimeout.call(this, fun, 0);
        }
      }
    }
    function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) {
        return clearTimeout(marker);
      }
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
      }
      try {
        return cachedClearTimeout(marker);
      } catch (e) {
        try {
          return cachedClearTimeout.call(null, marker);
        } catch (e2) {
          return cachedClearTimeout.call(this, marker);
        }
      }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;
    function cleanUpNextTick() {
      if (!draining || !currentQueue) {
        return;
      }
      draining = false;
      if (currentQueue.length) {
        queue = currentQueue.concat(queue);
      } else {
        queueIndex = -1;
      }
      if (queue.length) {
        drainQueue();
      }
    }
    function drainQueue() {
      if (draining) {
        return;
      }
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;
      var len = queue.length;
      while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
          if (currentQueue) {
            currentQueue[queueIndex].run();
          }
        }
        queueIndex = -1;
        len = queue.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
    }
    process2.nextTick = function(fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
          args[i - 1] = arguments[i];
        }
      }
      queue.push(new Item(fun, args));
      if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
      }
    };
    function Item(fun, array) {
      this.fun = fun;
      this.array = array;
    }
    Item.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    process2.title = "browser";
    process2.browser = true;
    process2.env = {};
    process2.argv = [];
    process2.version = "";
    process2.versions = {};
    function noop() {
    }
    process2.on = noop;
    process2.addListener = noop;
    process2.once = noop;
    process2.off = noop;
    process2.removeListener = noop;
    process2.removeAllListeners = noop;
    process2.emit = noop;
    process2.prependListener = noop;
    process2.prependOnceListener = noop;
    process2.listeners = function(name) {
      return [];
    };
    process2.binding = function(name) {
      throw new Error("process.binding is not supported");
    };
    process2.cwd = function() {
      return "/";
    };
    process2.chdir = function(dir) {
      throw new Error("process.chdir is not supported");
    };
    process2.umask = function() {
      return 0;
    };
  }
});

// src/shim.js
var Buffer2, process;
var init_shim = __esm({
  "src/shim.js"() {
    Buffer2 = require_buffer().Buffer;
    process = require_browser();
  }
});

// node_modules/path-browserify/index.js
var require_path_browserify = __commonJS({
  "node_modules/path-browserify/index.js"(exports, module) {
    "use strict";
    init_shim();
    function assertPath(path) {
      if (typeof path !== "string") {
        throw new TypeError("Path must be a string. Received " + JSON.stringify(path));
      }
    }
    function normalizeStringPosix(path, allowAboveRoot) {
      var res = "";
      var lastSegmentLength = 0;
      var lastSlash = -1;
      var dots = 0;
      var code;
      for (var i = 0; i <= path.length; ++i) {
        if (i < path.length)
          code = path.charCodeAt(i);
        else if (code === 47)
          break;
        else
          code = 47;
        if (code === 47) {
          if (lastSlash === i - 1 || dots === 1) {
          } else if (lastSlash !== i - 1 && dots === 2) {
            if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
              if (res.length > 2) {
                var lastSlashIndex = res.lastIndexOf("/");
                if (lastSlashIndex !== res.length - 1) {
                  if (lastSlashIndex === -1) {
                    res = "";
                    lastSegmentLength = 0;
                  } else {
                    res = res.slice(0, lastSlashIndex);
                    lastSegmentLength = res.length - 1 - res.lastIndexOf("/");
                  }
                  lastSlash = i;
                  dots = 0;
                  continue;
                }
              } else if (res.length === 2 || res.length === 1) {
                res = "";
                lastSegmentLength = 0;
                lastSlash = i;
                dots = 0;
                continue;
              }
            }
            if (allowAboveRoot) {
              if (res.length > 0)
                res += "/..";
              else
                res = "..";
              lastSegmentLength = 2;
            }
          } else {
            if (res.length > 0)
              res += "/" + path.slice(lastSlash + 1, i);
            else
              res = path.slice(lastSlash + 1, i);
            lastSegmentLength = i - lastSlash - 1;
          }
          lastSlash = i;
          dots = 0;
        } else if (code === 46 && dots !== -1) {
          ++dots;
        } else {
          dots = -1;
        }
      }
      return res;
    }
    function _format(sep, pathObject) {
      var dir = pathObject.dir || pathObject.root;
      var base2 = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
      if (!dir) {
        return base2;
      }
      if (dir === pathObject.root) {
        return dir + base2;
      }
      return dir + sep + base2;
    }
    var posix = {
      resolve: function resolve() {
        var resolvedPath = "";
        var resolvedAbsolute = false;
        var cwd;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path;
          if (i >= 0)
            path = arguments[i];
          else {
            if (cwd === void 0)
              cwd = process.cwd();
            path = cwd;
          }
          assertPath(path);
          if (path.length === 0) {
            continue;
          }
          resolvedPath = path + "/" + resolvedPath;
          resolvedAbsolute = path.charCodeAt(0) === 47;
        }
        resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);
        if (resolvedAbsolute) {
          if (resolvedPath.length > 0)
            return "/" + resolvedPath;
          else
            return "/";
        } else if (resolvedPath.length > 0) {
          return resolvedPath;
        } else {
          return ".";
        }
      },
      normalize: function normalize(path) {
        assertPath(path);
        if (path.length === 0)
          return ".";
        var isAbsolute = path.charCodeAt(0) === 47;
        var trailingSeparator = path.charCodeAt(path.length - 1) === 47;
        path = normalizeStringPosix(path, !isAbsolute);
        if (path.length === 0 && !isAbsolute)
          path = ".";
        if (path.length > 0 && trailingSeparator)
          path += "/";
        if (isAbsolute)
          return "/" + path;
        return path;
      },
      isAbsolute: function isAbsolute(path) {
        assertPath(path);
        return path.length > 0 && path.charCodeAt(0) === 47;
      },
      join: function join() {
        if (arguments.length === 0)
          return ".";
        var joined;
        for (var i = 0; i < arguments.length; ++i) {
          var arg = arguments[i];
          assertPath(arg);
          if (arg.length > 0) {
            if (joined === void 0)
              joined = arg;
            else
              joined += "/" + arg;
          }
        }
        if (joined === void 0)
          return ".";
        return posix.normalize(joined);
      },
      relative: function relative(from, to) {
        assertPath(from);
        assertPath(to);
        if (from === to)
          return "";
        from = posix.resolve(from);
        to = posix.resolve(to);
        if (from === to)
          return "";
        var fromStart = 1;
        for (; fromStart < from.length; ++fromStart) {
          if (from.charCodeAt(fromStart) !== 47)
            break;
        }
        var fromEnd = from.length;
        var fromLen = fromEnd - fromStart;
        var toStart = 1;
        for (; toStart < to.length; ++toStart) {
          if (to.charCodeAt(toStart) !== 47)
            break;
        }
        var toEnd = to.length;
        var toLen = toEnd - toStart;
        var length = fromLen < toLen ? fromLen : toLen;
        var lastCommonSep = -1;
        var i = 0;
        for (; i <= length; ++i) {
          if (i === length) {
            if (toLen > length) {
              if (to.charCodeAt(toStart + i) === 47) {
                return to.slice(toStart + i + 1);
              } else if (i === 0) {
                return to.slice(toStart + i);
              }
            } else if (fromLen > length) {
              if (from.charCodeAt(fromStart + i) === 47) {
                lastCommonSep = i;
              } else if (i === 0) {
                lastCommonSep = 0;
              }
            }
            break;
          }
          var fromCode = from.charCodeAt(fromStart + i);
          var toCode = to.charCodeAt(toStart + i);
          if (fromCode !== toCode)
            break;
          else if (fromCode === 47)
            lastCommonSep = i;
        }
        var out = "";
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
          if (i === fromEnd || from.charCodeAt(i) === 47) {
            if (out.length === 0)
              out += "..";
            else
              out += "/..";
          }
        }
        if (out.length > 0)
          return out + to.slice(toStart + lastCommonSep);
        else {
          toStart += lastCommonSep;
          if (to.charCodeAt(toStart) === 47)
            ++toStart;
          return to.slice(toStart);
        }
      },
      _makeLong: function _makeLong(path) {
        return path;
      },
      dirname: function dirname(path) {
        assertPath(path);
        if (path.length === 0)
          return ".";
        var code = path.charCodeAt(0);
        var hasRoot = code === 47;
        var end = -1;
        var matchedSlash = true;
        for (var i = path.length - 1; i >= 1; --i) {
          code = path.charCodeAt(i);
          if (code === 47) {
            if (!matchedSlash) {
              end = i;
              break;
            }
          } else {
            matchedSlash = false;
          }
        }
        if (end === -1)
          return hasRoot ? "/" : ".";
        if (hasRoot && end === 1)
          return "//";
        return path.slice(0, end);
      },
      basename: function basename(path, ext) {
        if (ext !== void 0 && typeof ext !== "string")
          throw new TypeError('"ext" argument must be a string');
        assertPath(path);
        var start = 0;
        var end = -1;
        var matchedSlash = true;
        var i;
        if (ext !== void 0 && ext.length > 0 && ext.length <= path.length) {
          if (ext.length === path.length && ext === path)
            return "";
          var extIdx = ext.length - 1;
          var firstNonSlashEnd = -1;
          for (i = path.length - 1; i >= 0; --i) {
            var code = path.charCodeAt(i);
            if (code === 47) {
              if (!matchedSlash) {
                start = i + 1;
                break;
              }
            } else {
              if (firstNonSlashEnd === -1) {
                matchedSlash = false;
                firstNonSlashEnd = i + 1;
              }
              if (extIdx >= 0) {
                if (code === ext.charCodeAt(extIdx)) {
                  if (--extIdx === -1) {
                    end = i;
                  }
                } else {
                  extIdx = -1;
                  end = firstNonSlashEnd;
                }
              }
            }
          }
          if (start === end)
            end = firstNonSlashEnd;
          else if (end === -1)
            end = path.length;
          return path.slice(start, end);
        } else {
          for (i = path.length - 1; i >= 0; --i) {
            if (path.charCodeAt(i) === 47) {
              if (!matchedSlash) {
                start = i + 1;
                break;
              }
            } else if (end === -1) {
              matchedSlash = false;
              end = i + 1;
            }
          }
          if (end === -1)
            return "";
          return path.slice(start, end);
        }
      },
      extname: function extname(path) {
        assertPath(path);
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var preDotState = 0;
        for (var i = path.length - 1; i >= 0; --i) {
          var code = path.charCodeAt(i);
          if (code === 47) {
            if (!matchedSlash) {
              startPart = i + 1;
              break;
            }
            continue;
          }
          if (end === -1) {
            matchedSlash = false;
            end = i + 1;
          }
          if (code === 46) {
            if (startDot === -1)
              startDot = i;
            else if (preDotState !== 1)
              preDotState = 1;
          } else if (startDot !== -1) {
            preDotState = -1;
          }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          return "";
        }
        return path.slice(startDot, end);
      },
      format: function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
          throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
        }
        return _format("/", pathObject);
      },
      parse: function parse(path) {
        assertPath(path);
        var ret = { root: "", dir: "", base: "", ext: "", name: "" };
        if (path.length === 0)
          return ret;
        var code = path.charCodeAt(0);
        var isAbsolute = code === 47;
        var start;
        if (isAbsolute) {
          ret.root = "/";
          start = 1;
        } else {
          start = 0;
        }
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var i = path.length - 1;
        var preDotState = 0;
        for (; i >= start; --i) {
          code = path.charCodeAt(i);
          if (code === 47) {
            if (!matchedSlash) {
              startPart = i + 1;
              break;
            }
            continue;
          }
          if (end === -1) {
            matchedSlash = false;
            end = i + 1;
          }
          if (code === 46) {
            if (startDot === -1)
              startDot = i;
            else if (preDotState !== 1)
              preDotState = 1;
          } else if (startDot !== -1) {
            preDotState = -1;
          }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          if (end !== -1) {
            if (startPart === 0 && isAbsolute)
              ret.base = ret.name = path.slice(1, end);
            else
              ret.base = ret.name = path.slice(startPart, end);
          }
        } else {
          if (startPart === 0 && isAbsolute) {
            ret.name = path.slice(1, startDot);
            ret.base = path.slice(1, end);
          } else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
          }
          ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0)
          ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute)
          ret.dir = "/";
        return ret;
      },
      sep: "/",
      delimiter: ":",
      win32: null,
      posix: null
    };
    posix.posix = posix;
    module.exports = posix;
  }
});

// (disabled):fs
var require_fs = __commonJS({
  "(disabled):fs"() {
    init_shim();
  }
});

// node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js
var require_libsodium_sumo = __commonJS({
  "node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js"(exports, module) {
    init_shim();
    !function(A) {
      function g(A2) {
        "use strict";
        var g2;
        (g2 = A2) === void 0 && (g2 = {});
        var I = g2;
        typeof I.sodium != "object" && (typeof window == "object" ? I = window : typeof window == "object" && (I = window)), typeof I.sodium == "object" && typeof I.sodium.totalMemory == "number" && (g2.TOTAL_MEMORY = I.sodium.totalMemory);
        var a = g2;
        return g2.ready = new Promise(function(A3, g3) {
          (r = a).onAbort = g3, r.print = function(A4) {
          }, r.printErr = function(A4) {
          }, r.onRuntimeInitialized = function() {
            try {
              r._crypto_secretbox_keybytes(), A3();
            } catch (A4) {
              g3(A4);
            }
          }, r.useBackupModule = function() {
            return new Promise(function(A4, g4) {
              (r2 = {}).onAbort = g4, r2.onRuntimeInitialized = function() {
                Object.keys(a).forEach(function(A5) {
                  A5 !== "getRandomValue" && delete a[A5];
                }), Object.keys(r2).forEach(function(A5) {
                  a[A5] = r2[A5];
                }), A4();
              };
              var I3, r2 = r2 !== void 0 ? r2 : {}, t2 = {};
              for (I3 in r2)
                r2.hasOwnProperty(I3) && (t2[I3] = r2[I3]);
              var B2 = [], n2 = false, o2 = false, e2 = false, Q2 = false;
              n2 = typeof window == "object", o2 = typeof importScripts == "function", e2 = typeof process == "object" && typeof process.versions == "object" && typeof process.versions.node == "string", Q2 = !n2 && !e2 && !o2;
              var C2, c2, i2, _2, s2, y2 = "";
              function E2(A5) {
                return r2.locateFile ? r2.locateFile(A5, y2) : y2 + A5;
              }
              e2 ? (y2 = o2 ? require_path_browserify().dirname(y2) + "/" : __dirname + "/", C2 = function(A5, g5) {
                var I4 = HA2(A5);
                return I4 ? g5 ? I4 : I4.toString() : (_2 || (_2 = require_fs()), s2 || (s2 = require_path_browserify()), A5 = s2.normalize(A5), _2.readFileSync(A5, g5 ? null : "utf8"));
              }, i2 = function(A5) {
                var g5 = C2(A5, true);
                return g5.buffer || (g5 = new Uint8Array(g5)), m2(g5.buffer), g5;
              }, process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), B2 = process.argv.slice(2), typeof module != "undefined" && (module.exports = r2), r2.inspect = function() {
                return "[Emscripten Module object]";
              }) : Q2 ? (typeof read != "undefined" && (C2 = function(A5) {
                var g5 = HA2(A5);
                return g5 ? kA2(g5) : read(A5);
              }), i2 = function(A5) {
                var g5;
                return (g5 = HA2(A5)) ? g5 : typeof readbuffer == "function" ? new Uint8Array(readbuffer(A5)) : (m2(typeof (g5 = read(A5, "binary")) == "object"), g5);
              }, typeof scriptArgs != "undefined" ? B2 = scriptArgs : arguments !== void 0 && (B2 = arguments), typeof print != "undefined" && (typeof console == "undefined" && (console = {}), console.log = print, console.warn = console.error = typeof printErr != "undefined" ? printErr : print)) : (n2 || o2) && (o2 ? y2 = self.location.href : typeof document != "undefined" && document.currentScript && (y2 = document.currentScript.src), y2 = y2.indexOf("blob:") !== 0 ? y2.substr(0, y2.lastIndexOf("/") + 1) : "", C2 = function(A5) {
                try {
                  var g5 = new XMLHttpRequest();
                  return g5.open("GET", A5, false), g5.send(null), g5.responseText;
                } catch (g6) {
                  var I4 = HA2(A5);
                  if (I4)
                    return kA2(I4);
                  throw g6;
                }
              }, o2 && (i2 = function(A5) {
                try {
                  var g5 = new XMLHttpRequest();
                  return g5.open("GET", A5, false), g5.responseType = "arraybuffer", g5.send(null), new Uint8Array(g5.response);
                } catch (g6) {
                  var I4 = HA2(A5);
                  if (I4)
                    return I4;
                  throw g6;
                }
              }), c2 = function(A5, g5, I4) {
                var a2 = new XMLHttpRequest();
                a2.open("GET", A5, true), a2.responseType = "arraybuffer", a2.onload = function() {
                  if (a2.status == 200 || a2.status == 0 && a2.response)
                    g5(a2.response);
                  else {
                    var r3 = HA2(A5);
                    r3 ? g5(r3.buffer) : I4();
                  }
                }, a2.onerror = I4, a2.send(null);
              }), r2.print;
              var p2, u2 = r2.printErr || void 0;
              for (I3 in t2)
                t2.hasOwnProperty(I3) && (r2[I3] = t2[I3]);
              t2 = null, r2.arguments && (B2 = r2.arguments), r2.thisProgram && r2.thisProgram, r2.quit && r2.quit, r2.wasmBinary && (p2 = r2.wasmBinary), r2.noExitRuntime && r2.noExitRuntime;
              var f2, l2 = { Memory: function(A5) {
                this.buffer = new ArrayBuffer(65536 * A5.initial);
              }, Module: function(A5) {
              }, Instance: function(A5, g5) {
                this.exports = function(A6) {
                  for (var g6, I4 = new Uint8Array(123), a2 = 25; a2 >= 0; --a2)
                    I4[48 + a2] = 52 + a2, I4[65 + a2] = a2, I4[97 + a2] = 26 + a2;
                  function r3(A7, g7, a3) {
                    for (var r4, t3, B3 = 0, n3 = g7, o3 = a3.length, e3 = g7 + (3 * o3 >> 2) - (a3[o3 - 2] == "=") - (a3[o3 - 1] == "="); B3 < o3; B3 += 4)
                      r4 = I4[a3.charCodeAt(B3 + 1)], t3 = I4[a3.charCodeAt(B3 + 2)], A7[n3++] = I4[a3.charCodeAt(B3)] << 2 | r4 >> 4, n3 < e3 && (A7[n3++] = r4 << 4 | t3 >> 2), n3 < e3 && (A7[n3++] = t3 << 6 | I4[a3.charCodeAt(B3 + 3)]);
                  }
                  return I4[43] = 62, I4[47] = 63, function(A7) {
                    var I5 = A7.a, a3 = I5.buffer;
                    I5.grow = function(A8) {
                      A8 |= 0;
                      var r4 = 0 | Wt(), C4 = r4 + A8 | 0;
                      if (r4 < C4 && C4 < 65536) {
                        var c4 = new ArrayBuffer(Q3(C4, 65536));
                        new Int8Array(c4).set(t3), t3 = new Int8Array(c4), B3 = new Int16Array(c4), n3 = new Int32Array(c4), o3 = new Uint8Array(c4), new Uint16Array(c4), e3 = new Uint32Array(c4), new Float32Array(c4), new Float64Array(c4), a3 = c4, I5.buffer = a3, g6 = o3;
                      }
                      return r4;
                    };
                    var t3 = new Int8Array(a3), B3 = new Int16Array(a3), n3 = new Int32Array(a3), o3 = new Uint8Array(a3), e3 = (new Uint16Array(a3), new Uint32Array(a3)), Q3 = (new Float32Array(a3), new Float64Array(a3), Math.imul), C3 = (Math.fround, Math.abs, Math.clz32), c3 = (Math.min, Math.max, Math.floor, Math.ceil, Math.trunc, Math.sqrt, A7.abort), i3 = A7.b, _3 = A7.c, s3 = A7.d, y3 = A7.e, E3 = A7.f, p3 = A7.g, u3 = 5280208, f3 = 0, l3 = 0, h3 = 0;
                    function w3(A8, g7) {
                      var I6, a4, r4, B4, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0, q4 = 0, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0, BA4 = 0, nA4 = 0, oA4 = 0, eA4 = 0, QA4 = 0, CA4 = 0, cA4 = 0, iA4 = 0, _A4 = 0, sA4 = 0, yA4 = 0, EA4 = 0, pA4 = 0, uA4 = 0, fA4 = 0;
                      for (u3 = V4 = u3 - 256 | 0; X4 = (L4 = Z4 << 3) + (V4 + 128 | 0) | 0, rA4 = o3[4 + (L4 = g7 + L4 | 0) | 0] | o3[L4 + 5 | 0] << 8 | o3[L4 + 6 | 0] << 16 | o3[L4 + 7 | 0] << 24, n3[X4 >> 2] = o3[0 | L4] | o3[L4 + 1 | 0] << 8 | o3[L4 + 2 | 0] << 16 | o3[L4 + 3 | 0] << 24, n3[X4 + 4 >> 2] = rA4, (0 | (Z4 = Z4 + 1 | 0)) != 16; )
                        ;
                      for (I6 = gA3(V4, A8, 64), L4 = n3[(g7 = I6) >> 2], Z4 = n3[g7 + 4 >> 2], e4 = L4, L4 = (rA4 = n3[g7 + 32 >> 2]) + (V4 = n3[g7 + 128 >> 2]) | 0, g7 = (O4 = n3[g7 + 36 >> 2]) + n3[g7 + 132 >> 2] | 0, g7 = L4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = L4, g7 = g7 + Z4 | 0, V4 = g7 = (L4 = e4 + L4 | 0) >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, P4 = rt((Z4 = L4) ^ (o3[0 | (L4 = A8 - -64 | 0)] | o3[L4 + 1 | 0] << 8 | o3[L4 + 2 | 0] << 16 | o3[L4 + 3 | 0] << 24) ^ -1377402159, g7 ^ (o3[L4 + 4 | 0] | o3[L4 + 5 | 0] << 8 | o3[L4 + 6 | 0] << 16 | o3[L4 + 7 | 0] << 24) ^ 1359893119, 32), L4 = g7 = h3, g7 = g7 + 1779033703 | 0, e4 = rA4 ^ (X4 = P4 - 205731576 | 0), rA4 = g7 = X4 >>> 0 < 4089235720 ? g7 + 1 | 0 : g7, H4 = rt(e4, O4 ^ g7, 24), d4 = g7 = h3, T4 = L4, e4 = P4, g7 = g7 + V4 | 0, g7 = (g7 = (P4 = H4 + Z4 | 0) >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7) + (i4 = a4 = n3[I6 + 140 >> 2]) | 0, e4 = rt(e4 ^ (C4 = Z4 = (L4 = n3[I6 + 136 >> 2]) + P4 | 0), (m4 = P4 >>> 0 > C4 >>> 0 ? g7 + 1 | 0 : g7) ^ T4, 16), g7 = rA4 + (x4 = h3) | 0, i4 = rt((w4 = Z4 = X4 + e4 | 0) ^ H4, (V4 = X4 >>> 0 > w4 >>> 0 ? g7 + 1 | 0 : g7) ^ d4, 63), _4 = h3, X4 = n3[I6 + 12 >> 2], Z4 = (H4 = n3[I6 + 144 >> 2]) + (O4 = rA4 = n3[I6 + 40 >> 2]) | 0, g7 = (W4 = n3[I6 + 148 >> 2]) + (T4 = n3[I6 + 44 >> 2]) | 0, g7 = Z4 >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7, O4 = Z4, g7 = g7 + X4 | 0, g7 = (Z4 = Z4 + n3[I6 + 8 >> 2] | 0) >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7, P4 = rt(Z4 ^ (o3[A8 + 72 | 0] | o3[A8 + 73 | 0] << 8 | o3[A8 + 74 | 0] << 16 | o3[A8 + 75 | 0] << 24) ^ 725511199, (o3[A8 + 76 | 0] | o3[A8 + 77 | 0] << 8 | o3[A8 + 78 | 0] << 16 | o3[A8 + 79 | 0] << 24) ^ g7 ^ -1694144372, 32), T4 = rt(Q4 = (X4 = P4 - 2067093701 | 0) ^ rA4, T4 ^ (d4 = (rA4 = h3) - ((P4 >>> 0 < 2067093701) + 1150833018 | 0) | 0), 24), s4 = n3[I6 + 156 >> 2], Q4 = T4, g7 = g7 + (O4 = h3) | 0, g7 = (g7 = (T4 = T4 + Z4 | 0) >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7) + s4 | 0, cA4 = rt((l4 = Z4 = T4 + n3[I6 + 152 >> 2] | 0) ^ P4, (G4 = T4 >>> 0 > l4 >>> 0 ? g7 + 1 | 0 : g7) ^ rA4, 16), g7 = d4 + (F4 = h3) | 0, sA4 = Z4 = X4 + cA4 | 0, P4 = rt(Q4 ^ Z4, (X4 = X4 >>> 0 > Z4 >>> 0 ? g7 + 1 | 0 : g7) ^ O4, 63), d4 = h3, rA4 = n3[I6 + 20 >> 2], Z4 = (v4 = n3[I6 + 160 >> 2]) + (T4 = n3[I6 + 48 >> 2]) | 0, g7 = (nA4 = n3[I6 + 164 >> 2]) + (y4 = n3[I6 + 52 >> 2]) | 0, O4 = Z4, g7 = (g7 = Z4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7) + rA4 | 0, QA4 = Z4 = Z4 + n3[I6 + 16 >> 2] | 0, Z4 = Z4 >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7, E4 = rt(QA4 ^ (o3[A8 + 80 | 0] | o3[A8 + 81 | 0] << 8 | o3[A8 + 82 | 0] << 16 | o3[A8 + 83 | 0] << 24) ^ -79577749, Z4 ^ (o3[A8 + 84 | 0] | o3[A8 + 85 | 0] << 8 | o3[A8 + 86 | 0] << 16 | o3[A8 + 87 | 0] << 24) ^ 528734635, 32), rA4 = g7 = h3, g7 = g7 + 1013904242 | 0, Q4 = T4 ^ (O4 = E4 - 23791573 | 0), T4 = g7 = O4 >>> 0 < 4271175723 ? g7 + 1 | 0 : g7, g7 = rt(Q4, y4 ^ g7, 24), s4 = rA4, r4 = n3[I6 + 172 >> 2], Q4 = g7, c4 = E4, E4 = g7, QA4 = g7 + QA4 | 0, g7 = (y4 = h3) + Z4 | 0, g7 = (g7 = E4 >>> 0 > QA4 >>> 0 ? g7 + 1 | 0 : g7) + (R4 = r4) | 0, $4 = rt(c4 ^ (D4 = Z4 = (rA4 = n3[I6 + 168 >> 2]) + (E4 = QA4) | 0), (R4 = E4 >>> 0 > D4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = T4 + (Y4 = h3) | 0, y4 = rt(Q4 ^ (k4 = Z4 = O4 + $4 | 0), (T4 = k4 >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 63), s4 = h3, E4 = n3[I6 + 28 >> 2], O4 = (Z4 = n3[I6 + 176 >> 2]) + (f4 = QA4 = n3[I6 + 56 >> 2]) | 0, g7 = (yA4 = n3[I6 + 180 >> 2]) + (p4 = n3[I6 + 60 >> 2]) | 0, g7 = (g7 = f4 >>> 0 > O4 >>> 0 ? g7 + 1 | 0 : g7) + E4 | 0, g7 = (f4 = O4) >>> 0 > (S4 = O4 = f4 + n3[I6 + 24 >> 2] | 0) >>> 0 ? g7 + 1 | 0 : g7, U4 = rt(S4 ^ (o3[A8 + 88 | 0] | o3[A8 + 89 | 0] << 8 | o3[A8 + 90 | 0] << 16 | o3[A8 + 91 | 0] << 24) ^ 327033209, g7 ^ (o3[A8 + 92 | 0] | o3[A8 + 93 | 0] << 8 | o3[A8 + 94 | 0] << 16 | o3[A8 + 95 | 0] << 24) ^ 1541459225, 32), E4 = rt(c4 = (Q4 = (E4 = U4) + 1595750129 | 0) ^ QA4, p4 ^ (QA4 = (O4 = h3) - ((E4 >>> 0 < 2699217167) + 1521486533 | 0) | 0), 24), p4 = QA4, b4 = O4, QA4 = n3[I6 + 188 >> 2], c4 = E4, N5 = Q4, g7 = (f4 = h3) + g7 | 0, g7 = (g7 = (S4 = E4 + S4 | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) + (J4 = QA4) | 0, j4 = E4 = (O4 = n3[I6 + 184 >> 2]) + S4 | 0, Q4 = rt(E4 ^ U4, (Q4 = b4) ^ (b4 = E4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (g7 = p4) + (p4 = h3) | 0, S4 = E4 = N5 + Q4 | 0, U4 = f4, f4 = g7 = E4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, c4 = rt(c4 ^ E4, U4 ^ g7, 63), E4 = h3, U4 = d4, N5 = P4, q4 = k4, g7 = d4 + m4 | 0, d4 = C4 = C4 + P4 | 0, g7 = (g7 = C4 >>> 0 < P4 >>> 0 ? g7 + 1 | 0 : g7) + (J4 = K4 = n3[I6 + 196 >> 2]) | 0, k4 = rt((C4 = P4 = (AA4 = n3[I6 + 192 >> 2]) + C4 | 0) ^ Q4, (P4 = d4 >>> 0 > C4 >>> 0 ? g7 + 1 | 0 : g7) ^ p4, 32), g7 = (g7 = T4) + (T4 = h3) | 0, m4 = g7 = (d4 = q4 + (m4 = k4) | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, g7 = rt(N5 ^ d4, g7 ^ U4, 24), _A4 = n3[I6 + 204 >> 2], N5 = g7, Q4 = k4, p4 = C4, C4 = g7, k4 = p4 + g7 | 0, g7 = (p4 = h3) + P4 | 0, g7 = (g7 = C4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) + (J4 = _A4) | 0, tA4 = P4 = (U4 = n3[I6 + 200 >> 2]) + (C4 = k4) | 0, iA4 = rt(Q4 ^ P4, (C4 = C4 >>> 0 > P4 >>> 0 ? g7 + 1 | 0 : g7) ^ T4, 16), g7 = m4 + (k4 = h3) | 0, J4 = rt(N5 ^ (Q4 = T4 = d4 + iA4 | 0), (m4 = p4) ^ (p4 = d4 >>> 0 > Q4 >>> 0 ? g7 + 1 | 0 : g7), 63), m4 = h3, T4 = s4, q4 = y4, g7 = s4 + G4 | 0, g7 = (g7 = (d4 = y4 + l4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + (N5 = CA4 = n3[I6 + 212 >> 2]) | 0, l4 = rt((M4 = e4) ^ (e4 = d4 = (P4 = n3[I6 + 208 >> 2]) + (y4 = d4) | 0), (y4 = y4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7) ^ x4, 32), g7 = f4 + (d4 = h3) | 0, T4 = rt(q4 ^ (s4 = S4 + l4 | 0), (g7 = s4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7) ^ T4, 24), x4 = g7, G4 = d4, z4 = n3[I6 + 220 >> 2], q4 = T4, M4 = s4, g7 = (s4 = h3) + y4 | 0, g7 = (g7 = (f4 = e4 + T4 | 0) >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7) + (N5 = z4) | 0, G4 = rt((f4 = T4 = (d4 = n3[I6 + 216 >> 2]) + (y4 = f4) | 0) ^ l4, (S4 = y4 >>> 0 > f4 >>> 0 ? g7 + 1 | 0 : g7) ^ G4, 16), g7 = (e4 = h3) + x4 | 0, eA4 = T4 = M4 + (y4 = G4) | 0, N5 = rt(q4 ^ T4, (y4 = y4 >>> 0 > T4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 63), s4 = h3, x4 = E4, q4 = c4, g7 = E4 + R4 | 0, g7 = (g7 = (c4 = c4 + D4 | 0) >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) + (l4 = B4 = n3[I6 + 228 >> 2]) | 0, c4 = rt((R4 = E4 = (T4 = n3[I6 + 224 >> 2]) + c4 | 0) ^ cA4, (E4 = E4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7) ^ F4, 32), g7 = (F4 = h3) + V4 | 0, w4 = D4 = w4 + c4 | 0, V4 = rt(q4 ^ D4, (g7 = D4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7) ^ x4, 24), D4 = g7, q4 = n3[I6 + 236 >> 2], l4 = V4, g7 = (x4 = h3) + E4 | 0, g7 = (g7 = (R4 = R4 + V4 | 0) >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7) + q4 | 0, oA4 = rt((R4 = V4 = (aA4 = n3[I6 + 232 >> 2]) + (E4 = R4) | 0) ^ c4, (V4 = F4) ^ (F4 = E4 >>> 0 > R4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (g7 = D4) + (D4 = h3) | 0, E4 = rt(l4 ^ (c4 = V4 = (E4 = oA4) + w4 | 0), (w4 = E4 >>> 0 > c4 >>> 0 ? g7 + 1 | 0 : g7) ^ x4, 63), x4 = h3, l4 = _4, IA4 = i4, BA4 = sA4, g7 = _4 + b4 | 0, g7 = (g7 = (sA4 = i4 + j4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (M4 = cA4 = n3[I6 + 244 >> 2]) | 0, _4 = g7 = (i4 = (V4 = n3[I6 + 240 >> 2]) + (_4 = sA4) | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7, $4 = rt(i4 ^ $4, g7 ^ Y4, 32), g7 = (g7 = X4) + (X4 = h3) | 0, j4 = Y4 = BA4 + (b4 = $4) | 0, l4 = rt(IA4 ^ Y4, (g7 = b4 >>> 0 > Y4 >>> 0 ? g7 + 1 | 0 : g7) ^ l4, 24), IA4 = BA4 = h3, Y4 = g7, b4 = X4, EA4 = l4, g7 = _4 + BA4 | 0, g7 = (g7 = (l4 = i4 + l4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (sA4 = n3[I6 + 252 >> 2]) | 0, l4 = i4 = (X4 = n3[I6 + 248 >> 2]) + (_4 = l4) | 0, M4 = rt(i4 ^ $4, (M4 = b4) ^ (b4 = i4 >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (g7 = Y4) + (Y4 = h3) | 0, $4 = rt(EA4 ^ (BA4 = i4 = (_4 = M4) + j4 | 0), (i4 = i4 >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) ^ IA4, 63), IA4 = g7 = h3, _4 = g7, EA4 = G4, g7 = C4 + cA4 | 0, g7 = (g7 = (G4 = V4) >>> 0 > (j4 = G4 + tA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + _4 | 0, j4 = rt(EA4 ^ (_4 = G4 = (C4 = j4) + $4 | 0), (G4 = C4 >>> 0 > _4 >>> 0 ? g7 + 1 | 0 : g7) ^ e4, 32), g7 = w4 + (C4 = h3) | 0, c4 = g7 = (e4 = c4 + j4 | 0) >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7, tA4 = $4 = rt($4 ^ e4, IA4 ^ g7, 24), IA4 = g7 = h3, w4 = g7, pA4 = $4, g7 = G4 + CA4 | 0, g7 = (g7 = ($4 = _4 + P4 | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + w4 | 0, tA4 = _4 = tA4 + (G4 = $4) | 0, EA4 = rt(_4 ^ j4, (w4 = C4) ^ (C4 = _4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = c4 + (w4 = h3) | 0, c4 = g7 = (_4 = e4 + EA4 | 0) >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7, $4 = rt(pA4 ^ (e4 = _4), g7 ^ IA4, 63), G4 = h3, j4 = J4, g7 = nA4 + (_4 = m4) | 0, g7 = (g7 = (J4 = v4 + J4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + S4 | 0, v4 = g7 = (m4 = f4 + J4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7, S4 = rt(m4 ^ oA4, g7 ^ D4, 32), g7 = (g7 = i4) + (i4 = h3) | 0, g7 = (D4 = (f4 = S4) + BA4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7, f4 = _4, _4 = g7, J4 = rt(j4 ^ D4, f4 ^ g7, 24), nA4 = g7 = h3, f4 = g7, j4 = S4, g7 = v4 + K4 | 0, g7 = (g7 = (S4 = m4 + AA4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) + f4 | 0, g7 = (m4 = (v4 = S4) + J4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = m4, f4 = g7, oA4 = rt(j4 ^ m4, g7 ^ i4, 16), g7 = _4 + (S4 = h3) | 0, BA4 = i4 = D4 + oA4 | 0, J4 = rt(i4 ^ J4, (_4 = i4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) ^ nA4, 63), i4 = h3, m4 = s4, g7 = s4 + _A4 | 0, g7 = (g7 = (D4 = U4 + N5 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) + F4 | 0, Y4 = rt((U4 = s4 = D4 + R4 | 0) ^ M4, (s4 = s4 >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7) ^ Y4, 32), g7 = p4 + (F4 = h3) | 0, g7 = Q4 >>> 0 > (D4 = Q4 + Y4 | 0) >>> 0 ? g7 + 1 | 0 : g7, Q4 = m4, m4 = g7, Q4 = p4 = rt(D4 ^ N5, Q4 ^ g7, 24), N5 = g7 = h3, R4 = g7, j4 = Y4, g7 = s4 + sA4 | 0, g7 = (g7 = (p4 = (Y4 = X4) + U4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) + R4 | 0, M4 = s4 = Q4 + p4 | 0, IA4 = rt(j4 ^ s4, (Y4 = F4) ^ (F4 = s4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = m4 + (R4 = h3) | 0, N5 = rt((U4 = s4 = D4 + IA4 | 0) ^ Q4, (s4 = s4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) ^ N5, 63), m4 = h3, Q4 = E4, g7 = (D4 = x4) + q4 | 0, g7 = (g7 = (Y4 = E4 + aA4 | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) + b4 | 0, p4 = rt((Y4 = E4 = l4 + Y4 | 0) ^ iA4, (E4 = E4 >>> 0 < l4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = (g7 = y4) + (y4 = h3) | 0, k4 = rt(Q4 ^ (b4 = x4 = p4 + eA4 | 0), (g7 = x4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) ^ D4, 24), l4 = x4 = h3, D4 = g7, j4 = b4, b4 = p4, p4 = (g7 = Y4) + (Y4 = Z4) | 0, g7 = E4 + yA4 | 0, g7 = (g7 = p4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) + x4 | 0, Y4 = E4 = p4 + (Q4 = k4) | 0, p4 = g7 = E4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7, b4 = rt(b4 ^ E4, g7 ^ y4, 16), g7 = (x4 = h3) + D4 | 0, j4 = rt(k4 ^ (Q4 = y4 = j4 + (E4 = b4) | 0), (E4 = Q4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ l4, 63), y4 = h3, D4 = i4, k4 = U4, l4 = b4, g7 = C4 + a4 | 0, g7 = (g7 = (b4 = L4) >>> 0 > (U4 = b4 + tA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + i4 | 0, U4 = rt(l4 ^ (i4 = b4 = U4 + J4 | 0), (C4 = x4) ^ (x4 = i4 >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7), 32), g7 = (g7 = s4) + (s4 = h3) | 0, g7 = (C4 = U4) >>> 0 > (b4 = k4 + C4 | 0) >>> 0 ? g7 + 1 | 0 : g7, l4 = k4 = rt((C4 = b4) ^ J4, g7 ^ D4, 24), J4 = D4 = h3, b4 = g7, tA4 = U4, g7 = x4 + B4 | 0, g7 = (g7 = (U4 = i4 + T4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + D4 | 0, D4 = i4 = (x4 = U4) + k4 | 0, iA4 = rt(tA4 ^ i4, (U4 = i4 >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = (g7 = b4) + (b4 = h3) | 0, C4 = i4 = (s4 = iA4) + C4 | 0, nA4 = rt(i4 ^ l4, (k4 = i4 >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7) ^ J4, 63), s4 = h3, J4 = Q4, g7 = f4 + (i4 = m4) | 0, g7 = (g7 = (x4 = v4 + N5 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + (l4 = eA4 = n3[I6 + 132 >> 2]) | 0, x4 = g7 = (m4 = (Q4 = n3[I6 + 128 >> 2]) + x4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, f4 = rt(m4 ^ EA4, g7 ^ w4, 32), g7 = (g7 = E4) + (E4 = h3) | 0, w4 = v4 = J4 + f4 | 0, J4 = l4 = rt(v4 ^ N5, (g7 = v4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) ^ i4, 24), N5 = i4 = h3, v4 = g7, tA4 = f4, g7 = x4 + W4 | 0, x4 = f4 = H4 + m4 | 0, g7 = (g7 = f4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) + i4 | 0, i4 = rt(tA4 ^ (f4 = m4 = f4 + l4 | 0), (i4 = E4) ^ (E4 = f4 >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (g7 = v4) + (v4 = h3) | 0, w4 = m4 = i4 + w4 | 0, _A4 = rt(m4 ^ J4, (l4 = m4 >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) ^ N5, 63), m4 = h3, x4 = y4, g7 = F4 + z4 | 0, g7 = (g7 = (N5 = d4 + M4 | 0) >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + y4 | 0, g7 = (F4 = (J4 = N5) + j4 | 0) >>> 0 < J4 >>> 0 ? g7 + 1 | 0 : g7, J4 = F4, y4 = g7, N5 = rt(F4 ^ oA4, g7 ^ S4, 32), g7 = c4 + (F4 = h3) | 0, g7 = e4 >>> 0 > (S4 = e4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, j4 = c4 = rt((e4 = S4) ^ j4, g7 ^ x4, 24), tA4 = x4 = h3, S4 = g7, M4 = e4, g7 = y4 + QA4 | 0, g7 = (e4 = O4) >>> 0 > (c4 = e4 + J4 | 0) >>> 0 ? g7 + 1 | 0 : g7, e4 = c4, g7 = g7 + x4 | 0, c4 = F4, F4 = g7 = e4 >>> 0 > (y4 = j4 + e4 | 0) >>> 0 ? g7 + 1 | 0 : g7, oA4 = rt((e4 = y4) ^ N5, c4 ^ g7, 16), g7 = (y4 = h3) + S4 | 0, j4 = rt((S4 = x4 = M4 + (c4 = oA4) | 0) ^ j4, (g7 = c4 >>> 0 > S4 >>> 0 ? g7 + 1 | 0 : g7) ^ tA4, 63), x4 = h3, J4 = g7, N5 = i4, M4 = $4, g7 = r4 + (c4 = G4) | 0, g7 = (g7 = (i4 = rA4) >>> 0 > ($4 = i4 + $4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + p4 | 0, G4 = i4 = Y4 + $4 | 0, p4 = rt(i4 ^ IA4, (p4 = R4) ^ (R4 = i4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7), 32), g7 = (i4 = h3) + _4 | 0, tA4 = Y4 = p4 + BA4 | 0, c4 = rt(M4 ^ Y4, (g7 = Y4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 24), IA4 = BA4 = h3, _4 = g7, Y4 = i4, BA4 = c4, M4 = p4, g7 = R4 + IA4 | 0, g7 = (g7 = (p4 = c4 + G4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) + ($4 = n3[I6 + 156 >> 2]) | 0, R4 = G4 = (i4 = n3[I6 + 152 >> 2]) + p4 | 0, c4 = Y4, Y4 = g7 = G4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7, M4 = rt(M4 ^ G4, c4 ^ g7, 16), g7 = (g7 = _4) + (_4 = h3) | 0, c4 = g7 = (p4 = M4) >>> 0 > (G4 = p4 + tA4 | 0) >>> 0 ? g7 + 1 | 0 : g7, tA4 = rt(BA4 ^ (p4 = G4), g7 ^ IA4, 63), BA4 = g7 = h3, G4 = g7, IA4 = S4, g7 = U4 + z4 | 0, g7 = (g7 = (S4 = D4 + d4 | 0) >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) + G4 | 0, G4 = D4 = S4 + tA4 | 0, N5 = rt(D4 ^ N5, (U4 = v4) ^ (v4 = D4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7), 32), g7 = (D4 = h3) + J4 | 0, U4 = g7 = (S4 = IA4 + (U4 = N5) | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7, BA4 = tA4 = rt(tA4 ^ S4, BA4 ^ g7, 24), IA4 = g7 = h3, J4 = g7, EA4 = N5, g7 = v4 + K4 | 0, g7 = (g7 = (N5 = G4 + AA4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) + J4 | 0, g7 = (G4 = (v4 = N5) + tA4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = G4, J4 = D4, D4 = g7, tA4 = rt(EA4 ^ G4, J4 ^ g7, 16), g7 = U4 + (J4 = h3) | 0, g7 = (G4 = S4 + tA4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, S4 = G4, U4 = g7, AA4 = rt(G4 ^ BA4, g7 ^ IA4, 63), G4 = h3, N5 = s4, IA4 = nA4, g7 = s4 + B4 | 0, g7 = E4 + (T4 >>> 0 > (nA4 = T4 + nA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, K4 = s4 = f4 + nA4 | 0, nA4 = rt(s4 ^ oA4, (E4 = y4) ^ (y4 = s4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7), 32), g7 = c4 + (s4 = h3) | 0, f4 = g7 = (E4 = p4 + nA4 | 0) >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7, N5 = c4 = rt(IA4 ^ E4, g7 ^ N5, 24), oA4 = g7 = h3, p4 = g7, g7 = y4 + eA4 | 0, g7 = (g7 = (c4 = Q4 + K4 | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7) + p4 | 0, K4 = y4 = N5 + (Q4 = c4) | 0, nA4 = rt(y4 ^ nA4, (p4 = y4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = f4 + (Q4 = h3) | 0, eA4 = y4 = E4 + nA4 | 0, c4 = rt(y4 ^ N5, (E4 = y4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ oA4, 63), y4 = h3, g7 = r4 + (s4 = m4) | 0, g7 = F4 + ((f4 = rA4) >>> 0 > (N5 = f4 + _A4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, f4 = _4, _4 = g7 = e4 >>> 0 > (m4 = e4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, N5 = rt((e4 = m4) ^ M4, f4 ^ g7, 32), g7 = k4 + (m4 = h3) | 0, g7 = C4 >>> 0 > (F4 = C4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, C4 = s4, s4 = g7, C4 = rt(F4 ^ _A4, C4 ^ g7, 24), _A4 = g7 = h3, f4 = g7, IA4 = C4, g7 = _4 + W4 | 0, g7 = (g7 = (C4 = H4) >>> 0 > (k4 = C4 + e4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + f4 | 0, oA4 = _4 = IA4 + (C4 = k4) | 0, M4 = rt(_4 ^ N5, (f4 = _4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 16), g7 = s4 + (C4 = h3) | 0, N5 = _4 = F4 + M4 | 0, k4 = rt(IA4 ^ _4, (m4 = _4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ _A4, 63), _4 = h3, g7 = sA4 + (s4 = x4) | 0, g7 = Y4 + ((e4 = (F4 = X4) + j4 | 0) >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) | 0, F4 = g7 = (x4 = R4 + e4 | 0) >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7, e4 = rt(x4 ^ iA4, g7 ^ b4, 32), g7 = l4 + (R4 = h3) | 0, b4 = s4, s4 = g7 = w4 >>> 0 > (Y4 = w4 + e4 | 0) >>> 0 ? g7 + 1 | 0 : g7, w4 = rt(Y4 ^ j4, b4 ^ g7, 24), j4 = g7 = h3, b4 = g7, IA4 = e4, g7 = F4 + q4 | 0, g7 = (g7 = (e4 = x4 + aA4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) + b4 | 0, e4 = rt(IA4 ^ (b4 = x4 = e4 + (l4 = w4) | 0), (l4 = R4) ^ (R4 = e4 >>> 0 > b4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = s4 + (F4 = h3) | 0, w4 = rt(w4 ^ (l4 = x4 = Y4 + e4 | 0), (x4 = l4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) ^ j4, 63), s4 = h3, Y4 = y4, j4 = c4, IA4 = e4, g7 = D4 + CA4 | 0, D4 = e4 = v4 + P4 | 0, g7 = (g7 = e4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + y4 | 0, c4 = rt(IA4 ^ (e4 = v4 = e4 + c4 | 0), (y4 = D4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7) ^ F4, 32), g7 = (g7 = m4) + (m4 = h3) | 0, v4 = g7 = (F4 = c4 + N5 | 0) >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7, N5 = Y4 = rt(j4 ^ F4, g7 ^ Y4, 24), j4 = g7 = h3, D4 = g7, g7 = y4 + cA4 | 0, g7 = (g7 = (e4 = (Y4 = V4) + e4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) + D4 | 0, _A4 = y4 = N5 + e4 | 0, iA4 = rt(y4 ^ c4, (D4 = y4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 16), g7 = v4 + (Y4 = h3) | 0, N5 = rt((BA4 = y4 = F4 + iA4 | 0) ^ N5, (y4 = y4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ j4, 63), m4 = h3, F4 = _4, c4 = k4, g7 = p4 + $4 | 0, g7 = (g7 = (k4 = i4 + K4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + _4 | 0, _4 = g7 = (p4 = k4) >>> 0 > (v4 = c4 + p4 | 0) >>> 0 ? g7 + 1 | 0 : g7, k4 = rt((p4 = v4) ^ tA4, g7 ^ J4, 32), g7 = (g7 = x4) + (x4 = h3) | 0, g7 = (e4 = k4) >>> 0 > (v4 = e4 + l4 | 0) >>> 0 ? g7 + 1 | 0 : g7, l4 = c4 = rt(c4 ^ (e4 = v4), g7 ^ F4, 24), v4 = g7, J4 = e4, e4 = k4, k4 = (g7 = p4) + (p4 = Z4) | 0, g7 = _4 + yA4 | 0, g7 = (g7 = p4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) + (F4 = h3) | 0, g7 = (_4 = (p4 = k4) + c4 | 0) >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7, p4 = _4, k4 = g7, e4 = rt(e4 ^ _4, g7 ^ x4, 16), g7 = (c4 = h3) + v4 | 0, x4 = rt((tA4 = _4 = J4 + e4 | 0) ^ l4, (_4 = _4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ F4, 63), F4 = h3, v4 = s4, J4 = w4, g7 = f4 + QA4 | 0, g7 = (g7 = (l4 = (w4 = O4) + oA4 | 0) >>> 0 < w4 >>> 0 ? g7 + 1 | 0 : g7) + s4 | 0, w4 = f4 = J4 + l4 | 0, s4 = g7 = f4 >>> 0 < l4 >>> 0 ? g7 + 1 | 0 : g7, l4 = rt(f4 ^ nA4, g7 ^ Q4, 32), g7 = U4 + (f4 = h3) | 0, U4 = Q4 = S4 + l4 | 0, J4 = Q4 = rt(J4 ^ Q4, (g7 = Q4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7) ^ v4, 24), K4 = v4 = h3, S4 = g7, j4 = U4, g7 = s4 + a4 | 0, g7 = (g7 = (Q4 = (U4 = L4) + w4 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) + v4 | 0, g7 = (s4 = J4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, U4 = s4, Q4 = f4, f4 = g7, oA4 = rt(s4 ^ l4, Q4 ^ g7, 16), g7 = (g7 = S4) + (S4 = h3) | 0, J4 = rt((s4 = j4 + (v4 = oA4) | 0) ^ J4, (g7 = s4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) ^ K4, 63), v4 = h3, w4 = s4, l4 = g7, g7 = R4 + (Q4 = G4) | 0, G4 = s4 = b4 + AA4 | 0, g7 = (g7 = s4 >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7) + (K4 = n3[I6 + 204 >> 2]) | 0, G4 = g7 = (s4 = (j4 = n3[I6 + 200 >> 2]) + s4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, b4 = rt(s4 ^ M4, g7 ^ C4, 32), g7 = (g7 = E4) + (E4 = h3) | 0, g7 = (C4 = b4) >>> 0 > (R4 = C4 + eA4 | 0) >>> 0 ? g7 + 1 | 0 : g7, Q4 = rt((C4 = R4) ^ AA4, g7 ^ Q4, 24), M4 = eA4 = h3, R4 = g7, IA4 = C4, eA4 = b4, g7 = G4 + M4 | 0, g7 = (g7 = (b4 = s4 + Q4 | 0) >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7) + (AA4 = n3[I6 + 164 >> 2]) | 0, b4 = s4 = (nA4 = n3[I6 + 160 >> 2]) + (G4 = b4) | 0, eA4 = rt(eA4 ^ s4, (C4 = s4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) ^ E4, 16), g7 = (g7 = R4) + (R4 = h3) | 0, Q4 = rt(Q4 ^ (IA4 = s4 = IA4 + (E4 = eA4) | 0), (s4 = s4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ M4, 63), M4 = g7 = h3, E4 = g7, EA4 = e4, g7 = D4 + QA4 | 0, g7 = (g7 = (e4 = (G4 = O4) + _A4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) + E4 | 0, c4 = rt(EA4 ^ (E4 = G4 = e4 + Q4 | 0), (G4 = e4 >>> 0 > E4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 32), g7 = (D4 = h3) + l4 | 0, w4 = e4 = w4 + c4 | 0, l4 = rt(Q4 ^ e4, (g7 = e4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7) ^ M4, 24), M4 = Q4 = h3, e4 = g7, _A4 = w4, EA4 = c4, g7 = G4 + K4 | 0, g7 = (g7 = (c4 = E4 + j4 | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) + Q4 | 0, w4 = E4 = c4 + l4 | 0, EA4 = rt(EA4 ^ E4, (Q4 = D4) ^ (D4 = E4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (Q4 = h3) + e4 | 0, _A4 = rt((pA4 = E4 = _A4 + (G4 = EA4) | 0) ^ l4, (E4 = E4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) ^ M4, 63), G4 = h3, g7 = $4 + (e4 = m4) | 0, g7 = (g7 = (c4 = i4 + N5 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + k4 | 0, c4 = rt((k4 = i4 = c4 + p4 | 0) ^ oA4, (i4 = i4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) ^ S4, 32), g7 = (g7 = s4) + (s4 = h3) | 0, p4 = g7 = c4 >>> 0 > (m4 = c4 + IA4 | 0) >>> 0 ? g7 + 1 | 0 : g7, l4 = e4 = rt(m4 ^ N5, g7 ^ e4, 24), N5 = g7 = h3, S4 = g7, e4 = (g7 = k4) + (k4 = L4) | 0, g7 = i4 + a4 | 0, g7 = (g7 = e4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + S4 | 0, $4 = i4 = l4 + e4 | 0, oA4 = rt(i4 ^ c4, (S4 = i4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = p4 + (k4 = h3) | 0, M4 = i4 = m4 + oA4 | 0, e4 = rt(i4 ^ l4, (s4 = i4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ N5, 63), i4 = h3, c4 = x4, g7 = (m4 = F4) + q4 | 0, g7 = (g7 = (p4 = x4 + aA4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) + f4 | 0, F4 = g7 = (x4 = p4 + U4 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7, f4 = rt(x4 ^ eA4, g7 ^ R4, 32), g7 = (g7 = y4) + (y4 = h3) | 0, g7 = (p4 = f4) >>> 0 > (R4 = p4 + BA4 | 0) >>> 0 ? g7 + 1 | 0 : g7, U4 = rt(c4 ^ (p4 = R4), g7 ^ m4, 24), l4 = m4 = h3, R4 = g7, N5 = p4, q4 = f4, g7 = F4 + B4 | 0, F4 = f4 = x4 + T4 | 0, g7 = (g7 = f4 >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) + m4 | 0, eA4 = rt(q4 ^ (f4 = x4 = f4 + (c4 = U4) | 0), (p4 = F4 >>> 0 > f4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 16), g7 = (g7 = R4) + (R4 = h3) | 0, l4 = rt(U4 ^ (c4 = y4 = N5 + (m4 = eA4) | 0), (m4 = c4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ l4, 63), y4 = h3, x4 = v4, g7 = v4 + z4 | 0, g7 = (g7 = (U4 = d4 + J4 | 0) >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + C4 | 0, g7 = (F4 = b4 + U4 | 0) >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7, b4 = F4, F4 = g7, U4 = rt(b4 ^ iA4, g7 ^ Y4, 32), g7 = (g7 = _4) + (_4 = h3) | 0, C4 = x4, x4 = g7 = (v4 = (Y4 = U4) + tA4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7, J4 = C4 = rt(v4 ^ J4, C4 ^ g7, 24), N5 = g7 = h3, Y4 = g7, q4 = U4, U4 = (g7 = b4) + (b4 = V4) | 0, g7 = F4 + cA4 | 0, g7 = (g7 = b4 >>> 0 > U4 >>> 0 ? g7 + 1 | 0 : g7) + Y4 | 0, Y4 = F4 = (b4 = U4) + C4 | 0, C4 = rt(q4 ^ F4, (b4 = F4 >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7) ^ _4, 16), g7 = x4 + (F4 = h3) | 0, g7 = (_4 = v4 + C4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = _4, U4 = g7, J4 = rt(_4 ^ J4, g7 ^ N5, 63), _4 = h3, x4 = i4, N5 = e4, q4 = C4, g7 = D4 + W4 | 0, g7 = (g7 = (e4 = (C4 = H4) + w4 | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) + i4 | 0, i4 = g7 = e4 >>> 0 > (D4 = N5 + e4 | 0) >>> 0 ? g7 + 1 | 0 : g7, C4 = rt(q4 ^ D4, g7 ^ F4, 32), g7 = (g7 = m4) + (m4 = h3) | 0, g7 = (e4 = C4) >>> 0 > (F4 = e4 + c4 | 0) >>> 0 ? g7 + 1 | 0 : g7, w4 = c4 = rt(N5 ^ (e4 = F4), g7 ^ x4, 24), F4 = g7, N5 = C4, C4 = (g7 = D4) + (D4 = Z4) | 0, g7 = i4 + yA4 | 0, g7 = (g7 = C4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) + (x4 = h3) | 0, D4 = i4 = C4 + c4 | 0, C4 = g7 = i4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7, i4 = (m4 = iA4 = rt(N5 ^ i4, g7 ^ m4, 16)) + e4 | 0, g7 = (e4 = h3) + F4 | 0, c4 = i4, q4 = rt(F4 = i4 ^ w4, (w4 = i4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ x4, 63), x4 = h3, g7 = S4 + r4 | 0, g7 = (g7 = (m4 = rA4) >>> 0 > (F4 = m4 + $4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (i4 = y4) | 0, S4 = m4 = F4 + l4 | 0, Q4 = rt(m4 ^ EA4, (y4 = m4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 32), g7 = U4 + (m4 = h3) | 0, g7 = (F4 = v4 + Q4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = F4, U4 = rt(F4 ^ l4, g7 ^ i4, 24), N5 = i4 = h3, F4 = g7, $4 = v4, g7 = y4 + CA4 | 0, g7 = (v4 = P4) >>> 0 > (S4 = v4 + S4 | 0) >>> 0 ? g7 + 1 | 0 : g7, v4 = S4, g7 = g7 + i4 | 0, S4 = y4 = S4 + (l4 = U4) | 0, y4 = rt(y4 ^ Q4, (U4 = y4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 16), g7 = (v4 = h3) + F4 | 0, BA4 = i4 = $4 + y4 | 0, aA4 = rt(i4 ^ l4, (m4 = i4 >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) ^ N5, 63), F4 = h3, N5 = J4, g7 = p4 + AA4 | 0, g7 = (g7 = (Q4 = f4 + nA4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) + (i4 = _4) | 0, l4 = rt((_4 = f4 = Q4 + J4 | 0) ^ oA4, (f4 = Q4 >>> 0 > _4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = (g7 = E4) + (E4 = h3) | 0, J4 = p4 = (k4 = l4) + pA4 | 0, Q4 = rt(N5 ^ p4, (g7 = p4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) ^ i4, 24), p4 = i4 = h3, k4 = g7, N5 = Q4, g7 = f4 + i4 | 0, g7 = (g7 = (Q4 = _4 + Q4 | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + ($4 = n3[I6 + 132 >> 2]) | 0, f4 = _4 = (i4 = n3[I6 + 128 >> 2]) + Q4 | 0, Q4 = g7 = _4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, oA4 = rt(_4 ^ l4, g7 ^ E4, 16), g7 = (g7 = k4) + (k4 = h3) | 0, tA4 = rt(N5 ^ (_4 = (E4 = oA4) + J4 | 0), (g7 = _4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ p4, 63), E4 = h3, l4 = _4, J4 = g7, N5 = y4, g7 = sA4 + (p4 = G4) | 0, g7 = (g7 = (_4 = (y4 = X4) + _A4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + b4 | 0, Y4 = rt((_4 = y4 = _4 + Y4 | 0) ^ eA4, (G4 = _4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) ^ R4, 32), g7 = (y4 = h3) + s4 | 0, g7 = (b4 = Y4) >>> 0 > (R4 = b4 + M4 | 0) >>> 0 ? g7 + 1 | 0 : g7, p4 = rt((b4 = R4) ^ _A4, g7 ^ p4, 24), IA4 = M4 = h3, s4 = g7, R4 = y4, eA4 = Y4, g7 = G4 + M4 | 0, g7 = (g7 = (Y4 = _4 + p4 | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + (_A4 = n3[I6 + 196 >> 2]) | 0, Y4 = _4 = (y4 = n3[I6 + 192 >> 2]) + (G4 = Y4) | 0, eA4 = rt(eA4 ^ _4, (M4 = R4) ^ (R4 = _4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (g7 = s4) + (s4 = h3) | 0, p4 = rt(p4 ^ (M4 = _4 = (G4 = eA4) + b4 | 0), (_4 = _4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) ^ IA4, 63), IA4 = g7 = h3, G4 = g7, g7 = C4 + K4 | 0, g7 = (g7 = (b4 = D4 + j4 | 0) >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) + G4 | 0, g7 = (D4 = b4 + p4 | 0) >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7, b4 = D4, G4 = g7, C4 = rt(D4 ^ N5, g7 ^ v4, 32), g7 = (v4 = h3) + J4 | 0, l4 = D4 = l4 + C4 | 0, J4 = rt(p4 ^ D4, (g7 = D4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ IA4, 24), K4 = D4 = h3, p4 = g7, N5 = C4, g7 = G4 + $4 | 0, g7 = (g7 = (C4 = i4 + b4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + D4 | 0, j4 = G4 = C4 + J4 | 0, IA4 = rt(N5 ^ G4, (D4 = G4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ v4, 16), g7 = (g7 = p4) + (p4 = h3) | 0, b4 = G4 = (v4 = IA4) + l4 | 0, K4 = rt(G4 ^ J4, (C4 = G4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) ^ K4, 63), v4 = h3, g7 = r4 + (G4 = x4) | 0, g7 = U4 + ((l4 = rA4) >>> 0 > (J4 = l4 + q4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, S4 = g7 = (x4 = S4 + J4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, l4 = rt(x4 ^ oA4, g7 ^ k4, 32), g7 = (g7 = _4) + (_4 = h3) | 0, g7 = (k4 = l4) >>> 0 > (U4 = k4 + M4 | 0) >>> 0 ? g7 + 1 | 0 : g7, k4 = G4, G4 = g7, J4 = rt(U4 ^ q4, k4 ^ g7, 24), q4 = g7 = h3, k4 = g7, N5 = l4, g7 = S4 + QA4 | 0, g7 = (g7 = (l4 = x4 + O4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) + k4 | 0, k4 = g7 = (x4 = (S4 = l4) + J4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, oA4 = rt(N5 ^ (S4 = x4), g7 ^ _4, 16), g7 = G4 + (l4 = h3) | 0, M4 = _4 = U4 + oA4 | 0, J4 = rt(_4 ^ J4, (x4 = _4 >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) ^ q4, 63), _4 = h3, G4 = F4, g7 = F4 + W4 | 0, g7 = Q4 + (H4 >>> 0 > (N5 = H4 + aA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, Q4 = s4, s4 = g7 = f4 >>> 0 > (F4 = f4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, N5 = rt(F4 ^ eA4, Q4 ^ g7, 32), g7 = w4 + (f4 = h3) | 0, Q4 = G4, G4 = g7 = c4 >>> 0 > (U4 = c4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, w4 = c4 = rt(U4 ^ aA4, Q4 ^ g7, 24), Q4 = g7 = h3, g7 = s4 + AA4 | 0, g7 = (g7 = (c4 = F4 + nA4 | 0) >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) + Q4 | 0, AA4 = s4 = w4 + c4 | 0, nA4 = rt(s4 ^ N5, (F4 = s4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7) ^ f4, 16), g7 = G4 + (f4 = h3) | 0, aA4 = s4 = U4 + nA4 | 0, c4 = rt(s4 ^ w4, (G4 = s4 >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 63), s4 = h3, U4 = E4, g7 = E4 + CA4 | 0, g7 = R4 + ((Q4 = P4) >>> 0 > (w4 = Q4 + tA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, e4 = rt((Q4 = E4 = Y4 + w4 | 0) ^ iA4, (E4 = Q4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) ^ e4, 32), g7 = (g7 = m4) + (m4 = h3) | 0, N5 = U4 = rt((w4 = R4 = e4 + BA4 | 0) ^ tA4, (g7 = e4 >>> 0 > w4 >>> 0 ? g7 + 1 | 0 : g7) ^ U4, 24), q4 = R4 = h3, Y4 = g7, g7 = E4 + sA4 | 0, g7 = (g7 = (Q4 = (U4 = X4) + Q4 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) + R4 | 0, R4 = E4 = N5 + Q4 | 0, e4 = rt(E4 ^ e4, (U4 = E4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 16), g7 = (g7 = Y4) + (Y4 = h3) | 0, tA4 = E4 = e4 + w4 | 0, N5 = rt(E4 ^ N5, (m4 = E4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ q4, 63), E4 = h3, q4 = J4, eA4 = e4, g7 = D4 + cA4 | 0, g7 = (g7 = (e4 = V4) >>> 0 > (w4 = e4 + j4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (Q4 = _4) | 0, _4 = g7 = (e4 = w4) >>> 0 > (D4 = e4 + J4 | 0) >>> 0 ? g7 + 1 | 0 : g7, w4 = rt(eA4 ^ (e4 = D4), g7 ^ Y4, 32), g7 = (g7 = G4) + (G4 = h3) | 0, J4 = D4 = (Y4 = w4) + aA4 | 0, q4 = Q4 = rt(q4 ^ D4, (g7 = D4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 24), aA4 = D4 = h3, Y4 = g7, g7 = _4 + a4 | 0, g7 = (g7 = (e4 = (Q4 = L4) + e4 | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7) + D4 | 0, iA4 = _4 = q4 + e4 | 0, eA4 = rt(_4 ^ w4, (Q4 = G4) ^ (G4 = _4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = (D4 = h3) + Y4 | 0, Y4 = _4 = (Q4 = eA4) + J4 | 0, q4 = rt(_4 ^ q4, (Q4 = _4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7) ^ aA4, 63), _4 = h3, J4 = c4, g7 = k4 + z4 | 0, k4 = c4 = d4 + S4 | 0, g7 = (g7 = c4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7) + (e4 = s4) | 0, w4 = rt((c4 = S4 = J4 + c4 | 0) ^ IA4, (s4 = c4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) ^ p4, 32), g7 = (g7 = m4) + (m4 = h3) | 0, S4 = g7 = (p4 = (S4 = w4) + tA4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, J4 = e4 = rt(J4 ^ p4, g7 ^ e4, 24), aA4 = g7 = h3, k4 = g7, g7 = s4 + B4 | 0, g7 = (g7 = (e4 = T4) >>> 0 > (c4 = e4 + c4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + k4 | 0, k4 = s4 = J4 + (e4 = c4) | 0, m4 = rt(s4 ^ w4, (e4 = s4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 16), g7 = S4 + (c4 = h3) | 0, g7 = (s4 = p4 + m4 | 0) >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7, p4 = s4, S4 = g7, aA4 = rt(s4 ^ J4, g7 ^ aA4, 63), s4 = h3, w4 = E4, j4 = N5, g7 = F4 + yA4 | 0, g7 = (g7 = (J4 = Z4) >>> 0 > (N5 = J4 + AA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + E4 | 0, g7 = (F4 = j4 + (J4 = N5) | 0) >>> 0 < J4 >>> 0 ? g7 + 1 | 0 : g7, J4 = F4, E4 = g7, N5 = rt(F4 ^ oA4, g7 ^ l4, 32), g7 = C4 + (F4 = h3) | 0, C4 = g7 = (l4 = b4 + N5 | 0) >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7, l4 = rt(j4 ^ (b4 = l4), g7 ^ w4, 24), j4 = g7 = h3, w4 = g7, g7 = E4 + _A4 | 0, g7 = (g7 = (J4 = y4 + J4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + w4 | 0, w4 = E4 = (AA4 = l4) + (l4 = J4) | 0, tA4 = rt(E4 ^ N5, (J4 = F4) ^ (F4 = E4 >>> 0 < l4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = C4 + (l4 = h3) | 0, g7 = (E4 = b4 + tA4 | 0) >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7, b4 = E4, AA4 = rt(E4 ^ AA4, g7 ^ j4, 63), E4 = h3, J4 = g7, IA4 = K4, g7 = U4 + (C4 = v4) | 0, g7 = (g7 = (K4 = R4 + K4 | 0) >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7) + (j4 = oA4 = n3[I6 + 156 >> 2]) | 0, R4 = g7 = (v4 = (N5 = n3[I6 + 152 >> 2]) + (R4 = K4) | 0) >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7, U4 = rt(v4 ^ nA4, g7 ^ f4, 32), g7 = (g7 = x4) + (x4 = h3) | 0, K4 = f4 = U4 + M4 | 0, j4 = C4 = rt(IA4 ^ f4, (g7 = f4 >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) ^ C4, 24), M4 = nA4 = h3, f4 = g7, IA4 = BA4 = n3[I6 + 236 >> 2], BA4 = K4, K4 = U4, g7 = R4 + M4 | 0, g7 = (g7 = (C4 = C4 + v4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + IA4 | 0, g7 = (v4 = (U4 = n3[I6 + 232 >> 2]) + C4 | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7, C4 = x4, x4 = g7, nA4 = rt(K4 ^ v4, C4 ^ g7, 16), g7 = (R4 = h3) + f4 | 0, j4 = rt((f4 = C4 = BA4 + (K4 = nA4) | 0) ^ j4, (C4 = C4 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7) ^ M4, 63), M4 = g7 = h3, K4 = g7, BA4 = m4, g7 = G4 + W4 | 0, g7 = (g7 = (m4 = H4 + iA4 | 0) >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7) + K4 | 0, c4 = rt(BA4 ^ (K4 = H4 = m4 + j4 | 0), (H4 = H4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 32), g7 = (m4 = h3) + J4 | 0, J4 = G4 = b4 + c4 | 0, W4 = rt(j4 ^ G4, M4 ^ (g7 = G4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7), 24), iA4 = G4 = h3, b4 = g7, j4 = J4, M4 = c4, g7 = H4 + B4 | 0, g7 = (g7 = (c4 = T4) >>> 0 > (J4 = c4 + K4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + G4 | 0, M4 = rt(M4 ^ (G4 = H4 = (c4 = J4) + W4 | 0), (c4 = c4 >>> 0 > G4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 16), g7 = (g7 = b4) + (b4 = h3) | 0, J4 = H4 = j4 + (m4 = M4) | 0, j4 = rt(H4 ^ W4, (K4 = H4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ iA4, 63), m4 = h3, H4 = _4, BA4 = q4, g7 = _4 + yA4 | 0, g7 = e4 + (Z4 >>> 0 > (q4 = Z4 + q4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, l4 = rt((W4 = _4 = k4 + q4 | 0) ^ tA4, (_4 = _4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) ^ l4, 32), g7 = C4 + (k4 = h3) | 0, g7 = (e4 = f4 + l4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7, f4 = e4, C4 = H4, H4 = g7, q4 = e4 = rt(BA4 ^ e4, C4 ^ g7, 24), tA4 = g7 = h3, C4 = g7, BA4 = e4, iA4 = l4, g7 = _4 + CA4 | 0, g7 = (g7 = (e4 = P4) >>> 0 > (l4 = e4 + W4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + C4 | 0, q4 = _4 = q4 + (e4 = l4) | 0, iA4 = rt(iA4 ^ _4, (C4 = _4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 16), g7 = H4 + (k4 = h3) | 0, g7 = (_4 = f4 + iA4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7, f4 = _4, e4 = g7, l4 = rt(BA4 ^ _4, g7 ^ tA4, 63), _4 = h3, H4 = s4, g7 = s4 + $4 | 0, g7 = (g7 = (W4 = i4 + aA4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + F4 | 0, g7 = (i4 = w4 + W4 | 0) >>> 0 < w4 >>> 0 ? g7 + 1 | 0 : g7, w4 = i4, i4 = g7, W4 = rt(w4 ^ nA4, g7 ^ R4, 32), g7 = Q4 + (s4 = h3) | 0, Q4 = H4, H4 = g7 = (F4 = Y4 + W4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7, Q4 = Y4 = rt(F4 ^ aA4, Q4 ^ g7, 24), aA4 = g7 = h3, R4 = g7, g7 = i4 + z4 | 0, g7 = (g7 = (Y4 = d4 + w4 | 0) >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + R4 | 0, w4 = d4 = Q4 + (i4 = Y4) | 0, W4 = rt(d4 ^ W4, (Y4 = s4) ^ (s4 = i4 >>> 0 > d4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = H4 + (R4 = h3) | 0, z4 = d4 = F4 + W4 | 0, Y4 = rt(d4 ^ Q4, (i4 = d4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ aA4, 63), H4 = h3, d4 = E4, g7 = E4 + _A4 | 0, g7 = (g7 = (F4 = y4 + AA4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + x4 | 0, g7 = (y4 = F4 + v4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = y4, y4 = g7, D4 = rt(v4 ^ eA4, g7 ^ D4, 32), g7 = S4 + (E4 = h3) | 0, Q4 = d4, d4 = g7 = p4 >>> 0 > (x4 = p4 + D4 | 0) >>> 0 ? g7 + 1 | 0 : g7, S4 = p4 = rt(x4 ^ AA4, Q4 ^ g7, 24), Q4 = g7 = h3, g7 = y4 + oA4 | 0, g7 = (g7 = (v4 = v4 + N5 | 0) >>> 0 < N5 >>> 0 ? g7 + 1 | 0 : g7) + Q4 | 0, F4 = y4 = v4 + p4 | 0, D4 = rt(y4 ^ D4, (p4 = E4) ^ (E4 = y4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = d4 + (v4 = h3) | 0, Q4 = rt((p4 = y4 = x4 + D4 | 0) ^ S4, (y4 = y4 >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 63), d4 = h3, x4 = _4, N5 = D4, g7 = _4 + c4 | 0, g7 = (D4 = G4 + l4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, G4 = D4, g7 = g7 + (S4 = n3[I6 + 164 >> 2]) | 0, S4 = rt(N5 ^ (D4 = _4 = D4 + n3[I6 + 160 >> 2] | 0), (_4 = _4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) ^ v4, 32), g7 = (g7 = i4) + (i4 = h3) | 0, c4 = x4, x4 = g7 = (G4 = (v4 = S4) + z4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, c4 = rt(G4 ^ l4, c4 ^ g7, 24), N5 = g7 = h3, v4 = g7, g7 = _4 + IA4 | 0, g7 = (g7 = (D4 = D4 + U4 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) + v4 | 0, aA4 = rt((z4 = _4 = D4 + c4 | 0) ^ S4, (_4 = _4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) ^ i4, 16), g7 = x4 + (v4 = h3) | 0, x4 = i4 = G4 + aA4 | 0, l4 = rt(i4 ^ c4, (G4 = i4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) ^ N5, 63), i4 = h3, c4 = Y4, U4 = p4, g7 = C4 + QA4 | 0, g7 = (g7 = (p4 = (Y4 = O4) + q4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) + (D4 = H4) | 0, b4 = rt((S4 = Y4 = c4 + p4 | 0) ^ M4, (H4 = p4 >>> 0 > S4 >>> 0 ? g7 + 1 | 0 : g7) ^ b4, 32), g7 = (g7 = y4) + (y4 = h3) | 0, C4 = D4, D4 = g7 = (p4 = b4) >>> 0 > (Y4 = U4 + p4 | 0) >>> 0 ? g7 + 1 | 0 : g7, C4 = U4 = rt(c4 ^ Y4, C4 ^ g7, 24), c4 = g7 = h3, U4 = b4, g7 = H4 + r4 | 0, g7 = (g7 = (b4 = rA4) >>> 0 > (S4 = b4 + S4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + c4 | 0, S4 = rt(U4 ^ (p4 = H4 = S4 + C4 | 0), (b4 = p4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 16), g7 = D4 + (U4 = h3) | 0, N5 = rt((D4 = H4 = Y4 + S4 | 0) ^ C4, (Y4 = D4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 63), H4 = h3, q4 = Q4, g7 = s4 + sA4 | 0, g7 = (C4 = X4) >>> 0 > (Q4 = C4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7, C4 = Q4, g7 = g7 + (y4 = d4) | 0, c4 = rt((Q4 = s4 = q4 + Q4 | 0) ^ iA4, (d4 = Q4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = K4 + (s4 = h3) | 0, k4 = y4, y4 = g7 = (C4 = J4 + c4 | 0) >>> 0 < J4 >>> 0 ? g7 + 1 | 0 : g7, w4 = rt(q4 ^ C4, k4 ^ g7, 24), K4 = g7 = h3, k4 = g7, J4 = c4, c4 = (g7 = Q4) + (Q4 = V4) | 0, g7 = d4 + cA4 | 0, g7 = (g7 = Q4 >>> 0 > c4 >>> 0 ? g7 + 1 | 0 : g7) + k4 | 0, k4 = g7 = (Q4 = c4) >>> 0 > (d4 = Q4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7, q4 = rt(J4 ^ d4, g7 ^ s4, 16), g7 = y4 + (Q4 = h3) | 0, J4 = rt((s4 = C4 + q4 | 0) ^ w4, (g7 = s4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ K4, 63), y4 = h3, c4 = g7, g7 = a4 + (C4 = m4) | 0, g7 = E4 + ((w4 = L4) >>> 0 > (K4 = w4 + j4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, w4 = m4 = F4 + K4 | 0, K4 = rt(m4 ^ W4, (E4 = m4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ R4, 32), g7 = e4 + (m4 = h3) | 0, R4 = g7 = f4 >>> 0 > (F4 = f4 + K4 | 0) >>> 0 ? g7 + 1 | 0 : g7, W4 = g7 = rt(F4 ^ j4, g7 ^ C4, 24), f4 = g7, C4 = g7 + w4 | 0, g7 = (e4 = h3) + E4 | 0, g7 = (g7 = C4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) + (AA4 = n3[I6 + 204 >> 2]) | 0, g7 = (E4 = C4 + n3[I6 + 200 >> 2] | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7, C4 = m4, m4 = g7, AA4 = rt(E4 ^ K4, C4 ^ g7, 16), g7 = R4 + (f4 = h3) | 0, g7 = (C4 = F4 + AA4 | 0) >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7, F4 = C4, R4 = g7, e4 = rt(W4 ^ C4, g7 ^ e4, 63), C4 = g7 = h3, w4 = s4, W4 = S4, g7 = _4 + B4 | 0, g7 = (g7 = (s4 = T4) >>> 0 > (S4 = s4 + z4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + C4 | 0, W4 = rt(W4 ^ (K4 = _4 = (s4 = S4) + e4 | 0), (_4 = _4 >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7) ^ U4, 32), g7 = (s4 = h3) + c4 | 0, U4 = g7 = (S4 = w4 + (U4 = W4) | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7, e4 = rt(e4 ^ S4, C4 ^ g7, 24), w4 = g7 = h3, C4 = g7, M4 = e4, g7 = _4 + r4 | 0, g7 = (g7 = (e4 = rA4) >>> 0 > (c4 = e4 + K4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + C4 | 0, W4 = rt((C4 = _4 = M4 + (e4 = c4) | 0) ^ W4, (e4 = C4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = U4 + (c4 = h3) | 0, g7 = (_4 = S4 + W4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, S4 = _4, U4 = g7, _4 = rt(M4 ^ _4, g7 ^ w4, 63), s4 = h3, w4 = i4, M4 = l4, g7 = i4 + a4 | 0, g7 = b4 + ((l4 = L4) >>> 0 > (K4 = M4 + l4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, Q4 = rt((l4 = i4 = p4 + K4 | 0) ^ q4, (i4 = i4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 32), g7 = R4 + (p4 = h3) | 0, R4 = g7 = F4 >>> 0 > (b4 = F4 + Q4 | 0) >>> 0 ? g7 + 1 | 0 : g7, K4 = w4 = rt(M4 ^ (F4 = b4), g7 ^ w4, 24), z4 = g7 = h3, b4 = g7, M4 = w4, q4 = Q4, g7 = i4 + sA4 | 0, g7 = (g7 = (Q4 = X4) >>> 0 > (w4 = Q4 + l4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + b4 | 0, K4 = i4 = K4 + (Q4 = w4) | 0, q4 = rt(q4 ^ i4, (b4 = p4) ^ (p4 = i4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = R4 + (b4 = h3) | 0, g7 = (i4 = F4 + q4 | 0) >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7, F4 = i4, R4 = g7, l4 = rt(M4 ^ i4, g7 ^ z4, 63), i4 = h3, M4 = N5, g7 = cA4 + (Q4 = H4) | 0, g7 = k4 + ((w4 = V4) >>> 0 > (N5 = w4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, w4 = rt((k4 = H4 = d4 + N5 | 0) ^ AA4, (H4 = d4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) ^ f4, 32), g7 = G4 + (d4 = h3) | 0, g7 = (f4 = x4 + w4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, x4 = f4, G4 = g7, g7 = rt(M4 ^ f4, g7 ^ Q4, 24), z4 = n3[I6 + 236 >> 2], M4 = g7, Q4 = k4, k4 = g7, Q4 = Q4 + g7 | 0, g7 = (f4 = h3) + H4 | 0, g7 = (g7 = Q4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + z4 | 0, Q4 = g7 = (H4 = Q4 + n3[I6 + 232 >> 2] | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, z4 = rt((k4 = H4) ^ w4, g7 ^ d4, 16), g7 = G4 + (w4 = h3) | 0, N5 = H4 = x4 + z4 | 0, f4 = rt(M4 ^ H4, (d4 = H4 >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) ^ f4, 63), H4 = h3, x4 = y4, M4 = J4, g7 = y4 + m4 | 0, g7 = (g7 = (G4 = E4 + J4 | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) + (AA4 = n3[I6 + 164 >> 2]) | 0, v4 = rt((J4 = y4 = (E4 = G4) + n3[I6 + 160 >> 2] | 0) ^ aA4, (y4 = y4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ v4, 32), g7 = Y4 + (E4 = h3) | 0, Y4 = x4, x4 = g7 = D4 >>> 0 > (m4 = D4 + v4 | 0) >>> 0 ? g7 + 1 | 0 : g7, Y4 = D4 = rt(M4 ^ m4, Y4 ^ g7, 24), aA4 = g7 = h3, G4 = g7, M4 = v4, g7 = y4 + CA4 | 0, g7 = (g7 = (D4 = (v4 = P4) + J4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + G4 | 0, AA4 = y4 = Y4 + D4 | 0, D4 = rt(M4 ^ y4, (G4 = E4) ^ (E4 = y4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = x4 + (G4 = h3) | 0, g7 = (y4 = m4 + D4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, m4 = y4, x4 = g7, J4 = rt(y4 ^ Y4, g7 ^ aA4, 63), y4 = h3, v4 = i4, M4 = D4, g7 = i4 + e4 | 0, g7 = (g7 = (D4 = C4 + l4 | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) + (Y4 = n3[I6 + 132 >> 2]) | 0, C4 = rt(M4 ^ (Y4 = i4 = D4 + n3[I6 + 128 >> 2] | 0), (i4 = i4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) ^ G4, 32), g7 = (g7 = d4) + (d4 = h3) | 0, e4 = v4, v4 = g7 = C4 >>> 0 > (G4 = C4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, e4 = rt(G4 ^ l4, e4 ^ g7, 24), N5 = g7 = h3, D4 = g7, l4 = C4, C4 = (g7 = Y4) + (Y4 = O4) | 0, g7 = i4 + QA4 | 0, g7 = (g7 = C4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) + D4 | 0, aA4 = i4 = C4 + e4 | 0, $4 = rt(l4 ^ i4, (D4 = i4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ d4, 16), g7 = v4 + (Y4 = h3) | 0, v4 = g7 = (d4 = G4 + $4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, l4 = rt((G4 = d4) ^ e4, g7 ^ N5, 63), d4 = h3, N5 = f4, g7 = p4 + yA4 | 0, p4 = C4 = (f4 = Z4) + K4 | 0, g7 = (g7 = C4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) + (i4 = H4) | 0, e4 = rt((C4 = f4 = N5 + C4 | 0) ^ W4, (H4 = p4 >>> 0 > C4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 32), g7 = x4 + (f4 = h3) | 0, g7 = (p4 = m4 + e4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, m4 = p4, c4 = i4, i4 = g7, g7 = rt(N5 ^ p4, c4 ^ g7, 24), N5 = n3[I6 + 156 >> 2], c4 = g7, p4 = g7, C4 = g7 + C4 | 0, g7 = (x4 = h3) + H4 | 0, g7 = (g7 = C4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) + N5 | 0, g7 = C4 >>> 0 > (H4 = C4 + n3[I6 + 152 >> 2] | 0) >>> 0 ? g7 + 1 | 0 : g7, C4 = f4, f4 = g7, K4 = rt((p4 = H4) ^ e4, C4 ^ g7, 16), g7 = i4 + (C4 = h3) | 0, e4 = x4, x4 = g7 = (H4 = m4 + K4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, N5 = rt(c4 ^ (m4 = H4), e4 ^ g7, 63), i4 = h3, H4 = y4, g7 = y4 + Q4 | 0, g7 = (g7 = (e4 = k4 + J4 | 0) >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + (c4 = n3[I6 + 204 >> 2]) | 0, g7 = (y4 = e4 + n3[I6 + 200 >> 2] | 0) >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7, e4 = b4, b4 = g7, e4 = rt(y4 ^ q4, e4 ^ g7, 32), g7 = U4 + (k4 = h3) | 0, g7 = (Q4 = S4 + e4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, S4 = Q4, c4 = H4, H4 = g7, Q4 = rt(Q4 ^ J4, c4 ^ g7, 24), c4 = g7 = h3, q4 = Q4, g7 = g7 + b4 | 0, g7 = (g7 = (Q4 = y4 + Q4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + (J4 = n3[I6 + 148 >> 2]) | 0, g7 = (y4 = Q4 + n3[I6 + 144 >> 2] | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, b4 = y4, Q4 = k4, k4 = g7, W4 = rt(y4 ^ e4, Q4 ^ g7, 16), g7 = H4 + (Q4 = h3) | 0, g7 = (y4 = S4 + W4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, S4 = y4, U4 = g7, J4 = rt(q4 ^ y4, c4 ^ g7, 63), y4 = h3, H4 = s4, q4 = _4, g7 = s4 + E4 | 0, s4 = e4 = _4 + AA4 | 0, g7 = (g7 = e4 >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + (c4 = n3[I6 + 196 >> 2]) | 0, c4 = rt((e4 = _4 = e4 + n3[I6 + 192 >> 2] | 0) ^ z4, (_4 = e4 >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7) ^ w4, 32), g7 = R4 + (s4 = h3) | 0, H4 = rt(q4 ^ (E4 = F4 + c4 | 0), (g7 = E4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ H4, 24), F4 = g7, z4 = n3[I6 + 220 >> 2], w4 = H4, M4 = E4, g7 = (E4 = h3) + _4 | 0, _4 = e4 = e4 + H4 | 0, g7 = (g7 = e4 >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7) + (q4 = z4) | 0, q4 = rt(H4 = (e4 = H4 = (R4 = n3[I6 + 216 >> 2]) + e4 | 0) ^ c4, (c4 = _4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = (g7 = F4) + (F4 = h3) | 0, g7 = (_4 = q4) >>> 0 > (H4 = M4 + _4 | 0) >>> 0 ? g7 + 1 | 0 : g7, _4 = E4, E4 = g7, g7 = rt(w4 ^ H4, _4 ^ g7, 63), j4 = n3[I6 + 236 >> 2], M4 = g7, s4 = g7, w4 = g7 + aA4 | 0, g7 = (_4 = h3) + D4 | 0, g7 = (g7 = s4 >>> 0 > w4 >>> 0 ? g7 + 1 | 0 : g7) + j4 | 0, K4 = rt((w4 = s4 = (D4 = w4) + n3[I6 + 232 >> 2] | 0) ^ K4, (s4 = s4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) ^ C4, 32), g7 = U4 + (D4 = h3) | 0, g7 = (C4 = S4 + K4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, S4 = C4, U4 = _4, _4 = g7, g7 = rt(M4 ^ C4, U4 ^ g7, 24), M4 = K4, C4 = g7, w4 = g7 + w4 | 0, g7 = (U4 = h3) + s4 | 0, g7 = z4 + (C4 >>> 0 > w4 >>> 0 ? g7 + 1 | 0 : g7) | 0, K4 = s4 = w4 + R4 | 0, z4 = rt(M4 ^ s4, (w4 = D4) ^ (D4 = s4 >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = _4 + (R4 = h3) | 0, g7 = (s4 = S4 + z4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, S4 = s4, _4 = U4, U4 = g7, _4 = rt(C4 ^ s4, _4 ^ g7, 63), s4 = h3, M4 = l4, g7 = QA4 + (C4 = d4) | 0, g7 = f4 + ((l4 = (w4 = O4) + l4 | 0) >>> 0 < w4 >>> 0 ? g7 + 1 | 0 : g7) | 0, Q4 = rt((w4 = d4 = p4 + l4 | 0) ^ W4, (d4 = p4 >>> 0 > d4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 32), g7 = E4 + (f4 = h3) | 0, g7 = (p4 = H4 + Q4 | 0) >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7, H4 = p4, E4 = g7, l4 = C4 = rt(M4 ^ p4, g7 ^ C4, 24), W4 = g7 = h3, p4 = g7, M4 = Q4, g7 = d4 + cA4 | 0, g7 = (g7 = (C4 = V4) >>> 0 > (Q4 = C4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + p4 | 0, aA4 = d4 = l4 + (C4 = Q4) | 0, AA4 = rt(M4 ^ d4, (Q4 = f4) ^ (f4 = C4 >>> 0 > d4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = E4 + (p4 = h3) | 0, w4 = rt((E4 = d4 = H4 + AA4 | 0) ^ l4, (C4 = E4 >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7) ^ W4, 63), H4 = h3, d4 = i4, g7 = i4 + B4 | 0, g7 = k4 + ((Q4 = T4) >>> 0 > (l4 = Q4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, Q4 = rt((k4 = i4 = b4 + l4 | 0) ^ q4, (i4 = i4 >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7) ^ F4, 32), g7 = v4 + (F4 = h3) | 0, g7 = G4 >>> 0 > (b4 = G4 + Q4 | 0) >>> 0 ? g7 + 1 | 0 : g7, G4 = b4, b4 = d4, d4 = g7, l4 = b4 = rt(G4 ^ N5, b4 ^ g7, 24), N5 = g7 = h3, v4 = g7, g7 = i4 + a4 | 0, g7 = (g7 = (b4 = L4) >>> 0 > (k4 = b4 + k4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + v4 | 0, v4 = i4 = l4 + k4 | 0, W4 = rt(i4 ^ Q4, (b4 = F4) ^ (F4 = i4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = d4 + (b4 = h3) | 0, g7 = (i4 = G4 + W4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, G4 = i4, k4 = g7, l4 = rt(i4 ^ l4, g7 ^ N5, 63), d4 = h3, g7 = c4 + (i4 = y4) | 0, g7 = (g7 = (Q4 = e4 + J4 | 0) >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) + (N5 = n3[I6 + 156 >> 2]) | 0, e4 = Y4, Y4 = g7 = (y4 = Q4 + n3[I6 + 152 >> 2] | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, c4 = rt(y4 ^ $4, e4 ^ g7, 32), g7 = x4 + (Q4 = h3) | 0, g7 = (e4 = m4 + c4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, m4 = e4, x4 = i4, i4 = g7, e4 = rt(e4 ^ J4, x4 ^ g7, 24), J4 = g7 = h3, M4 = e4, g7 = Y4 + g7 | 0, g7 = (g7 = (e4 = e4 + y4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + (N5 = n3[I6 + 204 >> 2]) | 0, q4 = y4 = e4 + n3[I6 + 200 >> 2] | 0, e4 = rt(y4 ^ c4, (Y4 = y4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 16), g7 = i4 + (y4 = h3) | 0, g7 = (Q4 = m4 + e4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, m4 = Q4, x4 = g7, J4 = rt(M4 ^ Q4, J4 ^ g7, 63), i4 = h3, N5 = e4, g7 = D4 + r4 | 0, g7 = (g7 = (e4 = rA4) >>> 0 > (c4 = e4 + K4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (Q4 = H4) | 0, H4 = D4 = (e4 = c4) + w4 | 0, c4 = rt(N5 ^ D4, (c4 = y4) ^ (y4 = e4 >>> 0 > D4 >>> 0 ? g7 + 1 | 0 : g7), 32), g7 = k4 + (D4 = h3) | 0, g7 = (e4 = G4 + c4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, G4 = e4, k4 = g7, e4 = rt(e4 ^ w4, g7 ^ Q4, 24), Q4 = g7 = h3, w4 = e4, g7 = y4 + g7 | 0, g7 = (g7 = (e4 = e4 + H4 | 0) >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7) + (N5 = n3[I6 + 132 >> 2]) | 0, K4 = H4 = e4 + n3[I6 + 128 >> 2] | 0, $4 = rt(H4 ^ c4, (y4 = D4) ^ (D4 = e4 >>> 0 > H4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = k4 + (e4 = h3) | 0, k4 = g7 = (H4 = G4 + $4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, N5 = rt(w4 ^ (G4 = H4), g7 ^ Q4, 63), H4 = h3, g7 = f4 + sA4 | 0, g7 = (g7 = (Q4 = X4) >>> 0 > (c4 = Q4 + aA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (y4 = d4) | 0, d4 = g7 = (Q4 = c4) >>> 0 > (f4 = Q4 + l4 | 0) >>> 0 ? g7 + 1 | 0 : g7, c4 = rt((Q4 = f4) ^ z4, g7 ^ R4, 32), g7 = x4 + (R4 = h3) | 0, g7 = m4 >>> 0 > (f4 = m4 + c4 | 0) >>> 0 ? g7 + 1 | 0 : g7, m4 = f4, w4 = y4, y4 = g7, g7 = rt(f4 ^ l4, w4 ^ g7, 24), l4 = n3[I6 + 164 >> 2], w4 = g7, f4 = g7, Q4 = g7 + Q4 | 0, g7 = (x4 = h3) + d4 | 0, g7 = (g7 = Q4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) + l4 | 0, g7 = (d4 = Q4 + n3[I6 + 160 >> 2] | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, Q4 = R4, R4 = g7, Q4 = rt((f4 = d4) ^ c4, Q4 ^ g7, 16), g7 = y4 + (c4 = h3) | 0, y4 = x4, x4 = g7 = (d4 = m4 + Q4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, d4 = rt(w4 ^ (m4 = d4), y4 ^ g7, 63), y4 = h3, w4 = i4, M4 = J4, g7 = i4 + F4 | 0, g7 = (g7 = (l4 = v4 + J4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + (z4 = n3[I6 + 196 >> 2]) | 0, J4 = rt((l4 = i4 = (F4 = l4) + n3[I6 + 192 >> 2] | 0) ^ AA4, (i4 = i4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ p4, 32), g7 = U4 + (F4 = h3) | 0, p4 = g7 = (v4 = S4 + J4 | 0) >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7, U4 = rt(M4 ^ v4, g7 ^ w4, 24), z4 = g7 = h3, S4 = g7, M4 = U4, g7 = i4 + yA4 | 0, g7 = (g7 = (w4 = (U4 = Z4) + l4 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) + S4 | 0, aA4 = i4 = M4 + (U4 = w4) | 0, AA4 = rt(i4 ^ J4, (w4 = F4) ^ (F4 = i4 >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = p4 + (S4 = h3) | 0, g7 = (i4 = v4 + AA4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = i4, w4 = rt(M4 ^ i4, g7 ^ z4, 63), i4 = h3, p4 = s4, U4 = g7, M4 = _4, g7 = s4 + Y4 | 0, g7 = (g7 = (l4 = _4 + q4 | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + (J4 = n3[I6 + 148 >> 2]) | 0, b4 = rt((l4 = _4 = (s4 = l4) + n3[I6 + 144 >> 2] | 0) ^ W4, (_4 = _4 >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7) ^ b4, 32), g7 = C4 + (s4 = h3) | 0, g7 = E4 >>> 0 > (Y4 = E4 + b4 | 0) >>> 0 ? g7 + 1 | 0 : g7, E4 = Y4, Y4 = g7, J4 = C4 = rt(M4 ^ E4, g7 ^ p4, 24), W4 = g7 = h3, p4 = g7, q4 = b4, g7 = _4 + CA4 | 0, g7 = (g7 = (C4 = (b4 = P4) + l4 | 0) >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7) + p4 | 0, p4 = _4 = J4 + C4 | 0, z4 = rt(q4 ^ _4, (b4 = _4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = Y4 + (s4 = h3) | 0, g7 = (_4 = E4 + z4 | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7, E4 = _4, Y4 = g7, C4 = rt(_4 ^ J4, g7 ^ W4, 63), l4 = g7 = h3, _4 = g7, J4 = v4, W4 = Q4, g7 = D4 + yA4 | 0, D4 = Q4 = (v4 = Z4) + K4 | 0, g7 = (g7 = Q4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) + _4 | 0, c4 = rt(W4 ^ (Q4 = v4 = Q4 + C4 | 0), (_4 = D4 >>> 0 > Q4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 32), g7 = (v4 = h3) + U4 | 0, U4 = g7 = (D4 = J4 + c4 | 0) >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7, l4 = rt(C4 ^ D4, l4 ^ g7, 24), K4 = g7 = h3, C4 = g7, J4 = c4, c4 = (g7 = Q4) + (Q4 = X4) | 0, g7 = _4 + sA4 | 0, g7 = (g7 = Q4 >>> 0 > c4 >>> 0 ? g7 + 1 | 0 : g7) + C4 | 0, W4 = _4 = (Q4 = c4) + l4 | 0, q4 = rt(J4 ^ _4, (C4 = v4) ^ (v4 = _4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = U4 + (C4 = h3) | 0, g7 = (_4 = D4 + q4 | 0) >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7, D4 = _4, U4 = g7, J4 = rt(_4 ^ l4, g7 ^ K4, 63), _4 = h3, g7 = cA4 + (Q4 = H4) | 0, g7 = R4 + ((c4 = V4) >>> 0 > (l4 = c4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, S4 = rt((c4 = H4 = f4 + l4 | 0) ^ AA4, (H4 = c4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) ^ S4, 32), g7 = Y4 + (R4 = h3) | 0, Y4 = g7 = E4 >>> 0 > (f4 = E4 + S4 | 0) >>> 0 ? g7 + 1 | 0 : g7, g7 = rt((E4 = f4) ^ N5, g7 ^ Q4, 24), N5 = n3[I6 + 204 >> 2], l4 = g7, K4 = S4, S4 = g7, Q4 = g7 + c4 | 0, g7 = (f4 = h3) + H4 | 0, g7 = (g7 = Q4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7) + N5 | 0, N5 = H4 = Q4 + n3[I6 + 200 >> 2] | 0, K4 = rt(K4 ^ H4, (c4 = R4) ^ (R4 = H4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = Y4 + (S4 = h3) | 0, Y4 = H4 = E4 + K4 | 0, c4 = rt(l4 ^ H4, (Q4 = f4) ^ (f4 = E4 >>> 0 > H4 >>> 0 ? g7 + 1 | 0 : g7), 63), H4 = h3, E4 = y4, M4 = d4, g7 = y4 + F4 | 0, g7 = (g7 = (Q4 = d4 + aA4 | 0) >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + (l4 = n3[I6 + 220 >> 2]) | 0, Q4 = rt((F4 = d4 = Q4 + n3[I6 + 216 >> 2] | 0) ^ z4, (d4 = Q4 >>> 0 > F4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 32), g7 = k4 + (y4 = h3) | 0, k4 = E4, E4 = g7 = (s4 = G4 + Q4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7, g7 = rt(M4 ^ s4, k4 ^ g7, 24), z4 = n3[I6 + 156 >> 2], l4 = g7, k4 = F4, F4 = g7, k4 = k4 + g7 | 0, g7 = (G4 = h3) + d4 | 0, g7 = (g7 = F4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) + z4 | 0, z4 = d4 = (F4 = k4) + n3[I6 + 152 >> 2] | 0, aA4 = rt(d4 ^ Q4, (F4 = d4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 16), g7 = E4 + (k4 = h3) | 0, y4 = rt(l4 ^ (E4 = d4 = s4 + aA4 | 0), (Q4 = G4) ^ (G4 = s4 >>> 0 > E4 >>> 0 ? g7 + 1 | 0 : g7), 63), s4 = h3, d4 = i4, g7 = i4 + b4 | 0, g7 = (g7 = (Q4 = p4 + w4 | 0) >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) + (l4 = n3[I6 + 132 >> 2]) | 0, p4 = g7 = (i4 = Q4 + n3[I6 + 128 >> 2] | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, e4 = rt(i4 ^ $4, g7 ^ e4, 32), g7 = x4 + (b4 = h3) | 0, g7 = (Q4 = m4 + e4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, m4 = Q4, l4 = d4, d4 = g7, Q4 = rt(Q4 ^ w4, l4 ^ g7, 24), w4 = g7 = h3, M4 = Q4, g7 = p4 + g7 | 0, g7 = (g7 = (Q4 = i4 + Q4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (l4 = n3[I6 + 196 >> 2]) | 0, g7 = (i4 = Q4 + n3[I6 + 192 >> 2] | 0) >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, p4 = i4, Q4 = b4, b4 = g7, e4 = rt(i4 ^ e4, Q4 ^ g7, 16), g7 = d4 + (i4 = h3) | 0, g7 = (Q4 = m4 + e4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, m4 = Q4, x4 = g7, l4 = rt(M4 ^ Q4, w4 ^ g7, 63), d4 = h3, M4 = c4, w4 = e4, g7 = v4 + B4 | 0, g7 = (g7 = (e4 = T4) >>> 0 > (c4 = e4 + W4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (Q4 = H4) | 0, H4 = v4 = M4 + (e4 = c4) | 0, c4 = rt(w4 ^ v4, (c4 = i4) ^ (i4 = e4 >>> 0 > v4 >>> 0 ? g7 + 1 | 0 : g7), 32), g7 = G4 + (v4 = h3) | 0, w4 = e4 = E4 + c4 | 0, e4 = rt(M4 ^ e4, (g7 = e4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 24), G4 = g7, AA4 = n3[I6 + 148 >> 2], W4 = e4, g7 = i4 + (E4 = h3) | 0, g7 = (g7 = (e4 = e4 + H4 | 0) >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7) + ($4 = AA4) | 0, j4 = rt(($4 = H4 = (Q4 = n3[I6 + 144 >> 2]) + e4 | 0) ^ c4, (H4 = e4 >>> 0 > H4 >>> 0 ? g7 + 1 | 0 : g7) ^ v4, 16), g7 = (g7 = G4) + (G4 = h3) | 0, g7 = (i4 = (v4 = j4) + w4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = i4, e4 = g7, i4 = rt(W4 ^ i4, g7 ^ E4, 63), E4 = h3, M4 = y4, g7 = (c4 = s4) + R4 | 0, g7 = (g7 = (w4 = y4 + N5 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + (W4 = n3[I6 + 236 >> 2]) | 0, C4 = rt((w4 = y4 = (s4 = w4) + n3[I6 + 232 >> 2] | 0) ^ q4, (y4 = s4 >>> 0 > y4 >>> 0 ? g7 + 1 | 0 : g7) ^ C4, 32), g7 = x4 + (s4 = h3) | 0, x4 = g7 = m4 >>> 0 > (R4 = m4 + C4 | 0) >>> 0 ? g7 + 1 | 0 : g7, N5 = c4 = rt(M4 ^ (m4 = R4), g7 ^ c4, 24), W4 = g7 = h3, R4 = g7, M4 = C4, g7 = y4 + QA4 | 0, g7 = (g7 = (C4 = O4) >>> 0 > (c4 = C4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + R4 | 0, q4 = y4 = N5 + (C4 = c4) | 0, C4 = rt(M4 ^ y4, (R4 = y4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = x4 + (c4 = h3) | 0, x4 = y4 = m4 + C4 | 0, N5 = rt(y4 ^ N5, (w4 = y4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ W4, 63), y4 = h3, W4 = l4, g7 = F4 + a4 | 0, g7 = (g7 = (m4 = L4) >>> 0 > (l4 = m4 + z4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (s4 = d4) | 0, l4 = rt((d4 = m4 = W4 + (F4 = l4) | 0) ^ K4, (m4 = m4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ S4, 32), g7 = U4 + (F4 = h3) | 0, U4 = rt(W4 ^ (S4 = D4 + l4 | 0), (g7 = D4 >>> 0 > S4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 24), D4 = g7, z4 = n3[I6 + 164 >> 2], K4 = U4, M4 = S4, g7 = m4 + (s4 = h3) | 0, m4 = U4 = d4 + U4 | 0, g7 = (g7 = U4 >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + (W4 = z4) | 0, U4 = F4, F4 = g7 = (d4 = (S4 = n3[I6 + 160 >> 2]) + m4 | 0) >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7, nA4 = rt(d4 ^ l4, U4 ^ g7, 16), g7 = (g7 = D4) + (D4 = h3) | 0, U4 = g7 = (m4 = M4 + (U4 = nA4) | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7, K4 = rt(K4 ^ m4, g7 ^ s4, 63), s4 = h3, l4 = _4, M4 = J4, g7 = _4 + CA4 | 0, g7 = b4 + ((J4 = P4) >>> 0 > (W4 = M4 + J4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, k4 = rt((J4 = _4 = p4 + W4 | 0) ^ aA4, (_4 = _4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = f4 + (p4 = h3) | 0, f4 = g7 = (b4 = Y4 + k4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7, W4 = l4 = rt(M4 ^ (Y4 = b4), g7 ^ l4, 24), aA4 = g7 = h3, b4 = g7, M4 = k4, g7 = _4 + r4 | 0, g7 = (g7 = (l4 = (k4 = rA4) + J4 | 0) >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + b4 | 0, b4 = _4 = W4 + l4 | 0, J4 = rt(M4 ^ _4, (k4 = p4) ^ (p4 = _4 >>> 0 < l4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = f4 + (k4 = h3) | 0, g7 = (_4 = Y4 + J4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7, Y4 = _4, f4 = g7, l4 = rt(_4 ^ W4, g7 ^ aA4, 63), W4 = g7 = h3, _4 = g7, M4 = C4, g7 = H4 + CA4 | 0, H4 = C4 = P4 + $4 | 0, g7 = (g7 = C4 >>> 0 < P4 >>> 0 ? g7 + 1 | 0 : g7) + _4 | 0, c4 = rt(M4 ^ (C4 = P4 = C4 + l4 | 0), (H4 = H4 >>> 0 > C4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 32), g7 = U4 + (_4 = h3) | 0, CA4 = P4 = m4 + c4 | 0, U4 = g7 = m4 >>> 0 > P4 >>> 0 ? g7 + 1 | 0 : g7, M4 = P4 = rt(l4 ^ P4, W4 ^ g7, 24), g7 = (m4 = h3) + H4 | 0, g7 = (g7 = (C4 = C4 + P4 | 0) >>> 0 < P4 >>> 0 ? g7 + 1 | 0 : g7) + AA4 | 0, W4 = rt((l4 = P4 = C4 + Q4 | 0) ^ c4, (C4 = Q4 >>> 0 > l4 >>> 0 ? g7 + 1 | 0 : g7) ^ _4, 16), g7 = (g7 = U4) + (U4 = h3) | 0, CA4 = P4 = (H4 = W4) + CA4 | 0, _4 = rt(M4 ^ P4, (H4 = H4 >>> 0 > P4 >>> 0 ? g7 + 1 | 0 : g7) ^ m4, 63), m4 = h3, P4 = E4, M4 = i4, g7 = E4 + R4 | 0, E4 = Q4 = i4 + q4 | 0, g7 = (g7 = Q4 >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (c4 = n3[I6 + 196 >> 2]) | 0, c4 = rt((Q4 = i4 = Q4 + n3[I6 + 192 >> 2] | 0) ^ nA4, (i4 = Q4 >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7) ^ D4, 32), g7 = f4 + (E4 = h3) | 0, f4 = P4, P4 = g7 = (D4 = Y4 + c4 | 0) >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7, M4 = g7 = rt(M4 ^ D4, f4 ^ g7, 24), Y4 = g7, f4 = g7 + Q4 | 0, g7 = (R4 = h3) + i4 | 0, g7 = z4 + (f4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) | 0, z4 = i4 = f4 + S4 | 0, q4 = rt(i4 ^ c4, (Q4 = E4) ^ (E4 = i4 >>> 0 < S4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = P4 + (Y4 = h3) | 0, g7 = (i4 = D4 + q4 | 0) >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7, D4 = i4, Q4 = R4, R4 = g7, Q4 = rt(M4 ^ i4, Q4 ^ g7, 63), P4 = h3, g7 = QA4 + (i4 = y4) | 0, g7 = F4 + ((f4 = O4) >>> 0 > (S4 = f4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, f4 = y4 = d4 + S4 | 0, S4 = rt(y4 ^ J4, (d4 = y4 >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = e4 + (y4 = h3) | 0, e4 = i4, i4 = g7 = (F4 = v4 + S4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, e4 = k4 = rt(F4 ^ N5, e4 ^ g7, 24), c4 = g7 = h3, k4 = S4, S4 = (g7 = f4) + (f4 = Z4) | 0, g7 = d4 + yA4 | 0, g7 = (g7 = f4 >>> 0 > S4 >>> 0 ? g7 + 1 | 0 : g7) + c4 | 0, v4 = d4 = (f4 = S4) + e4 | 0, J4 = rt(k4 ^ d4, (f4 = d4 >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 16), g7 = i4 + (S4 = h3) | 0, i4 = rt((N5 = d4 = F4 + J4 | 0) ^ e4, (d4 = d4 >>> 0 < F4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 63), y4 = h3, F4 = s4, g7 = s4 + a4 | 0, g7 = p4 + ((e4 = (k4 = L4) + K4 | 0) >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) | 0, g7 = (s4 = b4 + e4 | 0) >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7, b4 = s4, s4 = g7, k4 = rt(b4 ^ j4, g7 ^ G4, 32), g7 = w4 + (G4 = h3) | 0, g7 = (p4 = x4 + k4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, x4 = p4, e4 = F4, F4 = g7, e4 = rt(p4 ^ K4, e4 ^ g7, 24), w4 = g7 = h3, p4 = g7, c4 = k4, k4 = (g7 = b4) + (b4 = rA4) | 0, g7 = s4 + r4 | 0, g7 = (g7 = b4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) + p4 | 0, K4 = s4 = k4 + e4 | 0, k4 = rt(c4 ^ s4, (b4 = G4) ^ (G4 = s4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = F4 + (p4 = h3) | 0, g7 = (s4 = x4 + k4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, x4 = s4, F4 = g7, c4 = rt(s4 ^ e4, g7 ^ w4, 63), s4 = h3, e4 = Q4, w4 = k4, g7 = C4 + sA4 | 0, g7 = (g7 = (Q4 = (k4 = X4) + l4 | 0) >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + (b4 = P4) | 0, k4 = C4 = e4 + Q4 | 0, P4 = g7 = C4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7, Q4 = rt(w4 ^ C4, g7 ^ p4, 32), g7 = (g7 = d4) + (d4 = h3) | 0, C4 = b4, b4 = g7 = Q4 >>> 0 > (p4 = Q4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, g7 = rt(e4 ^ p4, C4 ^ g7, 24), w4 = n3[I6 + 220 >> 2], e4 = g7, N5 = Q4, C4 = k4, k4 = g7, Q4 = C4 + g7 | 0, g7 = (C4 = h3) + P4 | 0, g7 = (g7 = Q4 >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + w4 | 0, N5 = rt(N5 ^ (l4 = P4 = Q4 + n3[I6 + 216 >> 2] | 0), (k4 = Q4 >>> 0 > l4 >>> 0 ? g7 + 1 | 0 : g7) ^ d4, 16), g7 = b4 + (Q4 = h3) | 0, b4 = g7 = p4 >>> 0 > (P4 = p4 + N5 | 0) >>> 0 ? g7 + 1 | 0 : g7, P4 = rt(e4 ^ (p4 = P4), g7 ^ C4, 63), d4 = h3, M4 = i4, g7 = (C4 = y4) + E4 | 0, y4 = e4 = i4 + z4 | 0, g7 = (g7 = e4 >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (w4 = n3[I6 + 204 >> 2]) | 0, U4 = rt((e4 = i4 = e4 + n3[I6 + 200 >> 2] | 0) ^ W4, (i4 = e4 >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) ^ U4, 32), g7 = F4 + (y4 = h3) | 0, x4 = g7 = (E4 = x4 + U4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, w4 = C4 = rt(M4 ^ E4, g7 ^ C4, 24), W4 = g7 = h3, F4 = g7, M4 = U4, g7 = i4 + cA4 | 0, g7 = (g7 = (C4 = (U4 = V4) + e4 | 0) >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) + F4 | 0, z4 = i4 = w4 + C4 | 0, aA4 = rt(M4 ^ i4, (F4 = i4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 16), g7 = x4 + (U4 = h3) | 0, g7 = (i4 = E4 + aA4 | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7, E4 = i4, x4 = g7, i4 = rt(i4 ^ w4, g7 ^ W4, 63), y4 = h3, M4 = c4, g7 = (C4 = s4) + f4 | 0, g7 = (c4 = c4 + v4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = c4, g7 = g7 + (w4 = W4 = n3[I6 + 156 >> 2]) | 0, w4 = rt((c4 = s4 = (e4 = n3[I6 + 152 >> 2]) + c4 | 0) ^ q4, (s4 = c4 >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7) ^ Y4, 32), g7 = (g7 = H4) + (H4 = h3) | 0, Y4 = g7 = (v4 = w4 + CA4 | 0) >>> 0 < w4 >>> 0 ? g7 + 1 | 0 : g7, CA4 = C4 = rt(M4 ^ v4, g7 ^ C4, 24), q4 = g7 = h3, f4 = g7, M4 = C4, g7 = s4 + B4 | 0, g7 = (g7 = (C4 = T4) >>> 0 > (c4 = C4 + c4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + f4 | 0, CA4 = s4 = CA4 + (C4 = c4) | 0, AA4 = rt(s4 ^ w4, (f4 = s4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) ^ H4, 16), g7 = Y4 + (s4 = h3) | 0, g7 = (H4 = v4 + AA4 | 0) >>> 0 < v4 >>> 0 ? g7 + 1 | 0 : g7, v4 = H4, Y4 = g7, w4 = rt(M4 ^ H4, g7 ^ q4, 63), H4 = h3, M4 = _4, g7 = (C4 = m4) + G4 | 0, m4 = c4 = _4 + K4 | 0, g7 = (g7 = c4 >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + (q4 = n3[I6 + 236 >> 2]) | 0, S4 = rt((c4 = _4 = c4 + n3[I6 + 232 >> 2] | 0) ^ J4, (m4 = c4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ S4, 32), g7 = R4 + (G4 = h3) | 0, J4 = _4 = D4 + S4 | 0, _4 = rt(M4 ^ _4, (g7 = _4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) ^ C4, 24), R4 = g7, q4 = n3[I6 + 132 >> 2], K4 = _4, M4 = J4, J4 = S4, g7 = (D4 = h3) + m4 | 0, g7 = (g7 = (C4 = _4 + c4 | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7) + q4 | 0, g7 = (_4 = (S4 = n3[I6 + 128 >> 2]) + C4 | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7, m4 = _4, C4 = G4, G4 = g7, J4 = rt(J4 ^ _4, C4 ^ g7, 16), g7 = (g7 = R4) + (R4 = h3) | 0, g7 = (_4 = M4 + (C4 = J4) | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7, C4 = _4, _4 = D4, D4 = g7, K4 = g7 = rt(K4 ^ C4, _4 ^ g7, 63), c4 = g7, l4 = g7 + l4 | 0, g7 = (_4 = h3) + k4 | 0, g7 = q4 + (c4 >>> 0 > l4 >>> 0 ? g7 + 1 | 0 : g7) | 0, l4 = rt((c4 = k4 = l4 + S4 | 0) ^ aA4, (S4 = S4 >>> 0 > c4 >>> 0 ? g7 + 1 | 0 : g7) ^ U4, 32), g7 = Y4 + (U4 = h3) | 0, g7 = v4 >>> 0 > (k4 = v4 + l4 | 0) >>> 0 ? g7 + 1 | 0 : g7, v4 = k4, k4 = _4, _4 = g7, K4 = k4 = rt(K4 ^ v4, k4 ^ g7, 24), q4 = g7 = h3, Y4 = g7, M4 = k4, g7 = S4 + a4 | 0, g7 = (g7 = (c4 = (k4 = L4) + c4 | 0) >>> 0 < k4 >>> 0 ? g7 + 1 | 0 : g7) + Y4 | 0, K4 = S4 = K4 + c4 | 0, aA4 = rt(S4 ^ l4, (Y4 = S4 >>> 0 < c4 >>> 0 ? g7 + 1 | 0 : g7) ^ U4, 16), g7 = _4 + (S4 = h3) | 0, g7 = v4 >>> 0 > (U4 = v4 + aA4 | 0) >>> 0 ? g7 + 1 | 0 : g7, v4 = U4, U4 = g7, l4 = rt(M4 ^ v4, g7 ^ q4, 63), _4 = h3, k4 = d4, M4 = P4, g7 = d4 + F4 | 0, d4 = c4 = P4 + z4 | 0, g7 = (g7 = c4 >>> 0 < P4 >>> 0 ? g7 + 1 | 0 : g7) + (q4 = n3[I6 + 148 >> 2]) | 0, z4 = rt((c4 = P4 = c4 + n3[I6 + 144 >> 2] | 0) ^ AA4, (P4 = d4 >>> 0 > c4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 32), g7 = D4 + (d4 = h3) | 0, F4 = g7 = (s4 = C4 + z4 | 0) >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7, q4 = g7 = rt(M4 ^ s4, g7 ^ k4, 24), C4 = g7, k4 = g7 + c4 | 0, g7 = (D4 = h3) + P4 | 0, g7 = W4 + (C4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) | 0, W4 = P4 = e4 + k4 | 0, z4 = rt(P4 ^ z4, (C4 = e4 >>> 0 > P4 >>> 0 ? g7 + 1 | 0 : g7) ^ d4, 16), g7 = F4 + (k4 = h3) | 0, d4 = rt(q4 ^ (F4 = P4 = s4 + z4 | 0), (e4 = D4) ^ (D4 = s4 >>> 0 > F4 >>> 0 ? g7 + 1 | 0 : g7), 63), s4 = h3, P4 = y4, q4 = i4, g7 = y4 + f4 | 0, y4 = e4 = i4 + CA4 | 0, g7 = (g7 = e4 >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (c4 = n3[I6 + 164 >> 2]) | 0, c4 = rt((e4 = i4 = e4 + n3[I6 + 160 >> 2] | 0) ^ J4, (i4 = e4 >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) ^ R4, 32), g7 = b4 + (y4 = h3) | 0, b4 = P4, P4 = g7 = p4 >>> 0 > (R4 = p4 + c4 | 0) >>> 0 ? g7 + 1 | 0 : g7, p4 = rt(q4 ^ R4, b4 ^ g7, 24), J4 = g7 = h3, f4 = g7, M4 = p4, g7 = i4 + r4 | 0, g7 = (g7 = (p4 = rA4) >>> 0 > (b4 = p4 + e4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + f4 | 0, CA4 = i4 = M4 + (p4 = b4) | 0, q4 = rt(i4 ^ c4, (f4 = i4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7) ^ y4, 16), g7 = P4 + (p4 = h3) | 0, g7 = (i4 = R4 + q4 | 0) >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7, R4 = i4, b4 = g7, i4 = rt(M4 ^ i4, g7 ^ J4, 63), y4 = h3, P4 = H4, g7 = H4 + yA4 | 0, g7 = G4 + ((e4 = Z4) >>> 0 > (c4 = e4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7) | 0, Q4 = rt((e4 = H4 = m4 + c4 | 0) ^ N5, (H4 = e4 >>> 0 < m4 >>> 0 ? g7 + 1 | 0 : g7) ^ Q4, 32), g7 = x4 + (m4 = h3) | 0, c4 = P4, P4 = g7 = E4 >>> 0 > (G4 = E4 + Q4 | 0) >>> 0 ? g7 + 1 | 0 : g7, c4 = G4 = rt((E4 = G4) ^ w4, c4 ^ g7, 24), w4 = g7 = h3, J4 = Q4, g7 = H4 + QA4 | 0, g7 = (g7 = (Q4 = (G4 = O4) + e4 | 0) >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) + w4 | 0, x4 = H4 = c4 + Q4 | 0, Q4 = rt(J4 ^ H4, (e4 = m4) ^ (m4 = H4 >>> 0 < Q4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = P4 + (G4 = h3) | 0, w4 = rt((e4 = H4 = E4 + Q4 | 0) ^ c4, (H4 = E4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7) ^ w4, 63), P4 = h3, E4 = s4, J4 = d4, N5 = Q4, g7 = s4 + Y4 | 0, g7 = (g7 = (Q4 = d4 + K4 | 0) >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + (c4 = n3[I6 + 196 >> 2]) | 0, Q4 = rt(N5 ^ (Y4 = d4 = Q4 + n3[I6 + 192 >> 2] | 0), (d4 = Q4 >>> 0 > d4 >>> 0 ? g7 + 1 | 0 : g7) ^ G4, 32), g7 = b4 + (s4 = h3) | 0, c4 = E4, E4 = g7 = (G4 = R4 + Q4 | 0) >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7, g7 = rt(J4 ^ G4, c4 ^ g7, 24), J4 = n3[I6 + 204 >> 2], c4 = g7, b4 = Y4, Y4 = g7, b4 = b4 + g7 | 0, g7 = (R4 = h3) + d4 | 0, g7 = (g7 = b4 >>> 0 < Y4 >>> 0 ? g7 + 1 | 0 : g7) + J4 | 0, N5 = d4 = b4 + n3[I6 + 200 >> 2] | 0, K4 = rt(d4 ^ Q4, (Y4 = d4 >>> 0 < b4 >>> 0 ? g7 + 1 | 0 : g7) ^ s4, 16), g7 = E4 + (b4 = h3) | 0, d4 = rt(c4 ^ (E4 = d4 = G4 + K4 | 0), (G4 = E4 >>> 0 < G4 >>> 0 ? g7 + 1 | 0 : g7) ^ R4, 63), s4 = h3, R4 = y4, J4 = i4, M4 = e4, g7 = y4 + C4 | 0, g7 = (g7 = (e4 = i4 + W4 | 0) >>> 0 < i4 >>> 0 ? g7 + 1 | 0 : g7) + (c4 = AA4 = n3[I6 + 212 >> 2]) | 0, e4 = rt((C4 = i4 = (Q4 = n3[I6 + 208 >> 2]) + e4 | 0) ^ aA4, (i4 = i4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ S4, 32), g7 = (g7 = H4) + (H4 = h3) | 0, c4 = R4, R4 = g7 = (y4 = M4 + e4 | 0) >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7, g7 = rt(J4 ^ y4, c4 ^ g7, 24), J4 = n3[I6 + 220 >> 2], M4 = g7, c4 = e4, e4 = C4, C4 = g7, e4 = e4 + g7 | 0, g7 = (S4 = h3) + i4 | 0, g7 = (g7 = e4 >>> 0 < C4 >>> 0 ? g7 + 1 | 0 : g7) + J4 | 0, W4 = i4 = e4 + n3[I6 + 216 >> 2] | 0, e4 = rt(c4 ^ i4, (C4 = i4 >>> 0 < e4 >>> 0 ? g7 + 1 | 0 : g7) ^ H4, 16), g7 = R4 + (c4 = h3) | 0, R4 = H4 = y4 + e4 | 0, H4 = rt(M4 ^ H4, (i4 = S4) ^ (S4 = y4 >>> 0 > H4 >>> 0 ? g7 + 1 | 0 : g7), 63), i4 = h3, M4 = w4, g7 = f4 + B4 | 0, g7 = (g7 = (w4 = T4) >>> 0 > (J4 = w4 + CA4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + (y4 = P4) | 0, J4 = rt((P4 = f4 = M4 + (w4 = J4) | 0) ^ z4, (f4 = f4 >>> 0 < w4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = U4 + (k4 = h3) | 0, g7 = v4 >>> 0 > (w4 = v4 + J4 | 0) >>> 0 ? g7 + 1 | 0 : g7, v4 = w4, w4 = y4, y4 = g7, w4 = rt(M4 ^ v4, w4 ^ g7, 24), U4 = g7 = h3, M4 = w4, g7 = f4 + g7 | 0, g7 = (g7 = (w4 = w4 + P4 | 0) >>> 0 < P4 >>> 0 ? g7 + 1 | 0 : g7) + (z4 = n3[I6 + 236 >> 2]) | 0, CA4 = P4 = (f4 = w4) + n3[I6 + 232 >> 2] | 0, z4 = rt(P4 ^ J4, (f4 = f4 >>> 0 > P4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 16), g7 = y4 + (k4 = h3) | 0, J4 = rt(M4 ^ (y4 = P4 = v4 + z4 | 0), (v4 = v4 >>> 0 > y4 >>> 0 ? g7 + 1 | 0 : g7) ^ U4, 63), P4 = h3, U4 = _4, M4 = l4, g7 = _4 + cA4 | 0, g7 = m4 + ((l4 = (w4 = V4) + l4 | 0) >>> 0 < w4 >>> 0 ? g7 + 1 | 0 : g7) | 0, p4 = rt((w4 = _4 = x4 + l4 | 0) ^ q4, (_4 = _4 >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7) ^ p4, 32), g7 = D4 + (m4 = h3) | 0, F4 = g7 = F4 >>> 0 > (x4 = F4 + p4 | 0) >>> 0 ? g7 + 1 | 0 : g7, l4 = U4 = rt(M4 ^ x4, g7 ^ U4, 24), q4 = g7 = h3, D4 = g7, M4 = p4, g7 = _4 + sA4 | 0, g7 = (g7 = (p4 = X4) >>> 0 > (U4 = p4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7) + D4 | 0, D4 = _4 = l4 + (p4 = U4) | 0, w4 = rt(M4 ^ _4, (w4 = m4) ^ (m4 = _4 >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = F4 + (p4 = h3) | 0, g7 = (_4 = x4 + w4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, x4 = _4, F4 = g7, U4 = rt(_4 ^ l4, g7 ^ q4, 63), l4 = g7 = h3, _4 = g7, q4 = e4, g7 = Y4 + cA4 | 0, Y4 = e4 = N5 + V4 | 0, g7 = (g7 = e4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7) + _4 | 0, c4 = rt(q4 ^ (e4 = V4 = e4 + U4 | 0), (V4 = Y4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7) ^ c4, 32), g7 = v4 + (_4 = h3) | 0, v4 = g7 = y4 >>> 0 > (Y4 = y4 + c4 | 0) >>> 0 ? g7 + 1 | 0 : g7, N5 = g7 = rt(U4 ^ (y4 = Y4), l4 ^ g7, 24), U4 = g7, e4 = g7 + e4 | 0, g7 = (Y4 = h3) + V4 | 0, g7 = AA4 + (e4 >>> 0 < U4 >>> 0 ? g7 + 1 | 0 : g7) | 0, l4 = rt((l4 = c4) ^ (c4 = V4 = e4 + Q4 | 0), (U4 = Q4 >>> 0 > c4 >>> 0 ? g7 + 1 | 0 : g7) ^ _4, 16), g7 = v4 + (Q4 = h3) | 0, y4 = rt(N5 ^ (v4 = V4 = y4 + l4 | 0), (e4 = Y4) ^ (Y4 = y4 >>> 0 > v4 >>> 0 ? g7 + 1 | 0 : g7), 63), _4 = h3, V4 = s4, q4 = d4, g7 = s4 + C4 | 0, s4 = e4 = d4 + W4 | 0, g7 = (g7 = e4 >>> 0 < d4 >>> 0 ? g7 + 1 | 0 : g7) + (N5 = n3[I6 + 164 >> 2]) | 0, k4 = rt((e4 = d4 = e4 + n3[I6 + 160 >> 2] | 0) ^ z4, (d4 = s4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7) ^ k4, 32), g7 = F4 + (s4 = h3) | 0, g7 = (C4 = x4 + k4 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, x4 = C4, F4 = V4, V4 = g7, g7 = rt(q4 ^ C4, F4 ^ g7, 24), W4 = n3[I6 + 196 >> 2], q4 = g7, N5 = k4, C4 = g7, k4 = g7 + e4 | 0, g7 = (F4 = h3) + d4 | 0, g7 = (g7 = C4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7) + W4 | 0, N5 = rt(N5 ^ (e4 = d4 = (C4 = k4) + n3[I6 + 192 >> 2] | 0), (k4 = s4) ^ (s4 = C4 >>> 0 > e4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = V4 + (W4 = h3) | 0, g7 = (d4 = x4 + N5 | 0) >>> 0 < x4 >>> 0 ? g7 + 1 | 0 : g7, x4 = d4, C4 = F4, F4 = g7, C4 = rt(q4 ^ d4, C4 ^ g7, 63), V4 = h3, d4 = i4, q4 = H4, g7 = i4 + f4 | 0, g7 = (g7 = (k4 = H4 + CA4 | 0) >>> 0 < H4 >>> 0 ? g7 + 1 | 0 : g7) + (cA4 = n3[I6 + 204 >> 2]) | 0, p4 = rt((k4 = H4 = (i4 = k4) + n3[I6 + 200 >> 2] | 0) ^ w4, (H4 = i4 >>> 0 > H4 >>> 0 ? g7 + 1 | 0 : g7) ^ p4, 32), g7 = G4 + (i4 = h3) | 0, g7 = E4 >>> 0 > (f4 = E4 + p4 | 0) >>> 0 ? g7 + 1 | 0 : g7, E4 = f4, f4 = d4, d4 = g7, w4 = f4 = rt(q4 ^ E4, f4 ^ g7, 24), cA4 = g7 = h3, G4 = g7, q4 = f4, g7 = H4 + sA4 | 0, g7 = (g7 = (f4 = k4 + X4 | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7) + G4 | 0, w4 = rt((k4 = X4 = w4 + f4 | 0) ^ p4, (w4 = i4) ^ (i4 = f4 >>> 0 > k4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = d4 + (G4 = h3) | 0, f4 = g7 = E4 >>> 0 > (X4 = E4 + w4 | 0) >>> 0 ? g7 + 1 | 0 : g7, X4 = rt(q4 ^ (E4 = X4), g7 ^ cA4, 63), H4 = h3, g7 = m4 + (d4 = P4) | 0, m4 = p4 = D4 + J4 | 0, g7 = (g7 = p4 >>> 0 < D4 >>> 0 ? g7 + 1 | 0 : g7) + (cA4 = n3[I6 + 236 >> 2]) | 0, b4 = rt((p4 = P4 = p4 + n3[I6 + 232 >> 2] | 0) ^ K4, (P4 = m4 >>> 0 > p4 >>> 0 ? g7 + 1 | 0 : g7) ^ b4, 32), g7 = S4 + (m4 = h3) | 0, S4 = d4, d4 = g7 = (D4 = R4 + b4 | 0) >>> 0 < R4 >>> 0 ? g7 + 1 | 0 : g7, S4 = rt(D4 ^ J4, S4 ^ g7, 24), K4 = g7 = h3, R4 = g7, g7 = P4 + yA4 | 0, g7 = (g7 = (p4 = p4 + Z4 | 0) >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7) + R4 | 0, J4 = rt((R4 = Z4 = p4 + S4 | 0) ^ b4, (J4 = m4) ^ (m4 = p4 >>> 0 > R4 >>> 0 ? g7 + 1 | 0 : g7), 16), g7 = d4 + (yA4 = h3) | 0, p4 = g7 = D4 >>> 0 > (Z4 = D4 + J4 | 0) >>> 0 ? g7 + 1 | 0 : g7, P4 = rt(S4 ^ (D4 = Z4), g7 ^ K4, 63), d4 = h3, g7 = U4 + a4 | 0, g7 = (g7 = (S4 = c4 + L4 | 0) >>> 0 < L4 >>> 0 ? g7 + 1 | 0 : g7) + (b4 = V4) | 0, g7 = S4 >>> 0 > (L4 = S4 + C4 | 0) >>> 0 ? g7 + 1 | 0 : g7, S4 = L4, L4 = g7, g7 = B4 + g7 | 0, T4 = g7 = (b4 = T4 + S4 | 0) >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, c4 = b4, b4 = rt(S4 ^ J4, L4 ^ yA4, 32), g7 = f4 + (S4 = h3) | 0, U4 = rt((f4 = L4 = E4 + b4 | 0) ^ C4, (L4 = E4 >>> 0 > f4 >>> 0 ? g7 + 1 | 0 : g7) ^ V4, 24), g7 = (C4 = h3) + T4 | 0, g7 = (E4 = U4) >>> 0 > (V4 = c4 + E4 | 0) >>> 0 ? g7 + 1 | 0 : g7, E4 = V4, n3[I6 >> 2] = E4, n3[I6 + 4 >> 2] = g7, Z4 = g7, g7 = rt(E4 ^ b4, g7 ^ S4, 16), b4 = V4 = h3, n3[I6 + 120 >> 2] = g7, n3[I6 + 124 >> 2] = b4, T4 = g7, f4 = g7 + f4 | 0, g7 = b4 + L4 | 0, n3[I6 + 80 >> 2] = f4, g7 = f4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 84 >> 2] = g7, uA4 = I6, fA4 = rt(U4 ^ f4, g7 ^ C4, 63), n3[uA4 + 40 >> 2] = fA4, n3[I6 + 44 >> 2] = h3, L4 = H4, C4 = X4, g7 = s4 + H4 | 0, g7 = (g7 = (T4 = e4 + X4 | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7) + (f4 = n3[I6 + 132 >> 2]) | 0, T4 = g7 = (X4 = T4 + n3[I6 + 128 >> 2] | 0) >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, s4 = rt(X4 ^ l4, g7 ^ Q4, 32), g7 = p4 + (f4 = h3) | 0, e4 = L4, L4 = g7 = D4 >>> 0 > (H4 = D4 + s4 | 0) >>> 0 ? g7 + 1 | 0 : g7, p4 = rt(C4 ^ (D4 = H4), e4 ^ g7, 24), g7 = T4 + (b4 = h3) | 0, g7 = (H4 = p4 + X4 | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, X4 = (T4 = n3[I6 + 144 >> 2]) + H4 | 0, g7 = n3[I6 + 148 >> 2] + g7 | 0, g7 = X4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 8 >> 2] = X4, n3[I6 + 12 >> 2] = g7, g7 = rt(s4 ^ X4, g7 ^ f4, 16), H4 = V4 = h3, n3[I6 + 96 >> 2] = g7, n3[I6 + 100 >> 2] = H4, X4 = g7, T4 = g7 + D4 | 0, g7 = H4 + L4 | 0, L4 = T4, n3[I6 + 88 >> 2] = L4, g7 = X4 >>> 0 > L4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 92 >> 2] = g7, uA4 = I6, fA4 = rt(p4 ^ L4, g7 ^ b4, 63), n3[uA4 + 48 >> 2] = fA4, n3[I6 + 52 >> 2] = h3, e4 = O4, g7 = i4 + d4 | 0, g7 = (g7 = (X4 = k4 + P4 | 0) >>> 0 < P4 >>> 0 ? g7 + 1 | 0 : g7) + (T4 = n3[I6 + 220 >> 2]) | 0, g7 = (V4 = X4 + n3[I6 + 216 >> 2] | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, O4 = V4, T4 = V4, X4 = e4 + V4 | 0, V4 = g7, g7 = g7 + QA4 | 0, g7 = X4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, T4 = X4, X4 = g7, e4 = T4, C4 = P4, T4 = rt(N5 ^ O4, V4 ^ W4, 32), g7 = Y4 + (P4 = h3) | 0, d4 = rt(C4 ^ (H4 = V4 = v4 + T4 | 0), (V4 = v4 >>> 0 > H4 >>> 0 ? g7 + 1 | 0 : g7) ^ d4, 24), g7 = (s4 = h3) + X4 | 0, X4 = O4 = e4 + (i4 = d4) | 0, n3[I6 + 16 >> 2] = X4, g7 = i4 >>> 0 > X4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 20 >> 2] = g7, g7 = rt(X4 ^ T4, g7 ^ P4, 16), L4 = h3, n3[I6 + 104 >> 2] = g7, n3[I6 + 108 >> 2] = L4, X4 = g7, O4 = g7 + H4 | 0, g7 = V4 + L4 | 0, V4 = O4, n3[I6 + 64 >> 2] = V4, g7 = X4 >>> 0 > V4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 68 >> 2] = g7, uA4 = I6, fA4 = rt(i4 ^ V4, g7 ^ s4, 63), n3[uA4 + 56 >> 2] = fA4, n3[I6 + 60 >> 2] = h3, g7 = _4 + r4 | 0, g7 = (g7 = (X4 = y4 + rA4 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7) + m4 | 0, rA4 = g7 = R4 >>> 0 > (X4 = R4 + X4 | 0) >>> 0 ? g7 + 1 | 0 : g7, P4 = rt(X4 ^ w4, g7 ^ G4, 32), g7 = F4 + (H4 = h3) | 0, L4 = g7 = x4 >>> 0 > (O4 = x4 + P4 | 0) >>> 0 ? g7 + 1 | 0 : g7, d4 = rt(O4 ^ y4, _4 ^ g7, 24), g7 = rA4 + (i4 = h3) | 0, g7 = X4 >>> 0 > (T4 = d4 + X4 | 0) >>> 0 ? g7 + 1 | 0 : g7, X4 = (rA4 = n3[I6 + 152 >> 2]) + T4 | 0, g7 = n3[I6 + 156 >> 2] + g7 | 0, g7 = X4 >>> 0 < rA4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 24 >> 2] = X4, n3[I6 + 28 >> 2] = g7, g7 = rt(P4 ^ X4, g7 ^ H4, 16), n3[I6 + 112 >> 2] = g7, rA4 = h3, n3[I6 + 116 >> 2] = rA4, X4 = g7 + O4 | 0, g7 = L4 + rA4 | 0, L4 = X4, n3[I6 + 72 >> 2] = L4, g7 = L4 >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7, n3[I6 + 76 >> 2] = g7, uA4 = I6, fA4 = rt(d4 ^ L4, g7 ^ i4, 63), n3[uA4 + 32 >> 2] = fA4, n3[I6 + 36 >> 2] = h3, g7 = n3[I6 + 68 >> 2] ^ (o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24) ^ Z4, L4 = n3[I6 + 64 >> 2] ^ (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) ^ E4, t3[0 | A8] = L4, t3[A8 + 1 | 0] = L4 >>> 8, t3[A8 + 2 | 0] = L4 >>> 16, t3[A8 + 3 | 0] = L4 >>> 24, t3[A8 + 4 | 0] = g7, t3[A8 + 5 | 0] = g7 >>> 8, t3[A8 + 6 | 0] = g7 >>> 16, t3[A8 + 7 | 0] = g7 >>> 24, Z4 = 1; g7 = (L4 = Z4 << 3) + A8 | 0, V4 = L4 = I6 + L4 | 0, X4 = n3[L4 >> 2] ^ (o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24), rA4 = n3[(L4 = L4 - -64 | 0) >> 2], L4 = n3[L4 + 4 >> 2] ^ n3[V4 + 4 >> 2] ^ (o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24), V4 = X4 ^ rA4, t3[0 | g7] = V4, t3[g7 + 1 | 0] = V4 >>> 8, t3[g7 + 2 | 0] = V4 >>> 16, t3[g7 + 3 | 0] = V4 >>> 24, t3[g7 + 4 | 0] = L4, t3[g7 + 5 | 0] = L4 >>> 8, t3[g7 + 6 | 0] = L4 >>> 16, t3[g7 + 7 | 0] = L4 >>> 24, (0 | (Z4 = Z4 + 1 | 0)) != 8; )
                        ;
                      u3 = I6 + 256 | 0;
                    }
                    function D3(A8, g7, I6) {
                      var a4, r4, B4, n4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4, w4, D4, m4, G4, k4, F4, b4, H4, d4, S4, v4, U4, J4, Y4, x4, N5, M4, R4, P4, q4, L4, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0, BA4 = 0, nA4 = 0, oA4 = 0, eA4 = 0, QA4 = 0, CA4 = 0, cA4 = 0, iA4 = 0, _A4 = 0, sA4 = 0, yA4 = 0, EA4 = 0, pA4 = 0, uA4 = 0, fA4 = 0, lA4 = 0, hA4 = 0, wA4 = 0, DA4 = 0, mA4 = 0, GA4 = 0, kA4 = 0, FA4 = 0, bA4 = 0, HA4 = 0, dA4 = 0, SA4 = 0, vA4 = 0, UA3 = 0, JA3 = 0, YA2 = 0, xA2 = 0, NA2 = 0, MA2 = 0, RA2 = 0, PA2 = 0, qA2 = 0, LA2 = 0, KA2 = 0;
                      nA4 = _a(g7), V4 = o3[g7 + 2 | 0] | o3[g7 + 3 | 0] << 8 | o3[g7 + 4 | 0] << 16 | o3[g7 + 5 | 0] << 24, QA4 = _a(g7 + 5 | 0), z4 = h3, Z4 = o3[g7 + 7 | 0] | o3[g7 + 8 | 0] << 8 | o3[g7 + 9 | 0] << 16 | o3[g7 + 10 | 0] << 24, j4 = o3[g7 + 10 | 0] | o3[g7 + 11 | 0] << 8 | o3[g7 + 12 | 0] << 16 | o3[g7 + 13 | 0] << 24, wA4 = _a(g7 + 13 | 0), T4 = h3, O4 = o3[g7 + 15 | 0] | o3[g7 + 16 | 0] << 8 | o3[g7 + 17 | 0] << 16 | o3[g7 + 18 | 0] << 24, DA4 = _a(g7 + 18 | 0), rA4 = h3, iA4 = _a(g7 + 21 | 0), X4 = o3[g7 + 23 | 0] | o3[g7 + 24 | 0] << 8 | o3[g7 + 25 | 0] << 16 | o3[g7 + 26 | 0] << 24, pA4 = _a(g7 + 26 | 0), K4 = h3, W4 = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24, uA4 = _a(I6), IA4 = o3[I6 + 2 | 0] | o3[I6 + 3 | 0] << 8 | o3[I6 + 4 | 0] << 16 | o3[I6 + 5 | 0] << 24, fA4 = _a(I6 + 5 | 0), $4 = h3, gA4 = o3[I6 + 7 | 0] | o3[I6 + 8 | 0] << 8 | o3[I6 + 9 | 0] << 16 | o3[I6 + 10 | 0] << 24, tA4 = o3[I6 + 10 | 0] | o3[I6 + 11 | 0] << 8 | o3[I6 + 12 | 0] << 16 | o3[I6 + 13 | 0] << 24, oA4 = _a(I6 + 13 | 0), BA4 = h3, lA4 = o3[I6 + 15 | 0] | o3[I6 + 16 | 0] << 8 | o3[I6 + 17 | 0] << 16 | o3[I6 + 18 | 0] << 24, CA4 = _a(I6 + 18 | 0), _A4 = h3, sA4 = _a(I6 + 21 | 0), aA4 = o3[I6 + 23 | 0] | o3[I6 + 24 | 0] << 8 | o3[I6 + 25 | 0] << 16 | o3[I6 + 26 | 0] << 24, eA4 = _a(I6 + 26 | 0), AA4 = h3, g7 = Wr(a4 = (o3[I6 + 28 | 0] | o3[I6 + 29 | 0] << 8 | o3[I6 + 30 | 0] << 16 | o3[I6 + 31 | 0] << 24) >>> 7 | 0, 0, r4 = 2097151 & ((3 & (g7 = K4)) << 30 | pA4 >>> 2), 0), K4 = h3, yA4 = g7, I6 = Wr(B4 = 2097151 & ((3 & (g7 = AA4)) << 30 | (AA4 = eA4) >>> 2), AA4 = 0, n4 = W4 >>> 7 | 0, 0), K4 = h3 + K4 | 0, K4 = (g7 = yA4 + I6 | 0) >>> 0 < I6 >>> 0 ? K4 + 1 | 0 : K4, pA4 = g7, g7 = Wr(r4, 0, B4, AA4), W4 = h3, I6 = (aA4 = Wr(e4 = aA4 >>> 5 & 2097151, 0, n4, 0)) + g7 | 0, g7 = h3 + W4 | 0, g7 = I6 >>> 0 < aA4 >>> 0 ? g7 + 1 | 0 : g7, X4 = Wr(a4, 0, Q4 = X4 >>> 5 & 2097151, 0), g7 = h3 + g7 | 0, g7 = (I6 = X4 + I6 | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, X4 = I6, eA4 = g7, W4 = I6 - -1048576 | 0, cA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = pA4, pA4 = (2097151 & g7) << 11 | W4 >>> 21, g7 = (g7 >> 21) + K4 | 0, yA4 = K4 = (g7 = (I6 = aA4 = I6 + pA4 | 0) >>> 0 < pA4 >>> 0 ? g7 + 1 | 0 : g7) - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, aA4 = g7, YA2 = Wr(d4 = I6 - (g7 = -2097152 & (bA4 = I6 - -1048576 | 0)) | 0, pA4 = aA4 - ((g7 >>> 0 > I6 >>> 0) + K4 | 0) | 0, 666643, 0), xA2 = h3, g7 = Wr(C4 = IA4 >>> 5 & 2097151, 0, c4 = 2097151 & iA4, 0), I6 = h3, IA4 = Wr(i4 = 2097151 & uA4, 0, Q4, 0), K4 = h3 + I6 | 0, K4 = (g7 = IA4 + g7 | 0) >>> 0 < IA4 >>> 0 ? K4 + 1 | 0 : K4, I6 = g7, rA4 = Wr(_4 = 2097151 & ((3 & (g7 = $4)) << 30 | fA4 >>> 2), aA4 = 0, s4 = 2097151 & ((7 & (g7 = rA4)) << 29 | DA4 >>> 3), 0), g7 = h3 + K4 | 0, g7 = (I6 = I6 + rA4 | 0) >>> 0 < rA4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (O4 = Wr(y4 = gA4 >>> 7 & 2097151, 0, E4 = O4 >>> 6 & 2097151, 0)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < O4 >>> 0 ? I6 + 1 | 0 : I6, O4 = K4, K4 = Wr(p4 = tA4 >>> 4 & 2097151, 0, u4 = 2097151 & ((1 & (g7 = T4)) << 31 | wA4 >>> 1), 0), I6 = h3 + I6 | 0, I6 = (g7 = O4 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (K4 = g7) + (j4 = Wr(f4 = 2097151 & ((1 & (g7 = BA4)) << 31 | oA4 >>> 1), tA4 = 0, l4 = j4 >>> 4 & 2097151, 0)) | 0, g7 = h3 + I6 | 0, I6 = (Z4 = Wr(w4 = lA4 >>> 6 & 2097151, 0, D4 = Z4 >>> 7 & 2097151, 0)) + K4 | 0, K4 = h3 + (K4 >>> 0 < j4 >>> 0 ? g7 + 1 | 0 : g7) | 0, K4 = I6 >>> 0 < Z4 >>> 0 ? K4 + 1 | 0 : K4, g7 = I6, H4 = I6 = 0, I6 = (V4 = Wr(m4 = 2097151 & sA4, I6, G4 = V4 >>> 5 & 2097151, 0)) + g7 | 0, g7 = h3 + K4 | 0, K4 = I6, I6 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, Z4 = K4, K4 = Wr(k4 = 2097151 & ((7 & (g7 = _A4)) << 29 | CA4 >>> 3), BA4 = 0, F4 = 2097151 & ((3 & (g7 = z4)) << 30 | QA4 >>> 2), 0), I6 = h3 + I6 | 0, I6 = (g7 = Z4 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (V4 = Wr(e4, 0, b4 = 2097151 & nA4, 0)) + g7 | 0, g7 = h3 + I6 | 0, O4 = K4, Z4 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(s4, 0, C4, 0), I6 = h3, V4 = Wr(c4, 0, i4, 0), K4 = h3 + I6 | 0, K4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, V4 = Wr(E4, 0, _4, aA4), I6 = h3 + K4 | 0, I6 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(y4, 0, u4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (V4 = Wr(p4, 0, l4, 0)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, I6 = K4, K4 = Wr(f4, tA4, D4, 0), g7 = h3 + g7 | 0, g7 = (I6 = I6 + K4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, V4 = Wr(F4, 0, w4, 0), K4 = h3 + g7 | 0, K4 = (I6 = V4 + I6 | 0) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, g7 = (V4 = Wr(G4, 0, k4, BA4)) + I6 | 0, I6 = h3 + K4 | 0, I6 = g7 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(b4, 0, m4, H4), I6 = h3 + I6 | 0, V4 = g7 = K4 + g7 | 0, j4 = I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, z4 = (I6 = g7) - -1048576 | 0, T4 = g7 = j4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = O4, O4 = (2097151 & g7) << 11 | z4 >>> 21, g7 = (g7 >>> 21 | 0) + Z4 | 0, I6 = K4 = I6 + O4 | 0, K4 = (g7 = K4 >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7) + xA2 | 0, K4 = (Z4 = I6 + YA2 | 0) >>> 0 < I6 >>> 0 ? K4 + 1 | 0 : K4, O4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, nA4 = Z4 - (I6 = -2097152 & (mA4 = I6 - -1048576 | 0)) | 0, QA4 = K4 - ((I6 >>> 0 > Z4 >>> 0) + g7 | 0) | 0, lA4 = X4 - (g7 = -2097152 & W4) | 0, _A4 = eA4 - ((g7 >>> 0 > X4 >>> 0) + cA4 | 0) | 0, g7 = Wr(r4, 0, e4, 0), I6 = h3, X4 = Wr(n4, 0, m4, H4), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(B4, AA4, Q4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(a4, 0, c4, 0), g7 = h3 + g7 | 0, $4 = I6 = K4 + I6 | 0, W4 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(n4, 0, k4, BA4), I6 = h3, K4 = Wr(r4, 0, m4, H4), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(Q4, 0, e4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(B4, AA4, c4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(a4, 0, s4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, X4 = I6, rA4 = g7, Z4 = I6 - -1048576 | 0, IA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, K4 = g7 >> 21, g7 = (I6 = $4) + ($4 = (2097151 & g7) << 11 | Z4 >>> 21) | 0, I6 = K4 + W4 | 0, W4 = g7, $4 = I6 = g7 >>> 0 < $4 >>> 0 ? I6 + 1 | 0 : I6, I6 = g7, gA4 = g7 = $4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, eA4 = (2097151 & g7) << 11 | (I6 = I6 - -1048576 | 0) >>> 21, g7 = (g7 >> 21) + _A4 | 0, S4 = lA4 = eA4 + lA4 | 0, lA4 = g7 = eA4 >>> 0 > lA4 >>> 0 ? g7 + 1 | 0 : g7, v4 = W4 - (K4 = -2097152 & I6) | 0, _A4 = I6 = $4 - ((K4 >>> 0 > W4 >>> 0) + gA4 | 0) | 0, W4 = Wr(S4, g7, 470296, 0), g7 = h3 + QA4 | 0, g7 = (K4 = W4 + nA4 | 0) >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7, W4 = Wr(v4, I6, 654183, 0), I6 = h3 + g7 | 0, gA4 = K4 = W4 + K4 | 0, $4 = K4 >>> 0 < W4 >>> 0 ? I6 + 1 | 0 : I6, Z4 = X4 - (g7 = -2097152 & Z4) | 0, IA4 = rA4 - ((g7 >>> 0 > X4 >>> 0) + IA4 | 0) | 0, g7 = Wr(Q4, 0, m4, H4), K4 = h3, I6 = (X4 = Wr(n4, 0, w4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (X4 = Wr(r4, 0, k4, BA4)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(c4, 0, e4, 0), I6 = h3 + I6 | 0, I6 = (g7 = g7 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(B4, AA4, s4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(a4, 0, E4, 0)) + g7 | 0, g7 = h3 + K4 | 0, eA4 = I6, W4 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(r4, 0, w4, 0), K4 = h3, I6 = (X4 = Wr(n4, 0, f4, tA4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (X4 = Wr(c4, 0, m4, H4)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(Q4, 0, k4, BA4), I6 = h3 + I6 | 0, I6 = (g7 = g7 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(s4, 0, e4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(B4, AA4, E4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(a4, 0, u4, 0), g7 = h3 + g7 | 0, X4 = I6 = K4 + I6 | 0, rA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, nA4 = (g7 = I6) - -1048576 | 0, fA4 = I6 = rA4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = eA4, eA4 = (2097151 & I6) << 11 | nA4 >>> 21, I6 = (I6 >> 21) + W4 | 0, W4 = K4 = g7 + eA4 | 0, oA4 = I6 = K4 >>> 0 < eA4 >>> 0 ? I6 + 1 | 0 : I6, QA4 = (g7 = K4) - -1048576 | 0, CA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = (g7 = I6 >> 21) + IA4 | 0, Y4 = I6 = (K4 = (2097151 & I6) << 11 | QA4 >>> 21) + Z4 | 0, eA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(I6, g7, -997805, -1), I6 = h3 + $4 | 0, gA4 = g7 = K4 + gA4 | 0, $4 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, Z4 = V4 - (g7 = -2097152 & z4) | 0, j4 = j4 - ((g7 >>> 0 > V4 >>> 0) + T4 | 0) | 0, g7 = Wr(E4, 0, C4, 0), I6 = h3, V4 = Wr(s4, 0, i4, 0), K4 = h3 + I6 | 0, K4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (V4 = Wr(_4, aA4, u4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (V4 = Wr(y4, 0, l4, 0)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, V4 = Wr(p4, 0, D4, 0), g7 = h3 + I6 | 0, g7 = (K4 = V4 + K4 | 0) >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = Wr(f4, tA4, F4, 0), I6 = h3 + g7 | 0, I6 = (K4 = V4 + K4 | 0) >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (V4 = Wr(G4, 0, w4, 0)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (V4 = Wr(b4, 0, k4, BA4)) + g7 | 0, g7 = h3 + K4 | 0, T4 = I6, z4 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(C4, 0, u4, 0), I6 = h3, K4 = Wr(E4, 0, i4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (V4 = Wr(_4, aA4, l4, 0)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = Wr(y4, 0, D4, 0), I6 = h3 + g7 | 0, I6 = (K4 = V4 + K4 | 0) >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (V4 = Wr(p4, 0, F4, 0)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (V4 = Wr(f4, tA4, G4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (V4 = Wr(b4, 0, w4, 0)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, V4 = K4, IA4 = I6, wA4 = (g7 = K4) - -1048576 | 0, sA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = T4, T4 = (2097151 & I6) << 11 | wA4 >>> 21, I6 = (I6 >>> 21 | 0) + z4 | 0, z4 = K4 = g7 + T4 | 0, YA2 = I6 = K4 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, DA4 = (g7 = K4) - -1048576 | 0, xA2 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = Z4, Z4 = (2097151 & I6) << 11 | DA4 >>> 21, I6 = (I6 >>> 21 | 0) + j4 | 0, I6 = (K4 = g7 + Z4 | 0) >>> 0 < Z4 >>> 0 ? I6 + 1 | 0 : I6, Z4 = Wr(S4, lA4, 666643, 0), g7 = h3 + I6 | 0, g7 = (K4 = Z4 + K4 | 0) >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, Z4 = Wr(v4, _A4, 470296, 0), I6 = h3 + g7 | 0, I6 = (K4 = Z4 + K4 | 0) >>> 0 < Z4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (Z4 = Wr(Y4, eA4, 654183, 0)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < Z4 >>> 0 ? K4 + 1 | 0 : K4, Z4 = g7, RA2 = K4, iA4 = (I6 = g7) - -1048576 | 0, qA2 = g7 = K4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = (I6 = g7 >> 21) + $4 | 0, j4 = g7 = (K4 = (2097151 & g7) << 11 | iA4 >>> 21) + gA4 | 0, EA4 = I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, I6 = g7, kA4 = g7 = EA4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, FA4 = (2097151 & g7) << 11 | (uA4 = I6 - -1048576 | 0) >>> 21, HA4 = g7 >> 21, g7 = Wr(Q4, 0, C4, 0), I6 = h3, T4 = Wr(r4, 0, i4, 0), K4 = h3 + I6 | 0, K4 = (g7 = T4 + g7 | 0) >>> 0 < T4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (T4 = Wr(c4, 0, _4, aA4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (T4 = Wr(s4, 0, y4, 0)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, T4 = Wr(E4, 0, p4, 0), g7 = h3 + I6 | 0, g7 = (K4 = T4 + K4 | 0) >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, T4 = Wr(u4, 0, f4, tA4), I6 = h3 + g7 | 0, I6 = (K4 = T4 + K4 | 0) >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (T4 = Wr(l4, 0, w4, 0)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < T4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (T4 = Wr(F4, 0, m4, H4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (T4 = Wr(D4, 0, k4, BA4)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, T4 = Wr(e4, 0, G4, 0), g7 = h3 + I6 | 0, g7 = (K4 = T4 + K4 | 0) >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, T4 = Wr(B4, AA4, b4, 0), I6 = h3 + g7 | 0, I6 = (K4 = T4 + K4 | 0) >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, T4 = K4, gA4 = I6, dA4 = Wr(d4, pA4, 470296, 0), SA4 = h3, g7 = Wr(a4, 0, n4, 0), $4 = I6 = (cA4 = h3) - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, NA2 = g7 - (K4 = -2097152 & (vA4 = g7 - -1048576 | 0)) | 0, I6 = (I6 = cA4 - ((g7 >>> 0 < K4 >>> 0) + I6 | 0) | 0) + (K4 = (g7 = yA4) >> 21) | 0, x4 = g7 = (cA4 = (2097151 & g7) << 11 | bA4 >>> 21) + NA2 | 0, cA4 = I6 = g7 >>> 0 < cA4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(g7, I6, 666643, 0), I6 = h3 + SA4 | 0, I6 = (g7 = K4 + dA4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, yA4 = g7, K4 = g7 + T4 | 0, g7 = I6 + gA4 | 0, R4 = (I6 = T4) - -1048576 | 0, gA4 = T4 = gA4 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = (g7 = K4 >>> 0 < yA4 >>> 0 ? g7 + 1 | 0 : g7) + (I6 = O4 >> 21) | 0, g7 = (K4 = (O4 = (2097151 & O4) << 11 | mA4 >>> 21) + K4 | 0) >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7, I6 = (O4 = Wr(S4, lA4, 654183, 0)) + K4 | 0, K4 = h3 + g7 | 0, K4 = I6 >>> 0 < O4 >>> 0 ? K4 + 1 | 0 : K4, g7 = (O4 = Wr(v4, _A4, -997805, -1)) + I6 | 0, I6 = h3 + K4 | 0, I6 = g7 >>> 0 < O4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (yA4 = Wr(Y4, eA4, 136657, 0)) + (g7 - (O4 = -2097152 & R4) | 0) | 0, g7 = h3 + (I6 - ((g7 >>> 0 < O4 >>> 0) + T4 | 0) | 0) | 0, hA4 = K4, T4 = K4, I6 = HA4, HA4 = g7 = K4 >>> 0 < yA4 >>> 0 ? g7 + 1 | 0 : g7, I6 = I6 + g7 | 0, FA4 = K4 = K4 + FA4 | 0, GA4 = K4 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, dA4 = W4 - (g7 = -2097152 & QA4) | 0, SA4 = oA4 - ((g7 >>> 0 > W4 >>> 0) + CA4 | 0) | 0, U4 = (2097151 & $4) << 11 | vA4 >>> 21, $4 = I6 = $4 >> 21, I6 = Wr(U4, I6, -683901, -1), K4 = h3 + rA4 | 0, K4 = (g7 = I6 + X4 | 0) >>> 0 < I6 >>> 0 ? K4 + 1 | 0 : K4, W4 = g7 - (I6 = -2097152 & nA4) | 0, rA4 = K4 - ((g7 >>> 0 < I6 >>> 0) + fA4 | 0) | 0, g7 = Wr(r4, 0, f4, tA4), I6 = h3, K4 = Wr(n4, 0, p4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(Q4, 0, w4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(s4, 0, m4, H4), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(c4, 0, k4, BA4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(e4, 0, E4, 0), g7 = h3 + g7 | 0, g7 = (I6 = K4 + I6 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (X4 = Wr(B4, AA4, u4, 0)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(a4, 0, l4, 0), I6 = h3 + I6 | 0, nA4 = g7 = g7 + K4 | 0, X4 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, g7 = Wr(r4, 0, p4, 0), I6 = h3, T4 = Wr(n4, 0, y4, 0), K4 = h3 + I6 | 0, K4 = (g7 = T4 + g7 | 0) >>> 0 < T4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (T4 = Wr(Q4, 0, f4, tA4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(c4, 0, w4, 0), g7 = h3 + g7 | 0, g7 = (I6 = K4 + I6 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (T4 = Wr(E4, 0, m4, H4)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(s4, 0, k4, BA4), I6 = h3 + I6 | 0, I6 = (g7 = g7 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, T4 = Wr(e4, 0, u4, 0), K4 = h3 + I6 | 0, K4 = (g7 = T4 + g7 | 0) >>> 0 < T4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (T4 = Wr(B4, AA4, l4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(a4, 0, D4, 0), g7 = h3 + g7 | 0, T4 = I6 = K4 + I6 | 0, fA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, O4 = (g7 = I6) - -1048576 | 0, oA4 = I6 = fA4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = nA4, nA4 = (2097151 & I6) << 11 | O4 >>> 21, I6 = (I6 >> 21) + X4 | 0, X4 = K4 = g7 + nA4 | 0, CA4 = I6 = K4 >>> 0 < nA4 >>> 0 ? I6 + 1 | 0 : I6, QA4 = (g7 = K4) - -1048576 | 0, bA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = (g7 = I6 >> 21) + rA4 | 0, W4 = I6 = (K4 = (2097151 & I6) << 11 | QA4 >>> 21) + W4 | 0, vA4 = I6 = (mA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7) - (((g7 = I6) >>> 0 < 4293918720) - 1 | 0) | 0, rA4 = (2097151 & I6) << 11 | (yA4 = g7 - -1048576 | 0) >>> 21, I6 = (I6 >> 21) + SA4 | 0, N5 = K4 = rA4 + dA4 | 0, nA4 = I6 = K4 >>> 0 < rA4 >>> 0 ? I6 + 1 | 0 : I6, P4 = hA4 - -1048576 | 0, rA4 = g7 = HA4 - ((hA4 >>> 0 < 4293918720) - 1 | 0) | 0, HA4 = Wr(K4, I6, -683901, -1), K4 = h3 + GA4 | 0, HA4 = I6 = (K4 = (K4 = (I6 = HA4 + FA4 | 0) >>> 0 < HA4 >>> 0 ? K4 + 1 | 0 : K4) - (rA4 + ((g7 = -2097152 & P4) >>> 0 > I6 >>> 0) | 0) | 0) - (((g7 = I6 - g7 | 0) >>> 0 < 4293918720) - 1 | 0) | 0, UA3 = g7 - (hA4 = -2097152 & (q4 = g7 - -1048576 | 0)) | 0, LA2 = K4 - ((g7 >>> 0 < hA4 >>> 0) + I6 | 0) | 0, g7 = (K4 = Wr(N5, nA4, 136657, 0)) + (j4 - (I6 = -2097152 & uA4) | 0) | 0, I6 = h3 + (EA4 - ((I6 >>> 0 > j4 >>> 0) + kA4 | 0) | 0) | 0, SA4 = g7, EA4 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, NA2 = W4 - (g7 = -2097152 & yA4) | 0, PA2 = mA4 - ((g7 >>> 0 > W4 >>> 0) + vA4 | 0) | 0, g7 = Wr(x4, cA4, -683901, -1), I6 = h3, W4 = Wr(U4, $4, 136657, 0), K4 = h3 + I6 | 0, I6 = (g7 = W4 + g7 | 0) + X4 | 0, g7 = CA4 + (g7 >>> 0 < W4 >>> 0 ? K4 + 1 | 0 : K4) | 0, QA4 = I6 - (K4 = -2097152 & QA4) | 0, CA4 = (g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7) - ((I6 >>> 0 < K4 >>> 0) + bA4 | 0) | 0, K4 = Wr(U4, $4, -997805, -1), g7 = h3 + fA4 | 0, g7 = (I6 = K4 + T4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, X4 = Wr(x4, cA4, 136657, 0), K4 = h3 + g7 | 0, K4 = (I6 = X4 + I6 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, X4 = Wr(d4, pA4, -683901, -1), g7 = h3 + K4 | 0, j4 = (I6 = X4 + I6 | 0) - (K4 = -2097152 & O4) | 0, T4 = (g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7) - ((I6 >>> 0 < K4 >>> 0) + oA4 | 0) | 0, g7 = Wr(r4, 0, y4, 0), I6 = h3, K4 = Wr(n4, 0, _4, aA4), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(Q4, 0, p4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(c4, 0, f4, tA4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(s4, 0, w4, 0), g7 = h3 + g7 | 0, g7 = (I6 = K4 + I6 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (X4 = Wr(u4, 0, m4, H4)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(E4, 0, k4, BA4), I6 = h3 + I6 | 0, I6 = (g7 = g7 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(e4, 0, l4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(B4, AA4, D4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(a4, 0, F4, 0), g7 = h3 + g7 | 0, O4 = I6 = K4 + I6 | 0, W4 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(r4, 0, _4, aA4), I6 = h3, K4 = Wr(n4, 0, C4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(Q4, 0, y4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(c4, 0, p4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(s4, 0, f4, tA4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(E4, 0, w4, 0), g7 = h3 + g7 | 0, g7 = (I6 = K4 + I6 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (X4 = Wr(l4, 0, m4, H4)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(u4, 0, k4, BA4), I6 = h3 + I6 | 0, I6 = (g7 = g7 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(e4, 0, D4, 0), K4 = h3 + I6 | 0, K4 = (g7 = X4 + g7 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (X4 = Wr(B4, AA4, F4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(a4, 0, G4, 0), g7 = h3 + g7 | 0, X4 = I6 = K4 + I6 | 0, kA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, uA4 = (g7 = I6) - -1048576 | 0, hA4 = I6 = kA4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = O4, O4 = (2097151 & I6) << 11 | uA4 >>> 21, I6 = (I6 >> 21) + W4 | 0, W4 = K4 = g7 + O4 | 0, GA4 = I6 = K4 >>> 0 < O4 >>> 0 ? I6 + 1 | 0 : I6, yA4 = (g7 = K4) - -1048576 | 0, bA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = (g7 = I6 >> 21) + T4 | 0, j4 = I6 = (K4 = (2097151 & I6) << 11 | yA4 >>> 21) + j4 | 0, vA4 = I6 = (mA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7) - (((g7 = I6) >>> 0 < 4293918720) - 1 | 0) | 0, T4 = (2097151 & I6) << 11 | (fA4 = g7 - -1048576 | 0) >>> 21, I6 = (I6 >> 21) + CA4 | 0, I6 = (K4 = T4 + QA4 | 0) >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, T4 = K4, FA4 = I6, oA4 = (g7 = K4) - -1048576 | 0, dA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = (g7 = I6 >> 21) + PA2 | 0, M4 = I6 = (K4 = (2097151 & I6) << 11 | oA4 >>> 21) + NA2 | 0, QA4 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(I6, g7, -683901, -1), I6 = h3 + EA4 | 0, MA2 = g7 = K4 + SA4 | 0, EA4 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, JA3 = Z4 - (g7 = -2097152 & iA4) | 0, KA2 = RA2 - ((g7 >>> 0 > Z4 >>> 0) + qA2 | 0) | 0, I6 = (K4 = Wr(v4, _A4, 666643, 0)) + (z4 - (g7 = -2097152 & DA4) | 0) | 0, g7 = h3 + (YA2 - ((g7 >>> 0 > z4 >>> 0) + xA2 | 0) | 0) | 0, g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(Y4, eA4, 470296, 0), g7 = h3 + g7 | 0, CA4 = I6 = K4 + I6 | 0, O4 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, Z4 = V4, g7 = Wr(C4, 0, l4, 0), I6 = h3, K4 = Wr(i4, 0, u4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(_4, aA4, D4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, V4 = Wr(y4, 0, F4, 0), K4 = h3 + I6 | 0, K4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (V4 = Wr(p4, 0, G4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(f4, tA4, b4, 0), g7 = h3 + g7 | 0, iA4 = I6 = K4 + I6 | 0, z4 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(C4, 0, D4, 0), I6 = h3, K4 = Wr(i4, 0, l4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(_4, aA4, F4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, V4 = Wr(y4, 0, G4, 0), K4 = h3 + I6 | 0, K4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (V4 = Wr(p4, 0, b4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = I6, YA2 = g7, DA4 = I6 - -1048576 | 0, xA2 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, K4 = g7 >>> 21 | 0, g7 = (I6 = iA4) + (iA4 = (2097151 & g7) << 11 | DA4 >>> 21) | 0, I6 = K4 + z4 | 0, z4 = g7, RA2 = I6 = g7 >>> 0 < iA4 >>> 0 ? I6 + 1 | 0 : I6, iA4 = (I6 = g7) - -1048576 | 0, qA2 = g7 = RA2 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = Z4, Z4 = (2097151 & g7) << 11 | iA4 >>> 21, g7 = (g7 >>> 21 | 0) + IA4 | 0, g7 = (I6 = I6 + Z4 | 0) >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (IA4 = Wr(Y4, eA4, 666643, 0)) + (I6 - (Z4 = -2097152 & wA4) | 0) | 0, I6 = h3 + (g7 - ((I6 >>> 0 < Z4 >>> 0) + sA4 | 0) | 0) | 0, Z4 = K4, SA4 = I6 = K4 >>> 0 < IA4 >>> 0 ? I6 + 1 | 0 : I6, wA4 = (g7 = K4) - -1048576 | 0, NA2 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = (g7 = I6 >> 21) + O4 | 0, O4 = I6 = (K4 = (2097151 & I6) << 11 | wA4 >>> 21) + CA4 | 0, PA2 = g7 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, CA4 = (g7 = I6) - -1048576 | 0, L4 = I6 = PA2 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, J4 = (g7 = T4) - (K4 = -2097152 & oA4) | 0, IA4 = T4 = FA4 - ((g7 >>> 0 < K4 >>> 0) + dA4 | 0) | 0, oA4 = (2097151 & I6) << 11 | CA4 >>> 21, I6 = (I6 >> 21) + KA2 | 0, I6 = (K4 = oA4 + JA3 | 0) >>> 0 < oA4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (oA4 = Wr(N5, nA4, -997805, -1)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < oA4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (oA4 = Wr(M4, QA4, 136657, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < oA4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(J4, T4, -683901, -1), g7 = h3 + g7 | 0, g7 = (I6 = K4 + I6 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = I6, FA4 = g7, dA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, sA4 = (2097151 & g7) << 11 | (oA4 = I6 - -1048576 | 0) >>> 21, g7 = (g7 >> 21) + EA4 | 0, EA4 = g7 = (T4 = sA4 + MA2 | 0) >>> 0 < sA4 >>> 0 ? g7 + 1 | 0 : g7, MA2 = g7 = g7 - (((I6 = T4) >>> 0 < 4293918720) - 1 | 0) | 0, JA3 = (2097151 & g7) << 11 | (sA4 = I6 - -1048576 | 0) >>> 21, g7 = (g7 >> 21) + LA2 | 0, LA2 = UA3 = JA3 + UA3 | 0, UA3 = UA3 >>> 0 < JA3 >>> 0 ? g7 + 1 | 0 : g7, JA3 = I6 - (g7 = -2097152 & sA4) | 0, MA2 = EA4 - ((g7 >>> 0 > I6 >>> 0) + MA2 | 0) | 0, KA2 = K4 - (g7 = -2097152 & oA4) | 0, FA4 = FA4 - ((g7 >>> 0 > K4 >>> 0) + dA4 | 0) | 0, g7 = (K4 = Wr(N5, nA4, 654183, 0)) + (O4 - (I6 = -2097152 & CA4) | 0) | 0, I6 = h3 + (PA2 - ((I6 >>> 0 > O4 >>> 0) + L4 | 0) | 0) | 0, I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (T4 = Wr(M4, QA4, -997805, -1)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, I6 = K4, K4 = Wr(J4, IA4, 136657, 0), g7 = h3 + g7 | 0, CA4 = I6 = I6 + K4 | 0, O4 = I6 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, T4 = j4 - (g7 = -2097152 & fA4) | 0, sA4 = mA4 - ((g7 >>> 0 > j4 >>> 0) + vA4 | 0) | 0, g7 = Wr(x4, cA4, -997805, -1), I6 = h3, K4 = Wr(U4, $4, 654183, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (j4 = Wr(d4, pA4, 136657, 0)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < j4 >>> 0 ? g7 + 1 | 0 : g7, I6 = K4, K4 = Wr(S4, lA4, -683901, -1), g7 = h3 + g7 | 0, g7 = (I6 = I6 + K4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = I6 + W4 | 0, I6 = g7 + GA4 | 0, I6 = K4 >>> 0 < W4 >>> 0 ? I6 + 1 | 0 : I6, j4 = (g7 = K4) - (K4 = -2097152 & yA4) | 0, EA4 = I6 - ((g7 >>> 0 < K4 >>> 0) + bA4 | 0) | 0, g7 = Wr(x4, cA4, 654183, 0), I6 = h3, K4 = Wr(U4, $4, 470296, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (W4 = Wr(d4, pA4, -997805, -1)) + g7 | 0, g7 = h3 + I6 | 0, I6 = (g7 = K4 >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7) + kA4 | 0, I6 = (K4 = K4 + X4 | 0) >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, X4 = Wr(S4, lA4, 136657, 0), g7 = h3 + I6 | 0, g7 = (K4 = X4 + K4 | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, I6 = (X4 = Wr(v4, _A4, -683901, -1)) + K4 | 0, K4 = h3 + g7 | 0, K4 = I6 >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, W4 = (g7 = I6) - (I6 = -2097152 & uA4) | 0, fA4 = K4 - ((g7 >>> 0 < I6 >>> 0) + hA4 | 0) | 0, g7 = Wr(r4, 0, C4, 0), K4 = h3, I6 = (X4 = Wr(n4, 0, i4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(Q4, 0, _4, aA4), g7 = h3 + g7 | 0, g7 = (I6 = K4 + I6 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, X4 = Wr(c4, 0, y4, 0), K4 = h3 + g7 | 0, K4 = (I6 = X4 + I6 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, g7 = (X4 = Wr(s4, 0, p4, 0)) + I6 | 0, I6 = h3 + K4 | 0, I6 = g7 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(E4, 0, f4, tA4), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (X4 = Wr(u4, 0, w4, 0)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, I6 = K4, K4 = Wr(D4, 0, m4, H4), g7 = h3 + g7 | 0, g7 = (I6 = I6 + K4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, X4 = Wr(l4, 0, k4, BA4), K4 = h3 + g7 | 0, K4 = (I6 = X4 + I6 | 0) >>> 0 < X4 >>> 0 ? K4 + 1 | 0 : K4, g7 = (X4 = Wr(e4, 0, F4, 0)) + I6 | 0, I6 = h3 + K4 | 0, I6 = g7 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(B4, AA4, G4, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (X4 = Wr(a4, 0, b4, 0)) + g7 | 0, g7 = h3 + I6 | 0, g7 = (gA4 >> 21) + (g7 = K4 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7) | 0, g7 = (K4 = (X4 = (2097151 & gA4) << 11 | R4 >>> 21) + K4 | 0) >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, X4 = K4, uA4 = g7, gA4 = (I6 = K4) - -1048576 | 0, yA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = (I6 = g7 >> 21) + fA4 | 0, W4 = g7 = (K4 = (2097151 & g7) << 11 | gA4 >>> 21) + W4 | 0, fA4 = I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, AA4 = (I6 = g7) - -1048576 | 0, oA4 = g7 = fA4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = j4, j4 = (2097151 & g7) << 11 | AA4 >>> 21, g7 = (g7 >> 21) + EA4 | 0, tA4 = g7 = (K4 = I6 + j4 | 0) >>> 0 < j4 >>> 0 ? g7 + 1 | 0 : g7, j4 = (I6 = K4) - -1048576 | 0, BA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = (I6 = g7 >> 21) + sA4 | 0, hA4 = g7 = (hA4 = T4) + (T4 = (2097151 & g7) << 11 | j4 >>> 21) | 0, T4 = I6 = g7 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, EA4 = CA4, CA4 = Wr(g7, I6, -683901, -1), g7 = h3 + O4 | 0, EA4 = I6 = EA4 + CA4 | 0, CA4 = I6 >>> 0 < CA4 >>> 0 ? g7 + 1 | 0 : g7, GA4 = K4 - (g7 = -2097152 & j4) | 0, O4 = j4 = tA4 - ((g7 >>> 0 > K4 >>> 0) + BA4 | 0) | 0, tA4 = Wr(N5, nA4, 470296, 0), K4 = h3 + (SA4 - (((I6 = -2097152 & wA4) >>> 0 > Z4 >>> 0) + NA2 | 0) | 0) | 0, K4 = (g7 = tA4 + (Z4 - I6 | 0) | 0) >>> 0 < tA4 >>> 0 ? K4 + 1 | 0 : K4, Z4 = Wr(M4, QA4, 654183, 0), I6 = h3 + K4 | 0, I6 = (g7 = Z4 + g7 | 0) >>> 0 < Z4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (Z4 = Wr(J4, IA4, -997805, -1)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, Z4 = Wr(hA4, T4, 136657, 0), I6 = h3 + g7 | 0, I6 = (K4 = Z4 + K4 | 0) >>> 0 < Z4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (Z4 = Wr(GA4, j4, -683901, -1)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < Z4 >>> 0 ? K4 + 1 | 0 : K4, Z4 = g7, wA4 = K4, sA4 = I6 = K4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, j4 = (2097151 & I6) << 11 | (tA4 = g7 - -1048576 | 0) >>> 21, I6 = (I6 >> 21) + CA4 | 0, I6 = (K4 = j4 + EA4 | 0) >>> 0 < j4 >>> 0 ? I6 + 1 | 0 : I6, j4 = K4, CA4 = I6, BA4 = (g7 = K4) - -1048576 | 0, EA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, K4 = (g7 = I6 >> 21) + FA4 | 0, bA4 = I6 = (kA4 = (2097151 & I6) << 11 | BA4 >>> 21) + KA2 | 0, kA4 = I6 >>> 0 < kA4 >>> 0 ? K4 + 1 | 0 : K4, mA4 = j4 - (g7 = -2097152 & BA4) | 0, CA4 = CA4 - ((g7 >>> 0 > j4 >>> 0) + EA4 | 0) | 0, EA4 = Z4 - (g7 = -2097152 & tA4) | 0, sA4 = wA4 - ((g7 >>> 0 > Z4 >>> 0) + sA4 | 0) | 0, g7 = (K4 = Wr(N5, nA4, 666643, 0)) + (z4 - (I6 = -2097152 & iA4) | 0) | 0, I6 = h3 + (RA2 - ((I6 >>> 0 > z4 >>> 0) + qA2 | 0) | 0) | 0, I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, z4 = Wr(M4, QA4, 470296, 0), K4 = h3 + I6 | 0, K4 = (g7 = z4 + g7 | 0) >>> 0 < z4 >>> 0 ? K4 + 1 | 0 : K4, z4 = Wr(J4, IA4, 654183, 0), I6 = h3 + K4 | 0, Z4 = g7 = z4 + g7 | 0, z4 = g7 >>> 0 < z4 >>> 0 ? I6 + 1 | 0 : I6, j4 = W4 - (g7 = -2097152 & AA4) | 0, W4 = fA4 - ((g7 >>> 0 > W4 >>> 0) + oA4 | 0) | 0, g7 = Wr(x4, cA4, 470296, 0), K4 = h3, I6 = ($4 = Wr(U4, $4, 666643, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < $4 >>> 0 ? g7 + 1 | 0 : g7, $4 = Wr(d4, pA4, 654183, 0), K4 = h3 + g7 | 0, K4 = (I6 = $4 + I6 | 0) >>> 0 < $4 >>> 0 ? K4 + 1 | 0 : K4, g7 = ($4 = Wr(S4, lA4, -997805, -1)) + I6 | 0, I6 = h3 + K4 | 0, I6 = g7 >>> 0 < $4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(v4, _A4, 136657, 0), I6 = h3 + I6 | 0, I6 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = g7 + X4 | 0, g7 = I6 + uA4 | 0, g7 = K4 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, I6 = K4, K4 = Wr(Y4, eA4, -683901, -1), g7 = h3 + g7 | 0, g7 = (I6 = I6 + K4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, X4 = I6 - (K4 = -2097152 & gA4) | 0, I6 = (rA4 >> 21) + (I6 = g7 - ((I6 >>> 0 < K4 >>> 0) + yA4 | 0) | 0) | 0, I6 = (K4 = (g7 = X4) + (X4 = (2097151 & rA4) << 11 | P4 >>> 21) | 0) >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, X4 = K4, pA4 = I6, $4 = (g7 = K4) - -1048576 | 0, lA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = j4, j4 = (2097151 & I6) << 11 | $4 >>> 21, I6 = (I6 >> 21) + W4 | 0, iA4 = K4 = g7 + j4 | 0, rA4 = I6 = K4 >>> 0 < j4 >>> 0 ? I6 + 1 | 0 : I6, I6 = Wr(K4, I6, -683901, -1), K4 = h3 + z4 | 0, K4 = (g7 = I6 + Z4 | 0) >>> 0 < I6 >>> 0 ? K4 + 1 | 0 : K4, W4 = Wr(hA4, T4, -997805, -1), I6 = h3 + K4 | 0, I6 = (g7 = W4 + g7 | 0) >>> 0 < W4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (W4 = Wr(GA4, O4, 136657, 0)) + g7 | 0, g7 = h3 + I6 | 0, BA4 = K4, j4 = K4 >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(C4, 0, F4, 0), K4 = h3, I6 = (W4 = Wr(i4, 0, D4, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (W4 = Wr(_4, aA4, G4, 0)) + I6 | 0, I6 = h3 + g7 | 0, I6 = K4 >>> 0 < W4 >>> 0 ? I6 + 1 | 0 : I6, g7 = (W4 = Wr(y4, 0, b4, 0)) + K4 | 0, K4 = h3 + I6 | 0, K4 = g7 >>> 0 < W4 >>> 0 ? K4 + 1 | 0 : K4, z4 = g7, g7 = Wr(C4, 0, G4, 0), I6 = h3, W4 = Wr(i4, 0, F4, 0), I6 = h3 + I6 | 0, I6 = (g7 = W4 + g7 | 0) >>> 0 < W4 >>> 0 ? I6 + 1 | 0 : I6, W4 = (Z4 = Wr(_4, aA4, b4, 0)) + g7 | 0, g7 = h3 + I6 | 0, Z4 = g7 = W4 >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, gA4 = (I6 = W4) - -1048576 | 0, _A4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = (I6 = g7 >>> 21 | 0) + K4 | 0, I6 = (g7 = (eA4 = z4) + (z4 = (2097151 & g7) << 11 | gA4 >>> 21) | 0) >>> 0 < z4 >>> 0 ? I6 + 1 | 0 : I6, z4 = g7, eA4 = I6, I6 = g7, cA4 = g7 = eA4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, K4 = V4 + ((2097151 & g7) << 11 | (AA4 = I6 - -1048576 | 0) >>> 21) | 0, g7 = YA2 + (g7 >>> 21 | 0) | 0, g7 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (aA4 = Wr(M4, QA4, 666643, 0)) + ((I6 = K4) - (V4 = -2097152 & DA4) | 0) | 0, I6 = h3 + (g7 - ((I6 >>> 0 < V4 >>> 0) + xA2 | 0) | 0) | 0, I6 = K4 >>> 0 < aA4 >>> 0 ? I6 + 1 | 0 : I6, g7 = K4, K4 = Wr(J4, IA4, 470296, 0), I6 = h3 + I6 | 0, I6 = (g7 = g7 + K4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (V4 = Wr(iA4, rA4, 136657, 0)) + g7 | 0, g7 = h3 + I6 | 0, g7 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, I6 = (V4 = Wr(hA4, T4, 654183, 0)) + K4 | 0, K4 = h3 + g7 | 0, K4 = I6 >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, V4 = Wr(GA4, O4, -997805, -1), g7 = h3 + K4 | 0, aA4 = I6 = V4 + I6 | 0, nA4 = g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, tA4 = I6 - -1048576 | 0, QA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = (K4 = g7 >> 21) + j4 | 0, I6 = (g7 = (V4 = (2097151 & g7) << 11 | tA4 >>> 21) + BA4 | 0) >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, V4 = g7, j4 = I6, I6 = g7, wA4 = g7 = j4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, DA4 = (2097151 & g7) << 11 | (BA4 = I6 - -1048576 | 0) >>> 21, g7 = (g7 >> 21) + sA4 | 0, yA4 = I6 = DA4 + EA4 | 0, DA4 = I6 >>> 0 < DA4 >>> 0 ? g7 + 1 | 0 : g7, K4 = j4, j4 = pA4 - (((g7 = -2097152 & $4) >>> 0 > X4 >>> 0) + lA4 | 0) | 0, X4 = I6 = X4 - g7 | 0, $4 = (2097151 & (I6 = HA4)) << 11 | q4 >>> 21, I6 = (g7 = I6 >> 21) + j4 | 0, pA4 = I6 = (X4 = X4 + $4 | 0) >>> 0 < $4 >>> 0 ? I6 + 1 | 0 : I6, lA4 = I6 = I6 - (((g7 = X4) >>> 0 < 4293918720) - 1 | 0) | 0, uA4 = (2097151 & I6) << 11 | ($4 = g7 - -1048576 | 0) >>> 21, j4 = g7 = I6 >> 21, I6 = V4, V4 = Wr(uA4, g7, -683901, -1), g7 = h3 + K4 | 0, fA4 = (I6 = I6 + V4 | 0) - (K4 = -2097152 & BA4) | 0, wA4 = (g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7) - ((I6 >>> 0 < K4 >>> 0) + wA4 | 0) | 0, K4 = Wr(uA4, j4, 136657, 0), I6 = h3 + nA4 | 0, I6 = (g7 = K4 + aA4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, nA4 = g7 - (K4 = -2097152 & tA4) | 0, QA4 = I6 - ((g7 >>> 0 < K4 >>> 0) + QA4 | 0) | 0, g7 = (K4 = Wr(J4, IA4, 666643, 0)) + (z4 - (I6 = -2097152 & AA4) | 0) | 0, I6 = h3 + (eA4 - ((I6 >>> 0 > z4 >>> 0) + cA4 | 0) | 0) | 0, I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, V4 = Wr(iA4, rA4, -997805, -1), K4 = h3 + I6 | 0, K4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4, I6 = (V4 = Wr(hA4, T4, 470296, 0)) + g7 | 0, g7 = h3 + K4 | 0, g7 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (V4 = Wr(GA4, O4, 654183, 0)) + I6 | 0, I6 = h3 + g7 | 0, cA4 = K4, IA4 = K4 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, AA4 = W4, aA4 = Z4, g7 = Wr(C4, 0, b4, 0), K4 = h3, I6 = (V4 = Wr(i4, 0, G4, 0)) + g7 | 0, g7 = h3 + K4 | 0, W4 = I6, K4 = I6 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = Wr(i4, 0, b4, 0), oA4 = g7 = h3, z4 = (I6 = V4) - -1048576 | 0, tA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, K4 = (I6 = g7 >>> 21 | 0) + K4 | 0, K4 = (g7 = (Z4 = W4) + (W4 = (2097151 & g7) << 11 | z4 >>> 21) | 0) >>> 0 < W4 >>> 0 ? K4 + 1 | 0 : K4, W4 = g7, BA4 = K4, Z4 = (I6 = g7) - -1048576 | 0, eA4 = g7 = K4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = AA4, AA4 = (2097151 & g7) << 11 | Z4 >>> 21, g7 = (g7 >>> 21 | 0) + aA4 | 0, g7 = (K4 = I6 + AA4 | 0) >>> 0 < AA4 >>> 0 ? g7 + 1 | 0 : g7, I6 = (AA4 = Wr(iA4, rA4, 654183, 0)) + (K4 - (gA4 &= -2097152) | 0) | 0, K4 = h3 + (g7 - ((8191 & _A4) + (K4 >>> 0 < gA4 >>> 0) | 0) | 0) | 0, g7 = (T4 = Wr(hA4, T4, 666643, 0)) + I6 | 0, I6 = h3 + (I6 >>> 0 < AA4 >>> 0 ? K4 + 1 | 0 : K4) | 0, I6 = g7 >>> 0 < T4 >>> 0 ? I6 + 1 | 0 : I6, K4 = (T4 = Wr(GA4, O4, 470296, 0)) + g7 | 0, g7 = h3 + I6 | 0, AA4 = g7 = K4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, T4 = (I6 = K4) - -1048576 | 0, aA4 = g7 = g7 - ((I6 >>> 0 < 4293918720) - 1 | 0) | 0, I6 = (I6 = g7 >> 21) + IA4 | 0, _A4 = I6 = (g7 = (gA4 = (2097151 & g7) << 11 | T4 >>> 21) + cA4 | 0) >>> 0 < gA4 >>> 0 ? I6 + 1 | 0 : I6, I6 = g7, cA4 = g7 = _A4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, sA4 = (2097151 & g7) << 11 | (gA4 = I6 - -1048576 | 0) >>> 21, g7 = (g7 >> 21) + QA4 | 0, QA4 = nA4 = sA4 + nA4 | 0, nA4 = nA4 >>> 0 < sA4 >>> 0 ? g7 + 1 | 0 : g7, IA4 = Wr(uA4, j4, -997805, -1), g7 = h3 + _A4 | 0, g7 = (I6 = I6 + IA4 | 0) >>> 0 < IA4 >>> 0 ? g7 + 1 | 0 : g7, _A4 = I6 - (IA4 = -2097152 & gA4) | 0, cA4 = g7 - ((I6 >>> 0 < IA4 >>> 0) + cA4 | 0) | 0, g7 = (I6 = Wr(uA4, j4, 654183, 0)) + K4 | 0, K4 = h3 + AA4 | 0, K4 = g7 >>> 0 < I6 >>> 0 ? K4 + 1 | 0 : K4, gA4 = g7 - (I6 = -2097152 & T4) | 0, AA4 = K4 - ((g7 >>> 0 < I6 >>> 0) + aA4 | 0) | 0, g7 = (K4 = Wr(iA4, rA4, 470296, 0)) + (W4 - (I6 = -2097152 & Z4) | 0) | 0, I6 = h3 + (BA4 - ((8191 & eA4) + (I6 >>> 0 > W4 >>> 0) | 0) | 0) | 0, I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Wr(GA4, O4, 666643, 0), I6 = h3 + I6 | 0, IA4 = g7 = K4 + g7 | 0, Z4 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, W4 = Wr(iA4, rA4, 666643, 0), K4 = h3 + (oA4 - ((2047 & tA4) + ((I6 = -2097152 & z4) >>> 0 > V4 >>> 0) | 0) | 0) | 0, V4 = g7 = W4 + (V4 - I6 | 0) | 0, T4 = K4 = g7 >>> 0 < W4 >>> 0 ? K4 + 1 | 0 : K4, O4 = I6 = K4 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, z4 = (2097151 & I6) << 11 | (W4 = g7 - -1048576 | 0) >>> 21, I6 = (I6 >> 21) + Z4 | 0, I6 = (K4 = z4 + IA4 | 0) >>> 0 < z4 >>> 0 ? I6 + 1 | 0 : I6, z4 = K4, rA4 = I6, Z4 = (g7 = K4) - -1048576 | 0, IA4 = I6 = I6 - ((g7 >>> 0 < 4293918720) - 1 | 0) | 0, g7 = I6 >> 21, I6 = (K4 = gA4) + (gA4 = (2097151 & I6) << 11 | Z4 >>> 21) | 0, K4 = g7 + AA4 | 0, AA4 = I6, gA4 = I6 >>> 0 < gA4 >>> 0 ? K4 + 1 | 0 : K4, K4 = Wr(uA4, j4, 470296, 0), I6 = h3 + rA4 | 0, I6 = (g7 = K4 + z4 | 0) >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6, z4 = g7 - (K4 = -2097152 & Z4) | 0, Z4 = I6 - ((g7 >>> 0 < K4 >>> 0) + IA4 | 0) | 0, I6 = -2097152 & W4, W4 = Wr(uA4, j4, 666643, 0), K4 = h3 + (T4 - ((I6 >>> 0 > V4 >>> 0) + O4 | 0) | 0) | 0, K4 = (g7 = (V4 - I6 | 0) + W4 | 0) >>> 0 < W4 >>> 0 ? K4 + 1 | 0 : K4, W4 = g7, V4 = (2097151 & K4) << 11 | g7 >>> 21, g7 = (I6 = K4 >> 21) + Z4 | 0, z4 = K4 = V4 + z4 | 0, V4 = (2097151 & (g7 = (I6 = K4) >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7)) << 11 | I6 >>> 21, I6 = (K4 = g7 >> 21) + gA4 | 0, O4 = g7 = V4 + AA4 | 0, K4 = g7, g7 = (g7 = (I6 = g7 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6) >> 21) + cA4 | 0, g7 = (I6 = (K4 = (2097151 & I6) << 11 | K4 >>> 21) + _A4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, rA4 = I6, K4 = I6, I6 = (I6 = g7 >> 21) + nA4 | 0;
                      IA4 = g7 = (K4 = (2097151 & g7) << 11 | K4 >>> 21) + QA4 | 0, V4 = (2097151 & (I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6)) << 11 | (K4 = g7) >>> 21, K4 = (g7 = I6 >> 21) + wA4 | 0, gA4 = I6 = V4 + fA4 | 0, V4 = (2097151 & (K4 = (g7 = I6) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4)) << 11 | g7 >>> 21, g7 = (I6 = K4 >> 21) + DA4 | 0, AA4 = K4 = V4 + yA4 | 0, V4 = (2097151 & (g7 = (I6 = K4) >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7)) << 11 | I6 >>> 21, I6 = (K4 = g7 >> 21) + CA4 | 0, aA4 = g7 = V4 + mA4 | 0, K4 = g7, g7 = (g7 = (I6 = g7 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6) >> 21) + kA4 | 0, g7 = (I6 = (K4 = (2097151 & I6) << 11 | K4 >>> 21) + bA4 | 0) >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, tA4 = I6, K4 = I6, I6 = (I6 = g7 >> 21) + MA2 | 0, BA4 = g7 = (K4 = (2097151 & g7) << 11 | K4 >>> 21) + JA3 | 0, V4 = (2097151 & (I6 = g7 >>> 0 < K4 >>> 0 ? I6 + 1 | 0 : I6)) << 11 | (K4 = g7) >>> 21, K4 = (g7 = I6 >> 21) + UA3 | 0, _A4 = I6 = V4 + LA2 | 0, I6 = (K4 = (g7 = I6) >>> 0 < V4 >>> 0 ? K4 + 1 | 0 : K4) >> 21, g7 = (2097151 & K4) << 11 | g7 >>> 21, I6 = (pA4 - (((K4 = -2097152 & $4) >>> 0 > X4 >>> 0) + lA4 | 0) | 0) + I6 | 0, $4 = g7 = g7 + (V4 = X4 - K4 | 0) | 0, T4 = (2097151 & (I6 = g7 >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6)) << 11 | g7 >>> 21, V4 = g7 = I6 >> 21, I6 = 2097151 & W4, g7 = Wr(T4, g7, 666643, 0) + I6 | 0, K4 = h3, W4 = g7, X4 = K4 = g7 >>> 0 < I6 >>> 0 ? K4 + 1 | 0 : K4, t3[0 | A8] = g7, t3[A8 + 1 | 0] = (255 & K4) << 24 | g7 >>> 8, z4 &= 2097151, g7 = Wr(T4, V4, 470296, 0) + z4 | 0, I6 = h3, z4 = I6 = g7 >>> 0 < z4 >>> 0 ? I6 + 1 | 0 : I6, K4 = g7, j4 = (2097151 & (I6 = X4)) << 11 | W4 >>> 21, I6 = (g7 = I6 >> 21) + z4 | 0, z4 = Z4 = K4 + j4 | 0, I6 = Z4 >>> 0 < j4 >>> 0 ? I6 + 1 | 0 : I6, K4 = Z4, t3[A8 + 4 | 0] = (2047 & I6) << 21 | K4 >>> 11, g7 = I6, t3[A8 + 3 | 0] = (7 & g7) << 29 | K4 >>> 3, j4 = A8, Z4 = 2097151 & O4, I6 = Wr(T4, V4, 654183, 0) + Z4 | 0, K4 = h3, K4 = I6 >>> 0 < Z4 >>> 0 ? K4 + 1 | 0 : K4, O4 = I6, I6 = g7, g7 = (g7 >>= 21) + K4 | 0, g7 = (I6 = O4 + (Z4 = (2097151 & I6) << 11 | z4 >>> 21) | 0) >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, Z4 = I6, K4 = g7, t3[j4 + 6 | 0] = (63 & g7) << 26 | I6 >>> 6, j4 = 0, g7 = O4 = 2097151 & z4, t3[A8 + 2 | 0] = 31 & ((65535 & X4) << 16 | W4 >>> 16) | g7 << 5, W4 = A8, X4 = 2097151 & rA4, g7 = Wr(T4, V4, -997805, -1) + X4 | 0, I6 = h3, I6 = g7 >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, z4 = g7, I6 = (g7 = K4 >> 21) + I6 | 0, I6 = (K4 = z4 + (X4 = (2097151 & K4) << 11 | Z4 >>> 21) | 0) >>> 0 < X4 >>> 0 ? I6 + 1 | 0 : I6, X4 = K4, t3[W4 + 9 | 0] = (511 & I6) << 23 | K4 >>> 9, K4 = I6, g7 = I6, I6 = X4, t3[W4 + 8 | 0] = (1 & g7) << 31 | I6 >>> 1, z4 = 0, I6 = (g7 = rA4 = 2097151 & Z4) << 2, g7 = j4, t3[W4 + 5 | 0] = I6 | (524287 & g7) << 13 | O4 >>> 19, Z4 = W4, W4 = 2097151 & IA4, I6 = Wr(T4, V4, 136657, 0) + W4 | 0, g7 = h3, j4 = (2097151 & K4) << 11 | X4 >>> 21, K4 = (K4 >> 21) + (g7 = I6 >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7) | 0, K4 = (W4 = j4 + I6 | 0) >>> 0 < j4 >>> 0 ? K4 + 1 | 0 : K4, t3[Z4 + 12 | 0] = (4095 & K4) << 20 | W4 >>> 12, g7 = I6 = K4, K4 = W4, t3[Z4 + 11 | 0] = (15 & g7) << 28 | K4 >>> 4, Z4 = 0, K4 = (g7 = j4 = 2097151 & X4) << 7, g7 = z4, t3[A8 + 7 | 0] = K4 | (16383 & g7) << 18 | rA4 >>> 14, z4 = A8, X4 = 2097151 & gA4, K4 = Wr(T4, V4, -683901, -1) + X4 | 0, g7 = h3, V4 = (2097151 & I6) << 11 | W4 >>> 21, I6 = (I6 >> 21) + (g7 = K4 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7) | 0, g7 = I6 = (X4 = V4 + K4 | 0) >>> 0 < V4 >>> 0 ? I6 + 1 | 0 : I6, t3[z4 + 14 | 0] = (127 & g7) << 25 | X4 >>> 7, V4 = 0, K4 = (I6 = z4 = 2097151 & W4) << 4, I6 = Z4, t3[A8 + 10 | 0] = K4 | (131071 & I6) << 15 | j4 >>> 17, I6 = g7, g7 >>= 21, I6 = (K4 = (j4 = (2097151 & I6) << 11 | X4 >>> 21) + (2097151 & AA4) | 0) >>> 0 < j4 >>> 0 ? g7 + 1 | 0 : g7, t3[(W4 = A8) + 17 | 0] = (1023 & I6) << 22 | K4 >>> 10, g7 = I6, t3[W4 + 16 | 0] = (3 & g7) << 30 | K4 >>> 2, W4 = 0, Z4 = (I6 = j4 = 2097151 & X4) << 1, I6 = V4, t3[A8 + 13 | 0] = Z4 | (1048575 & I6) << 12 | z4 >>> 20, I6 = g7, g7 >>= 21, V4 = I6 = (z4 = (2097151 & I6) << 11 | K4 >>> 21) + (2097151 & aA4) | 0, g7 = I6 >>> 0 < z4 >>> 0 ? g7 + 1 | 0 : g7, X4 = I6, t3[A8 + 20 | 0] = (8191 & g7) << 19 | I6 >>> 13, I6 = g7, t3[A8 + 19 | 0] = (31 & g7) << 27 | X4 >>> 5, z4 = 0, K4 = (g7 = T4 = 2097151 & K4) << 6, g7 = W4, t3[A8 + 15 | 0] = K4 | (32767 & g7) << 17 | j4 >>> 15, K4 = I6 >> 21, Z4 = X4 = (j4 = (2097151 & I6) << 11 | X4 >>> 21) + (2097151 & tA4) | 0, t3[(W4 = A8) + 21 | 0] = X4, I6 = (g7 = V4) << 3, g7 = z4, t3[W4 + 18 | 0] = I6 | (262143 & g7) << 14 | T4 >>> 18, X4 = X4 >>> 0 < j4 >>> 0 ? K4 + 1 | 0 : K4, t3[W4 + 22 | 0] = (255 & X4) << 24 | Z4 >>> 8, I6 = K4 = (g7 = X4) >> 21, K4 = g7 = (W4 = (2097151 & g7) << 11 | Z4 >>> 21) + (2097151 & BA4) | 0, I6 = g7 >>> 0 < W4 >>> 0 ? I6 + 1 | 0 : I6, t3[A8 + 25 | 0] = (2047 & I6) << 21 | g7 >>> 11, g7 = I6, t3[A8 + 24 | 0] = (7 & g7) << 29 | K4 >>> 3, g7 >>= 21, V4 = I6 = (z4 = (2097151 & I6) << 11 | K4 >>> 21) + (2097151 & _A4) | 0, I6 = g7 = I6 >>> 0 < z4 >>> 0 ? g7 + 1 | 0 : g7, t3[(W4 = A8) + 27 | 0] = (63 & g7) << 26 | V4 >>> 6, W4 = 0, T4 = 31 & ((65535 & X4) << 16 | Z4 >>> 16), g7 = Z4 = 2097151 & K4, t3[A8 + 23 | 0] = T4 | g7 << 5, j4 = (2097151 & I6) << 11 | V4 >>> 21, I6 >>= 21, I6 = (K4 = j4 + (2097151 & $4) | 0) >>> 0 < j4 >>> 0 ? I6 + 1 | 0 : I6, t3[(X4 = A8) + 31 | 0] = (131071 & I6) << 15 | K4 >>> 17, g7 = I6, t3[X4 + 30 | 0] = (511 & g7) << 23 | K4 >>> 9, t3[X4 + 29 | 0] = (1 & g7) << 31 | K4 >>> 1, X4 = 0, g7 = (I6 = V4 &= 2097151) << 2, I6 = W4, W4 = Z4, t3[A8 + 26 | 0] = g7 | (524287 & I6) << 13 | W4 >>> 19, t3[A8 + 28 | 0] = (16383 & X4) << 18 | V4 >>> 14 | K4 << 7;
                    }
                    function m3(A8, g7, I6, a4) {
                      var r4 = 0, t4 = 0, B4 = 0, o4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0, q4 = 0;
                      for (function(A9, g8) {
                        for (var I7 = 0, a5 = 0, r5 = 0, t5 = 0, B5 = 0; t5 = r5 = (a5 = I7 << 3) + A9 | 0, B5 = hg(g8 + a5 | 0), n3[t5 >> 2] = B5, n3[r5 + 4 >> 2] = h3, (0 | (I7 = I7 + 1 | 0)) != 16; )
                          ;
                      }(I6, g7), g7 = gA3(a4, A8, 64), C4 = n3[I6 >> 2], _4 = n3[I6 + 4 >> 2], a4 = 0; ; ) {
                        if (r4 = rt(w4 = n3[(B4 = g7) + 32 >> 2], i4 = n3[B4 + 36 >> 2], 14), E4 = h3, r4 = rt(w4, i4, 18) ^ r4, f4 = h3 ^ E4, t4 = C4, C4 = rt(w4, i4, 41) ^ r4, r4 = (h3 ^ f4) + _4 | 0, r4 = C4 >>> 0 > (E4 = t4 + C4 | 0) >>> 0 ? r4 + 1 | 0 : r4, C4 = E4, y4 = n3[B4 + 48 >> 2], C4 = (f4 = n3[(_4 = 35024 + (q4 = a4 << 3) | 0) >> 2]) + C4 | 0, r4 = n3[_4 + 4 >> 2] + r4 | 0, r4 = C4 >>> 0 < f4 >>> 0 ? r4 + 1 | 0 : r4, C4 = (_4 = y4 ^ ((G4 = n3[B4 + 40 >> 2]) ^ y4) & w4) + C4 | 0, r4 = (((t4 = n3[B4 + 52 >> 2]) ^ (l4 = n3[B4 + 44 >> 2])) & i4 ^ t4) + r4 | 0, r4 = C4 >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, E4 = (e4 = C4) + (C4 = n3[B4 + 56 >> 2]) | 0, r4 = n3[B4 + 60 >> 2] + r4 | 0, r4 = C4 >>> 0 > E4 >>> 0 ? r4 + 1 | 0 : r4, _4 = E4 + (f4 = n3[B4 + 24 >> 2]) | 0, C4 = r4, r4 = r4 + n3[B4 + 28 >> 2] | 0, r4 = _4 >>> 0 < f4 >>> 0 ? r4 + 1 | 0 : r4, f4 = _4, s4 = r4, n3[B4 + 24 >> 2] = _4, n3[B4 + 28 >> 2] = r4, r4 = rt(D4 = n3[B4 >> 2], _4 = n3[B4 + 4 >> 2], 28), u4 = h3, r4 = rt(D4, _4, 34) ^ r4, o4 = h3 ^ u4, u4 = E4 + (rt(D4, _4, 39) ^ r4) | 0, r4 = C4 + (h3 ^ o4) | 0, r4 = E4 >>> 0 > u4 >>> 0 ? r4 + 1 | 0 : r4, E4 = (e4 = D4 & ((o4 = n3[B4 + 16 >> 2]) | (Q4 = n3[B4 + 8 >> 2])) | o4 & Q4) + u4 | 0, r4 = (_4 & ((u4 = n3[B4 + 20 >> 2]) | (C4 = n3[B4 + 12 >> 2])) | C4 & u4) + r4 | 0, E4 = r4 = e4 >>> 0 > (c4 = E4) >>> 0 ? r4 + 1 | 0 : r4, n3[B4 + 56 >> 2] = c4, n3[B4 + 60 >> 2] = r4, r4 = rt(f4, s4, 14), e4 = h3, x4 = rt(f4, s4, 18) ^ r4, e4 ^= h3, p4 = o4, r4 = ((i4 ^ l4) & s4 ^ l4) + t4 | 0, r4 = (o4 = (w4 ^ G4) & f4 ^ G4) >>> 0 > (y4 = o4 + y4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = rt(f4, s4, 41) ^ x4, r4 = (h3 ^ e4) + r4 | 0, r4 = t4 >>> 0 > (y4 = t4 + y4 | 0) >>> 0 ? r4 + 1 | 0 : r4, y4 = (e4 = n3[(o4 = x4 = (t4 = (1 | a4) << 3) + I6 | 0) >> 2]) + y4 | 0, r4 = n3[o4 + 4 >> 2] + r4 | 0, r4 = e4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, y4 = (o4 = n3[(t4 = t4 + 35024 | 0) >> 2]) + y4 | 0, r4 = n3[t4 + 4 >> 2] + r4 | 0, o4 = r4 = o4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, r4 = r4 + u4 | 0, u4 = y4 = p4 + (t4 = e4 = y4) | 0, t4 = r4 = t4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, n3[B4 + 16 >> 2] = y4, n3[B4 + 20 >> 2] = r4, y4 = B4, r4 = rt(c4, E4, 28), B4 = h3, m4 = rt(c4, E4, 34) ^ r4, F4 = h3 ^ B4, B4 = (r4 = e4) + (e4 = (Q4 | D4) & c4 | Q4 & D4) | 0, r4 = ((C4 | _4) & E4 | C4 & _4) + o4 | 0, r4 = B4 >>> 0 < e4 >>> 0 ? r4 + 1 | 0 : r4, o4 = rt(c4, E4, 39) ^ m4, r4 = (h3 ^ F4) + r4 | 0, m4 = B4 = o4 + B4 | 0, B4 = r4 = B4 >>> 0 < o4 >>> 0 ? r4 + 1 | 0 : r4, n3[y4 + 48 >> 2] = m4, n3[y4 + 52 >> 2] = r4, e4 = y4, r4 = rt(u4, t4, 14), y4 = h3, o4 = rt(u4, t4, 18) ^ r4, F4 = h3 ^ y4, p4 = Q4, r4 = ((i4 ^ s4) & t4 ^ i4) + l4 | 0, r4 = (Q4 = (f4 ^ w4) & u4 ^ w4) >>> 0 > (y4 = Q4 + G4 | 0) >>> 0 ? r4 + 1 | 0 : r4, o4 = rt(u4, t4, 41) ^ o4, r4 = (h3 ^ F4) + r4 | 0, r4 = o4 >>> 0 > (y4 = o4 + y4 | 0) >>> 0 ? r4 + 1 | 0 : r4, y4 = (G4 = n3[(Q4 = v4 = (o4 = (2 | a4) << 3) + I6 | 0) >> 2]) + y4 | 0, r4 = n3[Q4 + 4 >> 2] + r4 | 0, r4 = y4 >>> 0 < G4 >>> 0 ? r4 + 1 | 0 : r4, y4 = (Q4 = n3[(o4 = o4 + 35024 | 0) >> 2]) + y4 | 0, r4 = n3[o4 + 4 >> 2] + r4 | 0, r4 = Q4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, y4 = p4 + (o4 = Q4 = y4) | 0, p4 = C4, C4 = r4, r4 = p4 + r4 | 0, o4 = r4 = o4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, n3[e4 + 8 >> 2] = y4, n3[e4 + 12 >> 2] = r4, r4 = rt(m4, B4, 28), G4 = h3, l4 = rt(m4, B4, 34) ^ r4, G4 ^= h3, r4 = ((_4 | E4) & B4 | _4 & E4) + C4 | 0, r4 = (Q4 = (F4 = (c4 | D4) & m4 | c4 & D4) + Q4 | 0) >>> 0 < F4 >>> 0 ? r4 + 1 | 0 : r4, C4 = Q4, Q4 = rt(m4, B4, 39) ^ l4, r4 = (h3 ^ G4) + r4 | 0, G4 = C4 = C4 + Q4 | 0, C4 = r4 = C4 >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, n3[e4 + 40 >> 2] = G4, n3[e4 + 44 >> 2] = r4, Q4 = e4, r4 = rt(y4, o4, 14), e4 = h3, l4 = rt(y4, o4, 18) ^ r4, F4 = h3 ^ e4, p4 = D4, r4 = (s4 ^ (t4 ^ s4) & o4) + i4 | 0, r4 = (e4 = (D4 = f4 ^ (u4 ^ f4) & y4) + w4 | 0) >>> 0 < D4 >>> 0 ? r4 + 1 | 0 : r4, i4 = e4, e4 = rt(y4, o4, 41) ^ l4, r4 = (h3 ^ F4) + r4 | 0, r4 = e4 >>> 0 > (i4 = i4 + e4 | 0) >>> 0 ? r4 + 1 | 0 : r4, i4 = (l4 = n3[(w4 = D4 = (e4 = (3 | a4) << 3) + I6 | 0) >> 2]) + i4 | 0, r4 = n3[w4 + 4 >> 2] + r4 | 0, r4 = i4 >>> 0 < l4 >>> 0 ? r4 + 1 | 0 : r4, i4 = (w4 = n3[(e4 = e4 + 35024 | 0) >> 2]) + i4 | 0, r4 = n3[e4 + 4 >> 2] + r4 | 0, r4 = i4 >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, w4 = i4, i4 = p4 + (e4 = i4) | 0, p4 = _4, _4 = r4, r4 = p4 + r4 | 0, e4 = r4 = e4 >>> 0 > i4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 >> 2] = i4, n3[Q4 + 4 >> 2] = r4, r4 = rt(G4, C4, 28), l4 = h3, F4 = rt(G4, C4, 34) ^ r4, l4 ^= h3, r4 = ((B4 | E4) & C4 | B4 & E4) + _4 | 0, r4 = (w4 = (S4 = (c4 | m4) & G4 | c4 & m4) + w4 | 0) >>> 0 < S4 >>> 0 ? r4 + 1 | 0 : r4, _4 = w4, w4 = rt(G4, C4, 39) ^ F4, r4 = (h3 ^ l4) + r4 | 0, r4 = (_4 = _4 + w4 | 0) >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, w4 = _4, _4 = r4, n3[Q4 + 32 >> 2] = w4, n3[Q4 + 36 >> 2] = r4, r4 = rt(i4, e4, 14), l4 = h3, F4 = rt(i4, e4, 18) ^ r4, l4 ^= h3, p4 = c4, r4 = s4 + (t4 ^ (t4 ^ o4) & e4) | 0, r4 = (c4 = f4 + (u4 ^ (y4 ^ u4) & i4) | 0) >>> 0 < f4 >>> 0 ? r4 + 1 | 0 : r4, s4 = rt(i4, e4, 41) ^ F4, r4 = (h3 ^ l4) + r4 | 0, r4 = s4 >>> 0 > (f4 = s4 + c4 | 0) >>> 0 ? r4 + 1 | 0 : r4, f4 = (l4 = n3[(c4 = U4 = (s4 = (4 | a4) << 3) + I6 | 0) >> 2]) + f4 | 0, r4 = n3[c4 + 4 >> 2] + r4 | 0, r4 = f4 >>> 0 < l4 >>> 0 ? r4 + 1 | 0 : r4, f4 = (c4 = n3[(s4 = s4 + 35024 | 0) >> 2]) + f4 | 0, r4 = n3[s4 + 4 >> 2] + r4 | 0, s4 = E4, E4 = r4 = c4 >>> 0 > f4 >>> 0 ? r4 + 1 | 0 : r4, r4 = s4 + r4 | 0, s4 = r4 = (c4 = f4) >>> 0 > (f4 = p4 + c4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 56 >> 2] = f4, n3[Q4 + 60 >> 2] = r4, r4 = rt(w4, _4, 28), l4 = h3, F4 = rt(w4, _4, 34) ^ r4, l4 ^= h3, r4 = ((B4 | C4) & _4 | B4 & C4) + E4 | 0, r4 = (c4 = (S4 = (G4 | m4) & w4 | G4 & m4) + c4 | 0) >>> 0 < S4 >>> 0 ? r4 + 1 | 0 : r4, E4 = c4, c4 = rt(w4, _4, 39) ^ F4, r4 = (h3 ^ l4) + r4 | 0, l4 = E4 = E4 + c4 | 0, E4 = r4 = c4 >>> 0 > E4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 24 >> 2] = l4, n3[Q4 + 28 >> 2] = r4, r4 = rt(f4, s4, 14), c4 = h3, F4 = rt(f4, s4, 18) ^ r4, S4 = h3 ^ c4, p4 = m4, r4 = t4 + (o4 ^ (o4 ^ e4) & s4) | 0, r4 = (c4 = u4 + (y4 ^ (i4 ^ y4) & f4) | 0) >>> 0 < u4 >>> 0 ? r4 + 1 | 0 : r4, t4 = rt(f4, s4, 41) ^ F4, r4 = (h3 ^ S4) + r4 | 0, r4 = t4 >>> 0 > (u4 = t4 + c4 | 0) >>> 0 ? r4 + 1 | 0 : r4, u4 = (F4 = n3[(c4 = m4 = (t4 = (5 | a4) << 3) + I6 | 0) >> 2]) + u4 | 0, r4 = n3[c4 + 4 >> 2] + r4 | 0, r4 = u4 >>> 0 < F4 >>> 0 ? r4 + 1 | 0 : r4, u4 = (c4 = n3[(t4 = t4 + 35024 | 0) >> 2]) + u4 | 0, r4 = n3[t4 + 4 >> 2] + r4 | 0, r4 = c4 >>> 0 > u4 >>> 0 ? r4 + 1 | 0 : r4, u4 = p4 + (t4 = c4 = u4) | 0, p4 = B4, B4 = r4, r4 = p4 + r4 | 0, t4 = r4 = t4 >>> 0 > u4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 48 >> 2] = u4, n3[Q4 + 52 >> 2] = r4, r4 = rt(l4, E4, 28), F4 = h3, S4 = rt(l4, E4, 34) ^ r4, F4 ^= h3, r4 = ((C4 | _4) & E4 | C4 & _4) + B4 | 0, r4 = (c4 = (k4 = (w4 | G4) & l4 | w4 & G4) + c4 | 0) >>> 0 < k4 >>> 0 ? r4 + 1 | 0 : r4, B4 = c4, c4 = rt(l4, E4, 39) ^ S4, r4 = (h3 ^ F4) + r4 | 0, S4 = B4 = B4 + c4 | 0, B4 = r4 = B4 >>> 0 < c4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 16 >> 2] = S4, n3[Q4 + 20 >> 2] = r4, r4 = rt(u4, t4, 14), c4 = h3, F4 = rt(u4, t4, 18) ^ r4, k4 = h3 ^ c4, p4 = G4, r4 = o4 + (e4 ^ (e4 ^ s4) & t4) | 0, r4 = (c4 = y4 + (i4 ^ (i4 ^ f4) & u4) | 0) >>> 0 < y4 >>> 0 ? r4 + 1 | 0 : r4, o4 = rt(u4, t4, 41) ^ F4, r4 = (h3 ^ k4) + r4 | 0, r4 = o4 >>> 0 > (y4 = o4 + c4 | 0) >>> 0 ? r4 + 1 | 0 : r4, y4 = (G4 = n3[(c4 = M4 = (o4 = (6 | a4) << 3) + I6 | 0) >> 2]) + y4 | 0, r4 = n3[c4 + 4 >> 2] + r4 | 0, r4 = y4 >>> 0 < G4 >>> 0 ? r4 + 1 | 0 : r4, y4 = (c4 = n3[(o4 = o4 + 35024 | 0) >> 2]) + y4 | 0, r4 = n3[o4 + 4 >> 2] + r4 | 0, r4 = c4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, y4 = p4 + (o4 = c4 = y4) | 0, p4 = C4, C4 = r4, r4 = p4 + r4 | 0, o4 = r4 = o4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 40 >> 2] = y4, n3[Q4 + 44 >> 2] = r4, r4 = rt(S4, B4, 28), G4 = h3, F4 = rt(S4, B4, 34) ^ r4, G4 ^= h3, r4 = ((_4 | E4) & B4 | _4 & E4) + C4 | 0, r4 = (c4 = (k4 = (l4 | w4) & S4 | l4 & w4) + c4 | 0) >>> 0 < k4 >>> 0 ? r4 + 1 | 0 : r4, C4 = c4, c4 = rt(S4, B4, 39) ^ F4, r4 = (h3 ^ G4) + r4 | 0, k4 = C4 = C4 + c4 | 0, C4 = r4 = C4 >>> 0 < c4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 8 >> 2] = k4, n3[Q4 + 12 >> 2] = r4, r4 = rt(y4, o4, 14), c4 = h3, G4 = rt(y4, o4, 18) ^ r4, F4 = h3 ^ c4, p4 = w4, r4 = e4 + (s4 ^ (t4 ^ s4) & o4) | 0, r4 = (c4 = i4 + (f4 ^ (u4 ^ f4) & y4) | 0) >>> 0 < i4 >>> 0 ? r4 + 1 | 0 : r4, e4 = rt(y4, o4, 41) ^ G4, r4 = (h3 ^ F4) + r4 | 0, r4 = e4 >>> 0 > (i4 = e4 + c4 | 0) >>> 0 ? r4 + 1 | 0 : r4, i4 = (w4 = n3[(c4 = G4 = (e4 = (7 | a4) << 3) + I6 | 0) >> 2]) + i4 | 0, r4 = n3[c4 + 4 >> 2] + r4 | 0, r4 = i4 >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, i4 = (c4 = n3[(e4 = e4 + 35024 | 0) >> 2]) + i4 | 0, r4 = n3[e4 + 4 >> 2] + r4 | 0, r4 = i4 >>> 0 < c4 >>> 0 ? r4 + 1 | 0 : r4, i4 = p4 + (e4 = c4 = i4) | 0, p4 = _4, _4 = r4, r4 = p4 + r4 | 0, e4 = r4 = e4 >>> 0 > i4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 32 >> 2] = i4, n3[Q4 + 36 >> 2] = r4, r4 = rt(k4, C4, 28), w4 = h3, F4 = rt(k4, C4, 34) ^ r4, w4 ^= h3, r4 = ((B4 | E4) & C4 | B4 & E4) + _4 | 0, r4 = (c4 = (p4 = (l4 | S4) & k4 | l4 & S4) + c4 | 0) >>> 0 < p4 >>> 0 ? r4 + 1 | 0 : r4, _4 = c4, c4 = rt(k4, C4, 39) ^ F4, r4 = (h3 ^ w4) + r4 | 0, p4 = _4 = _4 + c4 | 0, _4 = r4 = c4 >>> 0 > _4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 >> 2] = p4, n3[Q4 + 4 >> 2] = r4, c4 = Q4, r4 = rt(i4, e4, 14), Q4 = h3, w4 = rt(i4, e4, 18) ^ r4, F4 = h3 ^ Q4, r4 = s4 + (t4 ^ (t4 ^ o4) & e4) | 0, r4 = (Q4 = f4 + (u4 ^ (y4 ^ u4) & i4) | 0) >>> 0 < f4 >>> 0 ? r4 + 1 | 0 : r4, s4 = rt(i4, e4, 41) ^ w4, r4 = (h3 ^ F4) + r4 | 0, r4 = s4 >>> 0 > (f4 = s4 + Q4 | 0) >>> 0 ? r4 + 1 | 0 : r4, f4 = (w4 = n3[(Q4 = F4 = (s4 = (8 | a4) << 3) + I6 | 0) >> 2]) + f4 | 0, r4 = n3[Q4 + 4 >> 2] + r4 | 0, r4 = f4 >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, f4 = (Q4 = n3[(s4 = s4 + 35024 | 0) >> 2]) + f4 | 0, r4 = n3[s4 + 4 >> 2] + r4 | 0, r4 = Q4 >>> 0 > f4 >>> 0 ? r4 + 1 | 0 : r4, w4 = f4, Q4 = E4, E4 = r4, r4 = Q4 + r4 | 0, Q4 = r4 = (s4 = f4) >>> 0 > (f4 = s4 + l4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n3[c4 + 24 >> 2] = f4, n3[c4 + 28 >> 2] = r4, s4 = c4, r4 = rt(p4, _4, 28), c4 = h3, l4 = rt(p4, _4, 34) ^ r4, b4 = h3 ^ c4, c4 = (r4 = w4) + (w4 = (k4 | S4) & p4 | k4 & S4) | 0, r4 = ((B4 | C4) & _4 | B4 & C4) + E4 | 0, r4 = c4 >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, E4 = c4, c4 = rt(p4, _4, 39) ^ l4, r4 = (h3 ^ b4) + r4 | 0, b4 = E4 = E4 + c4 | 0, E4 = r4 = c4 >>> 0 > E4 >>> 0 ? r4 + 1 | 0 : r4, n3[s4 + 56 >> 2] = b4, n3[s4 + 60 >> 2] = r4, r4 = rt(f4, Q4, 14), c4 = h3, w4 = rt(f4, Q4, 18) ^ r4, l4 = h3 ^ c4, r4 = t4 + (o4 ^ (o4 ^ e4) & Q4) | 0, r4 = (c4 = u4 + (y4 ^ (i4 ^ y4) & f4) | 0) >>> 0 < u4 >>> 0 ? r4 + 1 | 0 : r4, t4 = rt(f4, Q4, 41) ^ w4, r4 = (h3 ^ l4) + r4 | 0, r4 = t4 >>> 0 > (u4 = t4 + c4 | 0) >>> 0 ? r4 + 1 | 0 : r4, u4 = (l4 = n3[(c4 = w4 = (t4 = (9 | a4) << 3) + I6 | 0) >> 2]) + u4 | 0, r4 = n3[c4 + 4 >> 2] + r4 | 0, r4 = u4 >>> 0 < l4 >>> 0 ? r4 + 1 | 0 : r4, u4 = (c4 = n3[(t4 = t4 + 35024 | 0) >> 2]) + u4 | 0, r4 = n3[t4 + 4 >> 2] + r4 | 0, r4 = c4 >>> 0 > u4 >>> 0 ? r4 + 1 | 0 : r4, c4 = B4, B4 = r4, r4 = c4 + r4 | 0, c4 = r4 = (t4 = u4) >>> 0 > (u4 = t4 + S4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n3[s4 + 16 >> 2] = u4, n3[s4 + 20 >> 2] = r4, r4 = rt(b4, E4, 28), l4 = h3, S4 = rt(b4, E4, 34) ^ r4, l4 ^= h3, r4 = ((C4 | _4) & E4 | C4 & _4) + B4 | 0, r4 = (t4 = (H4 = (p4 | k4) & b4 | p4 & k4) + t4 | 0) >>> 0 < H4 >>> 0 ? r4 + 1 | 0 : r4, B4 = t4, t4 = rt(b4, E4, 39) ^ S4, r4 = (h3 ^ l4) + r4 | 0, H4 = B4 = B4 + t4 | 0, B4 = r4 = B4 >>> 0 < t4 >>> 0 ? r4 + 1 | 0 : r4, n3[s4 + 48 >> 2] = H4, n3[s4 + 52 >> 2] = r4, r4 = rt(u4, c4, 14), t4 = h3, l4 = rt(u4, c4, 18) ^ r4, S4 = h3 ^ t4, r4 = o4 + (e4 ^ (Q4 ^ e4) & c4) | 0, r4 = (t4 = y4 + (i4 ^ (i4 ^ f4) & u4) | 0) >>> 0 < y4 >>> 0 ? r4 + 1 | 0 : r4, o4 = t4, t4 = rt(u4, c4, 41) ^ l4, r4 = (h3 ^ S4) + r4 | 0, r4 = t4 >>> 0 > (y4 = o4 + t4 | 0) >>> 0 ? r4 + 1 | 0 : r4, y4 = (l4 = n3[(o4 = S4 = (t4 = (10 | a4) << 3) + I6 | 0) >> 2]) + y4 | 0, r4 = n3[o4 + 4 >> 2] + r4 | 0, r4 = y4 >>> 0 < l4 >>> 0 ? r4 + 1 | 0 : r4, y4 = (o4 = n3[(t4 = t4 + 35024 | 0) >> 2]) + y4 | 0, r4 = n3[t4 + 4 >> 2] + r4 | 0, r4 = o4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4, l4 = y4, o4 = C4, C4 = r4, r4 = o4 + r4 | 0, o4 = r4 = (t4 = y4) >>> 0 > (y4 = t4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n3[s4 + 8 >> 2] = y4, n3[s4 + 12 >> 2] = r4, t4 = s4, r4 = rt(H4, B4, 28), s4 = h3, k4 = rt(H4, B4, 34) ^ r4, J4 = h3 ^ s4, s4 = (r4 = l4) + (l4 = (p4 | b4) & H4 | p4 & b4) | 0, r4 = ((_4 | E4) & B4 | _4 & E4) + C4 | 0, r4 = s4 >>> 0 < l4 >>> 0 ? r4 + 1 | 0 : r4, C4 = s4, s4 = rt(H4, B4, 39) ^ k4, r4 = (h3 ^ J4) + r4 | 0, s4 = r4 = (C4 = C4 + s4 | 0) >>> 0 < s4 >>> 0 ? r4 + 1 | 0 : r4, n3[t4 + 40 >> 2] = C4, n3[t4 + 44 >> 2] = r4, r4 = rt(y4, o4, 14), l4 = h3, k4 = rt(y4, o4, 18) ^ r4, J4 = h3 ^ l4, d4 = p4, r4 = e4 + (Q4 ^ (Q4 ^ c4) & o4) | 0, r4 = (l4 = i4 + (f4 ^ (u4 ^ f4) & y4) | 0) >>> 0 < i4 >>> 0 ? r4 + 1 | 0 : r4, e4 = rt(y4, o4, 41) ^ k4, r4 = (h3 ^ J4) + r4 | 0, r4 = e4 >>> 0 > (i4 = e4 + l4 | 0) >>> 0 ? r4 + 1 | 0 : r4, i4 = (p4 = n3[(l4 = (e4 = (11 | a4) << 3) + I6 | 0) >> 2]) + i4 | 0, r4 = n3[l4 + 4 >> 2] + r4 | 0, r4 = i4 >>> 0 < p4 >>> 0 ? r4 + 1 | 0 : r4, i4 = (k4 = n3[(e4 = e4 + 35024 | 0) >> 2]) + i4 | 0, r4 = n3[e4 + 4 >> 2] + r4 | 0, r4 = i4 >>> 0 < k4 >>> 0 ? r4 + 1 | 0 : r4, p4 = i4, k4 = _4, _4 = r4, r4 = k4 + r4 | 0, e4 = r4 = (e4 = i4) >>> 0 > (i4 = d4 + e4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n3[t4 >> 2] = i4, n3[t4 + 4 >> 2] = r4, k4 = t4, r4 = rt(C4, s4, 28), t4 = h3, J4 = rt(C4, s4, 34) ^ r4, Y4 = h3 ^ t4, t4 = (r4 = p4) + (p4 = (b4 | H4) & C4 | b4 & H4) | 0, r4 = ((B4 | E4) & s4 | B4 & E4) + _4 | 0, r4 = t4 >>> 0 < p4 >>> 0 ? r4 + 1 | 0 : r4, _4 = t4, t4 = rt(C4, s4, 39) ^ J4, r4 = (h3 ^ Y4) + r4 | 0, t4 = r4 = t4 >>> 0 > (_4 = _4 + t4 | 0) >>> 0 ? r4 + 1 | 0 : r4, n3[k4 + 32 >> 2] = _4, n3[k4 + 36 >> 2] = r4, p4 = k4, r4 = rt(i4, e4, 14), k4 = h3, J4 = rt(i4, e4, 18) ^ r4, Y4 = h3 ^ k4, d4 = b4, r4 = Q4 + (c4 ^ (o4 ^ c4) & e4) | 0, r4 = (k4 = f4 + (u4 ^ (y4 ^ u4) & i4) | 0) >>> 0 < f4 >>> 0 ? r4 + 1 | 0 : r4, Q4 = rt(i4, e4, 41) ^ J4, r4 = (h3 ^ Y4) + r4 | 0, r4 = Q4 >>> 0 > (f4 = Q4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4, f4 = (J4 = n3[(b4 = k4 = (Q4 = (12 | a4) << 3) + I6 | 0) >> 2]) + f4 | 0, r4 = n3[b4 + 4 >> 2] + r4 | 0, r4 = f4 >>> 0 < J4 >>> 0 ? r4 + 1 | 0 : r4, f4 = (b4 = n3[(Q4 = Q4 + 35024 | 0) >> 2]) + f4 | 0, r4 = n3[Q4 + 4 >> 2] + r4 | 0, r4 = f4 >>> 0 < b4 >>> 0 ? r4 + 1 | 0 : r4, b4 = f4, f4 = d4 + (Q4 = f4) | 0, d4 = E4, E4 = r4, r4 = d4 + r4 | 0, J4 = f4, f4 = r4 = Q4 >>> 0 > f4 >>> 0 ? r4 + 1 | 0 : r4, n3[p4 + 56 >> 2] = J4, n3[p4 + 60 >> 2] = r4, Q4 = p4, r4 = rt(_4, t4, 28), p4 = h3, Y4 = rt(_4, t4, 34) ^ r4, d4 = h3 ^ p4, p4 = (r4 = b4) + (b4 = (C4 | H4) & _4 | C4 & H4) | 0, r4 = ((B4 | s4) & t4 | B4 & s4) + E4 | 0, r4 = p4 >>> 0 < b4 >>> 0 ? r4 + 1 | 0 : r4, E4 = p4, p4 = rt(_4, t4, 39) ^ Y4, r4 = (h3 ^ d4) + r4 | 0, b4 = E4 = E4 + p4 | 0, E4 = r4 = E4 >>> 0 < p4 >>> 0 ? r4 + 1 | 0 : r4, n3[Q4 + 24 >> 2] = b4, n3[Q4 + 28 >> 2] = r4, p4 = Q4, r4 = rt(J4, f4, 14), Q4 = h3, Y4 = rt(J4, f4, 18) ^ r4, d4 = h3 ^ Q4, N5 = H4, r4 = c4 + (o4 ^ (o4 ^ e4) & f4) | 0, r4 = (Q4 = u4 + (y4 ^ (i4 ^ y4) & J4) | 0) >>> 0 < u4 >>> 0 ? r4 + 1 | 0 : r4, c4 = Q4, Q4 = rt(J4, f4, 41) ^ Y4, r4 = (h3 ^ d4) + r4 | 0, r4 = Q4 >>> 0 > (u4 = c4 + Q4 | 0) >>> 0 ? r4 + 1 | 0 : r4, Q4 = (Q4 = u4) + (Y4 = n3[(u4 = (c4 = (13 | a4) << 3) + I6 | 0) >> 2]) | 0, r4 = n3[u4 + 4 >> 2] + r4 | 0, r4 = Q4 >>> 0 < Y4 >>> 0 ? r4 + 1 | 0 : r4, Q4 = (H4 = n3[(c4 = c4 + 35024 | 0) >> 2]) + Q4 | 0, r4 = n3[c4 + 4 >> 2] + r4 | 0, r4 = Q4 >>> 0 < H4 >>> 0 ? r4 + 1 | 0 : r4, H4 = Q4, c4 = Q4, d4 = B4, B4 = r4, r4 = d4 + r4 | 0, Y4 = Q4 = N5 + Q4 | 0, Q4 = r4 = Q4 >>> 0 < c4 >>> 0 ? r4 + 1 | 0 : r4, n3[p4 + 48 >> 2] = Y4, n3[p4 + 52 >> 2] = r4, c4 = p4, r4 = rt(b4, E4, 28), p4 = h3, d4 = rt(b4, E4, 34) ^ r4, N5 = h3 ^ p4, p4 = (r4 = H4) + (H4 = (C4 | _4) & b4 | C4 & _4) | 0, r4 = ((t4 | s4) & E4 | t4 & s4) + B4 | 0, r4 = p4 >>> 0 < H4 >>> 0 ? r4 + 1 | 0 : r4, B4 = p4, p4 = rt(b4, E4, 39) ^ d4, r4 = (h3 ^ N5) + r4 | 0, H4 = B4 = B4 + p4 | 0, B4 = r4 = B4 >>> 0 < p4 >>> 0 ? r4 + 1 | 0 : r4, n3[c4 + 16 >> 2] = H4, n3[c4 + 20 >> 2] = r4, r4 = rt(Y4, Q4, 14), p4 = h3, d4 = rt(Y4, Q4, 18) ^ r4, N5 = h3 ^ p4, r4 = o4 + (e4 ^ (e4 ^ f4) & Q4) | 0, r4 = (p4 = y4 + (i4 ^ (i4 ^ J4) & Y4) | 0) >>> 0 < y4 >>> 0 ? r4 + 1 | 0 : r4, o4 = rt(Y4, Q4, 41) ^ d4, r4 = (h3 ^ N5) + r4 | 0, r4 = o4 >>> 0 > (y4 = o4 + p4 | 0) >>> 0 ? r4 + 1 | 0 : r4, o4 = (o4 = y4) + (N5 = n3[(y4 = (p4 = (14 | a4) << 3) + I6 | 0) >> 2]) | 0, r4 = n3[y4 + 4 >> 2] + r4 | 0, r4 = o4 >>> 0 < N5 >>> 0 ? r4 + 1 | 0 : r4, o4 = (d4 = n3[(p4 = p4 + 35024 | 0) >> 2]) + o4 | 0, r4 = n3[p4 + 4 >> 2] + r4 | 0, N5 = o4, p4 = r4 = o4 >>> 0 < d4 >>> 0 ? r4 + 1 | 0 : r4, r4 = s4 + r4 | 0, d4 = o4 = C4 + o4 | 0, C4 = r4 = o4 >>> 0 < C4 >>> 0 ? r4 + 1 | 0 : r4, n3[c4 + 40 >> 2] = o4, n3[c4 + 44 >> 2] = r4, o4 = c4, r4 = rt(H4, B4, 28), s4 = h3, c4 = rt(H4, B4, 34) ^ r4, R4 = h3 ^ s4, s4 = (r4 = N5) + (N5 = (_4 | b4) & H4 | _4 & b4) | 0, r4 = ((t4 | E4) & B4 | t4 & E4) + p4 | 0, r4 = s4 >>> 0 < N5 >>> 0 ? r4 + 1 | 0 : r4, c4 = rt(H4, B4, 39) ^ c4, r4 = (h3 ^ R4) + r4 | 0, r4 = c4 >>> 0 > (s4 = c4 + s4 | 0) >>> 0 ? r4 + 1 | 0 : r4, c4 = s4, s4 = r4, n3[o4 + 8 >> 2] = c4, n3[o4 + 12 >> 2] = r4, r4 = rt(d4, C4, 14), o4 = h3, N5 = rt(d4, C4, 18) ^ r4, R4 = h3 ^ o4, r4 = e4 + (f4 ^ (Q4 ^ f4) & C4) | 0, r4 = (p4 = i4 + (J4 ^ (J4 ^ Y4) & d4) | 0) >>> 0 < i4 >>> 0 ? r4 + 1 | 0 : r4, f4 = rt(d4, C4, 41) ^ N5, r4 = (h3 ^ R4) + r4 | 0, r4 = (C4 = f4 + p4 | 0) >>> 0 < f4 >>> 0 ? r4 + 1 | 0 : r4, C4 = (Q4 = n3[(e4 = f4 = (i4 = (15 | a4) << 3) + I6 | 0) >> 2]) + C4 | 0, r4 = n3[e4 + 4 >> 2] + r4 | 0, r4 = C4 >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, C4 = (e4 = n3[(i4 = i4 + 35024 | 0) >> 2]) + C4 | 0, r4 = n3[i4 + 4 >> 2] + r4 | 0, r4 = C4 >>> 0 < e4 >>> 0 ? r4 + 1 | 0 : r4, i4 = _4 + (e4 = C4) | 0, C4 = r4, r4 = t4 + r4 | 0, n3[(o4 = g7) + 32 >> 2] = i4, n3[o4 + 36 >> 2] = i4 >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(c4, s4, 28), _4 = h3, t4 = rt(c4, s4, 34) ^ r4, o4 = h3 ^ _4, r4 = ((B4 | E4) & s4 | B4 & E4) + C4 | 0, E4 = (i4 = (B4 = e4) + (e4 = (b4 | H4) & c4 | b4 & H4) | 0) + (B4 = rt(c4, s4, 39) ^ t4) | 0, r4 = (h3 ^ o4) + (e4 >>> 0 > i4 >>> 0 ? r4 + 1 | 0 : r4) | 0, n3[(_4 = g7) >> 2] = E4, n3[_4 + 4 >> 2] = B4 >>> 0 > E4 >>> 0 ? r4 + 1 | 0 : r4, (0 | a4) == 64) {
                          for (; E4 = I6 = (a4 = P4 << 3) + A8 | 0, a4 = (B4 = n3[(r4 = g7 + a4 | 0) >> 2]) + n3[E4 >> 2] | 0, r4 = n3[E4 + 4 >> 2] + n3[r4 + 4 >> 2] | 0, n3[E4 >> 2] = a4, n3[E4 + 4 >> 2] = a4 >>> 0 < B4 >>> 0 ? r4 + 1 | 0 : r4, (0 | (P4 = P4 + 1 | 0)) != 8; )
                            ;
                          break;
                        }
                        s4 = ((a4 = a4 + 16 | 0) << 3) + I6 | 0, b4 = E4 = n3[y4 + 4 >> 2], r4 = E4 >>> 6 | 0, E4 = ((63 & E4) << 26 | (H4 = n3[y4 >> 2]) >>> 6) ^ rt(H4, E4, 19), r4 ^= h3, E4 = (t4 = rt(H4, b4, 61) ^ E4) + (B4 = p4 = n3[w4 >> 2]) | 0, r4 = (_4 = n3[w4 + 4 >> 2]) + (h3 ^ r4) | 0, r4 = B4 >>> 0 > E4 >>> 0 ? r4 + 1 | 0 : r4, E4 = (C4 = n3[(B4 = I6 + q4 | 0) >> 2]) + E4 | 0, r4 = n3[B4 + 4 >> 2] + r4 | 0, E4 = C4 >>> 0 > (t4 = E4) >>> 0 ? r4 + 1 | 0 : r4, C4 = B4 = n3[x4 + 4 >> 2], r4 = B4 >>> 7 | 0, B4 = ((127 & B4) << 25 | (i4 = n3[x4 >> 2]) >>> 7) ^ rt(i4, B4, 1), r4 ^= h3, e4 = t4, t4 = rt(i4, C4, 8) ^ B4, r4 = (h3 ^ r4) + E4 | 0, o4 = B4 = e4 + t4 | 0, B4 = r4 = B4 >>> 0 < t4 >>> 0 ? r4 + 1 | 0 : r4, n3[s4 >> 2] = o4, n3[s4 + 4 >> 2] = r4, r4 = n3[(s4 = x4) + 76 >> 2] + C4 | 0, t4 = i4, C4 = (i4 = n3[s4 + 72 >> 2]) >>> 0 > (t4 = E4 = t4 + i4 | 0) >>> 0 ? r4 + 1 | 0 : r4, E4 = i4 = n3[f4 + 4 >> 2], r4 = i4 >>> 6 | 0, i4 = ((63 & i4) << 26 | (c4 = n3[f4 >> 2]) >>> 6) ^ rt(c4, i4, 19), r4 ^= h3, e4 = t4, t4 = rt(c4, E4, 61) ^ i4, r4 = (h3 ^ r4) + C4 | 0, C4 = t4 >>> 0 > (e4 = i4 = e4 + t4 | 0) >>> 0 ? r4 + 1 | 0 : r4, i4 = t4 = n3[s4 + 12 >> 2], r4 = t4 >>> 7 | 0, t4 = ((127 & t4) << 25 | (Q4 = n3[s4 + 8 >> 2]) >>> 7) ^ rt(Q4, t4, 1), r4 ^= h3, x4 = e4, e4 = rt(Q4, i4, 8) ^ t4, r4 = (h3 ^ r4) + C4 | 0, r4 = (t4 = x4 + e4 | 0) >>> 0 < e4 >>> 0 ? r4 + 1 | 0 : r4, e4 = t4, C4 = r4, n3[s4 + 128 >> 2] = t4, n3[s4 + 132 >> 2] = r4, s4 = v4, t4 = i4, r4 = rt(o4, B4, 19), v4 = h3, i4 = r4, r4 = B4 >>> 6 | 0, B4 = (B4 = rt(o4, B4, 61) ^ i4 ^ ((63 & B4) << 26 | o4 >>> 6)) + (o4 = x4 = n3[l4 >> 2]) | 0, r4 = (i4 = n3[l4 + 4 >> 2]) + (h3 ^ r4 ^ v4) | 0, r4 = B4 >>> 0 < o4 >>> 0 ? r4 + 1 | 0 : r4, o4 = B4, r4 = r4 + t4 | 0, Q4 = B4 = B4 + Q4 | 0, B4 = B4 >>> 0 < o4 >>> 0 ? r4 + 1 | 0 : r4, o4 = t4 = n3[D4 + 4 >> 2], r4 = t4 >>> 7 | 0, t4 = ((127 & t4) << 25 | (v4 = n3[D4 >> 2]) >>> 7) ^ rt(v4, t4, 1), r4 ^= h3, d4 = Q4, Q4 = rt(v4, o4, 8) ^ t4, r4 = (h3 ^ r4) + B4 | 0, r4 = (t4 = d4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, Q4 = t4, B4 = r4, n3[s4 + 128 >> 2] = t4, n3[s4 + 132 >> 2] = r4, s4 = (r4 = v4) + (v4 = n3[(t4 = D4) + 72 >> 2]) | 0, r4 = n3[t4 + 76 >> 2] + o4 | 0, o4 = r4 = s4 >>> 0 < v4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(e4, C4, 19), v4 = h3, D4 = s4, s4 = r4, r4 = C4 >>> 6 | 0, s4 = rt(e4, C4, 61) ^ s4 ^ ((63 & C4) << 26 | e4 >>> 6), r4 = (h3 ^ r4 ^ v4) + o4 | 0, v4 = C4 = D4 + s4 | 0, C4 = C4 >>> 0 < s4 >>> 0 ? r4 + 1 | 0 : r4, s4 = o4 = n3[t4 + 12 >> 2], r4 = o4 >>> 7 | 0, o4 = ((127 & o4) << 25 | (e4 = n3[t4 + 8 >> 2]) >>> 7) ^ rt(e4, o4, 1), r4 ^= h3, D4 = rt(e4, s4, 8) ^ o4, r4 = (h3 ^ r4) + C4 | 0, r4 = (o4 = D4 + v4 | 0) >>> 0 < D4 >>> 0 ? r4 + 1 | 0 : r4, D4 = o4, C4 = r4, n3[t4 + 128 >> 2] = o4, n3[t4 + 132 >> 2] = r4, t4 = U4, o4 = s4, r4 = rt(Q4, B4, 19), U4 = h3, d4 = e4, e4 = r4, r4 = B4 >>> 6 | 0, B4 = (B4 = rt(Q4, B4, 61) ^ e4 ^ ((63 & B4) << 26 | Q4 >>> 6)) + (e4 = v4 = n3[u4 >> 2]) | 0, r4 = (s4 = n3[u4 + 4 >> 2]) + (h3 ^ r4 ^ U4) | 0, r4 = B4 >>> 0 < e4 >>> 0 ? r4 + 1 | 0 : r4, e4 = B4, r4 = r4 + o4 | 0, U4 = B4 = d4 + B4 | 0, B4 = B4 >>> 0 < e4 >>> 0 ? r4 + 1 | 0 : r4, e4 = o4 = n3[m4 + 4 >> 2], r4 = o4 >>> 7 | 0, o4 = ((127 & o4) << 25 | (Q4 = n3[m4 >> 2]) >>> 7) ^ rt(Q4, o4, 1), r4 ^= h3, d4 = U4, U4 = rt(Q4, e4, 8) ^ o4, r4 = (h3 ^ r4) + B4 | 0, r4 = (o4 = d4 + U4 | 0) >>> 0 < U4 >>> 0 ? r4 + 1 | 0 : r4, U4 = o4, B4 = r4, n3[t4 + 128 >> 2] = o4, n3[t4 + 132 >> 2] = r4, t4 = (r4 = Q4) + (Q4 = n3[(o4 = m4) + 72 >> 2]) | 0, r4 = n3[o4 + 76 >> 2] + e4 | 0, e4 = r4 = t4 >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(D4, C4, 19), Q4 = h3, m4 = t4, d4 = r4, r4 = (t4 = C4) >>> 6 | 0, t4 = d4 ^ ((63 & t4) << 26 | D4 >>> 6) ^ rt(D4, t4, 61), r4 = (h3 ^ r4 ^ Q4) + e4 | 0, C4 = t4 >>> 0 > (Q4 = C4 = m4 + t4 | 0) >>> 0 ? r4 + 1 | 0 : r4, r4 = (t4 = e4 = n3[o4 + 12 >> 2]) >>> 7 | 0, e4 = ((127 & t4) << 25 | (m4 = n3[o4 + 8 >> 2]) >>> 7) ^ rt(m4, t4, 1), r4 ^= h3, D4 = Q4, Q4 = rt(m4, t4, 8) ^ e4, r4 = (h3 ^ r4) + C4 | 0, D4 = e4 = D4 + Q4 | 0, C4 = r4 = Q4 >>> 0 > e4 >>> 0 ? r4 + 1 | 0 : r4, n3[o4 + 128 >> 2] = e4, n3[o4 + 132 >> 2] = r4, o4 = M4, e4 = t4, r4 = rt(U4, B4, 19), M4 = h3, t4 = r4, r4 = B4 >>> 6 | 0, t4 = rt(U4, B4, 61) ^ t4 ^ ((63 & B4) << 26 | U4 >>> 6), r4 = (h3 ^ r4 ^ M4) + E4 | 0, r4 = (B4 = t4 + c4 | 0) >>> 0 < t4 >>> 0 ? r4 + 1 | 0 : r4, t4 = B4, r4 = r4 + e4 | 0, m4 = B4 = B4 + m4 | 0, B4 = B4 >>> 0 < t4 >>> 0 ? r4 + 1 | 0 : r4, r4 = (t4 = Q4 = n3[G4 + 4 >> 2]) >>> 7 | 0, Q4 = ((127 & t4) << 25 | (e4 = n3[G4 >> 2]) >>> 7) ^ rt(e4, t4, 1), r4 ^= h3, U4 = m4, m4 = rt(e4, t4, 8) ^ Q4, r4 = (h3 ^ r4) + B4 | 0, B4 = r4 = (Q4 = U4 + m4 | 0) >>> 0 < m4 >>> 0 ? r4 + 1 | 0 : r4, n3[o4 + 128 >> 2] = Q4, n3[o4 + 132 >> 2] = r4, r4 = n3[(o4 = G4) + 76 >> 2] + t4 | 0, e4 = (t4 = e4 = (m4 = n3[o4 + 72 >> 2]) + e4 | 0) >>> 0 < m4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(D4, C4, 19), m4 = h3, U4 = t4, G4 = r4, r4 = (t4 = C4) >>> 6 | 0, t4 = G4 ^ ((63 & t4) << 26 | D4 >>> 6) ^ rt(D4, t4, 61), r4 = (h3 ^ r4 ^ m4) + e4 | 0, D4 = C4 = U4 + t4 | 0, C4 = t4 >>> 0 > C4 >>> 0 ? r4 + 1 | 0 : r4, r4 = (t4 = e4 = n3[o4 + 12 >> 2]) >>> 7 | 0, e4 = ((127 & t4) << 25 | (m4 = n3[o4 + 8 >> 2]) >>> 7) ^ rt(m4, t4, 1), r4 ^= h3, U4 = D4, D4 = rt(m4, t4, 8) ^ e4, r4 = (h3 ^ r4) + C4 | 0, r4 = (e4 = U4 + D4 | 0) >>> 0 < D4 >>> 0 ? r4 + 1 | 0 : r4, D4 = e4, C4 = r4, n3[o4 + 128 >> 2] = e4, n3[o4 + 132 >> 2] = r4, e4 = t4, r4 = rt(Q4, B4, 19), G4 = h3, t4 = r4, r4 = B4 >>> 6 | 0, B4 = (B4 = rt(Q4, B4, 61) ^ t4 ^ ((63 & B4) << 26 | Q4 >>> 6)) + (t4 = n3[(o4 = F4) + 72 >> 2]) | 0, r4 = n3[o4 + 76 >> 2] + (h3 ^ r4 ^ G4) | 0, r4 = B4 >>> 0 < t4 >>> 0 ? r4 + 1 | 0 : r4, t4 = B4, r4 = r4 + e4 | 0, t4 = r4 = (B4 = B4 + m4 | 0) >>> 0 < t4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(p4, _4, 1), e4 = h3, m4 = B4, Q4 = r4, r4 = (B4 = _4) >>> 7 | 0, Q4 = Q4 ^ ((127 & B4) << 25 | p4 >>> 7) ^ rt(p4, B4, 8), r4 = (h3 ^ r4 ^ e4) + t4 | 0, e4 = B4 = m4 + Q4 | 0, B4 = r4 = B4 >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, n3[o4 + 128 >> 2] = e4, n3[o4 + 132 >> 2] = r4, r4 = n3[(t4 = w4) + 76 >> 2] + _4 | 0, _4 = o4 = (Q4 = n3[t4 + 72 >> 2]) + p4 | 0, o4 = o4 >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(D4, C4, 19), Q4 = h3, p4 = _4, _4 = r4, r4 = C4 >>> 6 | 0, _4 = rt(D4, C4, 61) ^ _4 ^ ((63 & C4) << 26 | D4 >>> 6), r4 = (h3 ^ r4 ^ Q4) + o4 | 0, C4 = (Q4 = C4 = p4 + _4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = o4 = n3[t4 + 12 >> 2], r4 = o4 >>> 7 | 0, o4 = ((127 & o4) << 25 | (D4 = n3[t4 + 8 >> 2]) >>> 7) ^ rt(D4, o4, 1), r4 ^= h3, p4 = Q4, Q4 = rt(D4, _4, 8) ^ o4, r4 = (h3 ^ r4) + C4 | 0, r4 = (o4 = p4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? r4 + 1 | 0 : r4, Q4 = o4, C4 = r4, n3[t4 + 128 >> 2] = o4, n3[t4 + 132 >> 2] = r4, o4 = _4, r4 = rt(e4, B4, 19), m4 = h3, t4 = r4, r4 = B4 >>> 6 | 0, B4 = (B4 = rt(e4, B4, 61) ^ t4 ^ ((63 & B4) << 26 | e4 >>> 6)) + (_4 = n3[(t4 = S4) + 72 >> 2]) | 0, r4 = n3[t4 + 76 >> 2] + (h3 ^ r4 ^ m4) | 0, r4 = B4 >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = B4, r4 = r4 + o4 | 0, _4 = r4 = (B4 = B4 + D4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(x4, i4, 1), o4 = h3, p4 = B4, e4 = r4, r4 = (B4 = i4) >>> 7 | 0, e4 = e4 ^ ((127 & B4) << 25 | x4 >>> 7) ^ rt(x4, B4, 8), r4 = (h3 ^ r4 ^ o4) + _4 | 0, o4 = B4 = p4 + e4 | 0, B4 = r4 = B4 >>> 0 < e4 >>> 0 ? r4 + 1 | 0 : r4, n3[t4 + 128 >> 2] = o4, n3[t4 + 132 >> 2] = r4, _4 = (e4 = n3[(t4 = l4) + 72 >> 2]) + x4 | 0, r4 = n3[t4 + 76 >> 2] + i4 | 0, i4 = r4 = e4 >>> 0 > _4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(Q4, C4, 19), e4 = h3, p4 = _4, _4 = r4, r4 = C4 >>> 6 | 0, _4 = rt(Q4, C4, 61) ^ _4 ^ ((63 & C4) << 26 | Q4 >>> 6), r4 = (h3 ^ r4 ^ e4) + i4 | 0, C4 = (e4 = C4 = p4 + _4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = i4 = n3[t4 + 12 >> 2], r4 = i4 >>> 7 | 0, i4 = ((127 & i4) << 25 | (Q4 = n3[t4 + 8 >> 2]) >>> 7) ^ rt(Q4, i4, 1), r4 ^= h3, p4 = e4, e4 = rt(Q4, _4, 8) ^ i4, r4 = (h3 ^ r4) + C4 | 0, r4 = e4 >>> 0 > (i4 = p4 + e4 | 0) >>> 0 ? r4 + 1 | 0 : r4, e4 = i4, C4 = r4, n3[t4 + 128 >> 2] = e4, n3[t4 + 132 >> 2] = r4, t4 = _4, r4 = rt(o4, B4, 19), x4 = h3, _4 = r4, r4 = B4 >>> 6 | 0, B4 = (B4 = rt(o4, B4, 61) ^ _4 ^ ((63 & B4) << 26 | o4 >>> 6)) + (_4 = n3[(i4 = k4) + 72 >> 2]) | 0, r4 = n3[i4 + 76 >> 2] + (h3 ^ r4 ^ x4) | 0, r4 = B4 >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = B4, r4 = r4 + t4 | 0, _4 = r4 = (B4 = B4 + Q4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(v4, s4, 1), t4 = h3, Q4 = B4, o4 = r4, r4 = (B4 = s4) >>> 7 | 0, o4 = o4 ^ ((127 & B4) << 25 | v4 >>> 7) ^ rt(v4, B4, 8), r4 = (h3 ^ r4 ^ t4) + _4 | 0, t4 = B4 = Q4 + o4 | 0, B4 = r4 = B4 >>> 0 < o4 >>> 0 ? r4 + 1 | 0 : r4, n3[i4 + 128 >> 2] = t4, n3[i4 + 132 >> 2] = r4, i4 = (o4 = n3[(_4 = u4) + 72 >> 2]) + v4 | 0, r4 = n3[_4 + 76 >> 2] + s4 | 0, s4 = r4 = o4 >>> 0 > i4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(e4, C4, 19), o4 = h3, Q4 = i4, i4 = r4, r4 = C4 >>> 6 | 0, i4 = rt(e4, C4, 61) ^ i4 ^ ((63 & C4) << 26 | e4 >>> 6), r4 = (h3 ^ r4 ^ o4) + s4 | 0, C4 = (o4 = C4 = Q4 + i4 | 0) >>> 0 < i4 >>> 0 ? r4 + 1 | 0 : r4, s4 = i4 = n3[_4 + 12 >> 2], r4 = i4 >>> 7 | 0, i4 = ((127 & i4) << 25 | (u4 = n3[_4 + 8 >> 2]) >>> 7) ^ rt(u4, i4, 1), r4 ^= h3, i4 = rt(u4, s4, 8) ^ i4, r4 = (h3 ^ r4) + C4 | 0, r4 = i4 >>> 0 > (u4 = i4 + o4 | 0) >>> 0 ? r4 + 1 | 0 : r4, i4 = u4, C4 = r4, n3[_4 + 128 >> 2] = i4, n3[_4 + 132 >> 2] = r4, u4 = (s4 = n3[(_4 = y4) + 72 >> 2]) + H4 | 0, r4 = n3[_4 + 76 >> 2] + b4 | 0, y4 = r4 = s4 >>> 0 > u4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(t4, B4, 19), s4 = h3, e4 = u4, o4 = r4, r4 = B4 >>> 6 | 0, u4 = rt(t4, B4, 61) ^ o4 ^ ((63 & B4) << 26 | t4 >>> 6), r4 = (h3 ^ r4 ^ s4) + y4 | 0, u4 = r4 = (B4 = e4 + u4 | 0) >>> 0 < u4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(c4, E4, 1), y4 = h3, t4 = B4, e4 = r4, r4 = (B4 = E4) >>> 7 | 0, B4 = t4 + (s4 = e4 ^ ((127 & B4) << 25 | c4 >>> 7) ^ rt(c4, B4, 8)) | 0, r4 = (h3 ^ r4 ^ y4) + u4 | 0, n3[_4 + 128 >> 2] = B4, n3[_4 + 132 >> 2] = B4 >>> 0 < s4 >>> 0 ? r4 + 1 | 0 : r4, r4 = n3[(B4 = f4) + 76 >> 2] + E4 | 0, E4 = _4 = (u4 = n3[B4 + 72 >> 2]) + c4 | 0, _4 = _4 >>> 0 < u4 >>> 0 ? r4 + 1 | 0 : r4, r4 = rt(i4, C4, 19), u4 = h3, t4 = r4, r4 = C4 >>> 6 | 0, C4 = rt(i4, C4, 61) ^ t4 ^ ((63 & C4) << 26 | i4 >>> 6), r4 = (h3 ^ r4 ^ u4) + _4 | 0, E4 = C4 >>> 0 > (y4 = E4 = C4 + E4 | 0) >>> 0 ? r4 + 1 | 0 : r4, f4 = ((127 & (_4 = u4 = n3[B4 + 12 >> 2])) << 25 | (C4 = n3[B4 + 8 >> 2]) >>> 7) ^ rt(C4, _4, 1), r4 = h3 ^ _4 >>> 7, f4 = (u4 = rt(C4, _4, 8) ^ f4) + y4 | 0, r4 = (h3 ^ r4) + E4 | 0, n3[B4 + 128 >> 2] = f4, n3[B4 + 132 >> 2] = u4 >>> 0 > f4 >>> 0 ? r4 + 1 | 0 : r4;
                      }
                    }
                    function G3(A8) {
                      var g7, I6, a4, r4, B4, n4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0, q4 = 0, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0, BA4 = 0;
                      y4 = _a(A8), E4 = o3[A8 + 2 | 0] | o3[A8 + 3 | 0] << 8 | o3[A8 + 4 | 0] << 16 | o3[A8 + 5 | 0] << 24, p4 = _a(A8 + 5 | 0), u4 = h3, gA4 = o3[A8 + 7 | 0] | o3[A8 + 8 | 0] << 8 | o3[A8 + 9 | 0] << 16 | o3[A8 + 10 | 0] << 24, IA4 = o3[A8 + 10 | 0] | o3[A8 + 11 | 0] << 8 | o3[A8 + 12 | 0] << 16 | o3[A8 + 13 | 0] << 24, f4 = _a(A8 + 13 | 0), aA4 = h3, Y4 = o3[A8 + 15 | 0] | o3[A8 + 16 | 0] << 8 | o3[A8 + 17 | 0] << 16 | o3[A8 + 18 | 0] << 24, j4 = _a(A8 + 18 | 0), x4 = h3, d4 = _a(A8 + 21 | 0), k4 = o3[A8 + 23 | 0] | o3[A8 + 24 | 0] << 8 | o3[A8 + 25 | 0] << 16 | o3[A8 + 26 | 0] << 24, G4 = _a(A8 + 26 | 0), w4 = h3, AA4 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, K4 = o3[A8 + 31 | 0] | o3[A8 + 32 | 0] << 8 | o3[A8 + 33 | 0] << 16 | o3[A8 + 34 | 0] << 24, T4 = _a(A8 + 34 | 0), W4 = h3, N5 = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, z4 = _a(A8 + 39 | 0), R4 = h3, b4 = _a(A8 + 42 | 0), m4 = o3[A8 + 44 | 0] | o3[A8 + 45 | 0] << 8 | o3[A8 + 46 | 0] << 16 | o3[A8 + 47 | 0] << 24, D4 = _a(A8 + 47 | 0), l4 = 2097151 & ((3 & w4) << 30 | G4 >>> 2), G4 = Wr(g7 = 2097151 & ((3 & (F4 = h3)) << 30 | D4 >>> 2), 0, 136657, 0) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > G4 >>> 0 ? w4 + 1 | 0 : w4, D4 = Wr(I6 = (o3[A8 + 49 | 0] | o3[A8 + 50 | 0] << 8 | o3[A8 + 51 | 0] << 16 | o3[A8 + 52 | 0] << 24) >>> 7 & 2097151, 0, -997805, -1), l4 = h3 + w4 | 0, l4 = D4 >>> 0 > (G4 = D4 + G4 | 0) >>> 0 ? l4 + 1 | 0 : l4, w4 = Wr(a4 = (o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24) >>> 4 & 2097151, 0, 654183, 0), D4 = h3 + l4 | 0, D4 = w4 >>> 0 > (G4 = w4 + G4 | 0) >>> 0 ? D4 + 1 | 0 : D4, l4 = G4, w4 = _a(A8 + 55 | 0), G4 = l4 + (w4 = Wr(r4 = 2097151 & ((1 & (G4 = h3)) << 31 | w4 >>> 1), 0, 470296, 0)) | 0, l4 = h3 + D4 | 0, l4 = w4 >>> 0 > G4 >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(B4 = (o3[A8 + 57 | 0] | o3[A8 + 58 | 0] << 8 | o3[A8 + 59 | 0] << 16 | o3[A8 + 60 | 0] << 24) >>> 6 & 2097151, 0, 666643, 0), w4 = h3 + l4 | 0, v4 = w4 = D4 >>> 0 > (G4 = D4 + G4 | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = w4, H4 = m4 >>> 5 & 2097151, w4 = 2097151 & b4, m4 = Wr(n4 = (o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24) >>> 3 | 0, 0, -683901, -1) + w4 | 0, l4 = h3, b4 = m4, U4 = l4 = w4 >>> 0 > m4 >>> 0 ? l4 + 1 | 0 : l4, J4 = (l4 = m4) - -1048576 | 0, q4 = m4 = U4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = m4 >> 21, Q4 = H4 = (m4 = (2097151 & m4) << 11 | J4 >>> 21) + H4 | 0, V4 = w4 = m4 >>> 0 > H4 >>> 0 ? l4 + 1 | 0 : l4, l4 = Wr(H4, w4, -683901, -1), w4 = h3 + D4 | 0, Z4 = F4 = l4 + G4 | 0, S4 = l4 >>> 0 > F4 >>> 0 ? w4 + 1 | 0 : w4, D4 = k4 >>> 5 & 2097151, F4 = Wr(g7, 0, -997805, -1) + D4 | 0, l4 = h3, l4 = D4 >>> 0 > F4 >>> 0 ? l4 + 1 | 0 : l4, w4 = Wr(I6, 0, 654183, 0), D4 = h3 + l4 | 0, D4 = w4 >>> 0 > (F4 = w4 + F4 | 0) >>> 0 ? D4 + 1 | 0 : D4, l4 = Wr(a4, 0, 470296, 0), w4 = h3 + D4 | 0, w4 = l4 >>> 0 > (F4 = l4 + F4 | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = Wr(r4, 0, 666643, 0), l4 = h3 + w4 | 0, D4 = D4 >>> 0 > (k4 = F4 = D4 + F4 | 0) >>> 0 ? l4 + 1 | 0 : l4, l4 = 2097151 & d4, F4 = Wr(g7, 0, 654183, 0) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > F4 >>> 0 ? w4 + 1 | 0 : w4, m4 = (l4 = F4) + (F4 = Wr(I6, 0, 470296, 0)) | 0, l4 = h3 + w4 | 0, l4 = m4 >>> 0 < F4 >>> 0 ? l4 + 1 | 0 : l4, F4 = Wr(a4, 0, 666643, 0), w4 = h3 + l4 | 0, H4 = m4 = F4 + m4 | 0, m4 = w4 = m4 >>> 0 < F4 >>> 0 ? w4 + 1 | 0 : w4, O4 = (l4 = H4) - -1048576 | 0, M4 = F4 = w4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (l4 = F4 >>> 21 | 0) + D4 | 0, d4 = D4 = (w4 = (2097151 & F4) << 11 | O4 >>> 21) >>> 0 > (k4 = F4 = w4 + k4 | 0) >>> 0 ? D4 + 1 | 0 : D4, L4 = (l4 = k4) - -1048576 | 0, _4 = G4 - -1048576 | 0, v4 = v4 - ((G4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (l4 = (D4 = P4 = D4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + S4 | 0, v4 = (w4 = (G4 = (2097151 & D4) << 11 | L4 >>> 21) >>> 0 > (P4 = G4 + Z4 | 0) >>> 0 ? w4 + 1 | 0 : w4) - (((l4 = -2097152 & _4) >>> 0 > (G4 = P4) >>> 0) + (F4 = v4) | 0) | 0, rA4 = (l4 = G4 - l4 | 0) - (w4 = -2097152 & (s4 = l4 - -1048576 | 0)) | 0, tA4 = v4 - ((l4 >>> 0 < w4 >>> 0) + (G4 = v4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) | 0) | 0, w4 = Wr(Q4, V4, 136657, 0) + k4 | 0, l4 = d4 + h3 | 0, l4 = w4 >>> 0 < k4 >>> 0 ? l4 + 1 | 0 : l4, $4 = (k4 = w4) - (w4 = -2097152 & L4) | 0, Z4 = l4 - ((w4 >>> 0 > k4 >>> 0) + D4 | 0) | 0, v4 = b4 - (l4 = -2097152 & J4) | 0, S4 = U4 - ((l4 >>> 0 > b4 >>> 0) + q4 | 0) | 0, l4 = 2097151 & ((7 & R4) << 29 | z4 >>> 3), D4 = Wr(n4, 0, 136657, 0) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, k4 = (l4 = D4) + (D4 = Wr(B4, 0, -683901, -1)) | 0, l4 = h3 + w4 | 0, b4 = k4, k4 = D4 >>> 0 > k4 >>> 0 ? l4 + 1 | 0 : l4, l4 = Wr(r4, 0, -683901, -1), w4 = h3, D4 = l4, w4 = (l4 = N5 >>> 6 & 2097151) >>> 0 > (D4 = D4 + l4 | 0) >>> 0 ? w4 + 1 | 0 : w4, d4 = (l4 = Wr(n4, 0, -997805, -1)) + D4 | 0, D4 = h3 + w4 | 0, D4 = l4 >>> 0 > d4 >>> 0 ? D4 + 1 | 0 : D4, w4 = Wr(B4, 0, 136657, 0), l4 = h3 + D4 | 0, L4 = w4 = (J4 = l4 = w4 >>> 0 > (d4 = w4 + d4 | 0) >>> 0 ? l4 + 1 | 0 : l4) - (((l4 = d4) >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (2097151 & w4) << 11 | (z4 = l4 - -1048576 | 0) >>> 21, w4 = (w4 >> 21) + k4 | 0, U4 = w4 = l4 >>> 0 > (b4 = l4 + b4 | 0) >>> 0 ? w4 + 1 | 0 : w4, P4 = (l4 = b4) - -1048576 | 0, q4 = w4 = w4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (D4 = w4 >> 21) + S4 | 0, C4 = k4 = (w4 = (2097151 & w4) << 11 | P4 >>> 21) + v4 | 0, X4 = l4 = w4 >>> 0 > k4 >>> 0 ? l4 + 1 | 0 : l4, w4 = Wr(k4, l4, -683901, -1), l4 = h3 + Z4 | 0, BA4 = D4 = w4 + $4 | 0, N5 = w4 >>> 0 > D4 >>> 0 ? l4 + 1 | 0 : l4, S4 = H4, l4 = 2097151 & ((7 & x4) << 29 | j4 >>> 3), D4 = Wr(g7, 0, 470296, 0) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(I6, 0, 666643, 0), w4 = h3 + w4 | 0, v4 = D4 = l4 + D4 | 0, D4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, k4 = Y4 >>> 6 & 2097151, H4 = Wr(g7, 0, 666643, 0) + k4 | 0, l4 = h3, x4 = k4 = (Y4 = l4 = k4 >>> 0 > H4 >>> 0 ? l4 + 1 | 0 : l4) - (((l4 = H4) >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (w4 = k4 >>> 21 | 0) + D4 | 0, R4 = w4 = (l4 = (2097151 & k4) << 11 | ($4 = l4 - -1048576 | 0) >>> 21) >>> 0 > (k4 = l4 + v4 | 0) >>> 0 ? w4 + 1 | 0 : w4, j4 = w4 - (((l4 = k4) >>> 0 < 4293918720) - 1 | 0) | 0, Z4 = l4 - -1048576 | 0, e4 = b4 - (l4 = -2097152 & P4) | 0, c4 = D4 = U4 - ((l4 >>> 0 > b4 >>> 0) + q4 | 0) | 0, l4 = ((v4 = j4) >>> 21 | 0) + m4 | 0, l4 = (b4 = (2097151 & v4) << 11 | Z4 >>> 21) >>> 0 > (S4 = b4 + S4 | 0) >>> 0 ? l4 + 1 | 0 : l4, S4 = (m4 = Wr(Q4, V4, -997805, -1)) + ((b4 = S4) - (w4 = -2097152 & O4) | 0) | 0, w4 = h3 + (l4 - ((8191 & M4) + (w4 >>> 0 > b4 >>> 0) | 0) | 0) | 0, w4 = m4 >>> 0 > S4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(C4, X4, 136657, 0), w4 = h3 + w4 | 0, w4 = l4 >>> 0 > (m4 = l4 + S4 | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = Wr(e4, D4, -683901, -1), l4 = h3 + w4 | 0, U4 = l4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, P4 = (l4 = m4) - -1048576 | 0, q4 = D4 = U4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (l4 = D4 >> 21) + N5 | 0, S4 = w4 = (D4 = (2097151 & D4) << 11 | P4 >>> 21) >>> 0 > (b4 = D4 + BA4 | 0) >>> 0 ? w4 + 1 | 0 : w4, M4 = (l4 = D4 = b4) - -1048576 | 0, l4 = (l4 = (b4 = N5 = w4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + tA4 | 0, rA4 = N5 = (w4 = (2097151 & b4) << 11 | M4 >>> 21) + rA4 | 0, N5 = w4 >>> 0 > N5 >>> 0 ? l4 + 1 | 0 : l4, tA4 = D4 - (l4 = -2097152 & M4) | 0, BA4 = S4 - ((l4 >>> 0 > D4 >>> 0) + b4 | 0) | 0, j4 = m4 - (l4 = -2097152 & P4) | 0, O4 = U4 - ((l4 >>> 0 > m4 >>> 0) + q4 | 0) | 0, l4 = Wr(Q4, V4, 654183, 0), D4 = h3 + (R4 - ((8191 & v4) + ((w4 = -2097152 & Z4) >>> 0 > k4 >>> 0) | 0) | 0) | 0, D4 = l4 >>> 0 > (m4 = l4 + (k4 - w4 | 0) | 0) >>> 0 ? D4 + 1 | 0 : D4, w4 = Wr(C4, X4, -997805, -1), l4 = h3 + D4 | 0, l4 = w4 >>> 0 > (m4 = w4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(e4, c4, 136657, 0), w4 = h3 + l4 | 0, P4 = m4 = D4 + m4 | 0, b4 = D4 >>> 0 > m4 >>> 0 ? w4 + 1 | 0 : w4, M4 = d4 - (l4 = -2097152 & z4) | 0, R4 = J4 - ((l4 >>> 0 > d4 >>> 0) + L4 | 0) | 0, w4 = 2097151 & ((1 & W4) << 31 | T4 >>> 1), m4 = Wr(a4, 0, -683901, -1) + w4 | 0, l4 = h3, l4 = w4 >>> 0 > m4 >>> 0 ? l4 + 1 | 0 : l4, w4 = Wr(r4, 0, 136657, 0), l4 = h3 + l4 | 0, l4 = w4 >>> 0 > (D4 = w4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, m4 = (w4 = D4) + (D4 = Wr(n4, 0, 654183, 0)) | 0, w4 = h3 + l4 | 0, w4 = D4 >>> 0 > m4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(B4, 0, -997805, -1), w4 = h3 + w4 | 0, d4 = D4 = l4 + m4 | 0, m4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(I6, 0, -683901, -1), D4 = h3, w4 = l4, D4 = (l4 = K4 >>> 4 & 2097151) >>> 0 > (w4 = w4 + l4 | 0) >>> 0 ? D4 + 1 | 0 : D4, k4 = (l4 = w4) + (w4 = Wr(a4, 0, 136657, 0)) | 0, l4 = h3 + D4 | 0, l4 = w4 >>> 0 > k4 >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(r4, 0, -997805, -1), w4 = h3 + l4 | 0, w4 = D4 >>> 0 > (k4 = D4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = Wr(n4, 0, 470296, 0), l4 = h3 + w4 | 0, l4 = D4 >>> 0 > (k4 = D4 + k4 | 0) >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(B4, 0, 654183, 0), w4 = h3 + l4 | 0, U4 = w4 = D4 >>> 0 > (k4 = D4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, L4 = (l4 = k4) - -1048576 | 0, q4 = D4 = w4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (l4 = D4 >> 21) + m4 | 0, m4 = D4 = (w4 = (2097151 & D4) << 11 | L4 >>> 21) + d4 | 0, S4 = l4 = w4 >>> 0 > D4 >>> 0 ? l4 + 1 | 0 : l4, v4 = (l4 = D4) - -1048576 | 0, d4 = D4 = S4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (l4 = D4 >> 21) + R4 | 0, i4 = J4 = (D4 = (2097151 & D4) << 11 | v4 >>> 21) + M4 | 0, K4 = w4 = D4 >>> 0 > J4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(J4, w4, -683901, -1), D4 = h3 + b4 | 0, R4 = w4 = l4 + P4 | 0, b4 = l4 >>> 0 > w4 >>> 0 ? D4 + 1 | 0 : D4, T4 = m4 - (l4 = -2097152 & v4) | 0, W4 = d4 = S4 - ((l4 >>> 0 > m4 >>> 0) + d4 | 0) | 0, D4 = (l4 = Wr(Q4, V4, 470296, 0)) + (H4 - (w4 = -2097152 & $4) | 0) | 0, w4 = h3 + (Y4 - ((2047 & x4) + (w4 >>> 0 > H4 >>> 0) | 0) | 0) | 0, w4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(C4, X4, 654183, 0), w4 = h3 + w4 | 0, w4 = l4 >>> 0 > (D4 = l4 + D4 | 0) >>> 0 ? w4 + 1 | 0 : w4, m4 = (l4 = Wr(e4, c4, -997805, -1)) + D4 | 0, D4 = h3 + w4 | 0, D4 = l4 >>> 0 > m4 >>> 0 ? D4 + 1 | 0 : D4, w4 = Wr(J4, K4, 136657, 0), l4 = h3 + D4 | 0, l4 = w4 >>> 0 > (m4 = w4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(T4, d4, -683901, -1), w4 = h3 + l4 | 0, S4 = w4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? w4 + 1 | 0 : w4, x4 = (l4 = m4) - -1048576 | 0, d4 = D4 = w4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (l4 = D4 >> 21) + b4 | 0, b4 = l4 = (w4 = (2097151 & D4) << 11 | x4 >>> 21) >>> 0 > (D4 = w4 + R4 | 0) >>> 0 ? l4 + 1 | 0 : l4, v4 = (l4 = D4) - -1048576 | 0, w4 = (l4 = (H4 = R4 = b4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + O4 | 0, j4 = Y4 = (R4 = (2097151 & H4) << 11 | v4 >>> 21) + j4 | 0, R4 = Y4 >>> 0 < R4 >>> 0 ? w4 + 1 | 0 : w4, O4 = D4 - (l4 = -2097152 & v4) | 0, z4 = b4 - ((l4 >>> 0 > D4 >>> 0) + H4 | 0) | 0, P4 = m4 - (l4 = -2097152 & x4) | 0, J4 = S4 - ((l4 >>> 0 > m4 >>> 0) + d4 | 0) | 0, w4 = 2097151 & ((1 & aA4) << 31 | f4 >>> 1), m4 = Wr(Q4, V4, 666643, 0) + w4 | 0, l4 = h3, l4 = w4 >>> 0 > m4 >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(C4, X4, 470296, 0), w4 = h3 + l4 | 0, w4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = Wr(e4, c4, 654183, 0), l4 = h3 + w4 | 0, l4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, w4 = Wr(i4, K4, -997805, -1), D4 = h3 + l4 | 0, D4 = w4 >>> 0 > (m4 = w4 + m4 | 0) >>> 0 ? D4 + 1 | 0 : D4, l4 = Wr(T4, W4, 136657, 0), w4 = h3 + D4 | 0, d4 = m4 = l4 + m4 | 0, H4 = l4 >>> 0 > m4 >>> 0 ? w4 + 1 | 0 : w4, b4 = k4 - (l4 = -2097152 & L4) | 0, k4 = U4 - ((l4 >>> 0 > k4 >>> 0) + q4 | 0) | 0, l4 = Wr(g7, 0, -683901, -1), w4 = h3, D4 = l4, w4 = (l4 = AA4 >>> 7 & 2097151) >>> 0 > (D4 = D4 + l4 | 0) >>> 0 ? w4 + 1 | 0 : w4, m4 = (l4 = Wr(I6, 0, 136657, 0)) + D4 | 0, D4 = h3 + w4 | 0, D4 = l4 >>> 0 > m4 >>> 0 ? D4 + 1 | 0 : D4, w4 = Wr(a4, 0, -997805, -1), l4 = h3 + D4 | 0, l4 = w4 >>> 0 > (m4 = w4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(r4, 0, 654183, 0), w4 = h3 + l4 | 0, w4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = Wr(n4, 0, 666643, 0), l4 = h3 + w4 | 0, l4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(B4, 0, 470296, 0), w4 = h3 + l4 | 0, l4 = w4 = D4 >>> 0 > (m4 = D4 + m4 | 0) >>> 0 ? w4 + 1 | 0 : w4, w4 = F4 >> 21, m4 = (F4 = (2097151 & F4) << 11 | _4 >>> 21) + (D4 = m4) | 0, D4 = l4 + w4 | 0, q4 = D4 = m4 >>> 0 < F4 >>> 0 ? D4 + 1 | 0 : D4, U4 = (l4 = m4) - -1048576 | 0, S4 = D4 = D4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (w4 = D4 >> 21) + k4 | 0, V4 = F4 = (D4 = (2097151 & D4) << 11 | U4 >>> 21) + b4 | 0, M4 = l4 = D4 >>> 0 > F4 >>> 0 ? l4 + 1 | 0 : l4, l4 = Wr(F4, l4, -683901, -1), w4 = h3 + H4 | 0, H4 = D4 = l4 + d4 | 0, F4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(C4, X4, 666643, 0), D4 = h3, w4 = l4, D4 = (l4 = IA4 >>> 4 & 2097151) >>> 0 > (w4 = w4 + l4 | 0) >>> 0 ? D4 + 1 | 0 : D4, k4 = (l4 = w4) + (w4 = Wr(e4, c4, 470296, 0)) | 0, l4 = h3 + D4 | 0, l4 = w4 >>> 0 > k4 >>> 0 ? l4 + 1 | 0 : l4, D4 = Wr(i4, K4, 654183, 0), w4 = h3 + l4 | 0, w4 = D4 >>> 0 > (k4 = D4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(T4, W4, -997805, -1), w4 = h3 + w4 | 0, w4 = l4 >>> 0 > (D4 = l4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, k4 = (l4 = D4) + (D4 = Wr(V4, M4, 136657, 0)) | 0, l4 = h3 + w4 | 0, d4 = l4 = D4 >>> 0 > k4 >>> 0 ? l4 + 1 | 0 : l4, Y4 = (l4 = k4) - -1048576 | 0, b4 = D4 = d4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (w4 = D4 >> 21) + F4 | 0, D4 = l4 = (D4 = (2097151 & D4) << 11 | Y4 >>> 21) >>> 0 > (F4 = H4 = D4 + H4 | 0) >>> 0 ? l4 + 1 | 0 : l4, x4 = (l4 = F4) - -1048576 | 0, l4 = (w4 = (H4 = v4 = D4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + J4 | 0, $4 = L4 = (v4 = (2097151 & H4) << 11 | x4 >>> 21) + P4 | 0, v4 = v4 >>> 0 > L4 >>> 0 ? l4 + 1 | 0 : l4, l4 = m4 - (w4 = -2097152 & U4) | 0, m4 = q4 - ((w4 >>> 0 > m4 >>> 0) + S4 | 0) | 0, S4 = l4, l4 = (l4 = G4 >> 21) + m4 | 0, U4 = l4 = (w4 = (2097151 & G4) << 11 | s4 >>> 21) >>> 0 > (m4 = G4 = S4 + w4 | 0) >>> 0 ? l4 + 1 | 0 : l4, L4 = (l4 = m4) - -1048576 | 0, q4 = G4 = U4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, J4 = l4 = G4 >> 21, l4 = Wr(X4 = (2097151 & G4) << 11 | L4 >>> 21, l4, -683901, -1), w4 = h3 + D4 | 0, w4 = l4 >>> 0 > (G4 = l4 + F4 | 0) >>> 0 ? w4 + 1 | 0 : w4, Z4 = (D4 = G4) - (l4 = -2097152 & x4) | 0, P4 = w4 - ((l4 >>> 0 > D4 >>> 0) + H4 | 0) | 0, w4 = Wr(X4, J4, 136657, 0) + k4 | 0, l4 = d4 + h3 | 0, l4 = w4 >>> 0 < k4 >>> 0 ? l4 + 1 | 0 : l4, AA4 = (D4 = w4) - (w4 = -2097152 & Y4) | 0, Y4 = l4 - ((w4 >>> 0 > D4 >>> 0) + b4 | 0) | 0, l4 = Wr(e4, c4, 666643, 0), w4 = h3, D4 = l4, w4 = (l4 = gA4 >>> 7 & 2097151) >>> 0 > (D4 = D4 + l4 | 0) >>> 0 ? w4 + 1 | 0 : w4, G4 = (l4 = Wr(i4, K4, 470296, 0)) + D4 | 0, D4 = h3 + w4 | 0, D4 = l4 >>> 0 > G4 >>> 0 ? D4 + 1 | 0 : D4, w4 = Wr(T4, W4, 654183, 0), l4 = h3 + D4 | 0, l4 = w4 >>> 0 > (G4 = w4 + G4 | 0) >>> 0 ? l4 + 1 | 0 : l4, w4 = Wr(V4, M4, -997805, -1), l4 = h3 + l4 | 0, b4 = D4 = w4 + G4 | 0, D4 = w4 >>> 0 > D4 >>> 0 ? l4 + 1 | 0 : l4, l4 = 2097151 & ((3 & u4) << 30 | p4 >>> 2), G4 = Wr(i4, K4, 666643, 0) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > G4 >>> 0 ? w4 + 1 | 0 : w4, l4 = Wr(T4, W4, 470296, 0), w4 = h3 + w4 | 0, w4 = l4 >>> 0 > (G4 = l4 + G4 | 0) >>> 0 ? w4 + 1 | 0 : w4, F4 = (l4 = G4) + (G4 = Wr(V4, M4, 654183, 0)) | 0, l4 = h3 + w4 | 0, H4 = l4 = G4 >>> 0 > F4 >>> 0 ? l4 + 1 | 0 : l4, x4 = (l4 = G4 = F4) - -1048576 | 0, l4 = (w4 = (k4 = F4 = H4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + D4 | 0, d4 = b4 = (F4 = (2097151 & k4) << 11 | x4 >>> 21) + b4 | 0, D4 = l4 = F4 >>> 0 > b4 >>> 0 ? l4 + 1 | 0 : l4, b4 = (l4 = b4) - -1048576 | 0, l4 = (w4 = (F4 = S4 = D4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + Y4 | 0, gA4 = K4 = (S4 = (2097151 & F4) << 11 | b4 >>> 21) + AA4 | 0, S4 = S4 >>> 0 > K4 >>> 0 ? l4 + 1 | 0 : l4, l4 = Wr(X4, J4, -997805, -1), D4 = h3 + D4 | 0, D4 = l4 >>> 0 > (w4 = l4 + d4 | 0) >>> 0 ? D4 + 1 | 0 : D4, IA4 = w4 - (l4 = -2097152 & b4) | 0, aA4 = D4 - ((l4 >>> 0 > w4 >>> 0) + F4 | 0) | 0, l4 = Wr(X4, J4, 654183, 0) + G4 | 0, w4 = H4 + h3 | 0, w4 = l4 >>> 0 < G4 >>> 0 ? w4 + 1 | 0 : w4, AA4 = (D4 = l4) - (l4 = -2097152 & x4) | 0, K4 = w4 - ((l4 >>> 0 > D4 >>> 0) + k4 | 0) | 0, l4 = Wr(T4, W4, 666643, 0), D4 = h3, w4 = l4, D4 = (l4 = E4 >>> 5 & 2097151) >>> 0 > (w4 = w4 + l4 | 0) >>> 0 ? D4 + 1 | 0 : D4, G4 = (l4 = w4) + (w4 = Wr(V4, M4, 470296, 0)) | 0, l4 = h3 + D4 | 0, k4 = G4, D4 = w4 >>> 0 > G4 >>> 0 ? l4 + 1 | 0 : l4, w4 = 2097151 & y4, G4 = Wr(V4, M4, 666643, 0) + w4 | 0, l4 = h3, F4 = G4, b4 = G4 = (d4 = l4 = w4 >>> 0 > G4 >>> 0 ? l4 + 1 | 0 : l4) - (((l4 = G4) >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (w4 = G4 >> 21) + D4 | 0, H4 = D4 = (l4 = (2097151 & G4) << 11 | (Y4 = l4 - -1048576 | 0) >>> 21) >>> 0 > (G4 = l4 + k4 | 0) >>> 0 ? D4 + 1 | 0 : D4, x4 = (l4 = G4) - -1048576 | 0, k4 = D4 = D4 - ((l4 >>> 0 < 4293918720) - 1 | 0) | 0, l4 = (w4 = D4 >> 21) + K4 | 0, D4 = l4 = (D4 = (2097151 & D4) << 11 | x4 >>> 21) >>> 0 > (M4 = D4 + AA4 | 0) >>> 0 ? l4 + 1 | 0 : l4, l4 = Wr(X4, J4, 470296, 0) + G4 | 0, w4 = H4 + h3 | 0, k4 = (w4 = l4 >>> 0 < G4 >>> 0 ? w4 + 1 | 0 : w4) - (((G4 = -2097152 & x4) >>> 0 > (H4 = l4) >>> 0) + k4 | 0) | 0, H4 = l4 = l4 - G4 | 0, G4 = (w4 = Wr(X4, J4, 666643, 0)) + (F4 - (l4 = -2097152 & Y4) | 0) | 0, l4 = h3 + (d4 - ((l4 >>> 0 > F4 >>> 0) + b4 | 0) | 0) | 0, F4 = G4, w4 = (w4 = (l4 = w4 >>> 0 > G4 >>> 0 ? l4 + 1 | 0 : l4) >> 21) + k4 | 0, W4 = G4 = H4 + (l4 = (2097151 & l4) << 11 | G4 >>> 21) | 0, D4 = (l4 = (w4 = l4 >>> 0 > G4 >>> 0 ? w4 + 1 | 0 : w4) >> 21) + D4 | 0, k4 = G4 = (w4 = (2097151 & w4) << 11 | G4 >>> 21) + M4 | 0, w4 = (D4 = w4 >>> 0 > (l4 = G4) >>> 0 ? D4 + 1 | 0 : D4) >> 21, D4 = (2097151 & D4) << 11 | l4 >>> 21, l4 = w4 + aA4 | 0, b4 = G4 = D4 + IA4 | 0, D4 = (l4 = D4 >>> 0 > (w4 = G4) >>> 0 ? l4 + 1 | 0 : l4) >> 21, l4 = (2097151 & l4) << 11 | w4 >>> 21, w4 = D4 + S4 | 0, S4 = G4 = l4 + gA4 | 0, l4 = (l4 = (w4 = l4 >>> 0 > (D4 = G4) >>> 0 ? w4 + 1 | 0 : w4) >> 21) + P4 | 0, M4 = D4 = (w4 = (2097151 & w4) << 11 | D4 >>> 21) + Z4 | 0, w4 = (w4 = (l4 = w4 >>> 0 > D4 >>> 0 ? l4 + 1 | 0 : l4) >> 21) + v4 | 0, J4 = D4 = (l4 = (2097151 & l4) << 11 | D4 >>> 21) + $4 | 0, l4 = (w4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4) >> 21, w4 = (2097151 & w4) << 11 | D4 >>> 21, D4 = l4 + z4 | 0, Y4 = G4 = w4 + O4 | 0, w4 = (D4 = w4 >>> 0 > (l4 = G4) >>> 0 ? D4 + 1 | 0 : D4) >> 21, D4 = (2097151 & D4) << 11 | l4 >>> 21, l4 = w4 + R4 | 0, x4 = G4 = D4 + j4 | 0, D4 = (l4 = D4 >>> 0 > (w4 = G4) >>> 0 ? l4 + 1 | 0 : l4) >> 21, l4 = (2097151 & l4) << 11 | w4 >>> 21, w4 = D4 + BA4 | 0, R4 = G4 = l4 + tA4 | 0, l4 = (l4 = (w4 = l4 >>> 0 > (D4 = G4) >>> 0 ? w4 + 1 | 0 : w4) >> 21) + N5 | 0, v4 = D4 = (w4 = (2097151 & w4) << 11 | D4 >>> 21) + rA4 | 0, w4 = (l4 = w4 >>> 0 > D4 >>> 0 ? l4 + 1 | 0 : l4) >> 21, G4 = (2097151 & l4) << 11 | D4 >>> 21, l4 = m4 - (D4 = -2097152 & L4) | 0, D4 = (U4 - ((D4 >>> 0 > m4 >>> 0) + q4 | 0) | 0) + w4 | 0, q4 = G4 = G4 + l4 | 0, N5 = (2097151 & (D4 = l4 >>> 0 > (w4 = G4) >>> 0 ? D4 + 1 | 0 : D4)) << 11 | w4 >>> 21, d4 = l4 = D4 >> 21, w4 = 2097151 & F4, D4 = Wr(N5, l4, 666643, 0) + w4 | 0, l4 = h3, H4 = D4, G4 = l4 = w4 >>> 0 > D4 >>> 0 ? l4 + 1 | 0 : l4, t3[0 | A8] = D4, t3[A8 + 1 | 0] = (255 & l4) << 24 | D4 >>> 8, l4 = 2097151 & W4, D4 = Wr(N5, d4, 470296, 0) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > D4 >>> 0 ? w4 + 1 | 0 : w4, F4 = D4, m4 = (2097151 & (D4 = G4)) << 11 | H4 >>> 21, D4 = (l4 = D4 >> 21) + w4 | 0, D4 = m4 >>> 0 > (U4 = F4 + m4 | 0) >>> 0 ? D4 + 1 | 0 : D4, m4 = U4, t3[A8 + 4 | 0] = (2047 & D4) << 21 | m4 >>> 11, l4 = w4 = D4, D4 = m4, t3[A8 + 3 | 0] = (7 & l4) << 29 | D4 >>> 3, D4 = 2097151 & k4, k4 = Wr(N5, d4, 654183, 0) + D4 | 0, l4 = h3, l4 = D4 >>> 0 > k4 >>> 0 ? l4 + 1 | 0 : l4, D4 = k4, k4 = (2097151 & w4) << 11 | m4 >>> 21, w4 = (w4 >> 21) + l4 | 0, w4 = k4 >>> 0 > (U4 = D4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, k4 = U4, l4 = w4, t3[A8 + 6 | 0] = (63 & l4) << 26 | k4 >>> 6, F4 = 0, D4 = 31 & ((65535 & G4) << 16 | H4 >>> 16), w4 = H4 = 2097151 & m4, t3[A8 + 2 | 0] = D4 | w4 << 5, D4 = 2097151 & b4, m4 = Wr(N5, d4, -997805, -1) + D4 | 0, w4 = h3, D4 = w4 = D4 >>> 0 > m4 >>> 0 ? w4 + 1 | 0 : w4, D4 = (w4 = l4 >> 21) + D4 | 0, b4 = m4 = (l4 = (2097151 & l4) << 11 | k4 >>> 21) + m4 | 0, D4 = l4 >>> 0 > m4 >>> 0 ? D4 + 1 | 0 : D4, t3[A8 + 9 | 0] = (511 & D4) << 23 | m4 >>> 9, l4 = w4 = D4, D4 = m4, t3[A8 + 8 | 0] = (1 & l4) << 31 | D4 >>> 1, m4 = 0, D4 = k4 &= 2097151, t3[A8 + 5 | 0] = (524287 & F4) << 13 | H4 >>> 19 | D4 << 2, D4 = 2097151 & S4, F4 = Wr(N5, d4, 136657, 0) + D4 | 0, l4 = h3, l4 = (l4 = D4 >>> 0 > F4 >>> 0 ? l4 + 1 | 0 : l4) + (D4 = w4 >> 21) | 0, H4 = F4 = (w4 = (2097151 & w4) << 11 | b4 >>> 21) + F4 | 0, l4 = w4 >>> 0 > F4 >>> 0 ? l4 + 1 | 0 : l4, w4 = F4, t3[A8 + 12 | 0] = (4095 & l4) << 20 | w4 >>> 12, D4 = l4, t3[A8 + 11 | 0] = (15 & l4) << 28 | w4 >>> 4, F4 = 0, w4 = S4 = 2097151 & b4, t3[A8 + 7 | 0] = (16383 & m4) << 18 | k4 >>> 14 | w4 << 7, l4 = 2097151 & M4, m4 = Wr(N5, d4, -683901, -1) + l4 | 0, w4 = h3, w4 = l4 >>> 0 > m4 >>> 0 ? w4 + 1 | 0 : w4, w4 = (l4 = D4 >> 21) + w4 | 0, k4 = m4 = (D4 = (2097151 & D4) << 11 | H4 >>> 21) + m4 | 0, l4 = w4 = D4 >>> 0 > m4 >>> 0 ? w4 + 1 | 0 : w4, t3[A8 + 14 | 0] = (127 & l4) << 25 | m4 >>> 7, m4 = 0, D4 = b4 = 2097151 & H4, t3[A8 + 10 | 0] = (131071 & F4) << 15 | S4 >>> 17 | D4 << 4, w4 = l4 >> 21, D4 = (l4 = (2097151 & l4) << 11 | k4 >>> 21) >>> 0 > (H4 = l4 + (2097151 & J4) | 0) >>> 0 ? w4 + 1 | 0 : w4, t3[A8 + 17 | 0] = (1023 & D4) << 22 | H4 >>> 10, l4 = D4, D4 = H4, t3[A8 + 16 | 0] = (3 & l4) << 30 | D4 >>> 2, D4 = d4 = 2097151 & k4, t3[A8 + 13 | 0] = (1048575 & m4) << 12 | b4 >>> 20 | D4 << 1, D4 = (2097151 & l4) << 11 | H4 >>> 21, l4 >>= 21, l4 = D4 >>> 0 > (k4 = D4 + (2097151 & Y4) | 0) >>> 0 ? l4 + 1 | 0 : l4, w4 = k4, t3[A8 + 20 | 0] = (8191 & l4) << 19 | w4 >>> 13, t3[A8 + 19 | 0] = (31 & l4) << 27 | w4 >>> 5, w4 = b4 = 2097151 & H4, t3[A8 + 15 | 0] = (32767 & F4) << 17 | d4 >>> 15 | w4 << 6, G4 = (2097151 & l4) << 11 | k4 >>> 21, l4 = w4 = l4 >> 21, G4 = l4 = G4 >>> 0 > (d4 = G4 + (2097151 & x4) | 0) >>> 0 ? l4 + 1 | 0 : l4, t3[A8 + 21 | 0] = d4, l4 = k4, t3[A8 + 18 | 0] = (262143 & m4) << 14 | b4 >>> 18 | l4 << 3, l4 = G4, t3[A8 + 22 | 0] = (255 & l4) << 24 | d4 >>> 8, D4 = l4, l4 >>= 21, D4 = (k4 = (F4 = (2097151 & D4) << 11 | d4 >>> 21) + (2097151 & R4) | 0) >>> 0 < F4 >>> 0 ? l4 + 1 | 0 : l4, t3[(w4 = A8) + 25 | 0] = (2047 & D4) << 21 | k4 >>> 11, l4 = D4, D4 = k4, t3[w4 + 24 | 0] = (7 & l4) << 29 | D4 >>> 3, D4 = w4, F4 = (2097151 & l4) << 11 | k4 >>> 21, l4 >>= 21, w4 = l4 = F4 >>> 0 > (m4 = H4 = F4 + (2097151 & v4) | 0) >>> 0 ? l4 + 1 | 0 : l4, t3[D4 + 27 | 0] = (63 & l4) << 26 | m4 >>> 6, F4 = 0, l4 = H4 = 2097151 & k4, t3[D4 + 23 | 0] = 31 & ((65535 & G4) << 16 | d4 >>> 16) | l4 << 5, w4 = (l4 = w4) >> 21, w4 = (l4 = (2097151 & l4) << 11 | m4 >>> 21) >>> 0 > (G4 = l4 + (2097151 & q4) | 0) >>> 0 ? w4 + 1 | 0 : w4, D4 = G4, t3[A8 + 31 | 0] = (131071 & w4) << 15 | D4 >>> 17, l4 = w4, t3[A8 + 30 | 0] = (511 & l4) << 23 | D4 >>> 9, t3[A8 + 29 | 0] = (1 & l4) << 31 | D4 >>> 1, w4 = 0, m4 &= 2097151, t3[A8 + 26 | 0] = (524287 & F4) << 13 | H4 >>> 19 | m4 << 2, t3[A8 + 28 | 0] = (16383 & w4) << 18 | m4 >>> 14 | D4 << 7;
                    }
                    function k3(A8) {
                      var g7, I6 = 0, a4 = 0, r4 = 0, t4 = 0, B4 = 0, Q4 = 0, C4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0;
                      u3 = g7 = u3 - 16 | 0;
                      A: {
                        g: {
                          I: {
                            a: {
                              r: {
                                t: {
                                  B: {
                                    n: {
                                      o: {
                                        e: {
                                          Q: {
                                            C: {
                                              if ((A8 |= 0) >>> 0 <= 244) {
                                                if (3 & (I6 = (B4 = n3[9185]) >>> (a4 = (i4 = A8 >>> 0 < 11 ? 16 : A8 + 11 & -8) >>> 3 | 0) | 0)) {
                                                  A8 = (t4 = n3[36788 + (I6 = (r4 = a4 + (1 & (-1 ^ I6)) | 0) << 3) >> 2]) + 8 | 0, (0 | (a4 = n3[t4 + 8 >> 2])) != (0 | (I6 = I6 + 36780 | 0)) ? (n3[a4 + 12 >> 2] = I6, n3[I6 + 8 >> 2] = a4) : (E4 = 36740, p4 = fa(-2, r4) & B4, n3[E4 >> 2] = p4), I6 = r4 << 3, n3[t4 + 4 >> 2] = 3 | I6, n3[4 + (I6 = I6 + t4 | 0) >> 2] = 1 | n3[I6 + 4 >> 2];
                                                  break A;
                                                }
                                                if ((s4 = n3[9187]) >>> 0 >= i4 >>> 0)
                                                  break C;
                                                if (I6) {
                                                  a4 = A8 = (I6 = (0 - (A8 = (0 - (A8 = 2 << a4) | A8) & I6 << a4) & A8) - 1 | 0) >>> 12 & 16, a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 5 & 8, a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 2 & 4, Q4 = n3[36788 + (A8 = (a4 = ((a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 1 & 2) | (A8 = (I6 = I6 >>> A8 | 0) >>> 1 & 1)) + (I6 >>> A8 | 0) | 0) << 3) >> 2], (0 | (I6 = n3[Q4 + 8 >> 2])) != (0 | (A8 = A8 + 36780 | 0)) ? (n3[I6 + 12 >> 2] = A8, n3[A8 + 8 >> 2] = I6) : (B4 = fa(-2, a4) & B4, n3[9185] = B4), A8 = Q4 + 8 | 0, n3[Q4 + 4 >> 2] = 3 | i4, t4 = (I6 = a4 << 3) - i4 | 0, n3[4 + (r4 = Q4 + i4 | 0) >> 2] = 1 | t4, n3[I6 + Q4 >> 2] = t4, s4 && (a4 = 36780 + ((I6 = s4 >>> 3 | 0) << 3) | 0, Q4 = n3[9190], (I6 = 1 << I6) & B4 ? I6 = n3[a4 + 8 >> 2] : (n3[9185] = I6 | B4, I6 = a4), n3[a4 + 8 >> 2] = Q4, n3[I6 + 12 >> 2] = Q4, n3[Q4 + 12 >> 2] = a4, n3[Q4 + 8 >> 2] = I6), n3[9190] = r4, n3[9187] = t4;
                                                  break A;
                                                }
                                                if (!(C4 = n3[9186]))
                                                  break C;
                                                for (a4 = A8 = (I6 = (C4 & 0 - C4) - 1 | 0) >>> 12 & 16, a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 5 & 8, a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 2 & 4, I6 = n3[37044 + (((a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 1 & 2) | (A8 = (I6 = I6 >>> A8 | 0) >>> 1 & 1)) + (I6 >>> A8 | 0) << 2) >> 2], t4 = (-8 & n3[I6 + 4 >> 2]) - i4 | 0, a4 = I6; (A8 = n3[a4 + 16 >> 2]) || (A8 = n3[a4 + 20 >> 2]); )
                                                  t4 = (r4 = (a4 = (-8 & n3[A8 + 4 >> 2]) - i4 | 0) >>> 0 < t4 >>> 0) ? a4 : t4, I6 = r4 ? A8 : I6, a4 = A8;
                                                if ((_4 = I6 + i4 | 0) >>> 0 <= I6 >>> 0)
                                                  break Q;
                                                if (y4 = n3[I6 + 24 >> 2], (0 | (r4 = n3[I6 + 12 >> 2])) != (0 | I6)) {
                                                  A8 = n3[I6 + 8 >> 2], n3[A8 + 12 >> 2] = r4, n3[r4 + 8 >> 2] = A8;
                                                  break g;
                                                }
                                                if (!(A8 = n3[(a4 = I6 + 20 | 0) >> 2])) {
                                                  if (!(A8 = n3[I6 + 16 >> 2]))
                                                    break e;
                                                  a4 = I6 + 16 | 0;
                                                }
                                                for (; Q4 = a4, r4 = A8, (A8 = n3[(a4 = A8 + 20 | 0) >> 2]) || (a4 = r4 + 16 | 0, A8 = n3[r4 + 16 >> 2]); )
                                                  ;
                                                n3[Q4 >> 2] = 0;
                                                break g;
                                              }
                                              if (i4 = -1, !(A8 >>> 0 > 4294967231) && (i4 = -8 & (A8 = A8 + 11 | 0), _4 = n3[9186])) {
                                                B4 = 31, t4 = 0 - i4 | 0, i4 >>> 0 <= 16777215 && (A8 = A8 >>> 8 | 0, A8 <<= Q4 = A8 + 1048320 >>> 16 & 8, B4 = 28 + ((A8 = ((A8 <<= a4 = A8 + 520192 >>> 16 & 4) << (I6 = A8 + 245760 >>> 16 & 2) >>> 15 | 0) - (I6 | a4 | Q4) | 0) << 1 | i4 >>> A8 + 21 & 1) | 0);
                                                c: {
                                                  i: {
                                                    if (a4 = n3[37044 + (B4 << 2) >> 2])
                                                      for (A8 = 0, I6 = i4 << ((0 | B4) == 31 ? 0 : 25 - (B4 >>> 1 | 0) | 0); ; ) {
                                                        if (!((Q4 = (-8 & n3[a4 + 4 >> 2]) - i4 | 0) >>> 0 >= t4 >>> 0 || (r4 = a4, t4 = Q4))) {
                                                          t4 = 0, A8 = a4;
                                                          break i;
                                                        }
                                                        if (Q4 = n3[a4 + 20 >> 2], a4 = n3[16 + ((I6 >>> 29 & 4) + a4 | 0) >> 2], A8 = Q4 ? (0 | Q4) == (0 | a4) ? A8 : Q4 : A8, I6 <<= 1, !a4)
                                                          break;
                                                      }
                                                    else
                                                      A8 = 0;
                                                    if (!(A8 | r4)) {
                                                      if (!(A8 = (0 - (A8 = 2 << B4) | A8) & _4))
                                                        break C;
                                                      a4 = A8 = (I6 = (A8 & 0 - A8) - 1 | 0) >>> 12 & 16, a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 5 & 8, a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 2 & 4, A8 = n3[37044 + (((a4 |= A8 = (I6 = I6 >>> A8 | 0) >>> 1 & 2) | (A8 = (I6 = I6 >>> A8 | 0) >>> 1 & 1)) + (I6 >>> A8 | 0) << 2) >> 2];
                                                    }
                                                    if (!A8)
                                                      break c;
                                                  }
                                                  for (; t4 = (a4 = (I6 = (-8 & n3[A8 + 4 >> 2]) - i4 | 0) >>> 0 < t4 >>> 0) ? I6 : t4, r4 = a4 ? A8 : r4, A8 = (I6 = n3[A8 + 16 >> 2]) || n3[A8 + 20 >> 2]; )
                                                    ;
                                                }
                                                if (!(!r4 | n3[9187] - i4 >>> 0 <= t4 >>> 0)) {
                                                  if ((C4 = r4 + i4 | 0) >>> 0 <= r4 >>> 0)
                                                    break Q;
                                                  if (B4 = n3[r4 + 24 >> 2], (0 | r4) != (0 | (I6 = n3[r4 + 12 >> 2]))) {
                                                    A8 = n3[r4 + 8 >> 2], n3[A8 + 12 >> 2] = I6, n3[I6 + 8 >> 2] = A8;
                                                    break I;
                                                  }
                                                  if (!(A8 = n3[(a4 = r4 + 20 | 0) >> 2])) {
                                                    if (!(A8 = n3[r4 + 16 >> 2]))
                                                      break o;
                                                    a4 = r4 + 16 | 0;
                                                  }
                                                  for (; Q4 = a4, I6 = A8, (A8 = n3[(a4 = A8 + 20 | 0) >> 2]) || (a4 = I6 + 16 | 0, A8 = n3[I6 + 16 >> 2]); )
                                                    ;
                                                  n3[Q4 >> 2] = 0;
                                                  break I;
                                                }
                                              }
                                            }
                                            if ((a4 = n3[9187]) >>> 0 >= i4 >>> 0) {
                                              r4 = n3[9190], (I6 = a4 - i4 | 0) >>> 0 >= 16 ? (n3[9187] = I6, A8 = r4 + i4 | 0, n3[9190] = A8, n3[A8 + 4 >> 2] = 1 | I6, n3[a4 + r4 >> 2] = I6, n3[r4 + 4 >> 2] = 3 | i4) : (n3[9190] = 0, n3[9187] = 0, n3[r4 + 4 >> 2] = 3 | a4, n3[4 + (A8 = a4 + r4 | 0) >> 2] = 1 | n3[A8 + 4 >> 2]), A8 = r4 + 8 | 0;
                                              break A;
                                            }
                                            if ((C4 = n3[9188]) >>> 0 > i4 >>> 0) {
                                              I6 = C4 - i4 | 0, n3[9188] = I6, A8 = (a4 = n3[9191]) + i4 | 0, n3[9191] = A8, n3[A8 + 4 >> 2] = 1 | I6, n3[a4 + 4 >> 2] = 3 | i4, A8 = a4 + 8 | 0;
                                              break A;
                                            }
                                            if (A8 = 0, I6 = _4 = i4 + 47 | 0, n3[9303] ? a4 = n3[9305] : (n3[9306] = -1, n3[9307] = -1, n3[9304] = 4096, n3[9305] = 4096, n3[9303] = g7 + 12 & -16 ^ 1431655768, n3[9308] = 0, n3[9296] = 0, a4 = 4096), (a4 = (Q4 = I6 + a4 | 0) & (t4 = 0 - a4 | 0)) >>> 0 <= i4 >>> 0)
                                              break A;
                                            if ((r4 = n3[9295]) && r4 >>> 0 < (B4 = (I6 = n3[9293]) + a4 | 0) >>> 0 | I6 >>> 0 >= B4 >>> 0)
                                              break A;
                                            if (4 & o3[37184])
                                              break t;
                                            C: {
                                              c: {
                                                if (r4 = n3[9191])
                                                  for (A8 = 37188; ; ) {
                                                    if (r4 >>> 0 < (I6 = n3[A8 >> 2]) + n3[A8 + 4 >> 2] >>> 0 && I6 >>> 0 <= r4 >>> 0)
                                                      break c;
                                                    if (!(A8 = n3[A8 + 8 >> 2]))
                                                      break;
                                                  }
                                                if ((0 | (I6 = jg(0))) == -1)
                                                  break B;
                                                if (B4 = a4, (A8 = (r4 = n3[9304]) - 1 | 0) & I6 && (B4 = (a4 - I6 | 0) + (A8 + I6 & 0 - r4) | 0), B4 >>> 0 <= i4 >>> 0 | B4 >>> 0 > 2147483646)
                                                  break B;
                                                if ((r4 = n3[9295]) && r4 >>> 0 < (t4 = (A8 = n3[9293]) + B4 | 0) >>> 0 | A8 >>> 0 >= t4 >>> 0)
                                                  break B;
                                                if ((0 | I6) != (0 | (A8 = jg(B4))))
                                                  break C;
                                                break r;
                                              }
                                              if ((B4 = t4 & Q4 - C4) >>> 0 > 2147483646)
                                                break B;
                                              if ((0 | (I6 = jg(B4))) == (n3[A8 >> 2] + n3[A8 + 4 >> 2] | 0))
                                                break n;
                                              A8 = I6;
                                            }
                                            if (!((0 | A8) == -1 | i4 + 48 >>> 0 <= B4 >>> 0)) {
                                              if ((I6 = (I6 = n3[9305]) + (_4 - B4 | 0) & 0 - I6) >>> 0 > 2147483646) {
                                                I6 = A8;
                                                break r;
                                              }
                                              if ((0 | jg(I6)) != -1) {
                                                B4 = I6 + B4 | 0, I6 = A8;
                                                break r;
                                              }
                                              jg(0 - B4 | 0);
                                              break B;
                                            }
                                            if (I6 = A8, (0 | A8) != -1)
                                              break r;
                                            break B;
                                          }
                                          c3();
                                        }
                                        r4 = 0;
                                        break g;
                                      }
                                      I6 = 0;
                                      break I;
                                    }
                                    if ((0 | I6) != -1)
                                      break r;
                                  }
                                  n3[9296] = 4 | n3[9296];
                                }
                                if (a4 >>> 0 > 2147483646)
                                  break a;
                                if ((I6 = jg(a4)) >>> 0 >= (A8 = jg(0)) >>> 0 | (0 | I6) == -1 | (0 | A8) == -1)
                                  break a;
                                if ((B4 = A8 - I6 | 0) >>> 0 <= i4 + 40 >>> 0)
                                  break a;
                              }
                              A8 = n3[9293] + B4 | 0, n3[9293] = A8, A8 >>> 0 > e3[9294] && (n3[9294] = A8);
                              r: {
                                t: {
                                  B: {
                                    if (Q4 = n3[9191]) {
                                      for (A8 = 37188; ; ) {
                                        if (((r4 = n3[A8 >> 2]) + (a4 = n3[A8 + 4 >> 2]) | 0) == (0 | I6))
                                          break B;
                                        if (!(A8 = n3[A8 + 8 >> 2]))
                                          break;
                                      }
                                      break t;
                                    }
                                    for ((A8 = n3[9189]) >>> 0 <= I6 >>> 0 && A8 || (n3[9189] = I6), A8 = 0, n3[9298] = B4, n3[9297] = I6, n3[9193] = -1, n3[9194] = n3[9303], n3[9300] = 0; a4 = 36780 + (r4 = A8 << 3) | 0, n3[r4 + 36788 >> 2] = a4, n3[r4 + 36792 >> 2] = a4, (0 | (A8 = A8 + 1 | 0)) != 32; )
                                      ;
                                    a4 = (r4 = B4 - 40 | 0) - (A8 = I6 + 8 & 7 ? -8 - I6 & 7 : 0) | 0, n3[9188] = a4, A8 = A8 + I6 | 0, n3[9191] = A8, n3[A8 + 4 >> 2] = 1 | a4, n3[4 + (I6 + r4 | 0) >> 2] = 40, n3[9192] = n3[9307];
                                    break r;
                                  }
                                  if (!(8 & o3[A8 + 12 | 0] | I6 >>> 0 <= Q4 >>> 0 | r4 >>> 0 > Q4 >>> 0)) {
                                    n3[A8 + 4 >> 2] = a4 + B4, a4 = (A8 = Q4 + 8 & 7 ? -8 - Q4 & 7 : 0) + Q4 | 0, n3[9191] = a4, A8 = (I6 = n3[9188] + B4 | 0) - A8 | 0, n3[9188] = A8, n3[a4 + 4 >> 2] = 1 | A8, n3[4 + (I6 + Q4 | 0) >> 2] = 40, n3[9192] = n3[9307];
                                    break r;
                                  }
                                }
                                (r4 = n3[9189]) >>> 0 > I6 >>> 0 && (n3[9189] = I6, r4 = 0), a4 = I6 + B4 | 0, A8 = 37188;
                                t: {
                                  B: {
                                    n: {
                                      o: {
                                        e: {
                                          Q: {
                                            for (; ; ) {
                                              if ((0 | a4) != n3[A8 >> 2]) {
                                                if (A8 = n3[A8 + 8 >> 2])
                                                  continue;
                                                break Q;
                                              }
                                              break;
                                            }
                                            if (!(8 & o3[A8 + 12 | 0]))
                                              break e;
                                          }
                                          for (A8 = 37188; ; ) {
                                            if ((a4 = n3[A8 >> 2]) >>> 0 <= Q4 >>> 0 && (t4 = a4 + n3[A8 + 4 >> 2] | 0) >>> 0 > Q4 >>> 0)
                                              break o;
                                            A8 = n3[A8 + 8 >> 2];
                                          }
                                        }
                                        if (n3[A8 >> 2] = I6, n3[A8 + 4 >> 2] = n3[A8 + 4 >> 2] + B4, n3[4 + (_4 = (I6 + 8 & 7 ? -8 - I6 & 7 : 0) + I6 | 0) >> 2] = 3 | i4, a4 = ((B4 = a4 + (a4 + 8 & 7 ? -8 - a4 & 7 : 0) | 0) - _4 | 0) - i4 | 0, C4 = i4 + _4 | 0, (0 | B4) == (0 | Q4)) {
                                          n3[9191] = C4, A8 = n3[9188] + a4 | 0, n3[9188] = A8, n3[C4 + 4 >> 2] = 1 | A8;
                                          break B;
                                        }
                                        if (n3[9190] == (0 | B4)) {
                                          n3[9190] = C4, A8 = n3[9187] + a4 | 0, n3[9187] = A8, n3[C4 + 4 >> 2] = 1 | A8, n3[A8 + C4 >> 2] = A8;
                                          break B;
                                        }
                                        if ((3 & (A8 = n3[B4 + 4 >> 2])) == 1) {
                                          Q4 = -8 & A8;
                                          e:
                                            if (A8 >>> 0 <= 255) {
                                              if (r4 = n3[B4 + 8 >> 2], A8 = A8 >>> 3 | 0, (0 | (I6 = n3[B4 + 12 >> 2])) == (0 | r4)) {
                                                E4 = 36740, p4 = n3[9185] & fa(-2, A8), n3[E4 >> 2] = p4;
                                                break e;
                                              }
                                              n3[r4 + 12 >> 2] = I6, n3[I6 + 8 >> 2] = r4;
                                            } else {
                                              if (i4 = n3[B4 + 24 >> 2], (0 | B4) == (0 | (I6 = n3[B4 + 12 >> 2])))
                                                if ((t4 = n3[(A8 = B4 + 20 | 0) >> 2]) || (t4 = n3[(A8 = B4 + 16 | 0) >> 2])) {
                                                  for (; r4 = A8, (t4 = n3[(A8 = (I6 = t4) + 20 | 0) >> 2]) || (A8 = I6 + 16 | 0, t4 = n3[I6 + 16 >> 2]); )
                                                    ;
                                                  n3[r4 >> 2] = 0;
                                                } else
                                                  I6 = 0;
                                              else
                                                A8 = n3[B4 + 8 >> 2], n3[A8 + 12 >> 2] = I6, n3[I6 + 8 >> 2] = A8;
                                              if (i4) {
                                                r4 = n3[B4 + 28 >> 2];
                                                Q: {
                                                  if (n3[(A8 = 37044 + (r4 << 2) | 0) >> 2] == (0 | B4)) {
                                                    if (n3[A8 >> 2] = I6, I6)
                                                      break Q;
                                                    E4 = 36744, p4 = n3[9186] & fa(-2, r4), n3[E4 >> 2] = p4;
                                                    break e;
                                                  }
                                                  if (n3[i4 + (n3[i4 + 16 >> 2] == (0 | B4) ? 16 : 20) >> 2] = I6, !I6)
                                                    break e;
                                                }
                                                n3[I6 + 24 >> 2] = i4, (A8 = n3[B4 + 16 >> 2]) && (n3[I6 + 16 >> 2] = A8, n3[A8 + 24 >> 2] = I6), (A8 = n3[B4 + 20 >> 2]) && (n3[I6 + 20 >> 2] = A8, n3[A8 + 24 >> 2] = I6);
                                              }
                                            }
                                          B4 = B4 + Q4 | 0, a4 = a4 + Q4 | 0;
                                        }
                                        if (n3[B4 + 4 >> 2] = -2 & n3[B4 + 4 >> 2], n3[C4 + 4 >> 2] = 1 | a4, n3[a4 + C4 >> 2] = a4, a4 >>> 0 <= 255) {
                                          I6 = 36780 + ((A8 = a4 >>> 3 | 0) << 3) | 0, (a4 = n3[9185]) & (A8 = 1 << A8) ? A8 = n3[I6 + 8 >> 2] : (n3[9185] = A8 | a4, A8 = I6), n3[I6 + 8 >> 2] = C4, n3[A8 + 12 >> 2] = C4, n3[C4 + 12 >> 2] = I6, n3[C4 + 8 >> 2] = A8;
                                          break B;
                                        }
                                        if (A8 = 31, a4 >>> 0 <= 16777215 && (A8 = a4 >>> 8 | 0, A8 <<= t4 = A8 + 1048320 >>> 16 & 8, A8 = 28 + ((A8 = ((A8 <<= r4 = A8 + 520192 >>> 16 & 4) << (I6 = A8 + 245760 >>> 16 & 2) >>> 15 | 0) - (I6 | r4 | t4) | 0) << 1 | a4 >>> A8 + 21 & 1) | 0), n3[C4 + 28 >> 2] = A8, n3[C4 + 16 >> 2] = 0, n3[C4 + 20 >> 2] = 0, t4 = 37044 + (A8 << 2) | 0, (r4 = n3[9186]) & (I6 = 1 << A8)) {
                                          for (A8 = a4 << ((0 | A8) == 31 ? 0 : 25 - (A8 >>> 1 | 0) | 0), I6 = n3[t4 >> 2]; ; ) {
                                            if (r4 = I6, (-8 & n3[I6 + 4 >> 2]) == (0 | a4))
                                              break n;
                                            if (I6 = A8 >>> 29 | 0, A8 <<= 1, !(I6 = n3[16 + (t4 = r4 + (4 & I6) | 0) >> 2]))
                                              break;
                                          }
                                          n3[t4 + 16 >> 2] = C4, n3[C4 + 24 >> 2] = r4;
                                        } else
                                          n3[9186] = I6 | r4, n3[t4 >> 2] = C4, n3[C4 + 24 >> 2] = t4;
                                        n3[C4 + 12 >> 2] = C4, n3[C4 + 8 >> 2] = C4;
                                        break B;
                                      }
                                      for (a4 = (r4 = B4 - 40 | 0) - (A8 = I6 + 8 & 7 ? -8 - I6 & 7 : 0) | 0, n3[9188] = a4, A8 = A8 + I6 | 0, n3[9191] = A8, n3[A8 + 4 >> 2] = 1 | a4, n3[4 + (I6 + r4 | 0) >> 2] = 40, n3[9192] = n3[9307], n3[(a4 = (A8 = (t4 + (t4 - 39 & 7 ? 39 - t4 & 7 : 0) | 0) - 47 | 0) >>> 0 < Q4 + 16 >>> 0 ? Q4 : A8) + 4 >> 2] = 27, A8 = n3[9300], n3[a4 + 16 >> 2] = n3[9299], n3[a4 + 20 >> 2] = A8, A8 = n3[9298], n3[a4 + 8 >> 2] = n3[9297], n3[a4 + 12 >> 2] = A8, n3[9299] = a4 + 8, n3[9298] = B4, n3[9297] = I6, n3[9300] = 0, A8 = a4 + 24 | 0; n3[A8 + 4 >> 2] = 7, I6 = A8 + 8 | 0, A8 = A8 + 4 | 0, I6 >>> 0 < t4 >>> 0; )
                                        ;
                                      if ((0 | a4) == (0 | Q4))
                                        break r;
                                      if (n3[a4 + 4 >> 2] = -2 & n3[a4 + 4 >> 2], t4 = a4 - Q4 | 0, n3[Q4 + 4 >> 2] = 1 | t4, n3[a4 >> 2] = t4, t4 >>> 0 <= 255) {
                                        I6 = 36780 + ((A8 = t4 >>> 3 | 0) << 3) | 0, (a4 = n3[9185]) & (A8 = 1 << A8) ? A8 = n3[I6 + 8 >> 2] : (n3[9185] = A8 | a4, A8 = I6), n3[I6 + 8 >> 2] = Q4, n3[A8 + 12 >> 2] = Q4, n3[Q4 + 12 >> 2] = I6, n3[Q4 + 8 >> 2] = A8;
                                        break r;
                                      }
                                      if (A8 = 31, n3[Q4 + 16 >> 2] = 0, n3[Q4 + 20 >> 2] = 0, t4 >>> 0 <= 16777215 && (A8 = t4 >>> 8 | 0, A8 <<= r4 = A8 + 1048320 >>> 16 & 8, A8 = 28 + ((A8 = ((A8 <<= a4 = A8 + 520192 >>> 16 & 4) << (I6 = A8 + 245760 >>> 16 & 2) >>> 15 | 0) - (I6 | a4 | r4) | 0) << 1 | t4 >>> A8 + 21 & 1) | 0), n3[Q4 + 28 >> 2] = A8, r4 = 37044 + (A8 << 2) | 0, (a4 = n3[9186]) & (I6 = 1 << A8)) {
                                        for (A8 = t4 << ((0 | A8) == 31 ? 0 : 25 - (A8 >>> 1 | 0) | 0), I6 = n3[r4 >> 2]; ; ) {
                                          if (a4 = I6, (0 | t4) == (-8 & n3[I6 + 4 >> 2]))
                                            break t;
                                          if (I6 = A8 >>> 29 | 0, A8 <<= 1, !(I6 = n3[16 + (r4 = a4 + (4 & I6) | 0) >> 2]))
                                            break;
                                        }
                                        n3[r4 + 16 >> 2] = Q4, n3[Q4 + 24 >> 2] = a4;
                                      } else
                                        n3[9186] = I6 | a4, n3[r4 >> 2] = Q4, n3[Q4 + 24 >> 2] = r4;
                                      n3[Q4 + 12 >> 2] = Q4, n3[Q4 + 8 >> 2] = Q4;
                                      break r;
                                    }
                                    A8 = n3[r4 + 8 >> 2], n3[A8 + 12 >> 2] = C4, n3[r4 + 8 >> 2] = C4, n3[C4 + 24 >> 2] = 0, n3[C4 + 12 >> 2] = r4, n3[C4 + 8 >> 2] = A8;
                                  }
                                  A8 = _4 + 8 | 0;
                                  break A;
                                }
                                A8 = n3[a4 + 8 >> 2], n3[A8 + 12 >> 2] = Q4, n3[a4 + 8 >> 2] = Q4, n3[Q4 + 24 >> 2] = 0, n3[Q4 + 12 >> 2] = a4, n3[Q4 + 8 >> 2] = A8;
                              }
                              if (!((A8 = n3[9188]) >>> 0 <= i4 >>> 0)) {
                                I6 = A8 - i4 | 0, n3[9188] = I6, A8 = (a4 = n3[9191]) + i4 | 0, n3[9191] = A8, n3[A8 + 4 >> 2] = 1 | I6, n3[a4 + 4 >> 2] = 3 | i4, A8 = a4 + 8 | 0;
                                break A;
                              }
                            }
                            n3[9184] = 48, A8 = 0;
                            break A;
                          }
                          I:
                            if (B4) {
                              a4 = n3[r4 + 28 >> 2];
                              a: {
                                if (n3[(A8 = 37044 + (a4 << 2) | 0) >> 2] == (0 | r4)) {
                                  if (n3[A8 >> 2] = I6, I6)
                                    break a;
                                  _4 = fa(-2, a4) & _4, n3[9186] = _4;
                                  break I;
                                }
                                if (n3[B4 + (n3[B4 + 16 >> 2] == (0 | r4) ? 16 : 20) >> 2] = I6, !I6)
                                  break I;
                              }
                              n3[I6 + 24 >> 2] = B4, (A8 = n3[r4 + 16 >> 2]) && (n3[I6 + 16 >> 2] = A8, n3[A8 + 24 >> 2] = I6), (A8 = n3[r4 + 20 >> 2]) && (n3[I6 + 20 >> 2] = A8, n3[A8 + 24 >> 2] = I6);
                            }
                          I:
                            if (t4 >>> 0 <= 15)
                              A8 = t4 + i4 | 0, n3[r4 + 4 >> 2] = 3 | A8, n3[4 + (A8 = A8 + r4 | 0) >> 2] = 1 | n3[A8 + 4 >> 2];
                            else if (n3[r4 + 4 >> 2] = 3 | i4, n3[C4 + 4 >> 2] = 1 | t4, n3[t4 + C4 >> 2] = t4, t4 >>> 0 <= 255)
                              I6 = 36780 + ((A8 = t4 >>> 3 | 0) << 3) | 0, (a4 = n3[9185]) & (A8 = 1 << A8) ? A8 = n3[I6 + 8 >> 2] : (n3[9185] = A8 | a4, A8 = I6), n3[I6 + 8 >> 2] = C4, n3[A8 + 12 >> 2] = C4, n3[C4 + 12 >> 2] = I6, n3[C4 + 8 >> 2] = A8;
                            else {
                              A8 = 31, t4 >>> 0 <= 16777215 && (A8 = t4 >>> 8 | 0, A8 <<= Q4 = A8 + 1048320 >>> 16 & 8, A8 = 28 + ((A8 = ((A8 <<= a4 = A8 + 520192 >>> 16 & 4) << (I6 = A8 + 245760 >>> 16 & 2) >>> 15 | 0) - (I6 | a4 | Q4) | 0) << 1 | t4 >>> A8 + 21 & 1) | 0), n3[C4 + 28 >> 2] = A8, n3[C4 + 16 >> 2] = 0, n3[C4 + 20 >> 2] = 0, a4 = 37044 + (A8 << 2) | 0;
                              a: {
                                if ((I6 = 1 << A8) & _4) {
                                  for (A8 = t4 << ((0 | A8) == 31 ? 0 : 25 - (A8 >>> 1 | 0) | 0), i4 = n3[a4 >> 2]; ; ) {
                                    if ((-8 & n3[(I6 = i4) + 4 >> 2]) == (0 | t4))
                                      break a;
                                    if (a4 = A8 >>> 29 | 0, A8 <<= 1, !(i4 = n3[16 + (a4 = I6 + (4 & a4) | 0) >> 2]))
                                      break;
                                  }
                                  n3[a4 + 16 >> 2] = C4, n3[C4 + 24 >> 2] = I6;
                                } else
                                  n3[9186] = I6 | _4, n3[a4 >> 2] = C4, n3[C4 + 24 >> 2] = a4;
                                n3[C4 + 12 >> 2] = C4, n3[C4 + 8 >> 2] = C4;
                                break I;
                              }
                              A8 = n3[I6 + 8 >> 2], n3[A8 + 12 >> 2] = C4, n3[I6 + 8 >> 2] = C4, n3[C4 + 24 >> 2] = 0, n3[C4 + 12 >> 2] = I6, n3[C4 + 8 >> 2] = A8;
                            }
                          A8 = r4 + 8 | 0;
                          break A;
                        }
                        g:
                          if (y4) {
                            a4 = n3[I6 + 28 >> 2];
                            I: {
                              if (n3[(A8 = 37044 + (a4 << 2) | 0) >> 2] == (0 | I6)) {
                                if (n3[A8 >> 2] = r4, r4)
                                  break I;
                                E4 = 36744, p4 = fa(-2, a4) & C4, n3[E4 >> 2] = p4;
                                break g;
                              }
                              if (n3[(n3[y4 + 16 >> 2] == (0 | I6) ? 16 : 20) + y4 >> 2] = r4, !r4)
                                break g;
                            }
                            n3[r4 + 24 >> 2] = y4, (A8 = n3[I6 + 16 >> 2]) && (n3[r4 + 16 >> 2] = A8, n3[A8 + 24 >> 2] = r4), (A8 = n3[I6 + 20 >> 2]) && (n3[r4 + 20 >> 2] = A8, n3[A8 + 24 >> 2] = r4);
                          }
                        t4 >>> 0 <= 15 ? (A8 = t4 + i4 | 0, n3[I6 + 4 >> 2] = 3 | A8, n3[4 + (A8 = A8 + I6 | 0) >> 2] = 1 | n3[A8 + 4 >> 2]) : (n3[I6 + 4 >> 2] = 3 | i4, n3[_4 + 4 >> 2] = 1 | t4, n3[t4 + _4 >> 2] = t4, s4 && (a4 = 36780 + ((A8 = s4 >>> 3 | 0) << 3) | 0, r4 = n3[9190], (A8 = 1 << A8) & B4 ? A8 = n3[a4 + 8 >> 2] : (n3[9185] = A8 | B4, A8 = a4), n3[a4 + 8 >> 2] = r4, n3[A8 + 12 >> 2] = r4, n3[r4 + 12 >> 2] = a4, n3[r4 + 8 >> 2] = A8), n3[9190] = _4, n3[9187] = t4), A8 = I6 + 8 | 0;
                      }
                      return u3 = g7 + 16 | 0, 0 | A8;
                    }
                    function F3(A8, g7, I6) {
                      var a4, r4, t4, B4, o4, e4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4, w4, D4, m4, G4, k4, F4, b4, H4, d4, S4, v4, U4, J4, Y4, x4, N5, M4, R4, P4, q4, L4, K4, X4, V4, W4, T4, Z4, j4, z4, O4, $4, AA4, gA4, IA4, aA4, rA4, tA4, BA4 = 0, nA4 = 0, oA4 = 0, eA4 = 0, QA4 = 0, CA4 = 0, cA4 = 0, iA4 = 0, _A4 = 0, sA4 = 0, yA4 = 0, EA4 = 0, pA4 = 0, uA4 = 0, fA4 = 0, lA4 = 0, hA4 = 0, wA4 = 0, DA4 = 0, mA4 = 0, GA4 = 0, kA4 = 0, FA4 = 0, bA4 = 0, HA4 = 0;
                      cA4 = A8, a4 = BA4 = FA4 = n3[I6 + 4 >> 2], i4 = BA4 >> 31, P4 = BA4 = (fA4 = n3[g7 + 20 >> 2]) << 1, BA4 = Wr(a4, i4, BA4, F4 = BA4 >> 31), oA4 = h3, nA4 = BA4, r4 = BA4 = n3[I6 >> 2], t4 = BA4 >> 31, _4 = BA4 = n3[g7 + 24 >> 2], QA4 = Wr(r4, t4, BA4, B4 = BA4 >> 31), BA4 = h3 + oA4 | 0, BA4 = (nA4 = nA4 + QA4 | 0) >>> 0 < QA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = nA4, q4 = nA4 = CA4 = n3[I6 + 8 >> 2], l4 = nA4 >> 31, s4 = nA4 = n3[g7 + 16 >> 2], nA4 = oA4 + (QA4 = Wr(CA4, l4, nA4, o4 = nA4 >> 31)) | 0, oA4 = h3 + BA4 | 0, oA4 = nA4 >>> 0 < QA4 >>> 0 ? oA4 + 1 | 0 : oA4, L4 = BA4 = hA4 = n3[I6 + 12 >> 2], w4 = BA4 >> 31, K4 = BA4 = (EA4 = n3[g7 + 12 >> 2]) << 1, BA4 = (QA4 = Wr(hA4, w4, BA4, b4 = BA4 >> 31)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < QA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = BA4, z4 = BA4 = lA4 = n3[I6 + 16 >> 2], G4 = BA4 >> 31, y4 = BA4 = n3[g7 + 8 >> 2], QA4 = Wr(lA4, G4, BA4, e4 = BA4 >> 31), BA4 = h3 + nA4 | 0, BA4 = (oA4 = oA4 + QA4 | 0) >>> 0 < QA4 >>> 0 ? BA4 + 1 | 0 : BA4, eA4 = oA4, O4 = nA4 = sA4 = n3[I6 + 20 >> 2], H4 = nA4 >> 31, X4 = nA4 = (_A4 = n3[g7 + 4 >> 2]) << 1, oA4 = Wr(sA4, H4, nA4, d4 = nA4 >> 31), BA4 = h3 + BA4 | 0, BA4 = (nA4 = eA4 + oA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = nA4, $4 = nA4 = yA4 = n3[I6 + 24 >> 2], V4 = nA4 >> 31, E4 = nA4 = n3[g7 >> 2], QA4 = Wr(yA4, V4, nA4, C4 = nA4 >> 31), nA4 = h3 + BA4 | 0, nA4 = (oA4 = oA4 + QA4 | 0) >>> 0 < QA4 >>> 0 ? nA4 + 1 | 0 : nA4, wA4 = n3[I6 + 28 >> 2], D4 = BA4 = Q3(wA4, 19), m4 = BA4 >> 31, W4 = BA4 = (pA4 = n3[g7 + 36 >> 2]) << 1, BA4 = (QA4 = Wr(D4, m4, BA4, S4 = BA4 >> 31)) + oA4 | 0, oA4 = h3 + nA4 | 0, oA4 = BA4 >>> 0 < QA4 >>> 0 ? oA4 + 1 | 0 : oA4, nA4 = BA4, uA4 = n3[I6 + 32 >> 2], DA4 = BA4 = Q3(uA4, 19), mA4 = BA4 >> 31, p4 = BA4 = n3[g7 + 32 >> 2], QA4 = Wr(DA4, mA4, BA4, c4 = BA4 >> 31), BA4 = h3 + oA4 | 0, BA4 = (nA4 = nA4 + QA4 | 0) >>> 0 < QA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = nA4, AA4 = n3[I6 + 36 >> 2], u4 = I6 = Q3(AA4, 19), f4 = I6 >> 31, T4 = I6 = (g7 = n3[g7 + 28 >> 2]) << 1, nA4 = Wr(u4, f4, I6, v4 = I6 >> 31), BA4 = h3 + BA4 | 0, iA4 = I6 = oA4 + nA4 | 0, I6 = I6 >>> 0 < nA4 >>> 0 ? BA4 + 1 | 0 : BA4, BA4 = Wr(s4, o4, a4, i4), nA4 = h3, fA4 = Wr(r4, t4, QA4 = fA4, U4 = QA4 >> 31), oA4 = h3 + nA4 | 0, oA4 = (BA4 = fA4 + BA4 | 0) >>> 0 < fA4 >>> 0 ? oA4 + 1 | 0 : oA4, fA4 = EA4, EA4 = Wr(CA4, l4, EA4, J4 = EA4 >> 31), nA4 = h3 + oA4 | 0, nA4 = (BA4 = EA4 + BA4 | 0) >>> 0 < EA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (EA4 = Wr(y4, e4, hA4, w4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < EA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = oA4, EA4 = _A4, oA4 = Wr(lA4, G4, _A4, Y4 = _A4 >> 31), BA4 = h3 + BA4 | 0, BA4 = (nA4 = nA4 + oA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(E4, C4, sA4, H4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = nA4, x4 = nA4 = Q3(yA4, 19), nA4 = oA4 + (pA4 = Wr(nA4, k4 = nA4 >> 31, _A4 = pA4, N5 = _A4 >> 31)) | 0, oA4 = h3 + BA4 | 0, oA4 = nA4 >>> 0 < pA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (pA4 = Wr(p4, c4, D4, m4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < pA4 >>> 0 ? nA4 + 1 | 0 : nA4, pA4 = g7, g7 = (oA4 = Wr(DA4, mA4, g7, M4 = g7 >> 31)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = g7 >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = Wr(u4, f4, _4, B4), BA4 = h3 + BA4 | 0, kA4 = g7 = nA4 + g7 | 0, g7 = g7 >>> 0 < nA4 >>> 0 ? BA4 + 1 | 0 : BA4, BA4 = Wr(a4, i4, K4, b4), oA4 = h3, nA4 = (yA4 = Wr(r4, t4, s4, o4)) + BA4 | 0, BA4 = h3 + oA4 | 0, BA4 = nA4 >>> 0 < yA4 >>> 0 ? BA4 + 1 | 0 : BA4, yA4 = Wr(y4, e4, CA4, l4), oA4 = h3 + BA4 | 0, oA4 = (nA4 = yA4 + nA4 | 0) >>> 0 < yA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (yA4 = Wr(hA4, w4, X4, d4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < yA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (yA4 = Wr(E4, C4, lA4, G4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < yA4 >>> 0 ? BA4 + 1 | 0 : BA4, eA4 = oA4, Z4 = nA4 = Q3(sA4, 19), oA4 = Wr(nA4, R4 = nA4 >> 31, W4, S4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = eA4 + oA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(p4, c4, x4, k4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, sA4 = Wr(D4, m4, T4, v4), oA4 = h3 + BA4 | 0, oA4 = (nA4 = sA4 + nA4 | 0) >>> 0 < sA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (sA4 = Wr(DA4, mA4, _4, B4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < sA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (sA4 = Wr(u4, f4, P4, F4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < sA4 >>> 0 ? BA4 + 1 | 0 : BA4, sA4 = oA4, IA4 = BA4, yA4 = nA4 = oA4 + 33554432 | 0, aA4 = BA4 = nA4 >>> 0 < 33554432 ? BA4 + 1 | 0 : BA4, oA4 = kA4, kA4 = (67108863 & BA4) << 6 | nA4 >>> 26, BA4 = (BA4 >> 26) + g7 | 0, BA4 = (oA4 = oA4 + kA4 | 0) >>> 0 < kA4 >>> 0 ? BA4 + 1 | 0 : BA4, rA4 = g7 = (kA4 = oA4) + 16777216 | 0, BA4 = I6 + (nA4 = (oA4 = g7 >>> 0 < 16777216 ? BA4 + 1 | 0 : BA4) >> 25) | 0, BA4 = (g7 = (oA4 = (33554431 & oA4) << 7 | g7 >>> 25) + iA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, bA4 = g7 = (I6 = g7) + 33554432 | 0, g7 = BA4 = g7 >>> 0 < 33554432 ? BA4 + 1 | 0 : BA4, BA4 = -67108864 & bA4, n3[cA4 + 24 >> 2] = I6 - BA4, iA4 = cA4, I6 = Wr(a4, i4, X4, d4), BA4 = h3, nA4 = Wr(r4, t4, y4, e4), oA4 = h3 + BA4 | 0, oA4 = (I6 = nA4 + I6 | 0) >>> 0 < nA4 >>> 0 ? oA4 + 1 | 0 : oA4, nA4 = Wr(E4, C4, CA4, l4), BA4 = h3 + oA4 | 0, BA4 = (I6 = nA4 + I6 | 0) >>> 0 < nA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = I6, cA4 = I6 = Q3(hA4, 19), nA4 = Wr(I6, hA4 = I6 >> 31, W4, S4), BA4 = h3 + BA4 | 0, BA4 = (I6 = oA4 + nA4 | 0) >>> 0 < nA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = I6, gA4 = I6 = Q3(lA4, 19), I6 = nA4 + (oA4 = Wr(p4, c4, I6, j4 = I6 >> 31)) | 0, nA4 = h3 + BA4 | 0, nA4 = I6 >>> 0 < oA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = Wr(T4, v4, Z4, R4), BA4 = h3 + nA4 | 0, BA4 = (I6 = oA4 + I6 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = Wr(_4, B4, x4, k4), oA4 = h3 + BA4 | 0, oA4 = (I6 = nA4 + I6 | 0) >>> 0 < nA4 >>> 0 ? oA4 + 1 | 0 : oA4, nA4 = Wr(D4, m4, P4, F4), BA4 = h3 + oA4 | 0, BA4 = (I6 = nA4 + I6 | 0) >>> 0 < nA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = Wr(DA4, mA4, s4, o4), BA4 = h3 + BA4 | 0, BA4 = (I6 = nA4 + I6 | 0) >>> 0 < nA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(u4, f4, K4, b4), nA4 = h3 + BA4 | 0, eA4 = I6 = oA4 + I6 | 0, I6 = I6 >>> 0 < oA4 >>> 0 ? nA4 + 1 | 0 : nA4, BA4 = Wr(E4, C4, a4, i4), oA4 = h3, nA4 = (lA4 = Wr(r4, t4, EA4, Y4)) + BA4 | 0, BA4 = h3 + oA4 | 0, BA4 = nA4 >>> 0 < lA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = nA4, lA4 = nA4 = Q3(CA4, 19), nA4 = oA4 + (CA4 = Wr(nA4, GA4 = nA4 >> 31, _A4, N5)) | 0, oA4 = h3 + BA4 | 0, oA4 = nA4 >>> 0 < CA4 >>> 0 ? oA4 + 1 | 0 : oA4, CA4 = Wr(p4, c4, cA4, hA4), BA4 = h3 + oA4 | 0, BA4 = (nA4 = CA4 + nA4 | 0) >>> 0 < CA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(gA4, j4, pA4, M4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = (CA4 = Wr(_4, B4, Z4, R4)) + nA4 | 0, nA4 = h3 + BA4 | 0, nA4 = oA4 >>> 0 < CA4 >>> 0 ? nA4 + 1 | 0 : nA4, CA4 = Wr(x4, k4, QA4, U4), BA4 = h3 + nA4 | 0, BA4 = (oA4 = CA4 + oA4 | 0) >>> 0 < CA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = (CA4 = Wr(s4, o4, D4, m4)) + oA4 | 0, oA4 = h3 + BA4 | 0, oA4 = nA4 >>> 0 < CA4 >>> 0 ? oA4 + 1 | 0 : oA4, CA4 = Wr(DA4, mA4, fA4, J4), BA4 = h3 + oA4 | 0, BA4 = (nA4 = CA4 + nA4 | 0) >>> 0 < CA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(u4, f4, y4, e4), BA4 = h3 + BA4 | 0, HA4 = nA4 = oA4 + nA4 | 0, CA4 = nA4 >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, BA4 = Wr(BA4 = Q3(a4, 19), BA4 >> 31, W4, S4), nA4 = h3, oA4 = Wr(r4, t4, E4, C4), nA4 = h3 + nA4 | 0, nA4 = (BA4 = oA4 + BA4 | 0) >>> 0 < oA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (FA4 = Wr(p4, c4, lA4, GA4)) + BA4 | 0, BA4 = h3 + nA4 | 0, nA4 = (cA4 = Wr(cA4, hA4, T4, v4)) + oA4 | 0, oA4 = h3 + (oA4 >>> 0 < FA4 >>> 0 ? BA4 + 1 | 0 : BA4) | 0, oA4 = nA4 >>> 0 < cA4 >>> 0 ? oA4 + 1 | 0 : oA4, cA4 = Wr(_4, B4, gA4, j4), BA4 = h3 + oA4 | 0, BA4 = (nA4 = cA4 + nA4 | 0) >>> 0 < cA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(P4, F4, Z4, R4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = (cA4 = Wr(s4, o4, x4, k4)) + nA4 | 0, nA4 = h3 + BA4 | 0, nA4 = oA4 >>> 0 < cA4 >>> 0 ? nA4 + 1 | 0 : nA4, cA4 = Wr(D4, m4, K4, b4), BA4 = h3 + nA4 | 0, BA4 = (oA4 = cA4 + oA4 | 0) >>> 0 < cA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = (cA4 = Wr(DA4, mA4, y4, e4)) + oA4 | 0, oA4 = h3 + BA4 | 0, oA4 = nA4 >>> 0 < cA4 >>> 0 ? oA4 + 1 | 0 : oA4, cA4 = Wr(u4, f4, X4, d4), BA4 = h3 + oA4 | 0, BA4 = (nA4 = cA4 + nA4 | 0) >>> 0 < cA4 >>> 0 ? BA4 + 1 | 0 : BA4, cA4 = nA4, FA4 = BA4, hA4 = nA4 = nA4 + 33554432 | 0, lA4 = BA4 = nA4 >>> 0 < 33554432 ? BA4 + 1 | 0 : BA4, GA4 = (67108863 & BA4) << 6 | nA4 >>> 26, nA4 = (oA4 = BA4 >> 26) + CA4 | 0, CA4 = BA4 = GA4 + HA4 | 0, oA4 = eA4, BA4 = BA4 >>> 0 < GA4 >>> 0 ? nA4 + 1 | 0 : nA4, tA4 = nA4 = CA4 + 16777216 | 0, eA4 = (33554431 & (BA4 = nA4 >>> 0 < 16777216 ? BA4 + 1 | 0 : BA4)) << 7 | nA4 >>> 25, BA4 = (BA4 >> 25) + I6 | 0, BA4 = (nA4 = oA4 + eA4 | 0) >>> 0 < eA4 >>> 0 ? BA4 + 1 | 0 : BA4, GA4 = I6 = nA4 + 33554432 | 0, I6 = BA4 = I6 >>> 0 < 33554432 ? BA4 + 1 | 0 : BA4, BA4 = -67108864 & GA4, n3[iA4 + 8 >> 2] = nA4 - BA4, eA4 = iA4, BA4 = Wr(_4, B4, a4, i4), oA4 = h3, nA4 = (iA4 = Wr(r4, t4, pA4, M4)) + BA4 | 0, BA4 = h3 + oA4 | 0, BA4 = nA4 >>> 0 < iA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(q4, l4, QA4, U4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(s4, o4, L4, w4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, iA4 = Wr(z4, G4, fA4, J4), oA4 = h3 + BA4 | 0, oA4 = (nA4 = iA4 + nA4 | 0) >>> 0 < iA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (iA4 = Wr(y4, e4, O4, H4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < iA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (iA4 = Wr(EA4, Y4, $4, V4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < iA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = oA4, oA4 = Wr(E4, C4, iA4 = wA4, HA4 = iA4 >> 31), BA4 = h3 + BA4 | 0, BA4 = (nA4 = nA4 + oA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(DA4, mA4, _A4, N5), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, wA4 = Wr(u4, f4, p4, c4), oA4 = h3 + BA4 | 0, oA4 = (nA4 = wA4 + nA4 | 0) >>> 0 < wA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = g7 >> 26, g7 = (wA4 = (67108863 & g7) << 6 | bA4 >>> 26) + nA4 | 0, nA4 = BA4 + oA4 | 0, BA4 = nA4 = g7 >>> 0 < wA4 >>> 0 ? nA4 + 1 | 0 : nA4, bA4 = g7 = (oA4 = g7) + 16777216 | 0, g7 = BA4 = g7 >>> 0 < 16777216 ? BA4 + 1 | 0 : BA4, BA4 = -33554432 & bA4, n3[eA4 + 28 >> 2] = oA4 - BA4, wA4 = eA4, BA4 = Wr(y4, e4, a4, i4), nA4 = h3, eA4 = Wr(r4, t4, fA4, J4), oA4 = h3 + nA4 | 0, oA4 = (BA4 = eA4 + BA4 | 0) >>> 0 < eA4 >>> 0 ? oA4 + 1 | 0 : oA4, eA4 = Wr(q4, l4, EA4, Y4), nA4 = h3 + oA4 | 0, nA4 = (BA4 = eA4 + BA4 | 0) >>> 0 < eA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (eA4 = Wr(E4, C4, L4, w4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < eA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = oA4, oA4 = Wr(gA4, j4, _A4, N5), BA4 = h3 + BA4 | 0, BA4 = (nA4 = nA4 + oA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(p4, c4, Z4, R4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, eA4 = Wr(x4, k4, pA4, M4), oA4 = h3 + BA4 | 0, oA4 = (nA4 = eA4 + nA4 | 0) >>> 0 < eA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (eA4 = Wr(_4, B4, D4, m4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < eA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (eA4 = Wr(DA4, mA4, QA4, U4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < eA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = oA4, oA4 = Wr(u4, f4, s4, o4), BA4 = h3 + BA4 | 0, eA4 = nA4 = nA4 + oA4 | 0, BA4 = (BA4 = nA4 >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4) + (nA4 = I6 >> 26) | 0, BA4 = (I6 = eA4 + (oA4 = (67108863 & I6) << 6 | GA4 >>> 26) | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, DA4 = I6 = (nA4 = I6) + 16777216 | 0, I6 = oA4 = I6 >>> 0 < 16777216 ? BA4 + 1 | 0 : BA4, BA4 = -33554432 & DA4, n3[wA4 + 12 >> 2] = nA4 - BA4, BA4 = Wr(a4, i4, T4, v4), oA4 = h3, nA4 = (eA4 = Wr(r4, t4, p4, c4)) + BA4 | 0, BA4 = h3 + oA4 | 0, BA4 = nA4 >>> 0 < eA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(_4, B4, q4, l4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, eA4 = Wr(L4, w4, P4, F4), oA4 = h3 + BA4 | 0, oA4 = (nA4 = eA4 + nA4 | 0) >>> 0 < eA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (eA4 = Wr(s4, o4, z4, G4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < eA4 >>> 0 ? nA4 + 1 | 0 : nA4, oA4 = (eA4 = Wr(K4, b4, O4, H4)) + BA4 | 0, BA4 = h3 + nA4 | 0, BA4 = oA4 >>> 0 < eA4 >>> 0 ? BA4 + 1 | 0 : BA4, nA4 = oA4, oA4 = Wr(y4, e4, $4, V4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = nA4 + oA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(iA4, HA4, X4, d4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, uA4 = Wr(E4, C4, eA4 = uA4, mA4 = eA4 >> 31), oA4 = h3 + BA4 | 0, oA4 = (nA4 = uA4 + nA4 | 0) >>> 0 < uA4 >>> 0 ? oA4 + 1 | 0 : oA4, BA4 = (uA4 = Wr(u4, f4, W4, S4)) + nA4 | 0, nA4 = h3 + oA4 | 0, nA4 = BA4 >>> 0 < uA4 >>> 0 ? nA4 + 1 | 0 : nA4, uA4 = BA4, BA4 = (BA4 = g7 >> 25) + nA4 | 0, BA4 = (g7 = uA4 + (oA4 = (33554431 & g7) << 7 | bA4 >>> 25) | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, uA4 = g7 = (nA4 = g7) + 33554432 | 0, g7 = BA4 = g7 >>> 0 < 33554432 ? BA4 + 1 | 0 : BA4, BA4 = -67108864 & uA4, n3[wA4 + 32 >> 2] = nA4 - BA4, oA4 = nA4 = sA4 - (BA4 = -67108864 & yA4) | 0, BA4 = (BA4 = IA4 - ((BA4 >>> 0 > sA4 >>> 0) + aA4 | 0) | 0) + (nA4 = I6 >> 25) | 0, BA4 = (I6 = oA4 + (sA4 = (33554431 & I6) << 7 | DA4 >>> 25) | 0) >>> 0 < sA4 >>> 0 ? BA4 + 1 | 0 : BA4, (nA4 = I6 + 33554432 | 0) >>> 0 < 33554432 && (BA4 = BA4 + 1 | 0), BA4 = (kA4 - (-33554432 & rA4) | 0) + ((67108863 & BA4) << 6 | nA4 >>> 26) | 0, n3[A8 + 20 >> 2] = BA4, BA4 = -67108864 & nA4, n3[A8 + 16 >> 2] = I6 - BA4, BA4 = Wr(p4, c4, a4, i4), oA4 = h3, nA4 = (_A4 = Wr(r4, t4, _A4, N5)) + BA4 | 0, BA4 = h3 + oA4 | 0, BA4 = nA4 >>> 0 < _A4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = (_A4 = Wr(q4, l4, pA4, M4)) + nA4 | 0, nA4 = h3 + BA4 | 0, nA4 = oA4 >>> 0 < _A4 >>> 0 ? nA4 + 1 | 0 : nA4, BA4 = (_A4 = Wr(_4, B4, L4, w4)) + oA4 | 0, oA4 = h3 + nA4 | 0, nA4 = (QA4 = Wr(z4, G4, QA4, U4)) + BA4 | 0, BA4 = h3 + (BA4 >>> 0 < _A4 >>> 0 ? oA4 + 1 | 0 : oA4) | 0, BA4 = nA4 >>> 0 < QA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(s4, o4, O4, H4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = Wr(fA4, J4, $4, V4), BA4 = h3 + BA4 | 0, BA4 = (nA4 = oA4 + nA4 | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, oA4 = (QA4 = Wr(y4, e4, iA4, HA4)) + nA4 | 0, nA4 = h3 + BA4 | 0, nA4 = oA4 >>> 0 < QA4 >>> 0 ? nA4 + 1 | 0 : nA4, BA4 = (QA4 = Wr(eA4, mA4, EA4, Y4)) + oA4 | 0, oA4 = h3 + nA4 | 0, oA4 = BA4 >>> 0 < QA4 >>> 0 ? oA4 + 1 | 0 : oA4, nA4 = (QA4 = Wr(E4, C4, AA4, AA4 >> 31)) + BA4 | 0, BA4 = h3 + oA4 | 0, I6 = nA4, BA4 = (BA4 = nA4 >>> 0 < QA4 >>> 0 ? BA4 + 1 | 0 : BA4) + (nA4 = g7 >> 26) | 0, BA4 = (g7 = I6 + (oA4 = (67108863 & g7) << 6 | uA4 >>> 26) | 0) >>> 0 < oA4 >>> 0 ? BA4 + 1 | 0 : BA4, BA4 = (g7 = (I6 = g7) + 16777216 | 0) >>> 0 < 16777216 ? BA4 + 1 | 0 : BA4, g7 = -33554432 & (nA4 = g7), n3[A8 + 36 >> 2] = I6 - g7, oA4 = CA4 - (-33554432 & tA4) | 0, QA4 = cA4 - (g7 = -67108864 & hA4) | 0, fA4 = FA4 - ((g7 >>> 0 > cA4 >>> 0) + lA4 | 0) | 0, BA4 = Wr((33554431 & (g7 = BA4)) << 7 | nA4 >>> 25, BA4 >>= 25, 19, 0), nA4 = h3 + fA4 | 0, BA4 = nA4 = (g7 = BA4 + QA4 | 0) >>> 0 < BA4 >>> 0 ? nA4 + 1 | 0 : nA4, I6 = ((67108863 & (BA4 = (I6 = g7 + 33554432 | 0) >>> 0 < 33554432 ? BA4 + 1 | 0 : BA4)) << 6 | (nA4 = I6) >>> 26) + oA4 | 0, n3[A8 + 4 >> 2] = I6, I6 = A8, A8 = -67108864 & nA4, n3[I6 >> 2] = g7 - A8;
                    }
                    function b3(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4, w4, D4, m4, G4, k4, F4, b4, H4, d4, S4, v4, U4, J4, Y4, x4, N5, M4, R4, P4, q4, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0, BA4 = 0, nA4 = 0, oA4 = 0;
                      B4 = L4 = (W4 = n3[g7 + 12 >> 2]) << 1, o4 = L4 >> 31, e4 = L4 = (z4 = n3[g7 + 4 >> 2]) << 1, L4 = Wr(B4, o4, L4, I6 = L4 >> 31), X4 = h3, K4 = L4, G4 = L4 = IA4 = n3[g7 + 8 >> 2], V4 = Wr(L4, O4 = L4 >> 31, L4, O4), L4 = h3 + X4 | 0, L4 = (K4 = K4 + V4 | 0) >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4, V4 = K4, a4 = K4 = aA4 = n3[g7 + 16 >> 2], C4 = K4 >> 31, c4 = K4 = (rA4 = n3[g7 >> 2]) << 1, X4 = Wr(a4, C4, K4, r4 = K4 >> 31), L4 = h3 + L4 | 0, L4 = (K4 = V4 + X4 | 0) >>> 0 < X4 >>> 0 ? L4 + 1 | 0 : L4, Z4 = K4, X4 = n3[g7 + 28 >> 2], w4 = K4 = Q3(X4, 38), v4 = X4, V4 = Wr(K4, u4 = K4 >> 31, X4, k4 = X4 >> 31), L4 = h3 + L4 | 0, L4 = (K4 = Z4 + V4 | 0) >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4, T4 = K4, Z4 = n3[g7 + 32 >> 2], j4 = Wr(_4 = K4 = Q3(Z4, 19), s4 = K4 >> 31, K4 = (V4 = n3[g7 + 24 >> 2]) << 1, K4 >> 31), K4 = h3 + L4 | 0, K4 = j4 >>> 0 > ($4 = T4 + j4 | 0) >>> 0 ? K4 + 1 | 0 : K4, T4 = $4, gA4 = n3[g7 + 36 >> 2], i4 = L4 = Q3(gA4, 38), t4 = L4 >> 31, f4 = g7 = ($4 = n3[g7 + 20 >> 2]) << 1, j4 = Wr(L4, t4, g7, E4 = g7 >> 31), g7 = h3 + K4 | 0, F4 = (L4 = T4 + j4 | 0) << 1, N5 = L4 = (L4 >>> 0 < j4 >>> 0 ? g7 + 1 | 0 : g7) << 1 | L4 >>> 31, U4 = g7 = F4 + 33554432 | 0, M4 = L4 = g7 >>> 0 < 33554432 ? L4 + 1 | 0 : L4, g7 = L4 >> 26, L4 = (67108863 & L4) << 6 | U4 >>> 26, K4 = Wr(e4, I6, a4, C4), j4 = h3, T4 = L4, l4 = L4 = IA4 << 1, tA4 = W4, W4 = Wr(L4, p4 = L4 >> 31, W4, b4 = W4 >> 31), L4 = h3 + j4 | 0, L4 = (K4 = W4 + K4 | 0) >>> 0 < W4 >>> 0 ? L4 + 1 | 0 : L4, IA4 = $4, W4 = (j4 = Wr($4, D4 = $4 >> 31, c4, r4)) + K4 | 0, K4 = h3 + L4 | 0, K4 = W4 >>> 0 < j4 >>> 0 ? K4 + 1 | 0 : K4, aA4 = W4, J4 = L4 = X4 << 1, W4 = Wr(_4, s4, L4, H4 = L4 >> 31), L4 = h3 + K4 | 0, L4 = (X4 = aA4 + W4 | 0) >>> 0 < W4 >>> 0 ? L4 + 1 | 0 : L4, K4 = X4, W4 = V4, X4 = Wr(i4, t4, V4, y4 = V4 >> 31), L4 = h3 + L4 | 0, L4 = (K4 = K4 + X4 | 0) >>> 0 < X4 >>> 0 ? L4 + 1 | 0 : L4, X4 = K4, g7 = g7 + (K4 = L4 << 1 | K4 >>> 31) | 0, BA4 = L4 = T4 + (X4 <<= 1) | 0, L4 = L4 >>> 0 < X4 >>> 0 ? g7 + 1 | 0 : g7, R4 = g7 = BA4 + 16777216 | 0, g7 = (33554431 & (L4 = g7 >>> 0 < 16777216 ? L4 + 1 | 0 : L4)) << 7 | g7 >>> 25, X4 = L4 >> 25, L4 = Wr(B4, o4, tA4, b4), K4 = h3, T4 = g7, g7 = (j4 = Wr(a4, C4, l4, p4)) + L4 | 0, L4 = h3 + K4 | 0, L4 = g7 >>> 0 < j4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(e4, I6, f4, E4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = (j4 = Wr(c4, r4, V4, y4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = K4 >>> 0 < j4 >>> 0 ? g7 + 1 | 0 : g7, j4 = Z4, Z4 = Wr(_4, s4, Z4, m4 = Z4 >> 31), L4 = h3 + g7 | 0, L4 = (K4 = Z4 + K4 | 0) >>> 0 < Z4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (Z4 = Wr(i4, t4, J4, H4)) + K4 | 0, K4 = h3 + L4 | 0, g7 = ((L4 = g7) >>> 0 < Z4 >>> 0 ? K4 + 1 | 0 : K4) << 1 | L4 >>> 31, Z4 = L4 << 1, L4 = g7 + X4 | 0, L4 = (K4 = T4 + Z4 | 0) >>> 0 < Z4 >>> 0 ? L4 + 1 | 0 : L4, nA4 = K4 = (g7 = K4) + 33554432 | 0, X4 = L4 = K4 >>> 0 < 33554432 ? L4 + 1 | 0 : L4, L4 = -67108864 & K4, n3[A8 + 24 >> 2] = g7 - L4, Z4 = A8, g7 = Wr(g7 = Q3($4, 38), g7 >> 31, $4, D4), L4 = h3, T4 = g7, $4 = Wr(g7 = rA4, K4 = g7 >> 31, g7, K4), K4 = h3 + L4 | 0, K4 = (g7 = T4 + $4 | 0) >>> 0 < $4 >>> 0 ? K4 + 1 | 0 : K4, L4 = g7, AA4 = g7 = Q3(V4, 19), d4 = g7 >> 31, Y4 = g7 = a4 << 1, g7 = L4 + (V4 = Wr(AA4, d4, g7, S4 = g7 >> 31)) | 0, L4 = h3 + K4 | 0, L4 = g7 >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(B4, o4, w4, u4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = (V4 = Wr(_4, s4, l4, p4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = Wr(e4, I6, i4, t4), L4 = h3 + g7 | 0, P4 = L4 = ((g7 = K4 = V4 + K4 | 0) >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4) << 1 | g7 >>> 31, rA4 = g7 = 33554432 + ($4 = g7 << 1) | 0, aA4 = K4 = g7 >>> 0 < 33554432 ? L4 + 1 | 0 : L4, g7 = (67108863 & K4) << 6 | g7 >>> 26, V4 = K4 >> 26, L4 = Wr(AA4, d4, f4, E4), K4 = h3, oA4 = g7, g7 = (z4 = Wr(c4, r4, T4 = z4, x4 = T4 >> 31)) + L4 | 0, L4 = h3 + K4 | 0, L4 = g7 >>> 0 < z4 >>> 0 ? L4 + 1 | 0 : L4, K4 = (z4 = Wr(a4, C4, w4, u4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = K4 >>> 0 < z4 >>> 0 ? g7 + 1 | 0 : g7, z4 = Wr(_4, s4, B4, o4), L4 = h3 + g7 | 0, L4 = (K4 = z4 + K4 | 0) >>> 0 < z4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (z4 = Wr(i4, t4, G4, O4)) + K4 | 0, K4 = h3 + L4 | 0, g7 = ((L4 = g7) >>> 0 < z4 >>> 0 ? K4 + 1 | 0 : K4) << 1 | L4 >>> 31, z4 = L4 << 1, L4 = g7 + V4 | 0, L4 = (K4 = oA4 + z4 | 0) >>> 0 < z4 >>> 0 ? L4 + 1 | 0 : L4, z4 = K4, (g7 = K4 + 16777216 | 0) >>> 0 < 16777216 && (L4 = L4 + 1 | 0), oA4 = g7, K4 = g7, g7 = L4 >> 25, L4 = (33554431 & L4) << 7 | K4 >>> 25, V4 = g7, g7 = Wr(c4, r4, G4, O4), K4 = h3, q4 = L4, T4 = Wr(e4, I6, T4, x4), L4 = h3 + K4 | 0, L4 = (g7 = T4 + g7 | 0) >>> 0 < T4 >>> 0 ? L4 + 1 | 0 : L4, T4 = Wr(AA4, d4, W4, y4), K4 = h3 + L4 | 0, K4 = (g7 = T4 + g7 | 0) >>> 0 < T4 >>> 0 ? K4 + 1 | 0 : K4, T4 = Wr(f4, E4, w4, u4), L4 = h3 + K4 | 0, L4 = (g7 = T4 + g7 | 0) >>> 0 < T4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(_4, s4, Y4, S4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = (T4 = Wr(i4, t4, B4, o4)) + g7 | 0, g7 = h3 + L4 | 0, L4 = (L4 = (g7 = K4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7) << 1 | K4 >>> 31) + V4 | 0, K4 = L4 = (g7 = q4 + (K4 <<= 1) | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, T4 = L4 = g7 + 33554432 | 0, V4 = K4 = L4 >>> 0 < 33554432 ? K4 + 1 | 0 : K4, L4 &= -67108864, n3[Z4 + 8 >> 2] = g7 - L4, g7 = Wr(l4, p4, IA4, D4), K4 = h3, L4 = (AA4 = Wr(a4, C4, B4, o4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = L4 >>> 0 < AA4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (AA4 = Wr(e4, I6, W4, y4)) + L4 | 0, L4 = h3 + g7 | 0, L4 = K4 >>> 0 < AA4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (AA4 = Wr(c4, r4, v4, k4)) + K4 | 0, K4 = h3 + L4 | 0, K4 = g7 >>> 0 < AA4 >>> 0 ? K4 + 1 | 0 : K4, AA4 = Wr(i4, t4, j4, m4), L4 = h3 + K4 | 0, L4 = (L4 = (L4 = (g7 = AA4 + g7 | 0) >>> 0 < AA4 >>> 0 ? L4 + 1 | 0 : L4) << 1 | g7 >>> 31) + (K4 = X4 >> 26) | 0, K4 = g7 = (X4 = (67108863 & X4) << 6 | nA4 >>> 26) + (g7 << 1) | 0, g7 = L4 = g7 >>> 0 < X4 >>> 0 ? L4 + 1 | 0 : L4, nA4 = L4 = K4 + 16777216 | 0, X4 = g7 = L4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7, g7 = -33554432 & L4, n3[Z4 + 28 >> 2] = K4 - g7, g7 = Wr(c4, r4, tA4, b4), L4 = h3, K4 = Wr(e4, I6, G4, O4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(W4, y4, w4, u4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = (O4 = Wr(_4, s4, f4, E4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = K4 >>> 0 < O4 >>> 0 ? g7 + 1 | 0 : g7, L4 = (O4 = Wr(i4, t4, a4, C4)) + K4 | 0, K4 = h3 + g7 | 0, g7 = L4, L4 = (L4 >>> 0 < O4 >>> 0 ? K4 + 1 | 0 : K4) << 1 | L4 >>> 31, K4 = g7 << 1, L4 = (g7 = V4 >> 26) + L4 | 0, L4 = (K4 = K4 + (V4 = (67108863 & V4) << 6 | T4 >>> 26) | 0) >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4, tA4 = K4 = (g7 = K4) + 16777216 | 0, V4 = L4 = K4 >>> 0 < 16777216 ? L4 + 1 | 0 : L4, L4 = -33554432 & K4, n3[Z4 + 12 >> 2] = g7 - L4, O4 = A8, g7 = Wr(W4, y4, l4, p4), L4 = h3, K4 = Wr(a4, C4, a4, C4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(B4, o4, f4, E4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(e4, I6, J4, H4), L4 = h3 + L4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = (Z4 = Wr(c4, r4, j4, m4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = K4 >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, L4 = (gA4 = Wr(i4, t4, Z4 = gA4, T4 = Z4 >> 31)) + K4 | 0, K4 = h3 + g7 | 0, A8 = (g7 = L4) << 1, L4 = (g7 = X4 >> 25) + (L4 = (L4 >>> 0 < gA4 >>> 0 ? K4 + 1 | 0 : K4) << 1 | L4 >>> 31) | 0, L4 = (K4 = A8 + (X4 = (33554431 & X4) << 7 | nA4 >>> 25) | 0) >>> 0 < X4 >>> 0 ? L4 + 1 | 0 : L4, gA4 = K4 = (g7 = K4) + 33554432 | 0, X4 = L4 = K4 >>> 0 < 33554432 ? L4 + 1 | 0 : L4, L4 = -67108864 & K4, n3[O4 + 32 >> 2] = g7 - L4, L4 = V4 >> 25, K4 = (V4 = (33554431 & V4) << 7 | tA4 >>> 25) + (F4 - (g7 = -67108864 & U4) | 0) | 0, g7 = L4 + (N5 - ((g7 >>> 0 > F4 >>> 0) + M4 | 0) | 0) | 0, L4 = g7 = K4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = g7 = K4 + 33554432 | 0, g7 = ((67108863 & (L4 = g7 >>> 0 < 33554432 ? L4 + 1 | 0 : L4)) << 6 | g7 >>> 26) + (BA4 = BA4 - (-33554432 & R4) | 0) | 0, n3[O4 + 20 >> 2] = g7, g7 = -67108864 & V4, n3[O4 + 16 >> 2] = K4 - g7, g7 = Wr(B4, o4, W4, y4), K4 = h3, L4 = (W4 = Wr(IA4, D4, Y4, S4)) + g7 | 0, g7 = h3 + K4 | 0, g7 = L4 >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7, K4 = (W4 = Wr(l4, p4, v4, k4)) + L4 | 0, L4 = h3 + g7 | 0, L4 = K4 >>> 0 < W4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (W4 = Wr(e4, I6, j4, m4)) + K4 | 0, K4 = h3 + L4 | 0, K4 = g7 >>> 0 < W4 >>> 0 ? K4 + 1 | 0 : K4, W4 = Wr(c4, r4, Z4, T4), L4 = h3 + K4 | 0, L4 = (L4 = (L4 = (g7 = W4 + g7 | 0) >>> 0 < W4 >>> 0 ? L4 + 1 | 0 : L4) << 1 | g7 >>> 31) + (K4 = X4 >> 26) | 0, L4 = (g7 = (X4 = (67108863 & X4) << 6 | gA4 >>> 26) + (g7 << 1) | 0) >>> 0 < X4 >>> 0 ? L4 + 1 | 0 : L4, K4 = g7, X4 = g7, g7 = L4, g7 = (L4 = K4 + 16777216 | 0) >>> 0 < 16777216 ? g7 + 1 | 0 : g7, K4 = -33554432 & L4, n3[O4 + 36 >> 2] = X4 - K4, V4 = z4 - (-33554432 & oA4) | 0, g7 = (L4 = Wr((33554431 & g7) << 7 | L4 >>> 25, g7 >> 25, 19, 0)) + ($4 - (K4 = -67108864 & rA4) | 0) | 0, K4 = h3 + (P4 - ((K4 >>> 0 > $4 >>> 0) + aA4 | 0) | 0) | 0, K4 = g7 >>> 0 < L4 >>> 0 ? K4 + 1 | 0 : K4, L4 = g7, g7 = K4, g7 = ((67108863 & (g7 = (K4 = L4 + 33554432 | 0) >>> 0 < 33554432 ? g7 + 1 | 0 : g7)) << 6 | K4 >>> 26) + V4 | 0, n3[O4 + 4 >> 2] = g7, A8 = -67108864 & K4, n3[O4 >> 2] = L4 - A8;
                    }
                    function H3(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4, w4, D4, m4, G4, k4, F4, b4, H4, d4, S4, v4, U4, J4, Y4, x4, N5, M4, R4, P4, q4 = 0, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0;
                      W4 = A8, i4 = L4 = (q4 = n3[g7 + 12 >> 2]) << 1, Z4 = q4, q4 = Wr(L4, B4 = L4 >> 31, q4, F4 = q4 >> 31), X4 = h3, L4 = q4, I6 = q4 = n3[g7 + 16 >> 2], o4 = q4 >> 31, f4 = q4 = (z4 = n3[g7 + 8 >> 2]) << 1, V4 = Wr(I6, o4, q4, y4 = q4 >> 31), q4 = h3 + X4 | 0, q4 = (L4 = L4 + V4 | 0) >>> 0 < V4 >>> 0 ? q4 + 1 | 0 : q4, X4 = L4, E4 = L4 = (V4 = n3[g7 + 20 >> 2]) << 1, p4 = L4 >> 31, e4 = L4 = (O4 = n3[g7 + 4 >> 2]) << 1, K4 = Wr(E4, p4, L4, a4 = L4 >> 31), L4 = h3 + q4 | 0, L4 = (X4 = X4 + K4 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, D4 = q4 = T4 = n3[g7 + 24 >> 2], _4 = q4 >> 31, C4 = q4 = (aA4 = n3[g7 >> 2]) << 1, K4 = Wr(T4, _4, q4, r4 = q4 >> 31), q4 = h3 + L4 | 0, q4 = (X4 = K4 + X4 | 0) >>> 0 < K4 >>> 0 ? q4 + 1 | 0 : q4, j4 = X4, L4 = n3[g7 + 32 >> 2], u4 = X4 = Q3(L4, 19), b4 = L4, X4 = Wr(X4, s4 = X4 >> 31, L4, m4 = L4 >> 31), q4 = h3 + q4 | 0, q4 = (L4 = j4 + X4 | 0) >>> 0 < X4 >>> 0 ? q4 + 1 | 0 : q4, j4 = L4, AA4 = n3[g7 + 36 >> 2], c4 = L4 = Q3(AA4, 38), t4 = L4 >> 31, U4 = g7 = (X4 = n3[g7 + 28 >> 2]) << 1, K4 = Wr(L4, t4, g7, H4 = g7 >> 31), g7 = h3 + q4 | 0, gA4 = L4 = j4 + K4 | 0, $4 = L4 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, g7 = Wr(e4, a4, I6, o4), q4 = h3, L4 = Wr(f4, y4, Z4, F4), q4 = h3 + q4 | 0, q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, J4 = V4, K4 = Wr(V4, G4 = V4 >> 31, C4, r4), L4 = h3 + q4 | 0, L4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(u4, s4, U4, H4), q4 = h3 + L4 | 0, q4 = (g7 = K4 + g7 | 0) >>> 0 < K4 >>> 0 ? q4 + 1 | 0 : q4, L4 = Wr(c4, t4, T4, _4), q4 = h3 + q4 | 0, j4 = g7 = L4 + g7 | 0, rA4 = g7 >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, g7 = Wr(e4, a4, i4, B4), L4 = h3, q4 = (z4 = Wr(K4 = z4, l4 = K4 >> 31, K4, l4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = q4 >>> 0 < z4 >>> 0 ? g7 + 1 | 0 : g7, L4 = (z4 = Wr(C4, r4, I6, o4)) + q4 | 0, q4 = h3 + g7 | 0, q4 = L4 >>> 0 < z4 >>> 0 ? q4 + 1 | 0 : q4, k4 = g7 = Q3(X4, 38), z4 = X4, g7 = (X4 = Wr(g7, w4 = g7 >> 31, X4, d4 = X4 >> 31)) + L4 | 0, L4 = h3 + q4 | 0, L4 = g7 >>> 0 < X4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (q4 = g7) + (X4 = Wr(u4, s4, g7 = T4 << 1, g7 >> 31)) | 0, q4 = h3 + L4 | 0, q4 = g7 >>> 0 < X4 >>> 0 ? q4 + 1 | 0 : q4, L4 = Wr(c4, t4, E4, p4), q4 = h3 + q4 | 0, S4 = g7 = L4 + g7 | 0, N5 = q4 = g7 >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, g7 = q4, Y4 = q4 = S4 + 33554432 | 0, M4 = g7 = q4 >>> 0 < 33554432 ? g7 + 1 | 0 : g7, q4 = (q4 = g7 >> 26) + rA4 | 0, rA4 = g7 = (L4 = (67108863 & g7) << 6 | Y4 >>> 26) + j4 | 0, L4 = g7 >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, R4 = g7 = g7 + 16777216 | 0, q4 = (q4 = (L4 = g7 >>> 0 < 16777216 ? L4 + 1 | 0 : L4) >> 25) + $4 | 0, q4 = (g7 = (L4 = (33554431 & L4) << 7 | g7 >>> 25) + gA4 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, L4 = g7, g7 = q4, j4 = q4 = L4 + 33554432 | 0, X4 = g7 = q4 >>> 0 < 33554432 ? g7 + 1 | 0 : g7, g7 = -67108864 & q4, n3[W4 + 24 >> 2] = L4 - g7, g7 = Wr(C4, r4, K4, l4), q4 = h3, O4 = Wr(e4, a4, W4 = O4, IA4 = W4 >> 31), L4 = h3 + q4 | 0, L4 = (g7 = O4 + g7 | 0) >>> 0 < O4 >>> 0 ? L4 + 1 | 0 : L4, q4 = g7, O4 = g7 = Q3(T4, 19), g7 = q4 + (T4 = Wr(g7, gA4 = g7 >> 31, T4, _4)) | 0, q4 = h3 + L4 | 0, q4 = g7 >>> 0 < T4 >>> 0 ? q4 + 1 | 0 : q4, L4 = (T4 = Wr(E4, p4, k4, w4)) + g7 | 0, g7 = h3 + q4 | 0, g7 = L4 >>> 0 < T4 >>> 0 ? g7 + 1 | 0 : g7, x4 = q4 = I6 << 1, T4 = Wr(u4, s4, q4, v4 = q4 >> 31), q4 = h3 + g7 | 0, q4 = (L4 = T4 + L4 | 0) >>> 0 < T4 >>> 0 ? q4 + 1 | 0 : q4, g7 = L4, L4 = Wr(c4, t4, i4, B4), q4 = h3 + q4 | 0, $4 = g7 = g7 + L4 | 0, T4 = g7 >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, g7 = Wr(E4, p4, O4, gA4), q4 = h3, W4 = Wr(C4, r4, W4, IA4), L4 = h3 + q4 | 0, L4 = (g7 = W4 + g7 | 0) >>> 0 < W4 >>> 0 ? L4 + 1 | 0 : L4, W4 = Wr(I6, o4, k4, w4), q4 = h3 + L4 | 0, q4 = (g7 = W4 + g7 | 0) >>> 0 < W4 >>> 0 ? q4 + 1 | 0 : q4, L4 = (W4 = Wr(u4, s4, i4, B4)) + g7 | 0, g7 = h3 + q4 | 0, g7 = L4 >>> 0 < W4 >>> 0 ? g7 + 1 | 0 : g7, W4 = Wr(c4, t4, K4, l4), q4 = h3 + g7 | 0, IA4 = L4 = W4 + L4 | 0, W4 = L4 >>> 0 < W4 >>> 0 ? q4 + 1 | 0 : q4, g7 = Wr(g7 = Q3(V4, 38), g7 >> 31, V4, G4), q4 = h3, V4 = g7, L4 = Wr(g7 = aA4, L4 = g7 >> 31, g7, L4), q4 = h3 + q4 | 0, q4 = (g7 = V4 + L4 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, V4 = Wr(O4, gA4, x4, v4), L4 = h3 + q4 | 0, L4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4, V4 = Wr(i4, B4, k4, w4), q4 = h3 + L4 | 0, q4 = (g7 = V4 + g7 | 0) >>> 0 < V4 >>> 0 ? q4 + 1 | 0 : q4, L4 = (V4 = Wr(u4, s4, f4, y4)) + g7 | 0, g7 = h3 + q4 | 0, g7 = L4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = Wr(e4, a4, c4, t4), q4 = h3 + g7 | 0, O4 = L4 = V4 + L4 | 0, gA4 = q4 = L4 >>> 0 < V4 >>> 0 ? q4 + 1 | 0 : q4, aA4 = g7 = L4 + 33554432 | 0, P4 = q4 = g7 >>> 0 < 33554432 ? q4 + 1 | 0 : q4, L4 = (g7 = q4 >> 26) + W4 | 0, W4 = q4 = (V4 = (67108863 & q4) << 6 | aA4 >>> 26) + IA4 | 0, q4 = q4 >>> 0 < V4 >>> 0 ? L4 + 1 | 0 : L4, IA4 = g7 = W4 + 16777216 | 0, V4 = (33554431 & (q4 = g7 >>> 0 < 16777216 ? q4 + 1 | 0 : q4)) << 7 | g7 >>> 25, q4 = (q4 >> 25) + T4 | 0, q4 = (L4 = V4 + $4 | 0) >>> 0 < V4 >>> 0 ? q4 + 1 | 0 : q4, T4 = L4 = (g7 = L4) + 33554432 | 0, V4 = q4 = L4 >>> 0 < 33554432 ? q4 + 1 | 0 : q4, q4 = -67108864 & L4, n3[A8 + 8 >> 2] = g7 - q4, g7 = Wr(f4, y4, J4, G4), q4 = h3, L4 = Wr(I6, o4, i4, B4), q4 = h3 + q4 | 0, q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, L4 = Wr(e4, a4, D4, _4), q4 = h3 + q4 | 0, q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, L4 = Wr(C4, r4, z4, d4), q4 = h3 + q4 | 0, q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, L4 = ($4 = Wr(c4, t4, b4, m4)) + g7 | 0, g7 = h3 + q4 | 0, q4 = X4 >> 26, X4 = (j4 = (67108863 & X4) << 6 | j4 >>> 26) + L4 | 0, L4 = (g7 = L4 >>> 0 < $4 >>> 0 ? g7 + 1 | 0 : g7) + q4 | 0, q4 = L4 = X4 >>> 0 < j4 >>> 0 ? L4 + 1 | 0 : L4, j4 = L4 = (g7 = X4) + 16777216 | 0, X4 = q4 = L4 >>> 0 < 16777216 ? q4 + 1 | 0 : q4, q4 = -33554432 & L4, n3[A8 + 28 >> 2] = g7 - q4, g7 = Wr(C4, r4, Z4, F4), L4 = h3, q4 = (K4 = Wr(e4, a4, K4, l4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = q4 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, K4 = Wr(D4, _4, k4, w4), L4 = h3 + g7 | 0, L4 = (q4 = K4 + q4 | 0) >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (K4 = Wr(u4, s4, E4, p4)) + q4 | 0, q4 = h3 + L4 | 0, q4 = g7 >>> 0 < K4 >>> 0 ? q4 + 1 | 0 : q4, L4 = Wr(c4, t4, I6, o4), q4 = h3 + q4 | 0, q4 = (q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4) + (L4 = V4 >> 26) | 0, L4 = g7 = (V4 = (67108863 & V4) << 6 | T4 >>> 26) + g7 | 0, g7 = q4 = g7 >>> 0 < V4 >>> 0 ? q4 + 1 | 0 : q4, T4 = q4 = L4 + 16777216 | 0, V4 = g7 = q4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7, g7 = -33554432 & q4, n3[A8 + 12 >> 2] = L4 - g7, K4 = A8, g7 = Wr(D4, _4, f4, y4), q4 = h3, L4 = Wr(I6, o4, I6, o4), q4 = h3 + q4 | 0, q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, L4 = Wr(i4, B4, E4, p4), q4 = h3 + q4 | 0, q4 = (g7 = L4 + g7 | 0) >>> 0 < L4 >>> 0 ? q4 + 1 | 0 : q4, L4 = (Z4 = Wr(e4, a4, U4, H4)) + g7 | 0, g7 = h3 + q4 | 0, g7 = L4 >>> 0 < Z4 >>> 0 ? g7 + 1 | 0 : g7, q4 = (Z4 = Wr(C4, r4, b4, m4)) + L4 | 0, L4 = h3 + g7 | 0, L4 = q4 >>> 0 < Z4 >>> 0 ? L4 + 1 | 0 : L4, g7 = (AA4 = Wr(c4, t4, Z4 = AA4, $4 = Z4 >> 31)) + q4 | 0, q4 = h3 + L4 | 0, q4 = g7 >>> 0 < AA4 >>> 0 ? q4 + 1 | 0 : q4, A8 = g7, q4 = (g7 = X4 >> 25) + q4 | 0, q4 = (L4 = A8 + (X4 = (33554431 & X4) << 7 | j4 >>> 25) | 0) >>> 0 < X4 >>> 0 ? q4 + 1 | 0 : q4, AA4 = L4 = (g7 = L4) + 33554432 | 0, X4 = q4 = L4 >>> 0 < 33554432 ? q4 + 1 | 0 : q4, q4 = -67108864 & L4, n3[K4 + 32 >> 2] = g7 - q4, q4 = V4 >> 25, L4 = (V4 = (33554431 & V4) << 7 | T4 >>> 25) + (S4 - (g7 = -67108864 & Y4) | 0) | 0, g7 = q4 + (N5 - ((g7 >>> 0 > S4 >>> 0) + M4 | 0) | 0) | 0, q4 = g7 = L4 >>> 0 < V4 >>> 0 ? g7 + 1 | 0 : g7, V4 = g7 = L4 + 33554432 | 0, g7 = ((67108863 & (q4 = g7 >>> 0 < 33554432 ? q4 + 1 | 0 : q4)) << 6 | g7 >>> 26) + (rA4 = rA4 - (-33554432 & R4) | 0) | 0, n3[K4 + 20 >> 2] = g7, g7 = -67108864 & V4, n3[K4 + 16 >> 2] = L4 - g7, V4 = K4, g7 = Wr(i4, B4, D4, _4), L4 = h3, q4 = (K4 = Wr(J4, G4, x4, v4)) + g7 | 0, g7 = h3 + L4 | 0, g7 = q4 >>> 0 < K4 >>> 0 ? g7 + 1 | 0 : g7, L4 = (K4 = Wr(f4, y4, z4, d4)) + q4 | 0, q4 = h3 + g7 | 0, q4 = L4 >>> 0 < K4 >>> 0 ? q4 + 1 | 0 : q4, g7 = (K4 = Wr(e4, a4, b4, m4)) + L4 | 0, L4 = h3 + q4 | 0, L4 = g7 >>> 0 < K4 >>> 0 ? L4 + 1 | 0 : L4, K4 = Wr(C4, r4, Z4, $4), q4 = h3 + L4 | 0, L4 = g7 = K4 + g7 | 0, q4 = (g7 = g7 >>> 0 < K4 >>> 0 ? q4 + 1 | 0 : q4) + (q4 = X4 >> 26) | 0, q4 = (L4 = (X4 = (67108863 & X4) << 6 | AA4 >>> 26) + L4 | 0) >>> 0 < X4 >>> 0 ? q4 + 1 | 0 : q4, X4 = L4, g7 = q4, g7 = (q4 = L4 + 16777216 | 0) >>> 0 < 16777216 ? g7 + 1 | 0 : g7, L4 = -33554432 & q4, n3[V4 + 36 >> 2] = X4 - L4, K4 = Wr((33554431 & g7) << 7 | q4 >>> 25, g7 >> 25, 19, 0), q4 = h3 + (gA4 - (((L4 = -67108864 & aA4) >>> 0 > O4 >>> 0) + P4 | 0) | 0) | 0, L4 = g7 = K4 + (O4 - L4 | 0) | 0, g7 = g7 >>> 0 < K4 >>> 0 ? q4 + 1 | 0 : q4, g7 = (W4 - (-33554432 & IA4) | 0) + ((67108863 & (g7 = (q4 = L4 + 33554432 | 0) >>> 0 < 33554432 ? g7 + 1 | 0 : g7)) << 6 | q4 >>> 26) | 0, n3[V4 + 4 >> 2] = g7, A8 = -67108864 & q4, n3[V4 >> 2] = L4 - A8;
                    }
                    function d3(A8, g7, I6) {
                      var a4, r4 = 0, t4 = 0, B4 = 0, o4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0, q4 = 0, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0;
                      for (u3 = a4 = u3 - 2048 | 0, yt(a4 + 1024 | 0, g7), Og(a4 + 1024 | 0, A8), yt(a4, a4 + 1024 | 0), Og(a4, I6), g7 = 0; o4 = n3[(r4 = _4 = (a4 + 1024 | 0) + (64 | (A8 = D4 << 7)) | 0) >> 2], c4 = n3[(B4 = i4 = (a4 + 1024 | 0) + (96 | A8) | 0) >> 2], B4 = n3[B4 + 4 >> 2], e4 = o4, p4 = n3[r4 + 4 >> 2], C4 = c4, r4 = A8 + (a4 + 1024 | 0) | 0, Q4 = n3[(o4 = (a4 + 1024 | 0) + (32 | A8) | 0) >> 2], c4 = n3[o4 + 4 >> 2], C4 = rt(C4 ^ (w4 = nI(n3[r4 >> 2], n3[r4 + 4 >> 2], Q4, c4)), (t4 = B4) ^ (B4 = h3), 32), c4 = rt(e4 = (E4 = nI(e4, p4, C4, t4 = h3)) ^ Q4, c4 ^ (Q4 = h3), 24), N5 = rt((d4 = nI(w4, e4 = B4, c4, B4 = h3)) ^ C4, (y4 = h3) ^ t4, 16), B4 = rt(c4 ^ (M4 = nI(E4, Q4, N5, U4 = h3)), (J4 = h3) ^ B4, 63), c4 = h3, C4 = n3[(Q4 = (a4 + 1024 | 0) + (104 | A8) | 0) >> 2], E4 = n3[Q4 + 4 >> 2], F4 = n3[(t4 = w4 = (a4 + 1024 | 0) + (72 | A8) | 0) >> 2], s4 = n3[t4 + 4 >> 2], m4 = rt((m4 = C4) ^ (G4 = nI(l4 = n3[(t4 = C4 = (a4 + 1024 | 0) + (8 | A8) | 0) >> 2], p4 = n3[t4 + 4 >> 2], v4 = n3[(t4 = (a4 + 1024 | 0) + (40 | A8) | 0) >> 2], e4 = n3[t4 + 4 >> 2])), (p4 = E4) ^ (E4 = h3), 32), e4 = rt(s4 = (l4 = nI(F4, s4, m4, p4 = h3)) ^ v4, e4 ^ (v4 = h3), 24), V4 = rt((Y4 = nI(G4, s4 = E4, e4, E4 = h3)) ^ m4, (R4 = h3) ^ p4, 16), E4 = rt(e4 ^ (z4 = nI(l4, v4, V4, Z4 = h3)), (O4 = h3) ^ E4, 63), e4 = h3, m4 = n3[(G4 = v4 = (a4 + 1024 | 0) + (112 | A8) | 0) >> 2], l4 = n3[G4 + 4 >> 2], S4 = n3[(G4 = (a4 + 1024 | 0) + (80 | A8) | 0) >> 2], f4 = n3[G4 + 4 >> 2], F4 = m4, m4 = (a4 + 1024 | 0) + (16 | A8) | 0, b4 = n3[(H4 = p4 = (a4 + 1024 | 0) + (48 | A8) | 0) >> 2], H4 = n3[H4 + 4 >> 2], F4 = rt(F4 ^ (x4 = nI(n3[m4 >> 2], n3[m4 + 4 >> 2], b4, H4)), (s4 = l4) ^ (l4 = h3), 32), H4 = rt(f4 = (s4 = nI(S4, f4, F4, k4 = h3)) ^ b4, H4 ^ (b4 = h3), 24), gA4 = rt(($4 = nI(x4, f4 = l4, H4, l4 = h3)) ^ F4, (AA4 = h3) ^ k4, 16), l4 = rt(H4 ^ (W4 = nI(s4, b4, gA4, IA4 = h3)), (K4 = h3) ^ l4, 63), H4 = h3, F4 = n3[(b4 = (a4 + 1024 | 0) + (120 | A8) | 0) >> 2], k4 = n3[b4 + 4 >> 2], aA4 = n3[(s4 = x4 = (a4 + 1024 | 0) + (88 | A8) | 0) >> 2], X4 = n3[s4 + 4 >> 2], q4 = rt((S4 = F4) ^ (T4 = nI(j4 = n3[(s4 = F4 = (a4 + 1024 | 0) + (24 | A8) | 0) >> 2], f4 = n3[s4 + 4 >> 2], P4 = n3[(A8 = (a4 + 1024 | 0) + (56 | A8) | 0) >> 2], s4 = n3[A8 + 4 >> 2])), (f4 = k4) ^ (k4 = h3), 32), s4 = rt(f4 = (X4 = nI(aA4, X4, q4, L4 = h3)) ^ P4, s4 ^ (P4 = h3), 24), S4 = P4, q4 = rt((P4 = nI(T4, f4 = k4, s4, k4 = h3)) ^ q4, (T4 = h3) ^ L4, 16), k4 = rt(s4 ^ (X4 = nI(X4, S4, q4, L4 = h3)), (j4 = h3) ^ k4, 63), s4 = h3, S4 = W4, f4 = K4, W4 = rt(q4 ^ (d4 = nI(d4, y4, E4, e4)), L4 ^ (y4 = h3), 32), E4 = rt((q4 = nI(S4, f4, W4, K4 = h3)) ^ E4, (L4 = h3) ^ e4, 24), e4 = nI(e4 = d4, y4, E4, d4 = h3), y4 = h3, n3[r4 >> 2] = e4, n3[r4 + 4 >> 2] = y4, r4 = rt(e4 ^ W4, K4 ^ y4, 16), e4 = h3, n3[b4 >> 2] = r4, n3[b4 + 4 >> 2] = e4, r4 = nI(q4, L4, r4, e4), e4 = h3, n3[G4 >> 2] = r4, n3[G4 + 4 >> 2] = e4, rA4 = t4, tA4 = rt(r4 ^ E4, e4 ^ d4, 63), n3[rA4 >> 2] = tA4, n3[t4 + 4 >> 2] = h3, y4 = l4, e4 = rt(N5 ^ (t4 = nI(Y4, R4, l4, H4)), U4 ^ (E4 = h3), 32), r4 = rt(y4 ^ (l4 = nI(X4, j4, e4, G4 = h3)), (r4 = H4) ^ (H4 = h3), 24), t4 = nI(t4, y4 = E4, r4, E4 = h3), b4 = h3, n3[C4 >> 2] = t4, n3[C4 + 4 >> 2] = b4, C4 = rt(t4 ^ e4, G4 ^ b4, 16), t4 = h3, n3[i4 >> 2] = C4, n3[i4 + 4 >> 2] = t4, i4 = nI(l4, H4, C4, t4), n3[x4 >> 2] = i4, C4 = h3, n3[x4 + 4 >> 2] = C4, rA4 = p4, tA4 = rt(r4 ^ i4, C4 ^ E4, 63), n3[rA4 >> 2] = tA4, n3[p4 + 4 >> 2] = h3, r4 = nI($4, AA4, k4, s4), e4 = nI(M4, J4, t4 = rt(V4 ^ r4, Z4 ^ (C4 = h3), 32), E4 = h3), r4 = nI(r4, p4 = C4, i4 = rt(e4 ^ k4, (G4 = h3) ^ s4, 24), C4 = h3), l4 = p4 = h3, n3[m4 >> 2] = r4, n3[m4 + 4 >> 2] = l4, r4 = rt(r4 ^ t4, E4 ^ l4, 16), t4 = h3, n3[Q4 >> 2] = r4, n3[Q4 + 4 >> 2] = t4, r4 = nI(e4, G4, r4, t4), n3[_4 >> 2] = r4, t4 = _4, _4 = h3, n3[t4 + 4 >> 2] = _4, rA4 = A8, tA4 = rt(r4 ^ i4, _4 ^ C4, 63), n3[rA4 >> 2] = tA4, n3[A8 + 4 >> 2] = h3, t4 = B4, r4 = rt(gA4 ^ (_4 = nI(P4, T4, B4, c4)), IA4 ^ (i4 = h3), 32), A8 = rt(t4 ^ (Q4 = nI(z4, O4, r4, B4 = h3)), (A8 = c4) ^ (c4 = h3), 24), _4 = nI(_4, t4 = i4, A8, i4 = h3), t4 = C4 = h3, n3[F4 >> 2] = _4, n3[F4 + 4 >> 2] = t4, _4 = rt(r4 ^ _4, B4 ^ t4, 16), r4 = h3, n3[v4 >> 2] = _4, n3[v4 + 4 >> 2] = r4, _4 = nI(Q4, c4, _4, r4), n3[w4 >> 2] = _4, r4 = h3, n3[w4 + 4 >> 2] = r4, rA4 = o4, tA4 = rt(A8 ^ _4, r4 ^ i4, 63), n3[rA4 >> 2] = tA4, n3[o4 + 4 >> 2] = h3, (0 | (D4 = D4 + 1 | 0)) != 8; )
                        ;
                      for (; D4 = n3[768 + (A8 = (i4 = g7 << 4) + (a4 + 1024 | 0) | 0) >> 2], _4 = n3[A8 + 772 >> 2], e4 = n3[(r4 = A8 + 512 | 0) >> 2], C4 = n3[r4 + 4 >> 2], t4 = D4, D4 = n3[A8 + 256 >> 2], r4 = n3[A8 + 260 >> 2], B4 = rt(t4 ^ (o4 = nI(n3[A8 >> 2], n3[A8 + 4 >> 2], D4, r4)), (B4 = _4) ^ (_4 = h3), 32), r4 = rt(t4 = (Q4 = nI(e4, C4, B4, c4 = h3)) ^ D4, r4 ^ (D4 = h3), 24), p4 = D4, E4 = rt((C4 = nI(o4, _4, r4, D4 = h3)) ^ B4, (t4 = h3) ^ c4, 16), D4 = rt(r4 ^ (v4 = nI(Q4, p4, E4, e4 = h3)), (G4 = h3) ^ D4, 63), _4 = h3, r4 = n3[A8 + 780 >> 2], l4 = n3[A8 + 520 >> 2], y4 = n3[A8 + 524 >> 2], Q4 = rt((m4 = n3[A8 + 776 >> 2]) ^ (c4 = nI(p4 = n3[(o4 = i4 = (a4 + 1024 | 0) + (8 | i4) | 0) >> 2], c4 = n3[o4 + 4 >> 2], o4 = n3[A8 + 264 >> 2], B4 = n3[A8 + 268 >> 2])), (p4 = r4) ^ (r4 = h3), 32), B4 = rt(p4 = (m4 = nI(l4, y4, Q4, w4 = h3)) ^ o4, B4 ^ (o4 = h3), 24), y4 = m4, l4 = rt((m4 = nI(c4, p4 = r4, B4, r4 = h3)) ^ Q4, (p4 = h3) ^ w4, 16), r4 = rt(B4 ^ (b4 = nI(y4, o4, l4, H4 = h3)), (x4 = h3) ^ r4, 63), o4 = h3, B4 = n3[A8 + 900 >> 2], f4 = n3[A8 + 640 >> 2], d4 = n3[A8 + 644 >> 2], s4 = n3[A8 + 896 >> 2], c4 = n3[A8 + 384 >> 2], Q4 = n3[A8 + 388 >> 2], F4 = rt(s4 ^ (w4 = nI(n3[A8 + 128 >> 2], n3[A8 + 132 >> 2], c4, Q4)), (y4 = B4) ^ (B4 = h3), 32), Q4 = rt(y4 = (s4 = nI(f4, d4, F4, k4 = h3)) ^ c4, Q4 ^ (c4 = h3), 24), f4 = s4, s4 = rt((s4 = F4) ^ (F4 = nI(w4, y4 = B4, Q4, B4 = h3)), (y4 = k4) ^ (k4 = h3), 16), B4 = rt(Q4 ^ (y4 = nI(f4, c4, s4, d4 = h3)), (N5 = h3) ^ B4, 63), c4 = h3, Q4 = n3[A8 + 908 >> 2], K4 = n3[A8 + 648 >> 2], Z4 = n3[A8 + 652 >> 2], S4 = n3[A8 + 904 >> 2], w4 = n3[A8 + 392 >> 2], U4 = n3[A8 + 396 >> 2], J4 = rt(S4 ^ (M4 = nI(n3[A8 + 136 >> 2], n3[A8 + 140 >> 2], w4, U4)), (f4 = Q4) ^ (Q4 = h3), 32), S4 = U4 = rt(f4 = (R4 = nI(K4, Z4, J4, Y4 = h3)) ^ w4, U4 ^ (w4 = h3), 24), J4 = rt((U4 = nI(M4, f4 = Q4, U4, Q4 = h3)) ^ J4, (M4 = h3) ^ Y4, 16), Q4 = rt(S4 ^ (R4 = nI(R4, w4, J4, Y4 = h3)), (V4 = h3) ^ Q4, 63), w4 = h3, S4 = y4, f4 = N5, y4 = rt(J4 ^ (C4 = nI(C4, t4, r4, o4)), Y4 ^ (t4 = h3), 32), r4 = rt((J4 = nI(S4, f4, y4, N5 = h3)) ^ r4, (Y4 = h3) ^ o4, 24), o4 = nI(o4 = C4, t4, r4, C4 = h3), t4 = h3, n3[A8 >> 2] = o4, n3[A8 + 4 >> 2] = t4, o4 = rt(o4 ^ y4, N5 ^ t4, 16), t4 = h3, n3[A8 + 904 >> 2] = o4, n3[A8 + 908 >> 2] = t4, o4 = nI(J4, Y4, o4, t4), t4 = h3, n3[A8 + 640 >> 2] = o4, n3[A8 + 644 >> 2] = t4, rA4 = A8, tA4 = rt(r4 ^ o4, C4 ^ t4, 63), n3[rA4 + 264 >> 2] = tA4, n3[A8 + 268 >> 2] = h3, y4 = B4, o4 = nI(m4, p4, B4, c4), E4 = nI(R4, V4, C4 = rt(E4 ^ o4, e4 ^ (B4 = h3), 32), t4 = h3), o4 = nI(o4, e4 = B4, r4 = rt(y4 ^ E4, (r4 = c4) ^ (c4 = h3), 24), B4 = h3), e4 = h3, n3[i4 >> 2] = o4, n3[i4 + 4 >> 2] = e4, i4 = rt(o4 ^ C4, t4 ^ e4, 16), o4 = h3, n3[A8 + 768 >> 2] = i4, n3[A8 + 772 >> 2] = o4, i4 = nI(E4, c4, i4, o4), n3[A8 + 648 >> 2] = i4, o4 = h3, n3[A8 + 652 >> 2] = o4, rA4 = A8, tA4 = rt(r4 ^ i4, o4 ^ B4, 63), n3[rA4 + 384 >> 2] = tA4, n3[A8 + 388 >> 2] = h3, C4 = Q4, B4 = rt(l4 ^ (r4 = nI(F4, k4, Q4, w4)), H4 ^ (o4 = h3), 32), i4 = rt(C4 ^ (Q4 = nI(v4, G4, B4, c4 = h3)), (t4 = w4) ^ (w4 = h3), 24), r4 = nI(r4, t4 = o4, i4, o4 = h3), t4 = C4 = h3, n3[A8 + 128 >> 2] = r4, n3[A8 + 132 >> 2] = t4, r4 = rt(r4 ^ B4, t4 ^ c4, 16), B4 = h3, n3[A8 + 776 >> 2] = r4, n3[A8 + 780 >> 2] = B4, r4 = nI(Q4, w4, r4, B4), n3[A8 + 512 >> 2] = r4, B4 = h3, n3[A8 + 516 >> 2] = B4, rA4 = A8, tA4 = rt(r4 ^ i4, o4 ^ B4, 63), n3[rA4 + 392 >> 2] = tA4, n3[A8 + 396 >> 2] = h3, i4 = nI(U4, M4, D4, _4), c4 = nI(b4, x4, o4 = rt(s4 ^ i4, d4 ^ (r4 = h3), 32), B4 = h3), _4 = nI(t4 = i4, r4, D4 = rt(c4 ^ D4, (Q4 = h3) ^ _4, 24), i4 = h3), r4 = h3, n3[A8 + 136 >> 2] = _4, n3[A8 + 140 >> 2] = r4, _4 = rt(o4 ^ _4, B4 ^ r4, 16), r4 = h3, n3[A8 + 896 >> 2] = _4, n3[A8 + 900 >> 2] = r4, _4 = nI(c4, Q4, _4, r4), n3[A8 + 520 >> 2] = _4, r4 = h3, n3[A8 + 524 >> 2] = r4, rA4 = A8, tA4 = rt(_4 ^ D4, r4 ^ i4, 63), n3[rA4 + 256 >> 2] = tA4, n3[A8 + 260 >> 2] = h3, (0 | (g7 = g7 + 1 | 0)) != 8; )
                        ;
                      yt(I6, a4), Og(I6, a4 + 1024 | 0), u3 = a4 + 2048 | 0;
                    }
                    function S3(A8, g7, I6, a4) {
                      var r4 = 0, t4 = 0, B4 = 0, o4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, h4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0;
                      for (function(A9, g8) {
                        for (var I7 = 0, a5 = 0, r5 = 0, t5 = 0; r5 = (a5 = I7 << 2) + A9 | 0, t5 = JI(g8 + a5 | 0), n3[r5 >> 2] = t5, (0 | (I7 = I7 + 1 | 0)) != 16; )
                          ;
                      }(I6, g7), r4 = n3[(g7 = A8) + 28 >> 2], n3[a4 + 24 >> 2] = n3[g7 + 24 >> 2], n3[a4 + 28 >> 2] = r4, r4 = n3[g7 + 20 >> 2], n3[a4 + 16 >> 2] = n3[g7 + 16 >> 2], n3[a4 + 20 >> 2] = r4, r4 = n3[g7 + 12 >> 2], n3[a4 + 8 >> 2] = n3[g7 + 8 >> 2], n3[a4 + 12 >> 2] = r4, r4 = n3[g7 + 4 >> 2], n3[a4 >> 2] = n3[g7 >> 2], n3[a4 + 4 >> 2] = r4, r4 = n3[I6 >> 2], g7 = 0; ; ) {
                        if (r4 = (ct(Q4 = n3[a4 + 16 >> 2], 6) ^ ct(Q4, 11) ^ ct(Q4, 25)) + r4 | 0, G4 = g7 << 2, B4 = n3[a4 + 24 >> 2], o4 = n3[a4 + 20 >> 2], c4 = (r4 = n3[a4 + 28 >> 2] + ((n3[G4 + 35840 >> 2] + r4 | 0) + (Q4 & (B4 ^ o4) ^ B4) | 0) | 0) + n3[a4 + 12 >> 2] | 0, n3[a4 + 12 >> 2] = c4, r4 = (r4 = r4 + (ct(t4 = n3[a4 >> 2], 2) ^ ct(t4, 13) ^ ct(t4, 22)) | 0) + (t4 & ((i4 = n3[a4 + 8 >> 2]) | (e4 = n3[a4 + 4 >> 2])) | e4 & i4) | 0, n3[a4 + 28 >> 2] = r4, i4 = (B4 = ((C4 = (B4 + (o4 ^ c4 & (o4 ^ Q4)) | 0) + (ct(c4, 6) ^ ct(c4, 11) ^ ct(c4, 25)) | 0) + n3[(_4 = (B4 = (1 | g7) << 2) + I6 | 0) >> 2] | 0) + n3[B4 + 35840 >> 2] | 0) + i4 | 0, n3[a4 + 8 >> 2] = i4, B4 = (B4 + (r4 & (t4 | e4) | t4 & e4) | 0) + (ct(r4, 2) ^ ct(r4, 13) ^ ct(r4, 22)) | 0, n3[a4 + 24 >> 2] = B4, C4 = e4, k4 = (e4 = (2 | g7) << 2) + I6 | 0, o4 = C4 + (e4 = (((o4 + (Q4 ^ i4 & (Q4 ^ c4)) | 0) + (ct(i4, 6) ^ ct(i4, 11) ^ ct(i4, 25)) | 0) + n3[k4 >> 2] | 0) + n3[e4 + 35840 >> 2] | 0) | 0, n3[a4 + 4 >> 2] = o4, e4 = (e4 + (B4 & (r4 | t4) | r4 & t4) | 0) + (ct(B4, 2) ^ ct(B4, 13) ^ ct(B4, 22)) | 0, n3[a4 + 20 >> 2] = e4, C4 = t4, s4 = (t4 = (3 | g7) << 2) + I6 | 0, Q4 = C4 + (t4 = (((Q4 + (c4 ^ o4 & (c4 ^ i4)) | 0) + (ct(o4, 6) ^ ct(o4, 11) ^ ct(o4, 25)) | 0) + n3[s4 >> 2] | 0) + n3[t4 + 35840 >> 2] | 0) | 0, n3[a4 >> 2] = Q4, t4 = (t4 + (e4 & (r4 | B4) | r4 & B4) | 0) + (ct(e4, 2) ^ ct(e4, 13) ^ ct(e4, 22)) | 0, n3[a4 + 16 >> 2] = t4, C4 = r4, F4 = (r4 = (4 | g7) << 2) + I6 | 0, c4 = C4 + (r4 = (((c4 + (i4 ^ Q4 & (o4 ^ i4)) | 0) + (ct(Q4, 6) ^ ct(Q4, 11) ^ ct(Q4, 25)) | 0) + n3[F4 >> 2] | 0) + n3[r4 + 35840 >> 2] | 0) | 0, n3[a4 + 28 >> 2] = c4, r4 = (r4 + (t4 & (B4 | e4) | B4 & e4) | 0) + (ct(t4, 2) ^ ct(t4, 13) ^ ct(t4, 22)) | 0, n3[a4 + 12 >> 2] = r4, C4 = B4, y4 = (B4 = (5 | g7) << 2) + I6 | 0, i4 = C4 + (B4 = (((i4 + (o4 ^ c4 & (o4 ^ Q4)) | 0) + (ct(c4, 6) ^ ct(c4, 11) ^ ct(c4, 25)) | 0) + n3[y4 >> 2] | 0) + n3[B4 + 35840 >> 2] | 0) | 0, n3[a4 + 24 >> 2] = i4, B4 = (B4 + (r4 & (t4 | e4) | t4 & e4) | 0) + (ct(r4, 2) ^ ct(r4, 13) ^ ct(r4, 22)) | 0, n3[a4 + 8 >> 2] = B4, C4 = e4, b4 = (e4 = (6 | g7) << 2) + I6 | 0, o4 = C4 + (e4 = (((o4 + (Q4 ^ i4 & (Q4 ^ c4)) | 0) + (ct(i4, 6) ^ ct(i4, 11) ^ ct(i4, 25)) | 0) + n3[b4 >> 2] | 0) + n3[e4 + 35840 >> 2] | 0) | 0, n3[a4 + 20 >> 2] = o4, e4 = (e4 + (B4 & (r4 | t4) | r4 & t4) | 0) + (ct(B4, 2) ^ ct(B4, 13) ^ ct(B4, 22)) | 0, n3[a4 + 4 >> 2] = e4, C4 = t4, E4 = (t4 = (7 | g7) << 2) + I6 | 0, Q4 = C4 + (t4 = (((Q4 + (c4 ^ o4 & (c4 ^ i4)) | 0) + (ct(o4, 6) ^ ct(o4, 11) ^ ct(o4, 25)) | 0) + n3[E4 >> 2] | 0) + n3[t4 + 35840 >> 2] | 0) | 0, n3[a4 + 16 >> 2] = Q4, t4 = (t4 + (e4 & (r4 | B4) | r4 & B4) | 0) + (ct(e4, 2) ^ ct(e4, 13) ^ ct(e4, 22)) | 0, n3[a4 >> 2] = t4, C4 = r4, h4 = (r4 = (8 | g7) << 2) + I6 | 0, c4 = C4 + (r4 = (((c4 + (i4 ^ Q4 & (o4 ^ i4)) | 0) + (ct(Q4, 6) ^ ct(Q4, 11) ^ ct(Q4, 25)) | 0) + n3[h4 >> 2] | 0) + n3[r4 + 35840 >> 2] | 0) | 0, n3[a4 + 12 >> 2] = c4, r4 = (r4 + (t4 & (B4 | e4) | B4 & e4) | 0) + (ct(t4, 2) ^ ct(t4, 13) ^ ct(t4, 22)) | 0, n3[a4 + 28 >> 2] = r4, C4 = B4, p4 = (B4 = (9 | g7) << 2) + I6 | 0, i4 = C4 + (B4 = (((i4 + (o4 ^ c4 & (o4 ^ Q4)) | 0) + (ct(c4, 6) ^ ct(c4, 11) ^ ct(c4, 25)) | 0) + n3[p4 >> 2] | 0) + n3[B4 + 35840 >> 2] | 0) | 0, n3[a4 + 8 >> 2] = i4, B4 = (B4 + (r4 & (t4 | e4) | t4 & e4) | 0) + (ct(r4, 2) ^ ct(r4, 13) ^ ct(r4, 22)) | 0, n3[a4 + 24 >> 2] = B4, C4 = e4, w4 = (e4 = (10 | g7) << 2) + I6 | 0, o4 = C4 + (e4 = (((o4 + (Q4 ^ i4 & (Q4 ^ c4)) | 0) + (ct(i4, 6) ^ ct(i4, 11) ^ ct(i4, 25)) | 0) + n3[w4 >> 2] | 0) + n3[e4 + 35840 >> 2] | 0) | 0, n3[a4 + 4 >> 2] = o4, e4 = (e4 + (B4 & (r4 | t4) | r4 & t4) | 0) + (ct(B4, 2) ^ ct(B4, 13) ^ ct(B4, 22)) | 0, n3[a4 + 20 >> 2] = e4, C4 = t4, u4 = (t4 = (11 | g7) << 2) + I6 | 0, Q4 = C4 + (t4 = (((Q4 + (c4 ^ o4 & (c4 ^ i4)) | 0) + (ct(o4, 6) ^ ct(o4, 11) ^ ct(o4, 25)) | 0) + n3[u4 >> 2] | 0) + n3[t4 + 35840 >> 2] | 0) | 0, n3[a4 >> 2] = Q4, t4 = (t4 + (e4 & (r4 | B4) | r4 & B4) | 0) + (ct(e4, 2) ^ ct(e4, 13) ^ ct(e4, 22)) | 0, n3[a4 + 16 >> 2] = t4, C4 = r4, D4 = (r4 = (12 | g7) << 2) + I6 | 0, c4 = C4 + (r4 = (((c4 + (i4 ^ Q4 & (o4 ^ i4)) | 0) + (ct(Q4, 6) ^ ct(Q4, 11) ^ ct(Q4, 25)) | 0) + n3[D4 >> 2] | 0) + n3[r4 + 35840 >> 2] | 0) | 0, n3[a4 + 28 >> 2] = c4, r4 = (r4 + (t4 & (B4 | e4) | B4 & e4) | 0) + (ct(t4, 2) ^ ct(t4, 13) ^ ct(t4, 22)) | 0, n3[a4 + 12 >> 2] = r4, C4 = B4, f4 = (B4 = (13 | g7) << 2) + I6 | 0, i4 = C4 + (B4 = (((i4 + (o4 ^ c4 & (o4 ^ Q4)) | 0) + (ct(c4, 6) ^ ct(c4, 11) ^ ct(c4, 25)) | 0) + n3[f4 >> 2] | 0) + n3[B4 + 35840 >> 2] | 0) | 0, n3[a4 + 24 >> 2] = i4, B4 = (B4 + (r4 & (t4 | e4) | t4 & e4) | 0) + (ct(r4, 2) ^ ct(r4, 13) ^ ct(r4, 22)) | 0, n3[a4 + 8 >> 2] = B4, C4 = e4, l4 = (e4 = (14 | g7) << 2) + I6 | 0, e4 = C4 + (o4 = (((o4 + (Q4 ^ i4 & (Q4 ^ c4)) | 0) + (ct(i4, 6) ^ ct(i4, 11) ^ ct(i4, 25)) | 0) + n3[l4 >> 2] | 0) + n3[e4 + 35840 >> 2] | 0) | 0, n3[a4 + 20 >> 2] = e4, o4 = (o4 + (B4 & (r4 | t4) | r4 & t4) | 0) + (ct(B4, 2) ^ ct(B4, 13) ^ ct(B4, 22)) | 0, n3[a4 + 4 >> 2] = o4, C4 = t4, t4 = ((Q4 = (Q4 + (c4 ^ e4 & (c4 ^ i4)) | 0) + (ct(e4, 6) ^ ct(e4, 11) ^ ct(e4, 25)) | 0) + n3[(e4 = (t4 = (15 | g7) << 2) + I6 | 0) >> 2] | 0) + n3[t4 + 35840 >> 2] | 0, n3[a4 + 16 >> 2] = C4 + t4, H4 = a4, d4 = (t4 + (o4 & (r4 | B4) | r4 & B4) | 0) + (ct(o4, 2) ^ ct(o4, 13) ^ ct(o4, 22)) | 0, n3[H4 >> 2] = d4, (0 | g7) == 48) {
                          for (; n3[(I6 = (g7 = m4 << 2) + A8 | 0) >> 2] = n3[I6 >> 2] + n3[g7 + a4 >> 2], (0 | (m4 = m4 + 1 | 0)) != 8; )
                            ;
                          break;
                        }
                        g7 = g7 + 16 | 0, t4 = (i4 = n3[l4 >> 2]) >>> 10 ^ ct(i4, 17) ^ ct(i4, 19), B4 = n3[p4 >> 2], r4 = n3[_4 >> 2], t4 = ((t4 + B4 | 0) + n3[I6 + G4 >> 2] | 0) + (r4 >>> 3 ^ ct(r4, 7) ^ ct(r4, 18)) | 0, n3[(g7 << 2) + I6 >> 2] = t4, o4 = (C4 = (C4 = r4 + n3[_4 + 36 >> 2] | 0) + ((r4 = n3[e4 >> 2]) >>> 10 ^ ct(r4, 17) ^ ct(r4, 19)) | 0) + ((c4 = n3[_4 + 4 >> 2]) >>> 3 ^ ct(c4, 7) ^ ct(c4, 18)) | 0, n3[_4 - -64 >> 2] = o4, Q4 = (C4 = c4 + ((C4 = ct(t4, 17) ^ t4 >>> 10 ^ ct(t4, 19)) + (t4 = n3[u4 >> 2]) | 0) | 0) + ((c4 = n3[s4 >> 2]) >>> 3 ^ ct(c4, 7) ^ ct(c4, 18)) | 0, n3[k4 - -64 >> 2] = Q4, _4 = (C4 = (c4 + n3[s4 + 36 >> 2] | 0) + (ct(o4, 17) ^ o4 >>> 10 ^ ct(o4, 19)) | 0) + ((o4 = n3[s4 + 4 >> 2]) >>> 3 ^ ct(o4, 7) ^ ct(o4, 18)) | 0, n3[s4 - -64 >> 2] = _4, Q4 = (C4 = o4 + ((C4 = ct(Q4, 17) ^ Q4 >>> 10 ^ ct(Q4, 19)) + (c4 = n3[f4 >> 2]) | 0) | 0) + ((o4 = n3[y4 >> 2]) >>> 3 ^ ct(o4, 7) ^ ct(o4, 18)) | 0, n3[F4 - -64 >> 2] = Q4, _4 = (C4 = (o4 + n3[y4 + 36 >> 2] | 0) + (ct(_4, 17) ^ _4 >>> 10 ^ ct(_4, 19)) | 0) + ((o4 = n3[y4 + 4 >> 2]) >>> 3 ^ ct(o4, 7) ^ ct(o4, 18)) | 0, n3[y4 - -64 >> 2] = _4, Q4 = (C4 = o4 + (r4 + (ct(Q4, 17) ^ Q4 >>> 10 ^ ct(Q4, 19)) | 0) | 0) + ((o4 = n3[E4 >> 2]) >>> 3 ^ ct(o4, 7) ^ ct(o4, 18)) | 0, n3[b4 - -64 >> 2] = Q4, _4 = (C4 = (o4 + n3[E4 + 36 >> 2] | 0) + (ct(_4, 17) ^ _4 >>> 10 ^ ct(_4, 19)) | 0) + ((o4 = n3[E4 + 4 >> 2]) >>> 3 ^ ct(o4, 7) ^ ct(o4, 18)) | 0, n3[E4 - -64 >> 2] = _4, o4 = (o4 + ((ct(Q4, 17) ^ Q4 >>> 10 ^ ct(Q4, 19)) + n3[h4 + 36 >> 2] | 0) | 0) + (ct(B4, 7) ^ B4 >>> 3 ^ ct(B4, 18)) | 0, n3[h4 - -64 >> 2] = o4, Q4 = (C4 = (B4 + n3[p4 + 36 >> 2] | 0) + (ct(_4, 17) ^ _4 >>> 10 ^ ct(_4, 19)) | 0) + ((B4 = n3[p4 + 4 >> 2]) >>> 3 ^ ct(B4, 7) ^ ct(B4, 18)) | 0, n3[p4 - -64 >> 2] = Q4, B4 = (B4 + ((ct(o4, 17) ^ o4 >>> 10 ^ ct(o4, 19)) + n3[w4 + 36 >> 2] | 0) | 0) + (ct(t4, 7) ^ t4 >>> 3 ^ ct(t4, 18)) | 0, n3[w4 - -64 >> 2] = B4, o4 = (C4 = (t4 + n3[u4 + 36 >> 2] | 0) + (ct(Q4, 17) ^ Q4 >>> 10 ^ ct(Q4, 19)) | 0) + ((t4 = n3[u4 + 4 >> 2]) >>> 3 ^ ct(t4, 7) ^ ct(t4, 18)) | 0, n3[u4 - -64 >> 2] = o4, B4 = (t4 + ((ct(B4, 17) ^ B4 >>> 10 ^ ct(B4, 19)) + n3[D4 + 36 >> 2] | 0) | 0) + (ct(c4, 7) ^ c4 >>> 3 ^ ct(c4, 18)) | 0, n3[D4 - -64 >> 2] = B4, t4 = (C4 = (c4 + n3[f4 + 36 >> 2] | 0) + (ct(o4, 17) ^ o4 >>> 10 ^ ct(o4, 19)) | 0) + ((t4 = n3[f4 + 4 >> 2]) >>> 3 ^ ct(t4, 7) ^ ct(t4, 18)) | 0, n3[f4 - -64 >> 2] = t4, H4 = l4 - -64 | 0, d4 = ((i4 + n3[l4 + 36 >> 2] | 0) + (ct(B4, 17) ^ B4 >>> 10 ^ ct(B4, 19)) | 0) + (ct(r4, 7) ^ r4 >>> 3 ^ ct(r4, 18)) | 0, n3[H4 >> 2] = d4, H4 = e4 - -64 | 0, d4 = (t4 = (r4 + n3[e4 + 36 >> 2] | 0) + (ct(t4, 17) ^ t4 >>> 10 ^ ct(t4, 19)) | 0) + ((r4 = n3[e4 + 4 >> 2]) >>> 3 ^ ct(r4, 7) ^ ct(r4, 18)) | 0, n3[H4 >> 2] = d4;
                      }
                    }
                    function v3(A8, g7, I6) {
                      var a4, r4 = 0, t4 = 0, B4 = 0, o4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0, q4 = 0, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0;
                      for (u3 = a4 = u3 - 2048 | 0, yt(a4 + 1024 | 0, g7), Og(a4 + 1024 | 0, A8), yt(a4, a4 + 1024 | 0), g7 = 0; o4 = n3[(r4 = _4 = (a4 + 1024 | 0) + (64 | (A8 = D4 << 7)) | 0) >> 2], c4 = n3[(B4 = i4 = (a4 + 1024 | 0) + (96 | A8) | 0) >> 2], B4 = n3[B4 + 4 >> 2], e4 = o4, p4 = n3[r4 + 4 >> 2], C4 = c4, r4 = A8 + (a4 + 1024 | 0) | 0, Q4 = n3[(o4 = (a4 + 1024 | 0) + (32 | A8) | 0) >> 2], c4 = n3[o4 + 4 >> 2], C4 = rt(C4 ^ (w4 = nI(n3[r4 >> 2], n3[r4 + 4 >> 2], Q4, c4)), (t4 = B4) ^ (B4 = h3), 32), c4 = rt(e4 = (E4 = nI(e4, p4, C4, t4 = h3)) ^ Q4, c4 ^ (Q4 = h3), 24), N5 = rt((d4 = nI(w4, e4 = B4, c4, B4 = h3)) ^ C4, (y4 = h3) ^ t4, 16), B4 = rt(c4 ^ (M4 = nI(E4, Q4, N5, U4 = h3)), (J4 = h3) ^ B4, 63), c4 = h3, C4 = n3[(Q4 = (a4 + 1024 | 0) + (104 | A8) | 0) >> 2], E4 = n3[Q4 + 4 >> 2], F4 = n3[(t4 = w4 = (a4 + 1024 | 0) + (72 | A8) | 0) >> 2], s4 = n3[t4 + 4 >> 2], m4 = rt((m4 = C4) ^ (G4 = nI(l4 = n3[(t4 = C4 = (a4 + 1024 | 0) + (8 | A8) | 0) >> 2], p4 = n3[t4 + 4 >> 2], v4 = n3[(t4 = (a4 + 1024 | 0) + (40 | A8) | 0) >> 2], e4 = n3[t4 + 4 >> 2])), (p4 = E4) ^ (E4 = h3), 32), e4 = rt(s4 = (l4 = nI(F4, s4, m4, p4 = h3)) ^ v4, e4 ^ (v4 = h3), 24), V4 = rt((Y4 = nI(G4, s4 = E4, e4, E4 = h3)) ^ m4, (R4 = h3) ^ p4, 16), E4 = rt(e4 ^ (z4 = nI(l4, v4, V4, Z4 = h3)), (O4 = h3) ^ E4, 63), e4 = h3, m4 = n3[(G4 = v4 = (a4 + 1024 | 0) + (112 | A8) | 0) >> 2], l4 = n3[G4 + 4 >> 2], S4 = n3[(G4 = (a4 + 1024 | 0) + (80 | A8) | 0) >> 2], f4 = n3[G4 + 4 >> 2], F4 = m4, m4 = (a4 + 1024 | 0) + (16 | A8) | 0, b4 = n3[(H4 = p4 = (a4 + 1024 | 0) + (48 | A8) | 0) >> 2], H4 = n3[H4 + 4 >> 2], F4 = rt(F4 ^ (x4 = nI(n3[m4 >> 2], n3[m4 + 4 >> 2], b4, H4)), (s4 = l4) ^ (l4 = h3), 32), H4 = rt(f4 = (s4 = nI(S4, f4, F4, k4 = h3)) ^ b4, H4 ^ (b4 = h3), 24), gA4 = rt(($4 = nI(x4, f4 = l4, H4, l4 = h3)) ^ F4, (AA4 = h3) ^ k4, 16), l4 = rt(H4 ^ (W4 = nI(s4, b4, gA4, IA4 = h3)), (K4 = h3) ^ l4, 63), H4 = h3, F4 = n3[(b4 = (a4 + 1024 | 0) + (120 | A8) | 0) >> 2], k4 = n3[b4 + 4 >> 2], aA4 = n3[(s4 = x4 = (a4 + 1024 | 0) + (88 | A8) | 0) >> 2], X4 = n3[s4 + 4 >> 2], q4 = rt((S4 = F4) ^ (T4 = nI(j4 = n3[(s4 = F4 = (a4 + 1024 | 0) + (24 | A8) | 0) >> 2], f4 = n3[s4 + 4 >> 2], P4 = n3[(A8 = (a4 + 1024 | 0) + (56 | A8) | 0) >> 2], s4 = n3[A8 + 4 >> 2])), (f4 = k4) ^ (k4 = h3), 32), s4 = rt(f4 = (X4 = nI(aA4, X4, q4, L4 = h3)) ^ P4, s4 ^ (P4 = h3), 24), S4 = P4, q4 = rt((P4 = nI(T4, f4 = k4, s4, k4 = h3)) ^ q4, (T4 = h3) ^ L4, 16), k4 = rt(s4 ^ (X4 = nI(X4, S4, q4, L4 = h3)), (j4 = h3) ^ k4, 63), s4 = h3, S4 = W4, f4 = K4, W4 = rt(q4 ^ (d4 = nI(d4, y4, E4, e4)), L4 ^ (y4 = h3), 32), E4 = rt((q4 = nI(S4, f4, W4, K4 = h3)) ^ E4, (L4 = h3) ^ e4, 24), e4 = nI(e4 = d4, y4, E4, d4 = h3), y4 = h3, n3[r4 >> 2] = e4, n3[r4 + 4 >> 2] = y4, r4 = rt(e4 ^ W4, K4 ^ y4, 16), e4 = h3, n3[b4 >> 2] = r4, n3[b4 + 4 >> 2] = e4, r4 = nI(q4, L4, r4, e4), e4 = h3, n3[G4 >> 2] = r4, n3[G4 + 4 >> 2] = e4, rA4 = t4, tA4 = rt(r4 ^ E4, e4 ^ d4, 63), n3[rA4 >> 2] = tA4, n3[t4 + 4 >> 2] = h3, y4 = l4, e4 = rt(N5 ^ (t4 = nI(Y4, R4, l4, H4)), U4 ^ (E4 = h3), 32), r4 = rt(y4 ^ (l4 = nI(X4, j4, e4, G4 = h3)), (r4 = H4) ^ (H4 = h3), 24), t4 = nI(t4, y4 = E4, r4, E4 = h3), b4 = h3, n3[C4 >> 2] = t4, n3[C4 + 4 >> 2] = b4, C4 = rt(t4 ^ e4, G4 ^ b4, 16), t4 = h3, n3[i4 >> 2] = C4, n3[i4 + 4 >> 2] = t4, i4 = nI(l4, H4, C4, t4), n3[x4 >> 2] = i4, C4 = h3, n3[x4 + 4 >> 2] = C4, rA4 = p4, tA4 = rt(r4 ^ i4, C4 ^ E4, 63), n3[rA4 >> 2] = tA4, n3[p4 + 4 >> 2] = h3, r4 = nI($4, AA4, k4, s4), e4 = nI(M4, J4, t4 = rt(V4 ^ r4, Z4 ^ (C4 = h3), 32), E4 = h3), r4 = nI(r4, p4 = C4, i4 = rt(e4 ^ k4, (G4 = h3) ^ s4, 24), C4 = h3), l4 = p4 = h3, n3[m4 >> 2] = r4, n3[m4 + 4 >> 2] = l4, r4 = rt(r4 ^ t4, E4 ^ l4, 16), t4 = h3, n3[Q4 >> 2] = r4, n3[Q4 + 4 >> 2] = t4, r4 = nI(e4, G4, r4, t4), n3[_4 >> 2] = r4, t4 = _4, _4 = h3, n3[t4 + 4 >> 2] = _4, rA4 = A8, tA4 = rt(r4 ^ i4, _4 ^ C4, 63), n3[rA4 >> 2] = tA4, n3[A8 + 4 >> 2] = h3, t4 = B4, r4 = rt(gA4 ^ (_4 = nI(P4, T4, B4, c4)), IA4 ^ (i4 = h3), 32), A8 = rt(t4 ^ (Q4 = nI(z4, O4, r4, B4 = h3)), (A8 = c4) ^ (c4 = h3), 24), _4 = nI(_4, t4 = i4, A8, i4 = h3), t4 = C4 = h3, n3[F4 >> 2] = _4, n3[F4 + 4 >> 2] = t4, _4 = rt(r4 ^ _4, B4 ^ t4, 16), r4 = h3, n3[v4 >> 2] = _4, n3[v4 + 4 >> 2] = r4, _4 = nI(Q4, c4, _4, r4), n3[w4 >> 2] = _4, r4 = h3, n3[w4 + 4 >> 2] = r4, rA4 = o4, tA4 = rt(A8 ^ _4, r4 ^ i4, 63), n3[rA4 >> 2] = tA4, n3[o4 + 4 >> 2] = h3, (0 | (D4 = D4 + 1 | 0)) != 8; )
                        ;
                      for (; D4 = n3[768 + (A8 = (i4 = g7 << 4) + (a4 + 1024 | 0) | 0) >> 2], _4 = n3[A8 + 772 >> 2], e4 = n3[(r4 = A8 + 512 | 0) >> 2], C4 = n3[r4 + 4 >> 2], t4 = D4, D4 = n3[A8 + 256 >> 2], r4 = n3[A8 + 260 >> 2], B4 = rt(t4 ^ (o4 = nI(n3[A8 >> 2], n3[A8 + 4 >> 2], D4, r4)), (B4 = _4) ^ (_4 = h3), 32), r4 = rt(t4 = (Q4 = nI(e4, C4, B4, c4 = h3)) ^ D4, r4 ^ (D4 = h3), 24), p4 = D4, E4 = rt((C4 = nI(o4, _4, r4, D4 = h3)) ^ B4, (t4 = h3) ^ c4, 16), D4 = rt(r4 ^ (v4 = nI(Q4, p4, E4, e4 = h3)), (G4 = h3) ^ D4, 63), _4 = h3, r4 = n3[A8 + 780 >> 2], l4 = n3[A8 + 520 >> 2], y4 = n3[A8 + 524 >> 2], Q4 = rt((m4 = n3[A8 + 776 >> 2]) ^ (c4 = nI(p4 = n3[(o4 = i4 = (a4 + 1024 | 0) + (8 | i4) | 0) >> 2], c4 = n3[o4 + 4 >> 2], o4 = n3[A8 + 264 >> 2], B4 = n3[A8 + 268 >> 2])), (p4 = r4) ^ (r4 = h3), 32), B4 = rt(p4 = (m4 = nI(l4, y4, Q4, w4 = h3)) ^ o4, B4 ^ (o4 = h3), 24), y4 = m4, l4 = rt((m4 = nI(c4, p4 = r4, B4, r4 = h3)) ^ Q4, (p4 = h3) ^ w4, 16), r4 = rt(B4 ^ (b4 = nI(y4, o4, l4, H4 = h3)), (x4 = h3) ^ r4, 63), o4 = h3, B4 = n3[A8 + 900 >> 2], f4 = n3[A8 + 640 >> 2], d4 = n3[A8 + 644 >> 2], s4 = n3[A8 + 896 >> 2], c4 = n3[A8 + 384 >> 2], Q4 = n3[A8 + 388 >> 2], F4 = rt(s4 ^ (w4 = nI(n3[A8 + 128 >> 2], n3[A8 + 132 >> 2], c4, Q4)), (y4 = B4) ^ (B4 = h3), 32), Q4 = rt(y4 = (s4 = nI(f4, d4, F4, k4 = h3)) ^ c4, Q4 ^ (c4 = h3), 24), f4 = s4, s4 = rt((s4 = F4) ^ (F4 = nI(w4, y4 = B4, Q4, B4 = h3)), (y4 = k4) ^ (k4 = h3), 16), B4 = rt(Q4 ^ (y4 = nI(f4, c4, s4, d4 = h3)), (N5 = h3) ^ B4, 63), c4 = h3, Q4 = n3[A8 + 908 >> 2], K4 = n3[A8 + 648 >> 2], Z4 = n3[A8 + 652 >> 2], S4 = n3[A8 + 904 >> 2], w4 = n3[A8 + 392 >> 2], U4 = n3[A8 + 396 >> 2], J4 = rt(S4 ^ (M4 = nI(n3[A8 + 136 >> 2], n3[A8 + 140 >> 2], w4, U4)), (f4 = Q4) ^ (Q4 = h3), 32), S4 = U4 = rt(f4 = (R4 = nI(K4, Z4, J4, Y4 = h3)) ^ w4, U4 ^ (w4 = h3), 24), J4 = rt((U4 = nI(M4, f4 = Q4, U4, Q4 = h3)) ^ J4, (M4 = h3) ^ Y4, 16), Q4 = rt(S4 ^ (R4 = nI(R4, w4, J4, Y4 = h3)), (V4 = h3) ^ Q4, 63), w4 = h3, S4 = y4, f4 = N5, y4 = rt(J4 ^ (C4 = nI(C4, t4, r4, o4)), Y4 ^ (t4 = h3), 32), r4 = rt((J4 = nI(S4, f4, y4, N5 = h3)) ^ r4, (Y4 = h3) ^ o4, 24), o4 = nI(o4 = C4, t4, r4, C4 = h3), t4 = h3, n3[A8 >> 2] = o4, n3[A8 + 4 >> 2] = t4, o4 = rt(o4 ^ y4, N5 ^ t4, 16), t4 = h3, n3[A8 + 904 >> 2] = o4, n3[A8 + 908 >> 2] = t4, o4 = nI(J4, Y4, o4, t4), t4 = h3, n3[A8 + 640 >> 2] = o4, n3[A8 + 644 >> 2] = t4, rA4 = A8, tA4 = rt(r4 ^ o4, C4 ^ t4, 63), n3[rA4 + 264 >> 2] = tA4, n3[A8 + 268 >> 2] = h3, y4 = B4, o4 = nI(m4, p4, B4, c4), E4 = nI(R4, V4, C4 = rt(E4 ^ o4, e4 ^ (B4 = h3), 32), t4 = h3), o4 = nI(o4, e4 = B4, r4 = rt(y4 ^ E4, (r4 = c4) ^ (c4 = h3), 24), B4 = h3), e4 = h3, n3[i4 >> 2] = o4, n3[i4 + 4 >> 2] = e4, i4 = rt(o4 ^ C4, t4 ^ e4, 16), o4 = h3, n3[A8 + 768 >> 2] = i4, n3[A8 + 772 >> 2] = o4, i4 = nI(E4, c4, i4, o4), n3[A8 + 648 >> 2] = i4, o4 = h3, n3[A8 + 652 >> 2] = o4, rA4 = A8, tA4 = rt(r4 ^ i4, o4 ^ B4, 63), n3[rA4 + 384 >> 2] = tA4, n3[A8 + 388 >> 2] = h3, C4 = Q4, B4 = rt(l4 ^ (r4 = nI(F4, k4, Q4, w4)), H4 ^ (o4 = h3), 32), i4 = rt(C4 ^ (Q4 = nI(v4, G4, B4, c4 = h3)), (t4 = w4) ^ (w4 = h3), 24), r4 = nI(r4, t4 = o4, i4, o4 = h3), t4 = C4 = h3, n3[A8 + 128 >> 2] = r4, n3[A8 + 132 >> 2] = t4, r4 = rt(r4 ^ B4, t4 ^ c4, 16), B4 = h3, n3[A8 + 776 >> 2] = r4, n3[A8 + 780 >> 2] = B4, r4 = nI(Q4, w4, r4, B4), n3[A8 + 512 >> 2] = r4, B4 = h3, n3[A8 + 516 >> 2] = B4, rA4 = A8, tA4 = rt(r4 ^ i4, o4 ^ B4, 63), n3[rA4 + 392 >> 2] = tA4, n3[A8 + 396 >> 2] = h3, i4 = nI(U4, M4, D4, _4), c4 = nI(b4, x4, o4 = rt(s4 ^ i4, d4 ^ (r4 = h3), 32), B4 = h3), _4 = nI(t4 = i4, r4, D4 = rt(c4 ^ D4, (Q4 = h3) ^ _4, 24), i4 = h3), r4 = h3, n3[A8 + 136 >> 2] = _4, n3[A8 + 140 >> 2] = r4, _4 = rt(o4 ^ _4, B4 ^ r4, 16), r4 = h3, n3[A8 + 896 >> 2] = _4, n3[A8 + 900 >> 2] = r4, _4 = nI(c4, Q4, _4, r4), n3[A8 + 520 >> 2] = _4, r4 = h3, n3[A8 + 524 >> 2] = r4, rA4 = A8, tA4 = rt(_4 ^ D4, r4 ^ i4, 63), n3[rA4 + 256 >> 2] = tA4, n3[A8 + 260 >> 2] = h3, (0 | (g7 = g7 + 1 | 0)) != 8; )
                        ;
                      yt(I6, a4), Og(I6, a4 + 1024 | 0), u3 = a4 + 2048 | 0;
                    }
                    function U3(A8) {
                      var g7 = 0, I6 = 0, a4 = 0, r4 = 0, t4 = 0, B4 = 0, o4 = 0, Q4 = 0, C4 = 0;
                      A:
                        if (A8 |= 0) {
                          t4 = (a4 = A8 - 8 | 0) + (A8 = -8 & (g7 = n3[A8 - 4 >> 2])) | 0;
                          g:
                            if (!(1 & g7)) {
                              if (!(3 & g7))
                                break A;
                              if ((a4 = a4 - (g7 = n3[a4 >> 2]) | 0) >>> 0 < e3[9189])
                                break A;
                              if (A8 = A8 + g7 | 0, n3[9190] == (0 | a4)) {
                                if ((3 & (g7 = n3[t4 + 4 >> 2])) == 3)
                                  return n3[9187] = A8, n3[t4 + 4 >> 2] = -2 & g7, n3[a4 + 4 >> 2] = 1 | A8, void (n3[A8 + a4 >> 2] = A8);
                              } else {
                                if (g7 >>> 0 <= 255) {
                                  if (r4 = n3[a4 + 8 >> 2], g7 = g7 >>> 3 | 0, (0 | (I6 = n3[a4 + 12 >> 2])) == (0 | r4)) {
                                    Q4 = 36740, C4 = n3[9185] & fa(-2, g7), n3[Q4 >> 2] = C4;
                                    break g;
                                  }
                                  n3[r4 + 12 >> 2] = I6, n3[I6 + 8 >> 2] = r4;
                                  break g;
                                }
                                if (o4 = n3[a4 + 24 >> 2], (0 | a4) == (0 | (g7 = n3[a4 + 12 >> 2])))
                                  if ((I6 = n3[(r4 = a4 + 20 | 0) >> 2]) || (I6 = n3[(r4 = a4 + 16 | 0) >> 2])) {
                                    for (; B4 = r4, (I6 = n3[(r4 = (g7 = I6) + 20 | 0) >> 2]) || (r4 = g7 + 16 | 0, I6 = n3[g7 + 16 >> 2]); )
                                      ;
                                    n3[B4 >> 2] = 0;
                                  } else
                                    g7 = 0;
                                else
                                  I6 = n3[a4 + 8 >> 2], n3[I6 + 12 >> 2] = g7, n3[g7 + 8 >> 2] = I6;
                                if (!o4)
                                  break g;
                                r4 = n3[a4 + 28 >> 2];
                                I: {
                                  if (n3[(I6 = 37044 + (r4 << 2) | 0) >> 2] == (0 | a4)) {
                                    if (n3[I6 >> 2] = g7, g7)
                                      break I;
                                    Q4 = 36744, C4 = n3[9186] & fa(-2, r4), n3[Q4 >> 2] = C4;
                                    break g;
                                  }
                                  if (n3[o4 + (n3[o4 + 16 >> 2] == (0 | a4) ? 16 : 20) >> 2] = g7, !g7)
                                    break g;
                                }
                                if (n3[g7 + 24 >> 2] = o4, (I6 = n3[a4 + 16 >> 2]) && (n3[g7 + 16 >> 2] = I6, n3[I6 + 24 >> 2] = g7), !(I6 = n3[a4 + 20 >> 2]))
                                  break g;
                                n3[g7 + 20 >> 2] = I6, n3[I6 + 24 >> 2] = g7;
                              }
                            }
                          if (!(a4 >>> 0 >= t4 >>> 0) && 1 & (g7 = n3[t4 + 4 >> 2])) {
                            g: {
                              if (!(2 & g7)) {
                                if (n3[9191] == (0 | t4)) {
                                  if (n3[9191] = a4, A8 = n3[9188] + A8 | 0, n3[9188] = A8, n3[a4 + 4 >> 2] = 1 | A8, n3[9190] != (0 | a4))
                                    break A;
                                  return n3[9187] = 0, void (n3[9190] = 0);
                                }
                                if (n3[9190] == (0 | t4))
                                  return n3[9190] = a4, A8 = n3[9187] + A8 | 0, n3[9187] = A8, n3[a4 + 4 >> 2] = 1 | A8, void (n3[A8 + a4 >> 2] = A8);
                                A8 = (-8 & g7) + A8 | 0;
                                I:
                                  if (g7 >>> 0 <= 255) {
                                    if (g7 = g7 >>> 3 | 0, (0 | (I6 = n3[t4 + 8 >> 2])) == (0 | (r4 = n3[t4 + 12 >> 2]))) {
                                      Q4 = 36740, C4 = n3[9185] & fa(-2, g7), n3[Q4 >> 2] = C4;
                                      break I;
                                    }
                                    n3[I6 + 12 >> 2] = r4, n3[r4 + 8 >> 2] = I6;
                                  } else {
                                    if (o4 = n3[t4 + 24 >> 2], (0 | t4) == (0 | (g7 = n3[t4 + 12 >> 2])))
                                      if ((I6 = n3[(r4 = t4 + 20 | 0) >> 2]) || (I6 = n3[(r4 = t4 + 16 | 0) >> 2])) {
                                        for (; B4 = r4, (I6 = n3[(r4 = (g7 = I6) + 20 | 0) >> 2]) || (r4 = g7 + 16 | 0, I6 = n3[g7 + 16 >> 2]); )
                                          ;
                                        n3[B4 >> 2] = 0;
                                      } else
                                        g7 = 0;
                                    else
                                      I6 = n3[t4 + 8 >> 2], n3[I6 + 12 >> 2] = g7, n3[g7 + 8 >> 2] = I6;
                                    if (o4) {
                                      r4 = n3[t4 + 28 >> 2];
                                      a: {
                                        if (n3[(I6 = 37044 + (r4 << 2) | 0) >> 2] == (0 | t4)) {
                                          if (n3[I6 >> 2] = g7, g7)
                                            break a;
                                          Q4 = 36744, C4 = n3[9186] & fa(-2, r4), n3[Q4 >> 2] = C4;
                                          break I;
                                        }
                                        if (n3[o4 + (n3[o4 + 16 >> 2] == (0 | t4) ? 16 : 20) >> 2] = g7, !g7)
                                          break I;
                                      }
                                      n3[g7 + 24 >> 2] = o4, (I6 = n3[t4 + 16 >> 2]) && (n3[g7 + 16 >> 2] = I6, n3[I6 + 24 >> 2] = g7), (I6 = n3[t4 + 20 >> 2]) && (n3[g7 + 20 >> 2] = I6, n3[I6 + 24 >> 2] = g7);
                                    }
                                  }
                                if (n3[a4 + 4 >> 2] = 1 | A8, n3[A8 + a4 >> 2] = A8, n3[9190] != (0 | a4))
                                  break g;
                                return void (n3[9187] = A8);
                              }
                              n3[t4 + 4 >> 2] = -2 & g7, n3[a4 + 4 >> 2] = 1 | A8, n3[A8 + a4 >> 2] = A8;
                            }
                            if (A8 >>> 0 <= 255)
                              return g7 = 36780 + ((A8 = A8 >>> 3 | 0) << 3) | 0, (I6 = n3[9185]) & (A8 = 1 << A8) ? A8 = n3[g7 + 8 >> 2] : (n3[9185] = A8 | I6, A8 = g7), n3[g7 + 8 >> 2] = a4, n3[A8 + 12 >> 2] = a4, n3[a4 + 12 >> 2] = g7, void (n3[a4 + 8 >> 2] = A8);
                            r4 = 31, n3[a4 + 16 >> 2] = 0, n3[a4 + 20 >> 2] = 0, A8 >>> 0 <= 16777215 && (g7 = A8 >>> 8 | 0, g7 <<= B4 = g7 + 1048320 >>> 16 & 8, r4 = 28 + ((g7 = ((g7 <<= r4 = g7 + 520192 >>> 16 & 4) << (I6 = g7 + 245760 >>> 16 & 2) >>> 15 | 0) - (I6 | r4 | B4) | 0) << 1 | A8 >>> g7 + 21 & 1) | 0), n3[a4 + 28 >> 2] = r4, B4 = 37044 + (r4 << 2) | 0;
                            g: {
                              I: {
                                if ((I6 = n3[9186]) & (g7 = 1 << r4)) {
                                  for (r4 = A8 << ((0 | r4) == 31 ? 0 : 25 - (r4 >>> 1 | 0) | 0), g7 = n3[B4 >> 2]; ; ) {
                                    if (I6 = g7, (-8 & n3[g7 + 4 >> 2]) == (0 | A8))
                                      break I;
                                    if (g7 = r4 >>> 29 | 0, r4 <<= 1, !(g7 = n3[16 + (B4 = I6 + (4 & g7) | 0) >> 2]))
                                      break;
                                  }
                                  n3[B4 + 16 >> 2] = a4, n3[a4 + 24 >> 2] = I6;
                                } else
                                  n3[9186] = g7 | I6, n3[B4 >> 2] = a4, n3[a4 + 24 >> 2] = B4;
                                n3[a4 + 12 >> 2] = a4, n3[a4 + 8 >> 2] = a4;
                                break g;
                              }
                              A8 = n3[I6 + 8 >> 2], n3[A8 + 12 >> 2] = a4, n3[I6 + 8 >> 2] = a4, n3[a4 + 24 >> 2] = 0, n3[a4 + 12 >> 2] = I6, n3[a4 + 8 >> 2] = A8;
                            }
                            A8 = n3[9193] - 1 | 0, n3[9193] = A8 || -1;
                          }
                        }
                    }
                    function J3(A8, g7, I6, a4, r4) {
                      var B4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4, f4, l4, h4, w4, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0, q4 = 0, L4 = 0, K4 = 0, X4 = 0, V4 = 0, W4 = 0, T4 = 0, Z4 = 0, j4 = 0, z4 = 0, O4 = 0, $4 = 0, AA4 = 0, gA4 = 0, IA4 = 0, aA4 = 0;
                      for (u3 = B4 = u3 + -64 | 0, e4 = n3[A8 + 60 >> 2], Q4 = n3[A8 + 56 >> 2], L4 = n3[A8 + 52 >> 2], P4 = n3[A8 + 48 >> 2], C4 = n3[A8 + 44 >> 2], c4 = n3[A8 + 40 >> 2], i4 = n3[A8 + 36 >> 2], _4 = n3[A8 + 32 >> 2], s4 = n3[A8 + 28 >> 2], y4 = n3[A8 + 24 >> 2], E4 = n3[A8 + 20 >> 2], p4 = n3[A8 + 16 >> 2], f4 = n3[A8 + 12 >> 2], l4 = n3[A8 + 8 >> 2], h4 = n3[A8 + 4 >> 2], w4 = n3[A8 >> 2]; ; ) {
                        if (!r4 & a4 >>> 0 > 63 | r4)
                          G4 = I6;
                        else {
                          if (k4 = 0, G4 = D4 = DA3(B4, 0, 64), a4 | r4)
                            for (; t3[D4 + k4 | 0] = o3[g7 + k4 | 0], !r4 & (k4 = k4 + 1 | 0) >>> 0 < a4 >>> 0 | r4; )
                              ;
                          g7 = G4, V4 = I6;
                        }
                        for (K4 = 20, d4 = w4, S4 = h4, v4 = l4, U4 = f4, k4 = p4, D4 = E4, I6 = y4, J4 = s4, F4 = _4, b4 = i4, Y4 = c4, x4 = e4, N5 = Q4, m4 = L4, M4 = P4, q4 = C4; H4 = k4, d4 = Ct((k4 = k4 + d4 | 0) ^ M4, 16), M4 = Ct(H4 ^ (F4 = d4 + F4 | 0), 12), H4 = F4, F4 = Ct((F4 = d4) ^ (d4 = k4 + M4 | 0), 8), k4 = Ct(M4 ^ (R4 = H4 + F4 | 0), 7), H4 = D4, S4 = Ct((D4 = D4 + S4 | 0) ^ m4, 16), m4 = Ct(H4 ^ (b4 = S4 + b4 | 0), 12), H4 = b4, b4 = Ct((b4 = S4) ^ (S4 = D4 + m4 | 0), 8), D4 = Ct(m4 ^ (X4 = H4 + b4 | 0), 7), m4 = I6, v4 = Ct((I6 = I6 + v4 | 0) ^ N5, 16), H4 = N5 = Ct(m4 ^ (Y4 = v4 + Y4 | 0), 12), N5 = Ct((m4 = v4) ^ (v4 = I6 + N5 | 0), 8), I6 = Ct(H4 ^ (Y4 = N5 + Y4 | 0), 7), m4 = J4, U4 = Ct((J4 = J4 + U4 | 0) ^ x4, 16), q4 = m4 = Ct(m4 ^ (x4 = U4 + q4 | 0), 12), H4 = x4, x4 = Ct((x4 = U4) ^ (U4 = J4 + m4 | 0), 8), J4 = Ct(q4 ^ (m4 = H4 + x4 | 0), 7), H4 = Y4, Y4 = Ct((d4 = D4 + d4 | 0) ^ x4, 16), D4 = Ct((M4 = H4 + Y4 | 0) ^ D4, 12), x4 = Ct(Y4 ^ (d4 = D4 + d4 | 0), 8), D4 = Ct(D4 ^ (Y4 = M4 + x4 | 0), 7), F4 = Ct((S4 = I6 + S4 | 0) ^ F4, 16), I6 = Ct((m4 = F4 + m4 | 0) ^ I6, 12), M4 = Ct(F4 ^ (S4 = I6 + S4 | 0), 8), I6 = Ct(I6 ^ (q4 = m4 + M4 | 0), 7), F4 = Ct((v4 = J4 + v4 | 0) ^ b4, 16), J4 = Ct((b4 = F4 + R4 | 0) ^ J4, 12), m4 = Ct(F4 ^ (v4 = J4 + v4 | 0), 8), J4 = Ct(J4 ^ (F4 = b4 + m4 | 0), 7), b4 = Ct((U4 = k4 + U4 | 0) ^ N5, 16), k4 = Ct((R4 = b4 + X4 | 0) ^ k4, 12), N5 = Ct(b4 ^ (U4 = k4 + U4 | 0), 8), k4 = Ct(k4 ^ (b4 = R4 + N5 | 0), 7), K4 = K4 - 2 | 0; )
                          ;
                        if (K4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, R4 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, X4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, W4 = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, T4 = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, Z4 = o3[g7 + 24 | 0] | o3[g7 + 25 | 0] << 8 | o3[g7 + 26 | 0] << 16 | o3[g7 + 27 | 0] << 24, j4 = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24, z4 = o3[g7 + 32 | 0] | o3[g7 + 33 | 0] << 8 | o3[g7 + 34 | 0] << 16 | o3[g7 + 35 | 0] << 24, O4 = o3[g7 + 36 | 0] | o3[g7 + 37 | 0] << 8 | o3[g7 + 38 | 0] << 16 | o3[g7 + 39 | 0] << 24, $4 = o3[g7 + 40 | 0] | o3[g7 + 41 | 0] << 8 | o3[g7 + 42 | 0] << 16 | o3[g7 + 43 | 0] << 24, AA4 = o3[g7 + 44 | 0] | o3[g7 + 45 | 0] << 8 | o3[g7 + 46 | 0] << 16 | o3[g7 + 47 | 0] << 24, gA4 = o3[g7 + 48 | 0] | o3[g7 + 49 | 0] << 8 | o3[g7 + 50 | 0] << 16 | o3[g7 + 51 | 0] << 24, IA4 = o3[g7 + 52 | 0] | o3[g7 + 53 | 0] << 8 | o3[g7 + 54 | 0] << 16 | o3[g7 + 55 | 0] << 24, aA4 = o3[g7 + 56 | 0] | o3[g7 + 57 | 0] << 8 | o3[g7 + 58 | 0] << 16 | o3[g7 + 59 | 0] << 24, H4 = o3[g7 + 60 | 0] | o3[g7 + 61 | 0] << 8 | o3[g7 + 62 | 0] << 16 | o3[g7 + 63 | 0] << 24, La(G4, d4 + w4 ^ (o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24)), La(G4 + 4 | 0, S4 + h4 ^ K4), La(G4 + 8 | 0, v4 + l4 ^ R4), La(G4 + 12 | 0, U4 + f4 ^ X4), La(G4 + 16 | 0, k4 + p4 ^ W4), La(G4 + 20 | 0, D4 + E4 ^ T4), La(G4 + 24 | 0, I6 + y4 ^ Z4), La(G4 + 28 | 0, J4 + s4 ^ j4), La(G4 + 32 | 0, F4 + _4 ^ z4), La(G4 + 36 | 0, b4 + i4 ^ O4), La(G4 + 40 | 0, $4 ^ Y4 + c4), La(G4 + 44 | 0, AA4 ^ q4 + C4), La(G4 + 48 | 0, gA4 ^ M4 + P4), La(G4 + 52 | 0, IA4 ^ m4 + L4), La(G4 + 56 | 0, aA4 ^ N5 + Q4), La(G4 + 60 | 0, H4 ^ x4 + e4), L4 = ((P4 = (I6 = P4) + 1 | 0) >>> 0 < I6 >>> 0) + L4 | 0, !r4 & a4 >>> 0 <= 64) {
                          if (!(!a4 | !r4 & a4 >>> 0 > 63 | (0 | r4) != 0))
                            for (D4 = 0; t3[D4 + V4 | 0] = o3[G4 + D4 | 0], (0 | a4) != (0 | (D4 = D4 + 1 | 0)); )
                              ;
                          n3[A8 + 52 >> 2] = L4, n3[A8 + 48 >> 2] = P4, u3 = B4 - -64 | 0;
                          break;
                        }
                        g7 = g7 - -64 | 0, I6 = G4 - -64 | 0, r4 = r4 - 1 | 0, r4 = (a4 = a4 + -64 | 0) >>> 0 < 4294967232 ? r4 + 1 | 0 : r4;
                      }
                    }
                    function Y3(A8, g7) {
                      var I6, a4 = 0, r4 = 0, t4 = 0, B4 = 0, o4 = 0, e4 = 0, Q4 = 0;
                      I6 = A8 + g7 | 0;
                      A: {
                        g:
                          if (!(1 & (a4 = n3[A8 + 4 >> 2]))) {
                            if (!(3 & a4))
                              break A;
                            if (g7 = (a4 = n3[A8 >> 2]) + g7 | 0, (0 | (A8 = A8 - a4 | 0)) == n3[9190]) {
                              if ((3 & (a4 = n3[I6 + 4 >> 2])) == 3)
                                return n3[9187] = g7, n3[I6 + 4 >> 2] = -2 & a4, n3[A8 + 4 >> 2] = 1 | g7, void (n3[I6 >> 2] = g7);
                            } else {
                              if (a4 >>> 0 <= 255) {
                                if (t4 = n3[A8 + 8 >> 2], a4 = a4 >>> 3 | 0, (0 | (r4 = n3[A8 + 12 >> 2])) == (0 | t4)) {
                                  e4 = 36740, Q4 = n3[9185] & fa(-2, a4), n3[e4 >> 2] = Q4;
                                  break g;
                                }
                                n3[t4 + 12 >> 2] = r4, n3[r4 + 8 >> 2] = t4;
                                break g;
                              }
                              if (o4 = n3[A8 + 24 >> 2], (0 | (a4 = n3[A8 + 12 >> 2])) == (0 | A8))
                                if ((r4 = n3[(t4 = A8 + 20 | 0) >> 2]) || (r4 = n3[(t4 = A8 + 16 | 0) >> 2])) {
                                  for (; B4 = t4, (r4 = n3[(t4 = (a4 = r4) + 20 | 0) >> 2]) || (t4 = a4 + 16 | 0, r4 = n3[a4 + 16 >> 2]); )
                                    ;
                                  n3[B4 >> 2] = 0;
                                } else
                                  a4 = 0;
                              else
                                r4 = n3[A8 + 8 >> 2], n3[r4 + 12 >> 2] = a4, n3[a4 + 8 >> 2] = r4;
                              if (!o4)
                                break g;
                              t4 = n3[A8 + 28 >> 2];
                              I: {
                                if (n3[(r4 = 37044 + (t4 << 2) | 0) >> 2] == (0 | A8)) {
                                  if (n3[r4 >> 2] = a4, a4)
                                    break I;
                                  e4 = 36744, Q4 = n3[9186] & fa(-2, t4), n3[e4 >> 2] = Q4;
                                  break g;
                                }
                                if (n3[o4 + (n3[o4 + 16 >> 2] == (0 | A8) ? 16 : 20) >> 2] = a4, !a4)
                                  break g;
                              }
                              if (n3[a4 + 24 >> 2] = o4, (r4 = n3[A8 + 16 >> 2]) && (n3[a4 + 16 >> 2] = r4, n3[r4 + 24 >> 2] = a4), !(r4 = n3[A8 + 20 >> 2]))
                                break g;
                              n3[a4 + 20 >> 2] = r4, n3[r4 + 24 >> 2] = a4;
                            }
                          }
                        g: {
                          if (!(2 & (a4 = n3[I6 + 4 >> 2]))) {
                            if (n3[9191] == (0 | I6)) {
                              if (n3[9191] = A8, g7 = n3[9188] + g7 | 0, n3[9188] = g7, n3[A8 + 4 >> 2] = 1 | g7, n3[9190] != (0 | A8))
                                break A;
                              return n3[9187] = 0, void (n3[9190] = 0);
                            }
                            if (n3[9190] == (0 | I6))
                              return n3[9190] = A8, g7 = n3[9187] + g7 | 0, n3[9187] = g7, n3[A8 + 4 >> 2] = 1 | g7, void (n3[A8 + g7 >> 2] = g7);
                            g7 = (-8 & a4) + g7 | 0;
                            I:
                              if (a4 >>> 0 <= 255) {
                                if (t4 = n3[I6 + 8 >> 2], a4 = a4 >>> 3 | 0, (0 | (r4 = n3[I6 + 12 >> 2])) == (0 | t4)) {
                                  e4 = 36740, Q4 = n3[9185] & fa(-2, a4), n3[e4 >> 2] = Q4;
                                  break I;
                                }
                                n3[t4 + 12 >> 2] = r4, n3[r4 + 8 >> 2] = t4;
                              } else {
                                if (o4 = n3[I6 + 24 >> 2], (0 | I6) == (0 | (a4 = n3[I6 + 12 >> 2])))
                                  if ((t4 = n3[(r4 = I6 + 20 | 0) >> 2]) || (t4 = n3[(r4 = I6 + 16 | 0) >> 2])) {
                                    for (; B4 = r4, (t4 = n3[(r4 = (a4 = t4) + 20 | 0) >> 2]) || (r4 = a4 + 16 | 0, t4 = n3[a4 + 16 >> 2]); )
                                      ;
                                    n3[B4 >> 2] = 0;
                                  } else
                                    a4 = 0;
                                else
                                  r4 = n3[I6 + 8 >> 2], n3[r4 + 12 >> 2] = a4, n3[a4 + 8 >> 2] = r4;
                                if (o4) {
                                  t4 = n3[I6 + 28 >> 2];
                                  a: {
                                    if (n3[(r4 = 37044 + (t4 << 2) | 0) >> 2] == (0 | I6)) {
                                      if (n3[r4 >> 2] = a4, a4)
                                        break a;
                                      e4 = 36744, Q4 = n3[9186] & fa(-2, t4), n3[e4 >> 2] = Q4;
                                      break I;
                                    }
                                    if (n3[o4 + (n3[o4 + 16 >> 2] == (0 | I6) ? 16 : 20) >> 2] = a4, !a4)
                                      break I;
                                  }
                                  n3[a4 + 24 >> 2] = o4, (r4 = n3[I6 + 16 >> 2]) && (n3[a4 + 16 >> 2] = r4, n3[r4 + 24 >> 2] = a4), (r4 = n3[I6 + 20 >> 2]) && (n3[a4 + 20 >> 2] = r4, n3[r4 + 24 >> 2] = a4);
                                }
                              }
                            if (n3[A8 + 4 >> 2] = 1 | g7, n3[A8 + g7 >> 2] = g7, n3[9190] != (0 | A8))
                              break g;
                            return void (n3[9187] = g7);
                          }
                          n3[I6 + 4 >> 2] = -2 & a4, n3[A8 + 4 >> 2] = 1 | g7, n3[A8 + g7 >> 2] = g7;
                        }
                        if (g7 >>> 0 <= 255)
                          return a4 = 36780 + ((g7 = g7 >>> 3 | 0) << 3) | 0, (r4 = n3[9185]) & (g7 = 1 << g7) ? g7 = n3[a4 + 8 >> 2] : (n3[9185] = g7 | r4, g7 = a4), n3[a4 + 8 >> 2] = A8, n3[g7 + 12 >> 2] = A8, n3[A8 + 12 >> 2] = a4, void (n3[A8 + 8 >> 2] = g7);
                        t4 = 31, n3[A8 + 16 >> 2] = 0, n3[A8 + 20 >> 2] = 0, g7 >>> 0 <= 16777215 && (a4 = g7 >>> 8 | 0, a4 <<= B4 = a4 + 1048320 >>> 16 & 8, t4 = 28 + ((a4 = ((a4 <<= t4 = a4 + 520192 >>> 16 & 4) << (r4 = a4 + 245760 >>> 16 & 2) >>> 15 | 0) - (r4 | t4 | B4) | 0) << 1 | g7 >>> a4 + 21 & 1) | 0), n3[A8 + 28 >> 2] = t4, B4 = 37044 + (t4 << 2) | 0;
                        g: {
                          if ((r4 = n3[9186]) & (a4 = 1 << t4)) {
                            for (t4 = g7 << ((0 | t4) == 31 ? 0 : 25 - (t4 >>> 1 | 0) | 0), a4 = n3[B4 >> 2]; ; ) {
                              if (r4 = a4, (-8 & n3[a4 + 4 >> 2]) == (0 | g7))
                                break g;
                              if (a4 = t4 >>> 29 | 0, t4 <<= 1, !(a4 = n3[16 + (B4 = r4 + (4 & a4) | 0) >> 2]))
                                break;
                            }
                            n3[B4 + 16 >> 2] = A8, n3[A8 + 24 >> 2] = r4;
                          } else
                            n3[9186] = a4 | r4, n3[B4 >> 2] = A8, n3[A8 + 24 >> 2] = B4;
                          return n3[A8 + 12 >> 2] = A8, void (n3[A8 + 8 >> 2] = A8);
                        }
                        g7 = n3[r4 + 8 >> 2], n3[g7 + 12 >> 2] = A8, n3[r4 + 8 >> 2] = A8, n3[A8 + 24 >> 2] = 0, n3[A8 + 12 >> 2] = r4, n3[A8 + 8 >> 2] = g7;
                      }
                    }
                    function x3(A8, g7, I6, a4) {
                      var r4 = 0, t4 = 0, B4 = 0, e4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0;
                      if (s4 = n3[A8 + 36 >> 2], e4 = n3[A8 + 32 >> 2], B4 = n3[A8 + 28 >> 2], t4 = n3[A8 + 24 >> 2], C4 = n3[A8 + 20 >> 2], !a4 & I6 >>> 0 >= 16 | a4)
                        for (F4 = !o3[A8 + 80 | 0] << 24, E4 = n3[A8 + 4 >> 2], b4 = Q3(E4, 5), f4 = n3[A8 + 8 >> 2], k4 = Q3(f4, 5), m4 = n3[A8 + 12 >> 2], G4 = Q3(m4, 5), r4 = n3[A8 + 16 >> 2], l4 = Q3(r4, 5), H4 = r4, p4 = n3[A8 >> 2]; r4 = Wr(c4 = ((o3[g7 + 3 | 0] | o3[g7 + 4 | 0] << 8 | o3[g7 + 5 | 0] << 16 | o3[g7 + 6 | 0] << 24) >>> 2 & 67108863) + t4 | 0, 0, m4, 0), i4 = h3, t4 = (y4 = Wr(C4 = (67108863 & (o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24)) + C4 | 0, 0, H4, 0)) + r4 | 0, r4 = h3 + i4 | 0, r4 = t4 >>> 0 < y4 >>> 0 ? r4 + 1 | 0 : r4, _4 = t4, t4 = Wr(i4 = ((o3[g7 + 6 | 0] | o3[g7 + 7 | 0] << 8 | o3[g7 + 8 | 0] << 16 | o3[g7 + 9 | 0] << 24) >>> 4 & 67108863) + B4 | 0, 0, f4, 0), r4 = h3 + r4 | 0, r4 = t4 >>> 0 > (B4 = _4 + t4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = B4, B4 = Wr(y4 = ((o3[g7 + 9 | 0] | o3[g7 + 10 | 0] << 8 | o3[g7 + 11 | 0] << 16 | o3[g7 + 12 | 0] << 24) >>> 6 | 0) + e4 | 0, 0, E4, 0), r4 = h3 + r4 | 0, r4 = B4 >>> 0 > (e4 = t4 + B4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = e4, e4 = Wr(u4 = s4 + F4 + ((o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24) >>> 8) | 0, 0, p4, 0), r4 = h3 + r4 | 0, d4 = s4 = t4 + e4 | 0, s4 = e4 >>> 0 > s4 >>> 0 ? r4 + 1 | 0 : r4, r4 = Wr(c4, 0, f4, 0), B4 = h3, e4 = (t4 = Wr(C4, 0, m4, 0)) + r4 | 0, r4 = h3 + B4 | 0, r4 = t4 >>> 0 > e4 >>> 0 ? r4 + 1 | 0 : r4, B4 = Wr(i4, 0, E4, 0), r4 = h3 + r4 | 0, r4 = B4 >>> 0 > (e4 = B4 + e4 | 0) >>> 0 ? r4 + 1 | 0 : r4, B4 = Wr(y4, 0, p4, 0), r4 = h3 + r4 | 0, r4 = B4 >>> 0 > (e4 = B4 + e4 | 0) >>> 0 ? r4 + 1 | 0 : r4, B4 = Wr(u4, 0, l4, 0), r4 = h3 + r4 | 0, S4 = e4 = B4 + e4 | 0, e4 = B4 >>> 0 > e4 >>> 0 ? r4 + 1 | 0 : r4, r4 = Wr(c4, 0, E4, 0), t4 = h3, B4 = (w4 = Wr(C4, 0, f4, 0)) + r4 | 0, r4 = h3 + t4 | 0, r4 = B4 >>> 0 < w4 >>> 0 ? r4 + 1 | 0 : r4, t4 = Wr(i4, 0, p4, 0), r4 = h3 + r4 | 0, r4 = t4 >>> 0 > (B4 = t4 + B4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = Wr(y4, 0, l4, 0), r4 = h3 + r4 | 0, r4 = t4 >>> 0 > (B4 = t4 + B4 | 0) >>> 0 ? r4 + 1 | 0 : r4, t4 = Wr(u4, 0, G4, 0), r4 = h3 + r4 | 0, w4 = B4 = t4 + B4 | 0, B4 = t4 >>> 0 > B4 >>> 0 ? r4 + 1 | 0 : r4, r4 = Wr(c4, 0, p4, 0), _4 = h3, t4 = (D4 = Wr(C4, 0, E4, 0)) + r4 | 0, r4 = h3 + _4 | 0, r4 = t4 >>> 0 < D4 >>> 0 ? r4 + 1 | 0 : r4, _4 = Wr(i4, 0, l4, 0), r4 = h3 + r4 | 0, r4 = (t4 = _4 + t4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = Wr(y4, 0, G4, 0), r4 = h3 + r4 | 0, r4 = (t4 = _4 + t4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = Wr(u4, 0, k4, 0), r4 = h3 + r4 | 0, r4 = (t4 = _4 + t4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, _4 = t4, t4 = r4, r4 = Wr(c4, 0, l4, 0), D4 = h3, c4 = (C4 = Wr(C4, 0, p4, 0)) + r4 | 0, r4 = h3 + D4 | 0, r4 = c4 >>> 0 < C4 >>> 0 ? r4 + 1 | 0 : r4, C4 = Wr(i4, 0, G4, 0), r4 = h3 + r4 | 0, r4 = (c4 = C4 + c4 | 0) >>> 0 < C4 >>> 0 ? r4 + 1 | 0 : r4, C4 = Wr(y4, 0, k4, 0), r4 = h3 + r4 | 0, r4 = (c4 = C4 + c4 | 0) >>> 0 < C4 >>> 0 ? r4 + 1 | 0 : r4, C4 = Wr(u4, 0, b4, 0), r4 = h3 + r4 | 0, r4 = (c4 = C4 + c4 | 0) >>> 0 < C4 >>> 0 ? r4 + 1 | 0 : r4, C4 = c4, i4 = (67108863 & r4) << 6 | c4 >>> 26, r4 = t4, i4 = (67108863 & (r4 = (c4 = i4 + _4 | 0) >>> 0 < i4 >>> 0 ? r4 + 1 | 0 : r4)) << 6 | (t4 = c4) >>> 26, r4 = B4, r4 = (t4 = i4 + w4 | 0) >>> 0 < i4 >>> 0 ? r4 + 1 | 0 : r4, i4 = t4, t4 = (67108863 & r4) << 6 | t4 >>> 26, r4 = e4, y4 = B4 = t4 + S4 | 0, B4 = (67108863 & (r4 = t4 >>> 0 > B4 >>> 0 ? r4 + 1 | 0 : r4)) << 6 | B4 >>> 26, r4 = s4, s4 = e4 = B4 + d4 | 0, t4 = (67108863 & c4) + ((r4 = Q3((67108863 & (r4 = B4 >>> 0 > e4 >>> 0 ? r4 + 1 | 0 : r4)) << 6 | e4 >>> 26, 5) + (67108863 & C4) | 0) >>> 26 | 0) | 0, B4 = 67108863 & i4, e4 = 67108863 & y4, s4 &= 67108863, C4 = 67108863 & r4, g7 = g7 + 16 | 0, !(a4 = a4 - (I6 >>> 0 < 16) | 0) & (I6 = I6 - 16 | 0) >>> 0 > 15 | a4; )
                          ;
                      n3[A8 + 20 >> 2] = C4, n3[A8 + 36 >> 2] = s4, n3[A8 + 32 >> 2] = e4, n3[A8 + 28 >> 2] = B4, n3[A8 + 24 >> 2] = t4;
                    }
                    function N4(A8, g7, I6) {
                      A8 |= 0;
                      var a4, r4, B4, n4, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0;
                      return u3 = B4 = u3 - 160 | 0, la(g7 |= 0, I6 |= 0, 32, 0), t3[0 | g7] = 248 & o3[0 | g7], t3[g7 + 31 | 0] = 63 & o3[g7 + 31 | 0] | 64, lA3(B4, g7), gI(A8, B4), Q4 = o3[(r4 = I6) + 8 | 0] | o3[r4 + 9 | 0] << 8 | o3[r4 + 10 | 0] << 16 | o3[r4 + 11 | 0] << 24, e4 = o3[r4 + 12 | 0] | o3[r4 + 13 | 0] << 8 | o3[r4 + 14 | 0] << 16 | o3[r4 + 15 | 0] << 24, C4 = o3[r4 + 16 | 0] | o3[r4 + 17 | 0] << 8 | o3[r4 + 18 | 0] << 16 | o3[r4 + 19 | 0] << 24, c4 = o3[r4 + 20 | 0] | o3[r4 + 21 | 0] << 8 | o3[r4 + 22 | 0] << 16 | o3[r4 + 23 | 0] << 24, i4 = o3[0 | r4] | o3[r4 + 1 | 0] << 8 | o3[r4 + 2 | 0] << 16 | o3[r4 + 3 | 0] << 24, I6 = o3[r4 + 4 | 0] | o3[r4 + 5 | 0] << 8 | o3[r4 + 6 | 0] << 16 | o3[r4 + 7 | 0] << 24, a4 = g7, n4 = o3[r4 + 28 | 0] | o3[r4 + 29 | 0] << 8 | o3[r4 + 30 | 0] << 16 | o3[r4 + 31 | 0] << 24, g7 = o3[r4 + 24 | 0] | o3[r4 + 25 | 0] << 8 | o3[r4 + 26 | 0] << 16 | o3[r4 + 27 | 0] << 24, t3[a4 + 24 | 0] = g7, t3[a4 + 25 | 0] = g7 >>> 8, t3[a4 + 26 | 0] = g7 >>> 16, t3[a4 + 27 | 0] = g7 >>> 24, t3[a4 + 28 | 0] = n4, t3[a4 + 29 | 0] = n4 >>> 8, t3[a4 + 30 | 0] = n4 >>> 16, t3[a4 + 31 | 0] = n4 >>> 24, t3[a4 + 16 | 0] = C4, t3[a4 + 17 | 0] = C4 >>> 8, t3[a4 + 18 | 0] = C4 >>> 16, t3[a4 + 19 | 0] = C4 >>> 24, t3[a4 + 20 | 0] = c4, t3[a4 + 21 | 0] = c4 >>> 8, t3[a4 + 22 | 0] = c4 >>> 16, t3[a4 + 23 | 0] = c4 >>> 24, t3[a4 + 8 | 0] = Q4, t3[a4 + 9 | 0] = Q4 >>> 8, t3[a4 + 10 | 0] = Q4 >>> 16, t3[a4 + 11 | 0] = Q4 >>> 24, t3[a4 + 12 | 0] = e4, t3[a4 + 13 | 0] = e4 >>> 8, t3[a4 + 14 | 0] = e4 >>> 16, t3[a4 + 15 | 0] = e4 >>> 24, t3[0 | a4] = i4, t3[a4 + 1 | 0] = i4 >>> 8, t3[a4 + 2 | 0] = i4 >>> 16, t3[a4 + 3 | 0] = i4 >>> 24, t3[a4 + 4 | 0] = I6, t3[a4 + 5 | 0] = I6 >>> 8, t3[a4 + 6 | 0] = I6 >>> 16, t3[a4 + 7 | 0] = I6 >>> 24, C4 = o3[(e4 = A8) + 8 | 0] | o3[e4 + 9 | 0] << 8 | o3[e4 + 10 | 0] << 16 | o3[e4 + 11 | 0] << 24, c4 = o3[e4 + 12 | 0] | o3[e4 + 13 | 0] << 8 | o3[e4 + 14 | 0] << 16 | o3[e4 + 15 | 0] << 24, i4 = o3[e4 + 16 | 0] | o3[e4 + 17 | 0] << 8 | o3[e4 + 18 | 0] << 16 | o3[e4 + 19 | 0] << 24, I6 = o3[e4 + 20 | 0] | o3[e4 + 21 | 0] << 8 | o3[e4 + 22 | 0] << 16 | o3[e4 + 23 | 0] << 24, g7 = o3[0 | e4] | o3[e4 + 1 | 0] << 8 | o3[e4 + 2 | 0] << 16 | o3[e4 + 3 | 0] << 24, A8 = o3[e4 + 4 | 0] | o3[e4 + 5 | 0] << 8 | o3[e4 + 6 | 0] << 16 | o3[e4 + 7 | 0] << 24, Q4 = o3[e4 + 28 | 0] | o3[e4 + 29 | 0] << 8 | o3[e4 + 30 | 0] << 16 | o3[e4 + 31 | 0] << 24, e4 = o3[e4 + 24 | 0] | o3[e4 + 25 | 0] << 8 | o3[e4 + 26 | 0] << 16 | o3[e4 + 27 | 0] << 24, t3[a4 + 56 | 0] = e4, t3[a4 + 57 | 0] = e4 >>> 8, t3[a4 + 58 | 0] = e4 >>> 16, t3[a4 + 59 | 0] = e4 >>> 24, t3[a4 + 60 | 0] = Q4, t3[a4 + 61 | 0] = Q4 >>> 8, t3[a4 + 62 | 0] = Q4 >>> 16, t3[a4 + 63 | 0] = Q4 >>> 24, t3[a4 + 48 | 0] = i4, t3[a4 + 49 | 0] = i4 >>> 8, t3[a4 + 50 | 0] = i4 >>> 16, t3[a4 + 51 | 0] = i4 >>> 24, t3[a4 + 52 | 0] = I6, t3[a4 + 53 | 0] = I6 >>> 8, t3[a4 + 54 | 0] = I6 >>> 16, t3[a4 + 55 | 0] = I6 >>> 24, t3[a4 + 40 | 0] = C4, t3[a4 + 41 | 0] = C4 >>> 8, t3[a4 + 42 | 0] = C4 >>> 16, t3[a4 + 43 | 0] = C4 >>> 24, t3[a4 + 44 | 0] = c4, t3[a4 + 45 | 0] = c4 >>> 8, t3[a4 + 46 | 0] = c4 >>> 16, t3[a4 + 47 | 0] = c4 >>> 24, t3[a4 + 32 | 0] = g7, t3[a4 + 33 | 0] = g7 >>> 8, t3[a4 + 34 | 0] = g7 >>> 16, t3[a4 + 35 | 0] = g7 >>> 24, t3[a4 + 36 | 0] = A8, t3[a4 + 37 | 0] = A8 >>> 8, t3[a4 + 38 | 0] = A8 >>> 16, t3[a4 + 39 | 0] = A8 >>> 24, u3 = B4 + 160 | 0, 0;
                    }
                    function M3(A8, g7, I6, a4, r4) {
                      var t4, B4, n4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4 = 0, u4 = 0, f4 = 0, l4 = 0, h4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0, k4 = 0, F4 = 0, b4 = 0, H4 = 0, d4 = 0, S4 = 0, v4 = 0, U4 = 0, J4 = 0, Y4 = 0, x4 = 0, N5 = 0, M4 = 0, R4 = 0, P4 = 0;
                      if (B4 = o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24, n4 = o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24, e4 = o3[I6 + 8 | 0] | o3[I6 + 9 | 0] << 8 | o3[I6 + 10 | 0] << 16 | o3[I6 + 11 | 0] << 24, Q4 = o3[I6 + 12 | 0] | o3[I6 + 13 | 0] << 8 | o3[I6 + 14 | 0] << 16 | o3[I6 + 15 | 0] << 24, C4 = o3[I6 + 16 | 0] | o3[I6 + 17 | 0] << 8 | o3[I6 + 18 | 0] << 16 | o3[I6 + 19 | 0] << 24, c4 = o3[I6 + 24 | 0] | o3[I6 + 25 | 0] << 8 | o3[I6 + 26 | 0] << 16 | o3[I6 + 27 | 0] << 24, i4 = o3[I6 + 28 | 0] | o3[I6 + 29 | 0] << 8 | o3[I6 + 30 | 0] << 16 | o3[I6 + 31 | 0] << 24, I6 = _4 = o3[I6 + 20 | 0] | o3[I6 + 21 | 0] << 8 | o3[I6 + 22 | 0] << 16 | o3[I6 + 23 | 0] << 24, p4 = c4, w4 = i4, a4 ? (U4 = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, Y4 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, J4 = o3[a4 + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, x4 = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24) : (U4 = 1634760805, J4 = 2036477234, Y4 = 857760878, x4 = 1797285236), a4 = x4, G4 = C4, b4 = J4, D4 = t4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, m4 = s4 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, u4 = y4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, g7 = E4 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, H4 = Y4, k4 = Q4, f4 = e4, l4 = n4, F4 = B4, h4 = U4, (0 | r4) >= 1)
                        for (D4 = t4; d4 = Ct(I6 + h4 | 0, 7) ^ k4, N5 = Ct(d4 + h4 | 0, 9) ^ m4, R4 = Ct(d4 + N5 | 0, 13) ^ I6, m4 = Ct(N5 + R4 | 0, 18), S4 = Ct(H4 + F4 | 0, 7) ^ D4, M4 = Ct(S4 + H4 | 0, 9) ^ p4, p4 = Ct(S4 + M4 | 0, 13) ^ F4, k4 = Ct(M4 + p4 | 0, 18), v4 = Ct(g7 + b4 | 0, 7) ^ w4, l4 = Ct(v4 + b4 | 0, 9) ^ l4, g7 = Ct(l4 + v4 | 0, 13) ^ g7, D4 = Ct(l4 + g7 | 0, 18), f4 = Ct(a4 + G4 | 0, 7) ^ f4, u4 = Ct(f4 + a4 | 0, 9) ^ u4, w4 = Ct(u4 + f4 | 0, 13) ^ G4, I6 = Ct(u4 + w4 | 0, 18), F4 = Ct((h4 ^= m4) + f4 | 0, 7) ^ p4, l4 = Ct(F4 + h4 | 0, 9) ^ l4, f4 = Ct(l4 + F4 | 0, 13) ^ f4, h4 = Ct(f4 + l4 | 0, 18) ^ h4, g7 = Ct((p4 = H4 ^ k4) + d4 | 0, 7) ^ g7, u4 = Ct(g7 + p4 | 0, 9) ^ u4, k4 = Ct(g7 + u4 | 0, 13) ^ d4, H4 = Ct(u4 + k4 | 0, 18) ^ p4, G4 = Ct((p4 = D4 ^ b4) + S4 | 0, 7) ^ w4, m4 = Ct(G4 + p4 | 0, 9) ^ N5, D4 = Ct(m4 + G4 | 0, 13) ^ S4, b4 = Ct(D4 + m4 | 0, 18) ^ p4, I6 = Ct((a4 ^= I6) + v4 | 0, 7) ^ R4, p4 = Ct(I6 + a4 | 0, 9) ^ M4, w4 = Ct(I6 + p4 | 0, 13) ^ v4, a4 = Ct(p4 + w4 | 0, 18) ^ a4, (0 | (P4 = P4 + 2 | 0)) < (0 | r4); )
                          ;
                      La(A8, h4 + U4 | 0), La(A8 + 4 | 0, F4 + B4 | 0), La(A8 + 8 | 0, l4 + n4 | 0), La(A8 + 12 | 0, f4 + e4 | 0), La(A8 + 16 | 0, k4 + Q4 | 0), La(A8 + 20 | 0, H4 + Y4 | 0), La(A8 + 24 | 0, g7 + E4 | 0), La(A8 + 28 | 0, u4 + y4 | 0), La(A8 + 32 | 0, m4 + s4 | 0), La(A8 + 36 | 0, D4 + t4 | 0), La(A8 + 40 | 0, b4 + J4 | 0), La(A8 + 44 | 0, G4 + C4 | 0), La(A8 + 48 | 0, I6 + _4 | 0), La(A8 + 52 | 0, p4 + c4 | 0), La(A8 + 56 | 0, w4 + i4 | 0), La(A8 + 60 | 0, a4 + x4 | 0);
                    }
                    function R3(A8, g7, I6) {
                      var a4, r4 = 0, B4 = 0, n4 = 0;
                      u3 = a4 = u3 + -64 | 0;
                      A: {
                        if (!(!I6 | I6 >>> 0 >= 65)) {
                          if (r4 = -1, !(o3[A8 + 80 | 0] | o3[A8 + 81 | 0] << 8 | o3[A8 + 82 | 0] << 16 | o3[A8 + 83 | 0] << 24 | o3[A8 + 84 | 0] | o3[A8 + 85 | 0] << 8 | o3[A8 + 86 | 0] << 16 | o3[A8 + 87 | 0] << 24)) {
                            if (B4 = A8, (r4 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) >>> 0 >= 129) {
                              if (SA3(A8, 128), w3(A8, n4 = A8 + 96 | 0), r4 = (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) - 128 | 0, t3[A8 + 352 | 0] = r4, t3[A8 + 353 | 0] = r4 >>> 8, t3[A8 + 354 | 0] = r4 >>> 16, t3[A8 + 355 | 0] = r4 >>> 24, r4 >>> 0 >= 129)
                                break A;
                              gA3(n4, A8 + 224 | 0, r4), r4 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24;
                            }
                            SA3(B4, r4), o3[A8 + 356 | 0] && (t3[A8 + 88 | 0] = 255, t3[A8 + 89 | 0] = 255, t3[A8 + 90 | 0] = 255, t3[A8 + 91 | 0] = 255, t3[A8 + 92 | 0] = 255, t3[A8 + 93 | 0] = 255, t3[A8 + 94 | 0] = 255, t3[A8 + 95 | 0] = 255), t3[A8 + 80 | 0] = 255, t3[A8 + 81 | 0] = 255, t3[A8 + 82 | 0] = 255, t3[A8 + 83 | 0] = 255, t3[A8 + 84 | 0] = 255, t3[A8 + 85 | 0] = 255, t3[A8 + 86 | 0] = 255, t3[A8 + 87 | 0] = 255, DA3((r4 = A8 + 96 | 0) + (B4 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) | 0, 0, 256 - B4 | 0), w3(A8, r4), yI(a4, o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24), yI(8 | a4, o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24), yI(a4 + 16 | 0, o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24), yI(a4 + 24 | 0, o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24), yI(a4 + 32 | 0, o3[A8 + 32 | 0] | o3[A8 + 33 | 0] << 8 | o3[A8 + 34 | 0] << 16 | o3[A8 + 35 | 0] << 24, o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24), yI(a4 + 40 | 0, o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, o3[A8 + 44 | 0] | o3[A8 + 45 | 0] << 8 | o3[A8 + 46 | 0] << 16 | o3[A8 + 47 | 0] << 24), yI(a4 + 48 | 0, o3[A8 + 48 | 0] | o3[A8 + 49 | 0] << 8 | o3[A8 + 50 | 0] << 16 | o3[A8 + 51 | 0] << 24, o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24), yI(a4 + 56 | 0, o3[A8 + 56 | 0] | o3[A8 + 57 | 0] << 8 | o3[A8 + 58 | 0] << 16 | o3[A8 + 59 | 0] << 24, o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24), gA3(g7, a4, I6), pI(A8, 64), pI(r4, 256), r4 = 0;
                          }
                          return u3 = a4 - -64 | 0, r4;
                        }
                        yr(), c3();
                      }
                      i3(1857, 1889, 306, 1934), c3();
                    }
                    function P3(A8, g7) {
                      var I6, a4, r4, t4, B4, e4, Q4, C4, c4, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0;
                      I6 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, l4 = _a(g7 + 4 | 0), i4 = h3, u4 = _a(g7 + 7 | 0), s4 = h3, f4 = _a(g7 + 10 | 0), _4 = h3, a4 = _a(g7 + 13 | 0), E4 = h3, y4 = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, r4 = _a(g7 + 20 | 0), w4 = h3, t4 = _a(g7 + 23 | 0), B4 = h3, e4 = _a(g7 + 26 | 0), Q4 = h3, C4 = _a(g7 + 29 | 0), g7 = _4 << 3 | f4 >>> 29, D4 = _4 = f4 << 3, f4 = _4 = _4 + 16777216 | 0, _4 = g7 = _4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7, s4 = g7 = s4 << 5 | u4 >>> 27, c4 = p4 = u4 << 5, i4 = g7 = i4 << 6 | (u4 = l4) >>> 26, l4 = g7 = 16777216 + (u4 <<= 6) | 0, p4 = g7, g7 = (g7 = (i4 = g7 >>> 0 < 16777216 ? i4 + 1 | 0 : i4) >> 25) + s4 | 0, g7 = (i4 = c4 + (p4 = (33554431 & i4) << 7 | p4 >>> 25) | 0) >>> 0 < p4 >>> 0 ? g7 + 1 | 0 : g7, (s4 = i4 + 33554432 | 0) >>> 0 < 33554432 && (g7 = g7 + 1 | 0), g7 = (D4 - (-33554432 & f4) | 0) + ((67108863 & g7) << 6 | s4 >>> 26) | 0, n3[A8 + 12 >> 2] = g7, g7 = -67108864 & s4, n3[A8 + 8 >> 2] = i4 - g7, g7 = 0, p4 = y4 = (s4 = y4) + 16777216 | 0, y4 = g7 = y4 >>> 0 < 16777216 ? 1 : g7, D4 = s4 - (-33554432 & p4) | 0, g7 = E4 << 2 | (s4 = a4) >>> 30, E4 = s4 << 2, s4 = g7, g7 = (g7 = _4 >> 25) + s4 | 0, i4 = g7 = (_4 = (i4 = E4) + (E4 = (33554431 & _4) << 7 | f4 >>> 25) | 0) >>> 0 < E4 >>> 0 ? g7 + 1 | 0 : g7, s4 = g7 = _4 + 33554432 | 0, g7 = ((67108863 & (i4 = g7 >>> 0 < 33554432 ? i4 + 1 | 0 : i4)) << 6 | g7 >>> 26) + D4 | 0, n3[A8 + 20 >> 2] = g7, g7 = -67108864 & s4, n3[A8 + 16 >> 2] = _4 - g7, E4 = (i4 = r4) << 7, g7 = (g7 = w4 << 7 | i4 >>> 25) + (i4 = y4 >> 25) | 0, g7 = (y4 = E4 + (s4 = (33554431 & y4) << 7 | p4 >>> 25) | 0) >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7, y4 = i4 = y4, s4 = i4 = i4 + 33554432 | 0, i4 = g7 = i4 >>> 0 < 33554432 ? g7 + 1 | 0 : g7, g7 = -67108864 & s4, n3[(_4 = A8) + 24 >> 2] = y4 - g7, y4 = _4, g7 = B4 << 5 | (_4 = t4) >>> 27, w4 = _4 <<= 5, E4 = _4 = _4 + 16777216 | 0, _4 = g7 = _4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7, g7 = (w4 - (-33554432 & E4) | 0) + ((67108863 & i4) << 6 | s4 >>> 26) | 0, n3[y4 + 28 >> 2] = g7, s4 = (i4 = e4) << 4, i4 = g7 = Q4 << 4 | i4 >>> 28, g7 = (g7 = _4 >> 25) + i4 | 0, g7 = (_4 = (p4 = s4) + (s4 = (33554431 & _4) << 7 | E4 >>> 25) | 0) >>> 0 < s4 >>> 0 ? g7 + 1 | 0 : g7, _4 = i4 = _4, s4 = i4 = i4 + 33554432 | 0, i4 = g7 = i4 >>> 0 < 33554432 ? g7 + 1 | 0 : g7, g7 = -67108864 & s4, n3[y4 + 32 >> 2] = _4 - g7, g7 = 0, _4 = y4 = (y4 = C4) << 2 & 33554428, g7 = (y4 = y4 + 16777216 | 0) >>> 0 < 16777216 ? g7 + 1 | 0 : g7, i4 = (_4 - (33554432 & y4) | 0) + ((67108863 & i4) << 6 | s4 >>> 26) | 0, n3[A8 + 36 >> 2] = i4, y4 = Wr((33554431 & g7) << 7 | y4 >>> 25, g7 >>> 25 | 0, 19, 0), g7 = h3, g7 = (i4 = y4 + I6 | 0) >>> 0 < y4 >>> 0 ? g7 + 1 | 0 : g7, (_4 = i4 + 33554432 | 0) >>> 0 < 33554432 && (g7 = g7 + 1 | 0), g7 = (u4 - (-33554432 & l4) | 0) + ((67108863 & g7) << 6 | _4 >>> 26) | 0, n3[A8 + 4 >> 2] = g7, g7 = A8, A8 = -67108864 & _4, n3[g7 >> 2] = i4 - A8;
                    }
                    function q3(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, Q4, C4, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0;
                      w4 = i4 = n3[(c4 = g7) + 4 >> 2], f4 = i4 >> 31, D4 = i4 = n3[c4 + 8 >> 2], a4 = i4 >> 31, p4 = i4 = n3[c4 + 12 >> 2], l4 = i4 >> 31, m4 = i4 = n3[c4 + 16 >> 2], r4 = i4 >> 31, u4 = i4 = n3[c4 + 20 >> 2], E4 = i4 >> 31, G4 = i4 = n3[c4 + 24 >> 2], t4 = i4 >> 31, B4 = i4 = n3[c4 >> 2], o4 = i4 >> 31, s4 = i4 = Wr(c4 = n3[c4 + 36 >> 2], c4 >> 31, 121666, 0), c4 = h3, I6 = i4 = i4 + 16777216 | 0, i4 = c4 = i4 >>> 0 < 16777216 ? c4 + 1 | 0 : c4, e4 = s4 - (-33554432 & I6) | 0, _4 = Wr(c4 = n3[g7 + 32 >> 2], c4 >> 31, 121666, 0), Q4 = h3, s4 = Wr(g7 = n3[g7 + 28 >> 2], g7 >> 31, 121666, 0), c4 = h3, y4 = _4, C4 = g7 = s4 + 16777216 | 0, _4 = g7, g7 = (g7 = (c4 = g7 >>> 0 < 16777216 ? c4 + 1 | 0 : c4) >> 25) + Q4 | 0, g7 = (c4 = y4 + (_4 = (33554431 & c4) << 7 | _4 >>> 25) | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7, _4 = c4, c4 = g7, y4 = g7 = _4 + 33554432 | 0, g7 = ((67108863 & (c4 = g7 >>> 0 < 33554432 ? c4 + 1 | 0 : c4)) << 6 | g7 >>> 26) + e4 | 0, n3[A8 + 36 >> 2] = g7, g7 = -67108864 & y4, n3[A8 + 32 >> 2] = _4 - g7, y4 = s4 - (-33554432 & C4) | 0, c4 = Wr(G4, t4, 121666, 0), G4 = h3, s4 = Wr(u4, E4, 121666, 0), g7 = h3, _4 = c4, u4 = c4 = s4 + 16777216 | 0, E4 = c4, c4 = (c4 = (g7 = c4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7) >> 25) + G4 | 0, c4 = (g7 = _4 + (E4 = (33554431 & g7) << 7 | E4 >>> 25) | 0) >>> 0 < E4 >>> 0 ? c4 + 1 | 0 : c4, (_4 = g7 + 33554432 | 0) >>> 0 < 33554432 && (c4 = c4 + 1 | 0), c4 = y4 + ((67108863 & c4) << 6 | _4 >>> 26) | 0, n3[A8 + 28 >> 2] = c4, c4 = -67108864 & _4, n3[A8 + 24 >> 2] = g7 - c4, u4 = s4 - (-33554432 & u4) | 0, g7 = Wr(m4, r4, 121666, 0), m4 = h3, s4 = Wr(p4, l4, 121666, 0), c4 = h3, y4 = g7, p4 = g7 = s4 + 16777216 | 0, l4 = (33554431 & (c4 = g7 >>> 0 < 16777216 ? c4 + 1 | 0 : c4)) << 7 | g7 >>> 25, c4 = (c4 >> 25) + m4 | 0, g7 = c4 = (_4 = y4 + l4 | 0) >>> 0 < l4 >>> 0 ? c4 + 1 | 0 : c4, g7 = ((67108863 & (g7 = (c4 = _4 + 33554432 | 0) >>> 0 < 33554432 ? g7 + 1 | 0 : g7)) << 6 | c4 >>> 26) + u4 | 0, n3[A8 + 20 >> 2] = g7, g7 = -67108864 & c4, n3[A8 + 16 >> 2] = _4 - g7, p4 = s4 - (-33554432 & p4) | 0, c4 = Wr(D4, a4, 121666, 0), D4 = h3, s4 = Wr(w4, f4, 121666, 0), g7 = h3, y4 = c4, w4 = c4 = s4 + 16777216 | 0, f4 = (33554431 & (g7 = c4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7)) << 7 | c4 >>> 25, g7 = (g7 >> 25) + D4 | 0, c4 = g7 = (_4 = y4 + f4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7, y4 = g7 = _4 + 33554432 | 0, g7 = ((67108863 & (c4 = g7 >>> 0 < 33554432 ? c4 + 1 | 0 : c4)) << 6 | g7 >>> 26) + p4 | 0, n3[A8 + 12 >> 2] = g7, g7 = -67108864 & y4, n3[A8 + 8 >> 2] = _4 - g7, g7 = Wr((33554431 & i4) << 7 | I6 >>> 25, i4 >> 25, 19, 0), c4 = h3, y4 = s4 - (-33554432 & w4) | 0, i4 = Wr(B4, o4, 121666, 0), c4 = h3 + c4 | 0, c4 = (g7 = i4 + g7 | 0) >>> 0 < i4 >>> 0 ? c4 + 1 | 0 : c4, (i4 = g7 + 33554432 | 0) >>> 0 < 33554432 && (c4 = c4 + 1 | 0), c4 = y4 + ((67108863 & c4) << 6 | i4 >>> 26) | 0, n3[A8 + 4 >> 2] = c4, c4 = A8, A8 = -67108864 & i4, n3[c4 >> 2] = g7 - A8;
                    }
                    function L3(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, Q4, C4, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, w4 = 0, D4 = 0, m4 = 0, G4 = 0;
                      w4 = i4 = n3[(c4 = g7) + 4 >> 2], f4 = i4 >> 31, D4 = i4 = n3[c4 + 8 >> 2], a4 = i4 >> 31, p4 = i4 = n3[c4 + 12 >> 2], l4 = i4 >> 31, m4 = i4 = n3[c4 + 16 >> 2], r4 = i4 >> 31, u4 = i4 = n3[c4 + 20 >> 2], E4 = i4 >> 31, G4 = i4 = n3[c4 + 24 >> 2], t4 = i4 >> 31, B4 = i4 = n3[c4 >> 2], o4 = i4 >> 31, s4 = i4 = Wr(c4 = n3[c4 + 36 >> 2], c4 >> 31, 486662, 0), c4 = h3, I6 = i4 = i4 + 16777216 | 0, i4 = c4 = i4 >>> 0 < 16777216 ? c4 + 1 | 0 : c4, e4 = s4 - (-33554432 & I6) | 0, _4 = Wr(c4 = n3[g7 + 32 >> 2], c4 >> 31, 486662, 0), Q4 = h3, s4 = Wr(g7 = n3[g7 + 28 >> 2], g7 >> 31, 486662, 0), c4 = h3, y4 = _4, C4 = g7 = s4 + 16777216 | 0, _4 = g7, g7 = (g7 = (c4 = g7 >>> 0 < 16777216 ? c4 + 1 | 0 : c4) >> 25) + Q4 | 0, g7 = (c4 = y4 + (_4 = (33554431 & c4) << 7 | _4 >>> 25) | 0) >>> 0 < _4 >>> 0 ? g7 + 1 | 0 : g7, _4 = c4, c4 = g7, y4 = g7 = _4 + 33554432 | 0, g7 = ((67108863 & (c4 = g7 >>> 0 < 33554432 ? c4 + 1 | 0 : c4)) << 6 | g7 >>> 26) + e4 | 0, n3[A8 + 36 >> 2] = g7, g7 = -67108864 & y4, n3[A8 + 32 >> 2] = _4 - g7, y4 = s4 - (-33554432 & C4) | 0, c4 = Wr(G4, t4, 486662, 0), G4 = h3, s4 = Wr(u4, E4, 486662, 0), g7 = h3, _4 = c4, u4 = c4 = s4 + 16777216 | 0, E4 = c4, c4 = (c4 = (g7 = c4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7) >> 25) + G4 | 0, c4 = (g7 = _4 + (E4 = (33554431 & g7) << 7 | E4 >>> 25) | 0) >>> 0 < E4 >>> 0 ? c4 + 1 | 0 : c4, (_4 = g7 + 33554432 | 0) >>> 0 < 33554432 && (c4 = c4 + 1 | 0), c4 = y4 + ((67108863 & c4) << 6 | _4 >>> 26) | 0, n3[A8 + 28 >> 2] = c4, c4 = -67108864 & _4, n3[A8 + 24 >> 2] = g7 - c4, u4 = s4 - (-33554432 & u4) | 0, g7 = Wr(m4, r4, 486662, 0), m4 = h3, s4 = Wr(p4, l4, 486662, 0), c4 = h3, y4 = g7, p4 = g7 = s4 + 16777216 | 0, l4 = (33554431 & (c4 = g7 >>> 0 < 16777216 ? c4 + 1 | 0 : c4)) << 7 | g7 >>> 25, c4 = (c4 >> 25) + m4 | 0, g7 = c4 = (_4 = y4 + l4 | 0) >>> 0 < l4 >>> 0 ? c4 + 1 | 0 : c4, g7 = ((67108863 & (g7 = (c4 = _4 + 33554432 | 0) >>> 0 < 33554432 ? g7 + 1 | 0 : g7)) << 6 | c4 >>> 26) + u4 | 0, n3[A8 + 20 >> 2] = g7, g7 = -67108864 & c4, n3[A8 + 16 >> 2] = _4 - g7, p4 = s4 - (-33554432 & p4) | 0, c4 = Wr(D4, a4, 486662, 0), D4 = h3, s4 = Wr(w4, f4, 486662, 0), g7 = h3, y4 = c4, w4 = c4 = s4 + 16777216 | 0, f4 = (33554431 & (g7 = c4 >>> 0 < 16777216 ? g7 + 1 | 0 : g7)) << 7 | c4 >>> 25, g7 = (g7 >> 25) + D4 | 0, c4 = g7 = (_4 = y4 + f4 | 0) >>> 0 < f4 >>> 0 ? g7 + 1 | 0 : g7, y4 = g7 = _4 + 33554432 | 0, g7 = ((67108863 & (c4 = g7 >>> 0 < 33554432 ? c4 + 1 | 0 : c4)) << 6 | g7 >>> 26) + p4 | 0, n3[A8 + 12 >> 2] = g7, g7 = -67108864 & y4, n3[A8 + 8 >> 2] = _4 - g7, g7 = Wr((33554431 & i4) << 7 | I6 >>> 25, i4 >> 25, 19, 0), c4 = h3, y4 = s4 - (-33554432 & w4) | 0, i4 = Wr(B4, o4, 486662, 0), c4 = h3 + c4 | 0, c4 = (g7 = i4 + g7 | 0) >>> 0 < i4 >>> 0 ? c4 + 1 | 0 : c4, (i4 = g7 + 33554432 | 0) >>> 0 < 33554432 && (c4 = c4 + 1 | 0), c4 = y4 + ((67108863 & c4) << 6 | i4 >>> 26) | 0, n3[A8 + 4 >> 2] = c4, c4 = A8, A8 = -67108864 & i4, n3[c4 >> 2] = g7 - A8;
                    }
                    function K3(A8, g7, I6, a4) {
                      A8 |= 0, g7 |= 0, I6 |= 0;
                      var r4 = 0, t4 = 0, B4 = 0, n4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, h4 = 0;
                      for ((a4 |= 0) ? (i4 = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, c4 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, r4 = o3[a4 + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, t4 = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24) : (r4 = 2036477234, c4 = 857760878, i4 = 1634760805, t4 = 1797285236), a4 = o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24, B4 = o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24, n4 = o3[I6 + 8 | 0] | o3[I6 + 9 | 0] << 8 | o3[I6 + 10 | 0] << 16 | o3[I6 + 11 | 0] << 24, Q4 = o3[I6 + 12 | 0] | o3[I6 + 13 | 0] << 8 | o3[I6 + 14 | 0] << 16 | o3[I6 + 15 | 0] << 24, s4 = o3[I6 + 16 | 0] | o3[I6 + 17 | 0] << 8 | o3[I6 + 18 | 0] << 16 | o3[I6 + 19 | 0] << 24, y4 = o3[I6 + 20 | 0] | o3[I6 + 21 | 0] << 8 | o3[I6 + 22 | 0] << 16 | o3[I6 + 23 | 0] << 24, p4 = o3[I6 + 24 | 0] | o3[I6 + 25 | 0] << 8 | o3[I6 + 26 | 0] << 16 | o3[I6 + 27 | 0] << 24, u4 = o3[I6 + 28 | 0] | o3[I6 + 29 | 0] << 8 | o3[I6 + 30 | 0] << 16 | o3[I6 + 31 | 0] << 24, I6 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, _4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, e4 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, g7 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24; C4 = a4, a4 = Ct((E4 = I6) ^ (I6 = a4 + i4 | 0), 16), C4 = s4 = Ct(C4 ^ (i4 = a4 + s4 | 0), 12), E4 = i4, s4 = Ct((i4 = I6 + s4 | 0) ^ a4, 8), a4 = Ct(C4 ^ (f4 = E4 + s4 | 0), 7), C4 = B4, c4 = Ct((I6 = B4 + c4 | 0) ^ _4, 16), C4 = _4 = Ct(C4 ^ (B4 = c4 + y4 | 0), 12), _4 = Ct((E4 = c4) ^ (c4 = I6 + _4 | 0), 8), I6 = Ct(C4 ^ (y4 = _4 + B4 | 0), 7), C4 = n4, B4 = Ct((r4 = r4 + n4 | 0) ^ e4, 16), C4 = e4 = Ct(C4 ^ (n4 = B4 + p4 | 0), 12), E4 = Ct(B4 ^ (e4 = r4 + e4 | 0), 8), r4 = Ct(C4 ^ (B4 = E4 + n4 | 0), 7), t4 = Ct((n4 = g7) ^ (g7 = t4 + Q4 | 0), 16), Q4 = Ct((n4 = t4 + u4 | 0) ^ Q4, 12), g7 = Ct(t4 ^ (l4 = g7 + Q4 | 0), 8), t4 = Ct(Q4 ^ (n4 = g7 + n4 | 0), 7), C4 = B4, B4 = Ct((B4 = g7) ^ (g7 = I6 + i4 | 0), 16), I6 = Ct((Q4 = C4 + B4 | 0) ^ I6, 12), g7 = Ct(B4 ^ (i4 = g7 + I6 | 0), 8), B4 = Ct(I6 ^ (p4 = Q4 + g7 | 0), 7), C4 = n4, n4 = Ct((I6 = r4 + c4 | 0) ^ s4, 16), r4 = Ct((Q4 = C4 + n4 | 0) ^ r4, 12), I6 = Ct(n4 ^ (c4 = I6 + r4 | 0), 8), n4 = Ct(r4 ^ (u4 = Q4 + I6 | 0), 7), Q4 = Ct((r4 = t4 + e4 | 0) ^ _4, 16), t4 = Ct((e4 = Q4 + f4 | 0) ^ t4, 12), _4 = Ct(Q4 ^ (r4 = r4 + t4 | 0), 8), Q4 = Ct(t4 ^ (s4 = e4 + _4 | 0), 7), e4 = Ct((t4 = a4 + l4 | 0) ^ E4, 16), a4 = Ct((y4 = e4 + y4 | 0) ^ a4, 12), e4 = Ct(e4 ^ (t4 = a4 + t4 | 0), 8), a4 = Ct(a4 ^ (y4 = y4 + e4 | 0), 7), (0 | (h4 = h4 + 1 | 0)) != 10; )
                        ;
                      return La(A8, i4), La(A8 + 4 | 0, c4), La(A8 + 8 | 0, r4), La(A8 + 12 | 0, t4), La(A8 + 16 | 0, I6), La(A8 + 20 | 0, _4), La(A8 + 24 | 0, e4), La(A8 + 28 | 0, g7), 0;
                    }
                    function X3(A8, g7, I6, a4) {
                      var r4, B4 = 0, e4 = 0;
                      u3 = r4 = u3 - 16 | 0, B4 = -31;
                      A: {
                        g: {
                          I: {
                            a:
                              switch (a4 - 1 | 0) {
                                case 1:
                                  if (g7 >>> 0 < 13)
                                    break g;
                                  a4 = o3[36413] | o3[36414] << 8 | o3[36415] << 16 | o3[36416] << 24, B4 = o3[36409] | o3[36410] << 8 | o3[36411] << 16 | o3[36412] << 24, t3[0 | A8] = B4, t3[A8 + 1 | 0] = B4 >>> 8, t3[A8 + 2 | 0] = B4 >>> 16, t3[A8 + 3 | 0] = B4 >>> 24, t3[A8 + 4 | 0] = a4, t3[A8 + 5 | 0] = a4 >>> 8, t3[A8 + 6 | 0] = a4 >>> 16, t3[A8 + 7 | 0] = a4 >>> 24, a4 = o3[36418] | o3[36419] << 8 | o3[36420] << 16 | o3[36421] << 24, B4 = o3[36414] | o3[36415] << 8 | o3[36416] << 16 | o3[36417] << 24, t3[A8 + 5 | 0] = B4, t3[A8 + 6 | 0] = B4 >>> 8, t3[A8 + 7 | 0] = B4 >>> 16, t3[A8 + 8 | 0] = B4 >>> 24, t3[A8 + 9 | 0] = a4, t3[A8 + 10 | 0] = a4 >>> 8, t3[A8 + 11 | 0] = a4 >>> 16, t3[A8 + 12 | 0] = a4 >>> 24, e4 = -12, a4 = 12;
                                  break I;
                                case 0:
                                  break a;
                                default:
                                  break A;
                              }
                            if (g7 >>> 0 < 12)
                              break g;
                            a4 = o3[36426] | o3[36427] << 8 | o3[36428] << 16 | o3[36429] << 24, B4 = o3[36422] | o3[36423] << 8 | o3[36424] << 16 | o3[36425] << 24, t3[0 | A8] = B4, t3[A8 + 1 | 0] = B4 >>> 8, t3[A8 + 2 | 0] = B4 >>> 16, t3[A8 + 3 | 0] = B4 >>> 24, t3[A8 + 4 | 0] = a4, t3[A8 + 5 | 0] = a4 >>> 8, t3[A8 + 6 | 0] = a4 >>> 16, t3[A8 + 7 | 0] = a4 >>> 24, a4 = o3[36430] | o3[36431] << 8 | o3[36432] << 16 | o3[36433] << 24, t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, e4 = -11, a4 = 11;
                          }
                          if (B4 = UA2(I6))
                            break A;
                          if (vg(r4 + 5 | 0, 19), !((B4 = g7 + e4 | 0) >>> 0 <= (g7 = cg(r4 + 5 | 0)) >>> 0) && (A8 = gA3(A8 + a4 | 0, r4 + 5 | 0, g7 + 1 | 0), !((a4 = B4 - g7 | 0) >>> 0 < 4) && (t3[0 | (A8 = A8 + g7 | 0)] = 36, t3[A8 + 1 | 0] = 109, t3[A8 + 2 | 0] = 61, t3[A8 + 3 | 0] = 0, vg(r4 + 5 | 0, n3[I6 + 44 >> 2]), !((a4 = a4 - 3 | 0) >>> 0 <= (g7 = cg(r4 + 5 | 0)) >>> 0) && (A8 = gA3(A8 + 3 | 0, r4 + 5 | 0, g7 + 1 | 0), !((a4 = a4 - g7 | 0) >>> 0 < 4) && (t3[0 | (A8 = A8 + g7 | 0)] = 44, t3[A8 + 1 | 0] = 116, t3[A8 + 2 | 0] = 61, t3[A8 + 3 | 0] = 0, vg(r4 + 5 | 0, n3[I6 + 40 >> 2]), !((a4 = a4 - 3 | 0) >>> 0 <= (g7 = cg(r4 + 5 | 0)) >>> 0) && (A8 = gA3(A8 + 3 | 0, r4 + 5 | 0, g7 + 1 | 0), !((a4 = a4 - g7 | 0) >>> 0 < 4) && (t3[0 | (A8 = A8 + g7 | 0)] = 44, t3[A8 + 1 | 0] = 112, t3[A8 + 2 | 0] = 61, t3[A8 + 3 | 0] = 0, vg(r4 + 5 | 0, n3[I6 + 48 >> 2]), !((a4 = a4 - 3 | 0) >>> 0 <= (g7 = cg(r4 + 5 | 0)) >>> 0) && (A8 = gA3(A8 + 3 | 0, r4 + 5 | 0, g7 + 1 | 0), !((a4 = a4 - g7 | 0) >>> 0 < 2) && (t3[0 | (A8 = A8 + g7 | 0)] = 36, t3[A8 + 1 | 0] = 0, oA3(A8 = A8 + 1 | 0, g7 = a4 - 1 | 0, n3[I6 + 16 >> 2], n3[I6 + 20 >> 2], 3)))))))))) {
                            if (B4 = -31, (a4 = (a4 = g7) - (g7 = cg(A8)) | 0) >>> 0 < 2)
                              break A;
                            return t3[0 | (A8 = A8 + g7 | 0)] = 36, t3[A8 + 1 | 0] = 0, A8 = oA3(A8 + 1 | 0, a4 - 1 | 0, n3[I6 >> 2], n3[I6 + 4 >> 2], 3), u3 = r4 + 16 | 0, A8 ? 0 : -31;
                          }
                        }
                        B4 = -31;
                      }
                      return u3 = r4 + 16 | 0, B4;
                    }
                    function V3(A8, g7, I6, a4) {
                      var r4, B4 = 0;
                      r4 = B4 = u3, u3 = B4 = B4 - 576 & -64, n3[B4 + 188 >> 2] = 0, La(B4 + 188 | 0, g7);
                      A:
                        if (g7 >>> 0 <= 64) {
                          if ((0 | Wg(B4 + 192 | 0, 0, 0, g7)) < 0)
                            break A;
                          if ((0 | At(B4 + 192 | 0, B4 + 188 | 0, 4, 0)) < 0)
                            break A;
                          if ((0 | At(B4 + 192 | 0, I6, a4, 0)) < 0)
                            break A;
                          OI(B4 + 192 | 0, A8, g7);
                        } else if (!((0 | Wg(B4 + 192 | 0, 0, 0, 64)) < 0 || (0 | At(B4 + 192 | 0, B4 + 188 | 0, 4, 0)) < 0 || (0 | At(B4 + 192 | 0, I6, a4, 0)) < 0 || (0 | OI(B4 + 192 | 0, B4 + 112 | 0, 64)) < 0)) {
                          if (I6 = n3[B4 + 116 >> 2], a4 = n3[B4 + 112 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = I6, t3[A8 + 5 | 0] = I6 >>> 8, t3[A8 + 6 | 0] = I6 >>> 16, t3[A8 + 7 | 0] = I6 >>> 24, I6 = n3[B4 + 124 >> 2], a4 = n3[B4 + 120 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = I6, t3[A8 + 13 | 0] = I6 >>> 8, t3[A8 + 14 | 0] = I6 >>> 16, t3[A8 + 15 | 0] = I6 >>> 24, I6 = n3[B4 + 140 >> 2], a4 = n3[B4 + 136 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = I6, t3[A8 + 29 | 0] = I6 >>> 8, t3[A8 + 30 | 0] = I6 >>> 16, t3[A8 + 31 | 0] = I6 >>> 24, I6 = n3[B4 + 132 >> 2], a4 = n3[B4 + 128 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = I6, t3[A8 + 21 | 0] = I6 >>> 8, t3[A8 + 22 | 0] = I6 >>> 16, t3[A8 + 23 | 0] = I6 >>> 24, A8 = A8 + 32 | 0, (g7 = g7 - 32 | 0) >>> 0 >= 65)
                            for (; ; ) {
                              if (gA3(B4 + 48 | 0, B4 + 112 | 0, 64), (0 | Aa(B4 + 112 | 0, 64, B4 + 48 | 0, 64, 0, 0, 0)) < 0)
                                break A;
                              if (I6 = n3[B4 + 116 >> 2], a4 = n3[B4 + 112 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = I6, t3[A8 + 5 | 0] = I6 >>> 8, t3[A8 + 6 | 0] = I6 >>> 16, t3[A8 + 7 | 0] = I6 >>> 24, I6 = n3[B4 + 124 >> 2], a4 = n3[B4 + 120 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = I6, t3[A8 + 13 | 0] = I6 >>> 8, t3[A8 + 14 | 0] = I6 >>> 16, t3[A8 + 15 | 0] = I6 >>> 24, I6 = n3[B4 + 140 >> 2], a4 = n3[B4 + 136 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = I6, t3[A8 + 29 | 0] = I6 >>> 8, t3[A8 + 30 | 0] = I6 >>> 16, t3[A8 + 31 | 0] = I6 >>> 24, I6 = n3[B4 + 132 >> 2], a4 = n3[B4 + 128 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = I6, t3[A8 + 21 | 0] = I6 >>> 8, t3[A8 + 22 | 0] = I6 >>> 16, t3[A8 + 23 | 0] = I6 >>> 24, A8 = A8 + 32 | 0, !((g7 = g7 - 32 | 0) >>> 0 > 64))
                                break;
                            }
                          gA3(B4 + 48 | 0, B4 + 112 | 0, 64), (0 | Aa(B4 + 112 | 0, g7, B4 + 48 | 0, 64, 0, 0, 0)) < 0 || gA3(A8, B4 + 112 | 0, g7);
                        }
                      pI(B4 + 192 | 0, 384), u3 = r4;
                    }
                    function W3(A8, g7, I6, a4) {
                      A8 |= 0, g7 |= 0, I6 |= 0;
                      var r4 = 0, t4 = 0, B4 = 0, n4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, h4 = 0, w4 = 0, D4 = 0;
                      for ((a4 |= 0) ? (B4 = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, t4 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, r4 = o3[a4 + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, a4 = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24) : (r4 = 2036477234, t4 = 857760878, B4 = 1634760805, a4 = 1797285236), p4 = 20, C4 = o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24, E4 = o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24, u4 = o3[I6 + 8 | 0] | o3[I6 + 9 | 0] << 8 | o3[I6 + 10 | 0] << 16 | o3[I6 + 11 | 0] << 24, y4 = o3[I6 + 12 | 0] | o3[I6 + 13 | 0] << 8 | o3[I6 + 14 | 0] << 16 | o3[I6 + 15 | 0] << 24, c4 = o3[I6 + 16 | 0] | o3[I6 + 17 | 0] << 8 | o3[I6 + 18 | 0] << 16 | o3[I6 + 19 | 0] << 24, e4 = o3[I6 + 20 | 0] | o3[I6 + 21 | 0] << 8 | o3[I6 + 22 | 0] << 16 | o3[I6 + 23 | 0] << 24, i4 = o3[I6 + 24 | 0] | o3[I6 + 25 | 0] << 8 | o3[I6 + 26 | 0] << 16 | o3[I6 + 27 | 0] << 24, _4 = o3[I6 + 28 | 0] | o3[I6 + 29 | 0] << 8 | o3[I6 + 30 | 0] << 16 | o3[I6 + 31 | 0] << 24, I6 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, Q4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, n4 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, g7 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24; s4 = n4, n4 = Ct(B4 + e4 | 0, 7) ^ y4, s4 ^= Ct(n4 + B4 | 0, 9), f4 = Ct(n4 + s4 | 0, 13) ^ e4, y4 = Ct(s4 + f4 | 0, 18), g7 = Ct(t4 + C4 | 0, 7) ^ g7, i4 = Ct(g7 + t4 | 0, 9) ^ i4, C4 = Ct(g7 + i4 | 0, 13) ^ C4, h4 = Ct(i4 + C4 | 0, 18), _4 = Ct(I6 + r4 | 0, 7) ^ _4, e4 = Ct(_4 + r4 | 0, 9) ^ E4, l4 = Ct(e4 + _4 | 0, 13) ^ I6, w4 = Ct(e4 + l4 | 0, 18), I6 = Ct(a4 + c4 | 0, 7) ^ u4, Q4 = Ct(I6 + a4 | 0, 9) ^ Q4, c4 = Ct(I6 + Q4 | 0, 13) ^ c4, D4 = Ct(Q4 + c4 | 0, 18), C4 = Ct((B4 ^= y4) + I6 | 0, 7) ^ C4, E4 = Ct(C4 + B4 | 0, 9) ^ e4, u4 = Ct(C4 + E4 | 0, 13) ^ I6, B4 = Ct(E4 + u4 | 0, 18) ^ B4, I6 = Ct((t4 ^= h4) + n4 | 0, 7) ^ l4, Q4 = Ct(I6 + t4 | 0, 9) ^ Q4, y4 = Ct(I6 + Q4 | 0, 13) ^ n4, t4 = Ct(Q4 + y4 | 0, 18) ^ t4, c4 = Ct((r4 ^= w4) + g7 | 0, 7) ^ c4, n4 = Ct(c4 + r4 | 0, 9) ^ s4, g7 = Ct(n4 + c4 | 0, 13) ^ g7, r4 = Ct(g7 + n4 | 0, 18) ^ r4, e4 = Ct((a4 ^= D4) + _4 | 0, 7) ^ f4, i4 = Ct(e4 + a4 | 0, 9) ^ i4, _4 = Ct(e4 + i4 | 0, 13) ^ _4, a4 = Ct(i4 + _4 | 0, 18) ^ a4, s4 = p4 >>> 0 > 2, p4 = p4 - 2 | 0, s4; )
                        ;
                      return La(A8, B4), La(A8 + 4 | 0, t4), La(A8 + 8 | 0, r4), La(A8 + 12 | 0, a4), La(A8 + 16 | 0, I6), La(A8 + 20 | 0, Q4), La(A8 + 24 | 0, n4), La(A8 + 28 | 0, g7), 0;
                    }
                    function T3(A8, g7) {
                      A8 |= 0, g7 |= 0;
                      var I6, a4 = 0;
                      u3 = I6 = u3 - 128 | 0, n3[I6 + 80 >> 2] = 0, n3[I6 + 84 >> 2] = 0, n3[I6 + 88 >> 2] = 0, n3[I6 + 92 >> 2] = 0, n3[I6 + 40 >> 2] = 0, n3[I6 + 44 >> 2] = 0, n3[I6 + 48 >> 2] = 0, n3[I6 + 52 >> 2] = 0, n3[I6 + 56 >> 2] = 0, n3[I6 + 60 >> 2] = 0, a4 = n3[9063], n3[I6 + 104 >> 2] = n3[9062], n3[I6 + 108 >> 2] = a4, a4 = n3[9065], n3[I6 + 112 >> 2] = n3[9064], n3[I6 + 116 >> 2] = a4, a4 = n3[9067], n3[I6 + 120 >> 2] = n3[9066], n3[I6 + 124 >> 2] = a4, n3[I6 + 64 >> 2] = 0, n3[I6 + 68 >> 2] = 0, n3[I6 + 72 >> 2] = 0, n3[I6 + 76 >> 2] = 0, t3[I6 + 64 | 0] = 1, n3[I6 + 32 >> 2] = 0, n3[I6 + 36 >> 2] = 0, a4 = n3[9061], n3[I6 + 96 >> 2] = n3[9060], n3[I6 + 100 >> 2] = a4, a4 = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24, n3[I6 + 24 >> 2] = o3[g7 + 24 | 0] | o3[g7 + 25 | 0] << 8 | o3[g7 + 26 | 0] << 16 | o3[g7 + 27 | 0] << 24, n3[I6 + 28 >> 2] = a4, a4 = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, n3[I6 + 16 >> 2] = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, n3[I6 + 20 >> 2] = a4, a4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, n3[I6 + 8 >> 2] = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, n3[I6 + 12 >> 2] = a4, a4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, n3[I6 >> 2] = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, n3[I6 + 4 >> 2] = a4, sI(I6 - -64 | 0, I6), G3(I6 - -64 | 0), g7 = n3[I6 + 92 >> 2], a4 = n3[I6 + 88 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = g7, t3[A8 + 29 | 0] = g7 >>> 8, t3[A8 + 30 | 0] = g7 >>> 16, t3[A8 + 31 | 0] = g7 >>> 24, g7 = n3[I6 + 84 >> 2], a4 = n3[I6 + 80 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = g7, t3[A8 + 21 | 0] = g7 >>> 8, t3[A8 + 22 | 0] = g7 >>> 16, t3[A8 + 23 | 0] = g7 >>> 24, g7 = n3[I6 + 76 >> 2], a4 = n3[I6 + 72 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = g7, t3[A8 + 13 | 0] = g7 >>> 8, t3[A8 + 14 | 0] = g7 >>> 16, t3[A8 + 15 | 0] = g7 >>> 24, g7 = n3[I6 + 68 >> 2], a4 = n3[I6 + 64 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = g7, t3[A8 + 5 | 0] = g7 >>> 8, t3[A8 + 6 | 0] = g7 >>> 16, t3[A8 + 7 | 0] = g7 >>> 24, u3 = I6 + 128 | 0;
                    }
                    function Z3(A8, g7) {
                      A8 |= 0, g7 |= 0;
                      var I6, a4 = 0;
                      u3 = I6 = u3 - 128 | 0, n3[I6 + 80 >> 2] = 0, n3[I6 + 84 >> 2] = 0, n3[I6 + 88 >> 2] = 0, n3[I6 + 92 >> 2] = 0, n3[I6 + 40 >> 2] = 0, n3[I6 + 44 >> 2] = 0, n3[I6 + 48 >> 2] = 0, n3[I6 + 52 >> 2] = 0, n3[I6 + 56 >> 2] = 0, n3[I6 + 60 >> 2] = 0, a4 = n3[9063], n3[I6 + 104 >> 2] = n3[9062], n3[I6 + 108 >> 2] = a4, a4 = n3[9065], n3[I6 + 112 >> 2] = n3[9064], n3[I6 + 116 >> 2] = a4, a4 = n3[9067], n3[I6 + 120 >> 2] = n3[9066], n3[I6 + 124 >> 2] = a4, n3[I6 + 64 >> 2] = 0, n3[I6 + 68 >> 2] = 0, n3[I6 + 72 >> 2] = 0, n3[I6 + 76 >> 2] = 0, n3[I6 + 32 >> 2] = 0, n3[I6 + 36 >> 2] = 0, a4 = n3[9061], n3[I6 + 96 >> 2] = n3[9060], n3[I6 + 100 >> 2] = a4, a4 = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, n3[I6 + 16 >> 2] = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, n3[I6 + 20 >> 2] = a4, a4 = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24, n3[I6 + 24 >> 2] = o3[g7 + 24 | 0] | o3[g7 + 25 | 0] << 8 | o3[g7 + 26 | 0] << 16 | o3[g7 + 27 | 0] << 24, n3[I6 + 28 >> 2] = a4, a4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, n3[I6 >> 2] = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, n3[I6 + 4 >> 2] = a4, a4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, n3[I6 + 8 >> 2] = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, n3[I6 + 12 >> 2] = a4, sI(I6 - -64 | 0, I6), G3(I6 - -64 | 0), g7 = n3[I6 + 92 >> 2], a4 = n3[I6 + 88 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = g7, t3[A8 + 29 | 0] = g7 >>> 8, t3[A8 + 30 | 0] = g7 >>> 16, t3[A8 + 31 | 0] = g7 >>> 24, g7 = n3[I6 + 84 >> 2], a4 = n3[I6 + 80 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = g7, t3[A8 + 21 | 0] = g7 >>> 8, t3[A8 + 22 | 0] = g7 >>> 16, t3[A8 + 23 | 0] = g7 >>> 24, g7 = n3[I6 + 76 >> 2], a4 = n3[I6 + 72 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = g7, t3[A8 + 13 | 0] = g7 >>> 8, t3[A8 + 14 | 0] = g7 >>> 16, t3[A8 + 15 | 0] = g7 >>> 24, g7 = n3[I6 + 68 >> 2], a4 = n3[I6 + 64 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = g7, t3[A8 + 5 | 0] = g7 >>> 8, t3[A8 + 6 | 0] = g7 >>> 16, t3[A8 + 7 | 0] = g7 >>> 24, u3 = I6 + 128 | 0;
                    }
                    function j3(A8) {
                      var g7, I6 = 0, a4 = 0;
                      u3 = g7 = u3 - 48 | 0, I6 = o3[28 + (A8 |= 0) | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, n3[g7 + 24 >> 2] = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, n3[g7 + 28 >> 2] = I6, I6 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, n3[g7 + 16 >> 2] = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, n3[g7 + 20 >> 2] = I6, I6 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, n3[g7 >> 2] = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, n3[g7 + 4 >> 2] = I6, I6 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, n3[g7 + 8 >> 2] = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, n3[g7 + 12 >> 2] = I6, I6 = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, n3[g7 + 32 >> 2] = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, n3[g7 + 36 >> 2] = I6, ua(g7, g7, 40, 0, A8 + 32 | 0, A8), I6 = n3[g7 + 28 >> 2], a4 = n3[g7 + 24 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = I6, t3[A8 + 29 | 0] = I6 >>> 8, t3[A8 + 30 | 0] = I6 >>> 16, t3[A8 + 31 | 0] = I6 >>> 24, I6 = n3[g7 + 20 >> 2], a4 = n3[g7 + 16 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = I6, t3[A8 + 21 | 0] = I6 >>> 8, t3[A8 + 22 | 0] = I6 >>> 16, t3[A8 + 23 | 0] = I6 >>> 24, I6 = n3[g7 + 12 >> 2], a4 = n3[g7 + 8 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = I6, t3[A8 + 13 | 0] = I6 >>> 8, t3[A8 + 14 | 0] = I6 >>> 16, t3[A8 + 15 | 0] = I6 >>> 24, I6 = n3[g7 + 4 >> 2], a4 = n3[g7 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = I6, t3[A8 + 5 | 0] = I6 >>> 8, t3[A8 + 6 | 0] = I6 >>> 16, t3[A8 + 7 | 0] = I6 >>> 24, I6 = n3[g7 + 36 >> 2], a4 = n3[g7 + 32 >> 2], t3[A8 + 36 | 0] = a4, t3[A8 + 37 | 0] = a4 >>> 8, t3[A8 + 38 | 0] = a4 >>> 16, t3[A8 + 39 | 0] = a4 >>> 24, t3[A8 + 40 | 0] = I6, t3[A8 + 41 | 0] = I6 >>> 8, t3[A8 + 42 | 0] = I6 >>> 16, t3[A8 + 43 | 0] = I6 >>> 24, rr(A8), u3 = g7 + 48 | 0;
                    }
                    function z3(A8, g7, I6, a4, r4, B4, e4) {
                      var Q4, C4, c4, i4, _4, s4, y4, E4 = 0;
                      return u3 = Q4 = u3 - 560 | 0, Mr(Q4 + 352 | 0, e4), la(Q4 + 288 | 0, B4, 32, 0), IA3(Q4 + 352 | 0, Q4 + 320 | 0, 32, 0), IA3(Q4 + 352 | 0, I6, a4, r4), LI(Q4 + 352 | 0, Q4 + 224 | 0), C4 = o3[(E4 = B4) + 32 | 0] | o3[E4 + 33 | 0] << 8 | o3[E4 + 34 | 0] << 16 | o3[E4 + 35 | 0] << 24, c4 = o3[E4 + 36 | 0] | o3[E4 + 37 | 0] << 8 | o3[E4 + 38 | 0] << 16 | o3[E4 + 39 | 0] << 24, i4 = o3[E4 + 40 | 0] | o3[E4 + 41 | 0] << 8 | o3[E4 + 42 | 0] << 16 | o3[E4 + 43 | 0] << 24, _4 = o3[E4 + 44 | 0] | o3[E4 + 45 | 0] << 8 | o3[E4 + 46 | 0] << 16 | o3[E4 + 47 | 0] << 24, s4 = o3[E4 + 48 | 0] | o3[E4 + 49 | 0] << 8 | o3[E4 + 50 | 0] << 16 | o3[E4 + 51 | 0] << 24, B4 = o3[E4 + 52 | 0] | o3[E4 + 53 | 0] << 8 | o3[E4 + 54 | 0] << 16 | o3[E4 + 55 | 0] << 24, y4 = o3[E4 + 60 | 0] | o3[E4 + 61 | 0] << 8 | o3[E4 + 62 | 0] << 16 | o3[E4 + 63 | 0] << 24, E4 = o3[E4 + 56 | 0] | o3[E4 + 57 | 0] << 8 | o3[E4 + 58 | 0] << 16 | o3[E4 + 59 | 0] << 24, t3[A8 + 56 | 0] = E4, t3[A8 + 57 | 0] = E4 >>> 8, t3[A8 + 58 | 0] = E4 >>> 16, t3[A8 + 59 | 0] = E4 >>> 24, t3[A8 + 60 | 0] = y4, t3[A8 + 61 | 0] = y4 >>> 8, t3[A8 + 62 | 0] = y4 >>> 16, t3[A8 + 63 | 0] = y4 >>> 24, t3[A8 + 48 | 0] = s4, t3[A8 + 49 | 0] = s4 >>> 8, t3[A8 + 50 | 0] = s4 >>> 16, t3[A8 + 51 | 0] = s4 >>> 24, t3[A8 + 52 | 0] = B4, t3[A8 + 53 | 0] = B4 >>> 8, t3[A8 + 54 | 0] = B4 >>> 16, t3[A8 + 55 | 0] = B4 >>> 24, t3[A8 + 40 | 0] = i4, t3[A8 + 41 | 0] = i4 >>> 8, t3[A8 + 42 | 0] = i4 >>> 16, t3[A8 + 43 | 0] = i4 >>> 24, t3[A8 + 44 | 0] = _4, t3[A8 + 45 | 0] = _4 >>> 8, t3[A8 + 46 | 0] = _4 >>> 16, t3[A8 + 47 | 0] = _4 >>> 24, t3[0 | (B4 = A8 + 32 | 0)] = C4, t3[B4 + 1 | 0] = C4 >>> 8, t3[B4 + 2 | 0] = C4 >>> 16, t3[B4 + 3 | 0] = C4 >>> 24, t3[B4 + 4 | 0] = c4, t3[B4 + 5 | 0] = c4 >>> 8, t3[B4 + 6 | 0] = c4 >>> 16, t3[B4 + 7 | 0] = c4 >>> 24, G3(Q4 + 224 | 0), lA3(Q4, Q4 + 224 | 0), gI(A8, Q4), Mr(Q4 + 352 | 0, e4), IA3(Q4 + 352 | 0, A8, 64, 0), IA3(Q4 + 352 | 0, I6, a4, r4), LI(Q4 + 352 | 0, Q4 + 160 | 0), G3(Q4 + 160 | 0), t3[Q4 + 288 | 0] = 248 & o3[Q4 + 288 | 0], t3[Q4 + 319 | 0] = 63 & o3[Q4 + 319 | 0] | 64, function(A9, g8, I7, a5) {
                        var r5, B5, n4, e5, Q5, C5, c5, i5, _5, s5, y5, E5, p4, u4, f4, l4, w4, D4, m4, G4, k4, F4, b4, H4, d4, S4, v4, U4, J4, Y4, x4, N5, M4, R4, P4, q4, L4, K4, X4, V4, W4, T4, Z4, j4, z4, O4, $4, AA4, gA4 = 0, IA4 = 0, aA4 = 0, rA4 = 0, tA4 = 0, BA4 = 0, nA4 = 0, oA4 = 0, eA4 = 0, QA4 = 0, CA4 = 0, cA4 = 0, iA4 = 0, _A4 = 0, sA4 = 0, yA4 = 0, EA4 = 0, pA4 = 0, uA4 = 0, fA4 = 0, lA4 = 0, hA4 = 0, wA4 = 0, DA4 = 0, mA4 = 0, GA4 = 0, kA4 = 0, FA4 = 0, bA4 = 0, HA4 = 0, dA4 = 0, SA4 = 0, vA4 = 0, UA3 = 0, JA3 = 0, YA2 = 0, xA2 = 0, NA2 = 0, MA2 = 0, RA2 = 0, PA2 = 0, qA2 = 0, LA2 = 0, KA2 = 0, XA2 = 0, VA2 = 0, WA2 = 0, TA2 = 0, ZA2 = 0, jA2 = 0, zA2 = 0;
                        MA2 = _a(g8), EA4 = o3[g8 + 2 | 0] | o3[g8 + 3 | 0] << 8 | o3[g8 + 4 | 0] << 16 | o3[g8 + 5 | 0] << 24, WA2 = _a(g8 + 5 | 0), bA4 = h3, pA4 = o3[g8 + 7 | 0] | o3[g8 + 8 | 0] << 8 | o3[g8 + 9 | 0] << 16 | o3[g8 + 10 | 0] << 24, uA4 = o3[g8 + 10 | 0] | o3[g8 + 11 | 0] << 8 | o3[g8 + 12 | 0] << 16 | o3[g8 + 13 | 0] << 24, dA4 = _a(g8 + 13 | 0), CA4 = h3, iA4 = o3[g8 + 15 | 0] | o3[g8 + 16 | 0] << 8 | o3[g8 + 17 | 0] << 16 | o3[g8 + 18 | 0] << 24, LA2 = _a(g8 + 18 | 0), _A4 = h3, HA4 = _a(g8 + 21 | 0), nA4 = o3[g8 + 23 | 0] | o3[g8 + 24 | 0] << 8 | o3[g8 + 25 | 0] << 16 | o3[g8 + 26 | 0] << 24, eA4 = _a(g8 + 26 | 0), rA4 = h3, aA4 = o3[g8 + 28 | 0] | o3[g8 + 29 | 0] << 8 | o3[g8 + 30 | 0] << 16 | o3[g8 + 31 | 0] << 24, JA3 = _a(I7), hA4 = o3[(g8 = I7) + 2 | 0] | o3[g8 + 3 | 0] << 8 | o3[g8 + 4 | 0] << 16 | o3[g8 + 5 | 0] << 24, XA2 = _a(g8 + 5 | 0), QA4 = h3, sA4 = o3[g8 + 7 | 0] | o3[g8 + 8 | 0] << 8 | o3[g8 + 9 | 0] << 16 | o3[g8 + 10 | 0] << 24, yA4 = o3[g8 + 10 | 0] | o3[g8 + 11 | 0] << 8 | o3[g8 + 12 | 0] << 16 | o3[g8 + 13 | 0] << 24, VA2 = _a(g8 + 13 | 0), cA4 = h3, tA4 = o3[g8 + 15 | 0] | o3[g8 + 16 | 0] << 8 | o3[g8 + 17 | 0] << 16 | o3[g8 + 18 | 0] << 24, KA2 = _a(g8 + 18 | 0), IA4 = h3, RA2 = _a(g8 + 21 | 0), gA4 = o3[g8 + 23 | 0] | o3[g8 + 24 | 0] << 8 | o3[g8 + 25 | 0] << 16 | o3[g8 + 26 | 0] << 24, oA4 = _a(g8 + 26 | 0), I7 = h3, g8 = o3[g8 + 28 | 0] | o3[g8 + 29 | 0] << 8 | o3[g8 + 30 | 0] << 16 | o3[g8 + 31 | 0] << 24, j4 = _a(a5), z4 = o3[a5 + 2 | 0] | o3[a5 + 3 | 0] << 8 | o3[a5 + 4 | 0] << 16 | o3[a5 + 5 | 0] << 24, O4 = _a(a5 + 5 | 0), $4 = h3, YA2 = o3[a5 + 7 | 0] | o3[a5 + 8 | 0] << 8 | o3[a5 + 9 | 0] << 16 | o3[a5 + 10 | 0] << 24, PA2 = o3[a5 + 10 | 0] | o3[a5 + 11 | 0] << 8 | o3[a5 + 12 | 0] << 16 | o3[a5 + 13 | 0] << 24, qA2 = _a(a5 + 13 | 0), UA3 = h3, SA4 = o3[a5 + 15 | 0] | o3[a5 + 16 | 0] << 8 | o3[a5 + 17 | 0] << 16 | o3[a5 + 18 | 0] << 24, TA2 = _a(a5 + 18 | 0), kA4 = h3, DA4 = _a(a5 + 21 | 0), g8 = Wr(r5 = g8 >>> 7 | 0, 0, B5 = 2097151 & ((3 & rA4) << 30 | eA4 >>> 2), 0), BA4 = h3, rA4 = g8, g8 = Wr(n4 = 2097151 & ((3 & I7) << 30 | oA4 >>> 2), 0, e5 = aA4 >>> 7 | 0, 0), I7 = h3 + BA4 | 0, BA4 = aA4 = rA4 + g8 | 0, aA4 = g8 >>> 0 > aA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(B5, 0, n4, 0), rA4 = h3, gA4 = (I7 = Wr(Q5 = gA4 >>> 5 & 2097151, 0, e5, 0)) + g8 | 0, g8 = h3 + rA4 | 0, I7 = g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(r5, 0, C5 = nA4 >>> 5 & 2097151, 0), I7 = h3 + I7 | 0, nA4 = gA4 = g8 + gA4 | 0, wA4 = I7 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, fA4 = (g8 = gA4) - -1048576 | 0, lA4 = I7 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >> 21) + aA4 | 0, eA4 = g8 = (I7 = (2097151 & I7) << 11 | fA4 >>> 21) >>> 0 > (aA4 = rA4 = I7 + BA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, mA4 = (g8 = aA4) - -1048576 | 0, oA4 = BA4 = eA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, rA4 = Wr(r5, 0, e5, 0), I7 = FA4 = (NA2 = h3) - (((g8 = rA4) >>> 0 < 4293918720) - 1 | 0) | 0, gA4 = BA4 >> 21, FA4 = (2097151 & BA4) << 11 | mA4 >>> 21, rA4 = g8 - (BA4 = -2097152 & (xA2 = g8 - -1048576 | 0)) | 0, g8 = (NA2 - ((g8 >>> 0 < BA4 >>> 0) + I7 | 0) | 0) + gA4 | 0, N5 = g8 = rA4 >>> 0 > (S4 = FA4 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, BA4 = Wr(S4, g8, -683901, -1), rA4 = h3, M4 = g8 = I7 >> 21, g8 = Wr(U4 = (2097151 & I7) << 11 | xA2 >>> 21, g8, 136657, 0), gA4 = h3 + rA4 | 0, FA4 = I7 = g8 + BA4 | 0, BA4 = g8 >>> 0 > I7 >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(c5 = 2097151 & ((1 & cA4) << 31 | VA2 >>> 1), 0, B5, 0), I7 = h3, gA4 = g8, g8 = Wr(i5 = yA4 >>> 4 & 2097151, 0, e5, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(_5 = tA4 >>> 6 & 2097151, 0, C5, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + gA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, d4 = g8 = 0, rA4 = gA4, gA4 = Wr(s5 = 2097151 & RA2, g8, y5 = 2097151 & ((7 & _A4) << 29 | LA2 >>> 3), 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (rA4 = rA4 + gA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(E5 = 2097151 & ((7 & IA4) << 29 | KA2 >>> 3), 0, p4 = 2097151 & HA4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (rA4 = gA4 + rA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(Q5, 0, u4 = iA4 >>> 6 & 2097151, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (rA4 = g8 + rA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(n4, 0, f4 = 2097151 & ((1 & CA4) << 31 | dA4 >>> 1), 0), g8 = h3 + gA4 | 0, I7 = I7 >>> 0 > (gA4 = rA4 = I7 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(r5, 0, l4 = uA4 >>> 4 & 2097151, 0), I7 = h3 + I7 | 0, _A4 = gA4 = g8 + gA4 | 0, rA4 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(B5, 0, i5, 0), I7 = h3, IA4 = (gA4 = g8) + (g8 = Wr(w4 = sA4 >>> 7 & 2097151, 0, e5, 0)) | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > IA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(C5, 0, c5, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (IA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(_5, 0, p4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(s5, d4, u4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, IA4 = (g8 = gA4) + (gA4 = Wr(y5, 0, E5, 0)) | 0, g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(Q5, 0, f4, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (IA4 = I7 + IA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(n4, 0, l4, 0), g8 = h3 + gA4 | 0, I7 = I7 >>> 0 > (gA4 = IA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(r5, 0, D4 = pA4 >>> 7 & 2097151, 0), I7 = h3 + I7 | 0, yA4 = gA4 = g8 + gA4 | 0, tA4 = I7 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, cA4 = (g8 = gA4) - -1048576 | 0, IA4 = I7 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >> 21) + rA4 | 0, I7 = g8 = (I7 = (2097151 & I7) << 11 | cA4 >>> 21) >>> 0 > (sA4 = I7 + _A4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = g8 + BA4 | 0, g8 = (gA4 = rA4 = sA4) >>> 0 > (sA4 = gA4 + FA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, BA4 = (BA4 = I7) - (((I7 = rA4) >>> 0 < 4293918720) - 1 | 0) | 0, CA4 = I7 - -1048576 | 0, iA4 = (I7 = gA4 = sA4) - (gA4 = -2097152 & CA4) | 0, _A4 = g8 - ((rA4 = BA4) + (I7 >>> 0 < gA4 >>> 0) | 0) | 0, J4 = aA4 - (g8 = -2097152 & mA4) | 0, R4 = I7 = eA4 - ((g8 >>> 0 > aA4 >>> 0) + oA4 | 0) | 0, g8 = Wr(U4, M4, -997805, -1), gA4 = h3 + tA4 | 0, gA4 = g8 >>> 0 > (aA4 = g8 + yA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, tA4 = (g8 = aA4) + (aA4 = Wr(S4, N5, 136657, 0)) | 0, g8 = h3 + gA4 | 0, I7 = Wr(J4, I7, -683901, -1), g8 = h3 + (aA4 >>> 0 > tA4 >>> 0 ? g8 + 1 | 0 : g8) | 0, g8 = I7 >>> 0 > (gA4 = I7 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, BA4 = gA4 - (I7 = -2097152 & cA4) | 0, tA4 = g8 - ((I7 >>> 0 > gA4 >>> 0) + IA4 | 0) | 0, g8 = Wr(B5, 0, w4, 0), gA4 = h3, aA4 = (I7 = Wr(m4 = 2097151 & ((3 & QA4) << 30 | XA2 >>> 2), 0, e5, 0)) + g8 | 0, g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > aA4 >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(C5, 0, i5, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(c5, 0, p4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (aA4 = g8 + aA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(_5, 0, y5, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (aA4 = I7 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(s5, d4, f4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(E5, 0, u4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(Q5, 0, l4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(n4, 0, D4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (aA4 = g8 + aA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(r5, 0, G4 = 2097151 & ((3 & bA4) << 30 | WA2 >>> 2), 0), g8 = h3 + gA4 | 0, aA4 = I7 >>> 0 > (IA4 = aA4 = I7 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(B5, 0, m4, 0), I7 = h3, gA4 = g8, g8 = Wr(k4 = hA4 >>> 5 & 2097151, 0, e5, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, oA4 = (g8 = Wr(C5, 0, w4, 0)) + gA4 | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > oA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(i5, 0, p4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (oA4 = I7 + oA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(c5, 0, y5, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = I7 + oA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, oA4 = (I7 = gA4) + (gA4 = Wr(_5, 0, u4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > oA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(s5, d4, l4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + oA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, oA4 = (g8 = Wr(E5, 0, f4, 0)) + gA4 | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > oA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(Q5, 0, D4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (oA4 = I7 + oA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(n4, 0, G4, 0), g8 = h3 + g8 | 0, I7 = g8 = I7 >>> 0 > (gA4 = I7 + oA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(r5, 0, F4 = EA4 >>> 5 & 2097151, 0), I7 = h3 + I7 | 0, sA4 = gA4 = g8 + gA4 | 0, XA2 = I7 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, AA4 = (g8 = gA4) - -1048576 | 0, VA2 = gA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (g8 = gA4 >> 21) + aA4 | 0, yA4 = gA4 = (I7 = (2097151 & gA4) << 11 | AA4 >>> 21) + IA4 | 0, KA2 = g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, WA2 = (g8 = gA4) - -1048576 | 0, RA2 = gA4 = KA2 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (g8 = gA4 >> 21) + tA4 | 0, cA4 = aA4 = (gA4 = (2097151 & gA4) << 11 | WA2 >>> 21) + BA4 | 0, NA2 = I7 = gA4 >>> 0 > aA4 >>> 0 ? I7 + 1 | 0 : I7, dA4 = (g8 = aA4) - -1048576 | 0, FA4 = gA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (g8 = gA4 >> 21) + _A4 | 0, tA4 = gA4 = (I7 = (2097151 & gA4) << 11 | dA4 >>> 21) + iA4 | 0, EA4 = gA4 = (mA4 = g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = gA4) >>> 0 < 4293918720) - 1 | 0) | 0, eA4 = (2097151 & gA4) << 11 | (HA4 = g8 - -1048576 | 0) >>> 21, IA4 = gA4 >> 21, g8 = Wr(B5, 0, _5, 0), I7 = h3, gA4 = g8, g8 = Wr(e5, 0, c5, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(s5, d4, p4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + gA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, aA4 = (g8 = gA4) + (gA4 = Wr(C5, 0, E5, 0)) | 0, g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > aA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(Q5, 0, y5, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (aA4 = I7 + aA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(n4, 0, u4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (aA4 = I7 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(r5, 0, f4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(U4, M4, -683901, -1), I7 = (g8 = I7) + h3 | 0, I7 = gA4 >>> 0 > (BA4 = aA4 + gA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = BA4, BA4 = (BA4 = g8) - (((g8 = aA4) >>> 0 < 4293918720) - 1 | 0) | 0, hA4 = g8 - -1048576 | 0, oA4 = (g8 = gA4) - (gA4 = -2097152 & hA4) | 0, gA4 = I7 - ((aA4 = BA4) + (g8 >>> 0 < gA4 >>> 0) | 0) | 0, g8 = (g8 = rA4 >> 21) + gA4 | 0, g8 = (I7 = (2097151 & rA4) << 11 | CA4 >>> 21) >>> 0 > (rA4 = I7 + oA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, BA4 = (I7 = rA4) - (gA4 = -2097152 & (QA4 = I7 - -1048576 | 0)) | 0, gA4 = (g8 - ((I7 >>> 0 < gA4 >>> 0) + (rA4 = oA4 = g8 - ((I7 >>> 0 < 4293918720) - 1 | 0) | 0) | 0) | 0) + IA4 | 0, P4 = eA4 = BA4 + eA4 | 0, q4 = gA4 = BA4 >>> 0 > eA4 >>> 0 ? gA4 + 1 | 0 : gA4, oA4 = Wr(eA4, gA4, -683901, -1), BA4 = h3, I7 = Wr(C5, 0, s5, d4), g8 = h3, gA4 = I7, I7 = Wr(e5, 0, _5, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, IA4 = (I7 = gA4) + (gA4 = Wr(B5, 0, E5, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > IA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(Q5, 0, p4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(n4, 0, y5, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(r5, 0, u4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = (g8 = aA4 >> 21) + gA4 | 0, pA4 = IA4 = (g8 = (I7 = (2097151 & aA4) << 11 | hA4 >>> 21) >>> 0 > (aA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8) - (((I7 = aA4) >>> 0 < 4293918720) - 1 | 0) | 0, aA4 = I7 - (gA4 = -2097152 & (vA4 = I7 - -1048576 | 0)) | 0, gA4 = (g8 - ((I7 >>> 0 < gA4 >>> 0) + IA4 | 0) | 0) + (rA4 >> 21) | 0, L4 = aA4 = (g8 = (2097151 & rA4) << 11 | QA4 >>> 21) + aA4 | 0, K4 = gA4 = g8 >>> 0 > aA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(aA4, gA4, 136657, 0), g8 = h3 + BA4 | 0, LA2 = gA4 = I7 + oA4 | 0, uA4 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(p4, 0, k4, 0), g8 = h3, gA4 = I7, I7 = Wr(b4 = 2097151 & JA3, 0, C5, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, aA4 = (I7 = gA4) + (gA4 = Wr(y5, 0, m4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > aA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(u4, 0, w4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (aA4 = g8 + aA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(i5, 0, f4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (aA4 = I7 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(c5, 0, l4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(_5, 0, D4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(s5, d4, F4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (aA4 = gA4 + aA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(E5, 0, G4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (aA4 = g8 + aA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(Q5, 0, H4 = 2097151 & MA2, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (aA4 = I7 + aA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, rA4 = aA4 = (gA4 = (o3[a5 + 23 | 0] | o3[a5 + 24 | 0] << 8 | o3[a5 + 25 | 0] << 16 | o3[a5 + 26 | 0] << 24) >>> 5 & 2097151) + aA4 | 0, aA4 = gA4 >>> 0 > aA4 >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(y5, 0, k4, 0), I7 = h3, gA4 = g8, g8 = Wr(p4, 0, b4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, IA4 = (g8 = Wr(u4, 0, m4, 0)) + gA4 | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > IA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(f4, 0, w4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (IA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(i5, 0, l4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, IA4 = (I7 = gA4) + (gA4 = Wr(c5, 0, D4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > IA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(_5, 0, G4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, IA4 = (g8 = Wr(s5, d4, H4, 0)) + gA4 | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > IA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(E5, 0, F4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (IA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, IA4 = gA4 = (I7 = 2097151 & DA4) + IA4 | 0, iA4 = gA4 = (CA4 = g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = gA4) >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & gA4) << 11 | (bA4 = g8 - -1048576 | 0) >>> 21, gA4 = (gA4 >>> 21 | 0) + aA4 | 0, QA4 = gA4 = g8 >>> 0 > (rA4 = g8 + rA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, JA3 = nA4 - (g8 = -2097152 & fA4) | 0, DA4 = wA4 - ((g8 >>> 0 > nA4 >>> 0) + lA4 | 0) | 0, I7 = Wr(B5, 0, Q5, 0), g8 = h3, gA4 = I7, I7 = Wr(e5, 0, s5, d4), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, aA4 = (I7 = gA4) + (gA4 = Wr(n4, 0, C5, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > aA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(r5, 0, p4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (aA4 = g8 + aA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, BA4 = aA4, g8 = Wr(e5, 0, E5, 0), I7 = h3, aA4 = g8, g8 = Wr(B5, 0, s5, d4), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (aA4 = aA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, nA4 = (g8 = aA4) + (aA4 = Wr(C5, 0, Q5, 0)) | 0, g8 = h3 + I7 | 0, g8 = aA4 >>> 0 > nA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(n4, 0, p4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (aA4 = I7 + nA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, nA4 = (I7 = aA4) + (aA4 = Wr(r5, 0, y5, 0)) | 0, I7 = h3 + g8 | 0, eA4 = I7 = aA4 >>> 0 > nA4 >>> 0 ? I7 + 1 | 0 : I7, wA4 = (g8 = aA4 = nA4) - -1048576 | 0, oA4 = nA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (g8 = nA4 >> 21) + gA4 | 0, BA4 = I7 = (gA4 = BA4 = (nA4 = (2097151 & nA4) << 11 | wA4 >>> 21) + BA4 | 0) >>> 0 < nA4 >>> 0 ? I7 + 1 | 0 : I7, lA4 = (g8 = gA4) - -1048576 | 0, I7 = (g8 = (nA4 = fA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + DA4 | 0, X4 = I7 = (fA4 = (2097151 & nA4) << 11 | lA4 >>> 21) >>> 0 > (v4 = JA3 = fA4 + JA3 | 0) >>> 0 ? I7 + 1 | 0 : I7, DA4 = Wr(v4, I7, 470296, 0), fA4 = h3, Y4 = gA4 - (I7 = -2097152 & lA4) | 0, xA2 = g8 = BA4 - ((I7 >>> 0 > gA4 >>> 0) + nA4 | 0) | 0, I7 = Wr(J4, R4, 666643, 0), gA4 = h3 + fA4 | 0, gA4 = I7 >>> 0 > (nA4 = I7 + DA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(Y4, g8, 654183, 0), g8 = h3 + gA4 | 0, I7 = I7 >>> 0 > (BA4 = nA4 = I7 + nA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = aA4 - (gA4 = -2097152 & wA4) | 0, gA4 = (pA4 >> 21) + (nA4 = eA4 - ((gA4 >>> 0 > aA4 >>> 0) + oA4 | 0) | 0) | 0, V4 = oA4 = (aA4 = (2097151 & pA4) << 11 | vA4 >>> 21) + g8 | 0, MA2 = gA4 = aA4 >>> 0 > oA4 >>> 0 ? gA4 + 1 | 0 : gA4, ZA2 = rA4 - -1048576 | 0, aA4 = nA4 = QA4 - ((rA4 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = Wr(oA4, gA4, -997805, -1), I7 = h3 + I7 | 0, g8 = (I7 = g8 >>> 0 > (gA4 = g8 + BA4 | 0) >>> 0 ? I7 + 1 | 0 : I7) + QA4 | 0, g8 = gA4 >>> 0 > (rA4 = gA4 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, DA4 = (gA4 = rA4) - (I7 = -2097152 & ZA2) | 0, fA4 = g8 - ((I7 >>> 0 > gA4 >>> 0) + aA4 | 0) | 0, g8 = Wr(Y4, xA2, 470296, 0), I7 = h3, rA4 = (gA4 = g8) + (g8 = Wr(v4, X4, 666643, 0)) | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > rA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(oA4, MA2, 654183, 0), g8 = h3 + gA4 | 0, I7 = CA4 + (I7 >>> 0 > (rA4 = I7 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8) | 0, QA4 = (gA4 = IA4 + rA4 | 0) - (g8 = -2097152 & bA4) | 0, nA4 = (I7 = gA4 >>> 0 < IA4 >>> 0 ? I7 + 1 | 0 : I7) - ((g8 >>> 0 > gA4 >>> 0) + iA4 | 0) | 0, I7 = Wr(u4, 0, k4, 0), g8 = h3, gA4 = I7, I7 = Wr(y5, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(f4, 0, m4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = I7 + gA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, rA4 = (I7 = gA4) + (gA4 = Wr(l4, 0, w4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > rA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(i5, 0, D4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (rA4 = g8 + rA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(c5, 0, G4, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (rA4 = g8 + rA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(_5, 0, F4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (rA4 = gA4 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(E5, 0, H4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = I7 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = gA4, rA4 = (gA4 = 2097151 & ((7 & kA4) << 29 | TA2 >>> 3)) >>> 0 > (IA4 = rA4 = I7 + gA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(f4, 0, k4, 0), I7 = h3, BA4 = (gA4 = g8) + (g8 = Wr(u4, 0, b4, 0)) | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > BA4 >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(l4, 0, m4, 0), g8 = h3 + gA4 | 0, g8 = I7 >>> 0 > (BA4 = I7 + BA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(D4, 0, w4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (BA4 = gA4 + BA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(i5, 0, G4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (BA4 = gA4 + BA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(c5, 0, F4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (BA4 = gA4 + BA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(_5, 0, H4, 0), gA4 = h3 + I7 | 0, g8 = g8 >>> 0 > (I7 = BA4 = g8 + BA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, wA4 = gA4 = BA4 + (I7 = SA4 >>> 6 & 2097151) | 0, _A4 = gA4 = (eA4 = g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = gA4) >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & gA4) << 11 | (lA4 = g8 - -1048576 | 0) >>> 21, gA4 = (gA4 >>> 21 | 0) + rA4 | 0, oA4 = gA4 = g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, pA4 = (g8 = IA4) - -1048576 | 0, BA4 = gA4 = gA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (I7 = gA4 >>> 21 | 0) + nA4 | 0, CA4 = rA4 = (gA4 = (2097151 & gA4) << 11 | pA4 >>> 21) + QA4 | 0, hA4 = gA4 = (nA4 = g8 = gA4 >>> 0 > rA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = rA4) >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & gA4) << 11 | (iA4 = g8 - -1048576 | 0) >>> 21, gA4 = (gA4 >> 21) + fA4 | 0, g8 = (I7 = gA4 = g8 >>> 0 > (rA4 = g8 + DA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4) + uA4 | 0, QA4 = (QA4 = I7) - (((I7 = rA4) >>> 0 < 4293918720) - 1 | 0) | 0, jA2 = I7 - -1048576 | 0, zA2 = (I7 = gA4 = kA4 = rA4 + LA2 | 0) - (gA4 = -2097152 & jA2) | 0, GA4 = (g8 = rA4 >>> 0 > kA4 >>> 0 ? g8 + 1 | 0 : g8) - ((rA4 = QA4) + (I7 >>> 0 < gA4 >>> 0) | 0) | 0, g8 = Wr(L4, K4, -997805, -1), I7 = h3 + nA4 | 0, vA4 = gA4 = g8 + CA4 | 0, QA4 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Wr(V4, MA2, 470296, 0), g8 = h3, gA4 = I7, I7 = Wr(Y4, xA2, 666643, 0), g8 = h3 + g8 | 0, g8 = (g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8) + oA4 | 0, g8 = (I7 = gA4 + IA4 | 0) >>> 0 < IA4 >>> 0 ? g8 + 1 | 0 : g8, pA4 = (gA4 = I7) - (I7 = -2097152 & pA4) | 0, uA4 = g8 - ((I7 >>> 0 > gA4 >>> 0) + BA4 | 0) | 0, g8 = Wr(V4, MA2, 666643, 0), I7 = h3 + eA4 | 0, CA4 = gA4 = g8 + wA4 | 0, nA4 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Wr(l4, 0, k4, 0), g8 = h3, gA4 = I7, I7 = Wr(f4, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(D4, 0, m4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = I7 + gA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, IA4 = (I7 = gA4) + (gA4 = Wr(G4, 0, w4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > IA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(i5, 0, F4, 0), gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(c5, 0, H4, 0), I7 = h3 + gA4 | 0, g8 = I7 = g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, BA4 = IA4 = (gA4 = 2097151 & ((1 & UA3) << 31 | qA2 >>> 1)) + IA4 | 0, IA4 = gA4 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(D4, 0, k4, 0), g8 = h3, gA4 = I7, I7 = Wr(l4, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, oA4 = (I7 = gA4) + (gA4 = Wr(G4, 0, m4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > oA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(F4, 0, w4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + oA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, oA4 = (g8 = Wr(i5, 0, H4, 0)) + gA4 | 0, gA4 = h3 + I7 | 0, g8 = g8 >>> 0 > (I7 = oA4) >>> 0 ? gA4 + 1 | 0 : gA4, eA4 = gA4 = oA4 + (I7 = PA2 >>> 4 & 2097151) | 0, PA2 = gA4 = (bA4 = g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = gA4) >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (2097151 & gA4) << 11 | (TA2 = g8 - -1048576 | 0) >>> 21, gA4 = (gA4 >>> 21 | 0) + IA4 | 0, oA4 = BA4 = g8 + BA4 | 0, UA3 = gA4 = g8 >>> 0 > BA4 >>> 0 ? gA4 + 1 | 0 : gA4, LA2 = (g8 = BA4) - -1048576 | 0, SA4 = gA4 = gA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (I7 = gA4 >>> 21 | 0) + nA4 | 0, wA4 = gA4 = (kA4 = (gA4 = (gA4 = (2097151 & gA4) << 11 | LA2 >>> 21) >>> 0 > (I7 = IA4 = gA4 + CA4 | 0) >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = -2097152 & lA4) >>> 0 > I7 >>> 0) + _A4 | 0) | 0) - (((g8 = BA4 = I7 - g8 | 0) >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (I7 = gA4 >> 21) + uA4 | 0, DA4 = gA4 = (g8 = (2097151 & gA4) << 11 | (JA3 = g8 - -1048576 | 0) >>> 21) + pA4 | 0, lA4 = I7 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, fA4 = (g8 = gA4) - -1048576 | 0, pA4 = IA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, x4 = tA4 - (g8 = -2097152 & HA4) | 0, qA2 = gA4 = mA4 - ((g8 >>> 0 > tA4 >>> 0) + EA4 | 0) | 0, g8 = (I7 = IA4 >> 21) + QA4 | 0, g8 = (IA4 = (2097151 & IA4) << 11 | fA4 >>> 21) >>> 0 > (tA4 = IA4 + vA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, nA4 = (IA4 = Wr(P4, q4, 136657, 0)) + (tA4 - (I7 = -2097152 & iA4) | 0) | 0, I7 = h3 + (g8 - ((I7 >>> 0 > tA4 >>> 0) + hA4 | 0) | 0) | 0, I7 = IA4 >>> 0 > nA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(x4, gA4, -683901, -1), g8 = h3 + I7 | 0, nA4 = IA4 = gA4 + nA4 | 0, CA4 = gA4 = (uA4 = g8 = gA4 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = IA4) >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (I7 = gA4 >> 21) + GA4 | 0, tA4 = gA4 = (g8 = (2097151 & gA4) << 11 | (HA4 = g8 - -1048576 | 0) >>> 21) + zA2 | 0, iA4 = I7 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, _A4 = gA4 = I7 - (((g8 = gA4) >>> 0 < 4293918720) - 1 | 0) | 0, vA4 = (2097151 & gA4) << 11 | (mA4 = g8 - -1048576 | 0) >>> 21, hA4 = gA4 >> 21, I7 = Wr(C5, 0, k4, 0), g8 = h3, gA4 = I7, I7 = Wr(B5, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, IA4 = (I7 = Wr(p4, 0, m4, 0)) + gA4 | 0, gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > IA4 >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(y5, 0, w4, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(i5, 0, u4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(c5, 0, f4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(_5, 0, l4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(s5, d4, G4, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (IA4 = I7 + IA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(E5, 0, D4, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(Q5, 0, F4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(n4, 0, H4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = _a(a5 + 26 | 0), gA4 = 2097151 & ((3 & (gA4 = h3)) << 30 | g8 >>> 2), g8 = I7, EA4 = IA4 = gA4 + IA4 | 0, IA4 = g8 = gA4 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(J4, R4, 470296, 0), I7 = h3, GA4 = (gA4 = g8) + (g8 = Wr(S4, N5, 666643, 0)) | 0, gA4 = h3 + I7 | 0, gA4 = g8 >>> 0 > GA4 >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(v4, X4, 654183, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (GA4 = g8 + GA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(Y4, xA2, -997805, -1), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + GA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, GA4 = (g8 = gA4) + (gA4 = Wr(V4, MA2, 136657, 0)) | 0, g8 = h3 + I7 | 0, g8 = (g8 = gA4 >>> 0 > GA4 >>> 0 ? g8 + 1 | 0 : g8) + IA4 | 0, g8 = (I7 = GA4) >>> 0 > (gA4 = I7 + EA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = gA4, gA4 = g8, W4 = (g8 = EA4) - -1048576 | 0, IA4 = QA4 = IA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, QA4 = I7, gA4 = (I7 = aA4 >> 21) + gA4 | 0, gA4 = (g8 = (2097151 & aA4) << 11 | ZA2 >>> 21) >>> 0 > (aA4 = QA4 + g8 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = aA4 - (g8 = -2097152 & W4) | 0, EA4 = Wr(L4, K4, -683901, -1), g8 = (aA4 = gA4 - ((g8 >>> 0 > aA4 >>> 0) + IA4 | 0) | 0) + h3 | 0, gA4 = g8 = EA4 >>> 0 > (GA4 = I7 + EA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, QA4 = aA4 - (((g8 = I7) >>> 0 < 4293918720) - 1 | 0) | 0, T4 = g8 - -1048576 | 0, gA4 = (I7 = rA4 >> 21) + gA4 | 0, gA4 = (g8 = (2097151 & rA4) << 11 | jA2 >>> 21) >>> 0 > (rA4 = g8 + (EA4 = GA4) | 0) >>> 0 ? gA4 + 1 | 0 : gA4, EA4 = I7 = rA4 - (g8 = -2097152 & T4) | 0, g8 = (rA4 = gA4 - ((g8 >>> 0 > rA4 >>> 0) + (aA4 = QA4) | 0) | 0) + hA4 | 0, Z4 = I7 - -1048576 | 0, QA4 = rA4 - ((I7 >>> 0 < 4293918720) - 1 | 0) | 0, ZA2 = (I7 = gA4 = vA4 = I7 + vA4 | 0) - (gA4 = -2097152 & Z4) | 0, jA2 = (EA4 >>> 0 > I7 >>> 0 ? g8 + 1 | 0 : g8) - ((I7 >>> 0 < gA4 >>> 0) + (rA4 = QA4) | 0) | 0, zA2 = tA4 - (g8 = -2097152 & mA4) | 0, GA4 = iA4 - ((g8 >>> 0 > tA4 >>> 0) + _A4 | 0) | 0, vA4 = nA4 - (g8 = -2097152 & HA4) | 0, HA4 = uA4 - ((g8 >>> 0 > nA4 >>> 0) + CA4 | 0) | 0, I7 = Wr(L4, K4, 654183, 0), g8 = h3 + lA4 | 0, g8 = I7 >>> 0 > (gA4 = I7 + DA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, nA4 = ((tA4 = gA4) - (I7 = -2097152 & fA4) | 0) + (gA4 = Wr(P4, q4, -997805, -1)) | 0, I7 = h3 + (g8 - ((I7 >>> 0 > tA4 >>> 0) + pA4 | 0) | 0) | 0, I7 = gA4 >>> 0 > nA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(x4, qA2, 136657, 0), g8 = h3 + I7 | 0, mA4 = tA4 = gA4 + nA4 | 0, nA4 = gA4 >>> 0 > tA4 >>> 0 ? g8 + 1 | 0 : g8, EA4 = cA4 - (g8 = -2097152 & dA4) | 0, uA4 = NA2 - ((g8 >>> 0 > cA4 >>> 0) + FA4 | 0) | 0, g8 = Wr(S4, N5, -997805, -1), I7 = h3, gA4 = g8, g8 = Wr(U4, M4, 654183, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(J4, R4, 136657, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + gA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, tA4 = (g8 = gA4) + (gA4 = Wr(v4, X4, -683901, -1)) | 0, g8 = h3 + I7 | 0, gA4 = KA2 + (gA4 >>> 0 > tA4 >>> 0 ? g8 + 1 | 0 : g8) | 0, CA4 = (I7 = tA4 + yA4 | 0) - (g8 = -2097152 & WA2) | 0, iA4 = (gA4 = I7 >>> 0 < yA4 >>> 0 ? gA4 + 1 | 0 : gA4) - ((g8 >>> 0 > I7 >>> 0) + RA2 | 0) | 0, g8 = Wr(S4, N5, 654183, 0), I7 = h3, gA4 = g8, g8 = Wr(U4, M4, 470296, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, tA4 = (g8 = gA4) + (gA4 = Wr(J4, R4, -997805, -1)) | 0, g8 = h3 + I7 | 0, I7 = tA4 + sA4 | 0, gA4 = XA2 + (gA4 >>> 0 > tA4 >>> 0 ? g8 + 1 | 0 : g8) | 0, tA4 = (g8 = Wr(v4, X4, 136657, 0)) + I7 | 0, I7 = h3 + (I7 >>> 0 < sA4 >>> 0 ? gA4 + 1 | 0 : gA4) | 0, I7 = g8 >>> 0 > tA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(Y4, xA2, -683901, -1), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (tA4 = gA4 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, yA4 = (gA4 = tA4) - (I7 = -2097152 & AA4) | 0, cA4 = g8 - ((I7 >>> 0 > gA4 >>> 0) + VA2 | 0) | 0, I7 = Wr(B5, 0, k4, 0), g8 = h3, gA4 = I7, I7 = Wr(e5, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, tA4 = (I7 = gA4) + (gA4 = Wr(C5, 0, m4, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > tA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(p4, 0, w4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (tA4 = gA4 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(i5, 0, y5, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (tA4 = I7 + tA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(c5, 0, u4, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (tA4 = g8 + tA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(_5, 0, f4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (tA4 = gA4 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, gA4 = Wr(s5, d4, D4, 0), I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > (tA4 = gA4 + tA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(E5, 0, l4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (tA4 = gA4 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(Q5, 0, G4, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (tA4 = I7 + tA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(r5, 0, H4, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (tA4 = g8 + tA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(n4, 0, F4, 0), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (tA4 = gA4 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = (a5 = (o3[a5 + 28 | 0] | o3[a5 + 29 | 0] << 8 | o3[a5 + 30 | 0] << 16 | o3[a5 + 31 | 0] << 24) >>> 7 | 0) >>> 0 > (gA4 = a5 + tA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = gA4, gA4 = IA4 >> 21, IA4 = g8 + (a5 = (2097151 & IA4) << 11 | W4 >>> 21) | 0, g8 = I7 + gA4 | 0, tA4 = IA4, _A4 = g8 = a5 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8, lA4 = (g8 = IA4) - -1048576 | 0, hA4 = I7 = _A4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >> 21) + cA4 | 0, IA4 = a5 = (I7 = (2097151 & I7) << 11 | lA4 >>> 21) + yA4 | 0, QA4 = g8 = I7 >>> 0 > a5 >>> 0 ? g8 + 1 | 0 : g8, pA4 = (g8 = a5) - -1048576 | 0, sA4 = I7 = QA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >> 21) + iA4 | 0, yA4 = g8 = (I7 = (2097151 & I7) << 11 | pA4 >>> 21) >>> 0 > (a5 = I7 + CA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, iA4 = (g8 = a5) - -1048576 | 0, cA4 = I7 = yA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >> 21) + uA4 | 0, dA4 = CA4 = (I7 = (2097151 & I7) << 11 | iA4 >>> 21) + EA4 | 0, FA4 = g8 = I7 >>> 0 > CA4 >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(CA4, g8, -683901, -1), I7 = h3 + nA4 | 0, CA4 = gA4 = g8 + mA4 | 0, nA4 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, DA4 = a5 - (g8 = -2097152 & iA4) | 0, mA4 = cA4 = yA4 - ((g8 >>> 0 > a5 >>> 0) + cA4 | 0) | 0, I7 = Wr(L4, K4, 470296, 0) + BA4 | 0, g8 = kA4 + h3 | 0, g8 = I7 >>> 0 < BA4 >>> 0 ? g8 + 1 | 0 : g8, BA4 = ((gA4 = I7) - (a5 = -2097152 & JA3) | 0) + (I7 = Wr(P4, q4, 654183, 0)) | 0, gA4 = h3 + (g8 - ((a5 >>> 0 > gA4 >>> 0) + wA4 | 0) | 0) | 0, g8 = Wr(x4, qA2, -997805, -1), I7 = h3 + (I7 >>> 0 > BA4 >>> 0 ? gA4 + 1 | 0 : gA4) | 0, I7 = g8 >>> 0 > (a5 = g8 + BA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = (g8 = a5) + (a5 = Wr(dA4, FA4, 136657, 0)) | 0, g8 = h3 + I7 | 0, g8 = a5 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, a5 = Wr(DA4, cA4, -683901, -1), I7 = h3 + g8 | 0, yA4 = I7 = a5 >>> 0 > (gA4 = a5 + gA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, uA4 = (g8 = gA4) - -1048576 | 0, cA4 = a5 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (g8 = a5 >> 21) + nA4 | 0, BA4 = g8 = (I7 = (2097151 & a5) << 11 | uA4 >>> 21) >>> 0 > (a5 = I7 + CA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, iA4 = (g8 = a5) - -1048576 | 0, I7 = (g8 = (nA4 = CA4 = BA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + HA4 | 0, HA4 = wA4 = (CA4 = (2097151 & nA4) << 11 | iA4 >>> 21) + vA4 | 0, CA4 = CA4 >>> 0 > wA4 >>> 0 ? I7 + 1 | 0 : I7, XA2 = a5 - (g8 = -2097152 & iA4) | 0, VA2 = BA4 - ((g8 >>> 0 > a5 >>> 0) + nA4 | 0) | 0, RA2 = gA4 - (g8 = -2097152 & uA4) | 0, NA2 = yA4 - ((g8 >>> 0 > gA4 >>> 0) + cA4 | 0) | 0, g8 = Wr(L4, K4, 666643, 0), gA4 = h3 + (UA3 - (((I7 = -2097152 & LA2) >>> 0 > oA4 >>> 0) + SA4 | 0) | 0) | 0, gA4 = g8 >>> 0 > (a5 = g8 + (oA4 - I7 | 0) | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(P4, q4, 470296, 0), I7 = h3 + gA4 | 0, I7 = g8 >>> 0 > (a5 = g8 + a5 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = (g8 = a5) + (a5 = Wr(x4, qA2, 654183, 0)) | 0, g8 = h3 + I7 | 0, cA4 = gA4, a5 = a5 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, oA4 = IA4 - (g8 = -2097152 & pA4) | 0, nA4 = QA4 - ((g8 >>> 0 > IA4 >>> 0) + sA4 | 0) | 0, I7 = Wr(S4, N5, 470296, 0), g8 = h3, gA4 = I7, I7 = Wr(U4, M4, 666643, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (gA4 = gA4 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, IA4 = (I7 = gA4) + (gA4 = Wr(J4, R4, 654183, 0)) | 0, I7 = h3 + g8 | 0, I7 = gA4 >>> 0 > IA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = Wr(v4, X4, -997805, -1), g8 = h3 + I7 | 0, g8 = gA4 >>> 0 > (IA4 = gA4 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(Y4, xA2, 136657, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (IA4 = I7 + IA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(V4, MA2, -683901, -1), I7 = h3 + gA4 | 0, g8 = _A4 + (g8 >>> 0 > (IA4 = g8 + IA4 | 0) >>> 0 ? I7 + 1 | 0 : I7) | 0, g8 = (gA4 = IA4 + tA4 | 0) >>> 0 < tA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = (IA4 = gA4) - (gA4 = -2097152 & lA4) | 0, gA4 = g8 - ((gA4 >>> 0 > IA4 >>> 0) + hA4 | 0) | 0, g8 = (g8 = aA4 >> 21) + gA4 | 0, BA4 = aA4 = (IA4 = I7) + (I7 = (2097151 & aA4) << 11 | T4 >>> 21) | 0, sA4 = gA4 = (QA4 = g8 = I7 >>> 0 > aA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = aA4) >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (2097151 & gA4) << 11 | (kA4 = g8 - -1048576 | 0) >>> 21, gA4 = (gA4 >> 21) + nA4 | 0, fA4 = aA4 = I7 + oA4 | 0, EA4 = gA4 = I7 >>> 0 > aA4 >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(aA4, gA4, -683901, -1), I7 = h3 + a5 | 0, I7 = g8 >>> 0 > (gA4 = g8 + cA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, a5 = Wr(dA4, FA4, -997805, -1), g8 = h3 + I7 | 0, g8 = a5 >>> 0 > (gA4 = a5 + gA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, a5 = Wr(DA4, mA4, 136657, 0), I7 = h3 + g8 | 0, oA4 = gA4 = a5 + gA4 | 0, IA4 = a5 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Wr(G4, 0, k4, 0), g8 = h3, a5 = I7, I7 = Wr(D4, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (a5 = a5 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(F4, 0, m4, 0), gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > (a5 = I7 + a5 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(H4, 0, w4, 0), I7 = h3 + gA4 | 0, g8 = I7 = g8 >>> 0 > (a5 = g8 + a5 | 0) >>> 0 ? I7 + 1 | 0 : I7, tA4 = a5 = (I7 = YA2 >>> 7 & 2097151) + a5 | 0, a5 = I7 >>> 0 > a5 >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(F4, 0, k4, 0), I7 = h3, gA4 = g8, g8 = Wr(G4, 0, b4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = gA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(H4, 0, m4, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + gA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, aA4 = (g8 = gA4) + (gA4 = 2097151 & ((3 & $4) << 30 | O4 >>> 2)) | 0, g8 = I7, nA4 = aA4, iA4 = gA4 = (aA4 = g8 = gA4 >>> 0 > aA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = nA4) >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (I7 = gA4 >>> 21 | 0) + a5 | 0, tA4 = gA4 = (g8 = (2097151 & gA4) << 11 | (SA4 = g8 - -1048576 | 0) >>> 21) + tA4 | 0, _A4 = I7 = g8 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, wA4 = (g8 = gA4) - -1048576 | 0, yA4 = a5 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (I7 = a5 >>> 21 | 0) + bA4 | 0, g8 = (a5 = eA4 + ((2097151 & a5) << 11 | wA4 >>> 21) | 0) >>> 0 < eA4 >>> 0 ? g8 + 1 | 0 : g8, eA4 = ((gA4 = a5) - (I7 = -2097152 & TA2) | 0) + (a5 = Wr(P4, q4, 666643, 0)) | 0, I7 = h3 + (g8 - ((I7 >>> 0 > gA4 >>> 0) + PA2 | 0) | 0) | 0, I7 = a5 >>> 0 > eA4 >>> 0 ? I7 + 1 | 0 : I7, g8 = Wr(x4, qA2, 470296, 0), I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (a5 = g8 + eA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, gA4 = (g8 = a5) + (a5 = Wr(fA4, EA4, 136657, 0)) | 0, g8 = h3 + I7 | 0, g8 = a5 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(dA4, FA4, 654183, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (a5 = I7 + gA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = Wr(DA4, mA4, -997805, -1), gA4 = h3 + g8 | 0, lA4 = a5 = I7 + a5 | 0, cA4 = gA4 = I7 >>> 0 > a5 >>> 0 ? gA4 + 1 | 0 : gA4, pA4 = (g8 = a5) - -1048576 | 0, eA4 = a5 = gA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (g8 = a5 >> 21) + IA4 | 0, IA4 = gA4 = (a5 = (2097151 & a5) << 11 | pA4 >>> 21) + oA4 | 0, a5 = I7 = a5 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, oA4 = gA4 = I7 - (((g8 = gA4) >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (2097151 & gA4) << 11 | (uA4 = g8 - -1048576 | 0) >>> 21, gA4 = (gA4 >> 21) + NA2 | 0, KA2 = hA4 = I7 + RA2 | 0, hA4 = I7 >>> 0 > hA4 >>> 0 ? gA4 + 1 | 0 : gA4, gA4 = rA4 >> 21, rA4 = (g8 = (2097151 & rA4) << 11 | Z4 >>> 21) + (BA4 - (I7 = -2097152 & kA4) | 0) | 0, I7 = gA4 + (QA4 - ((I7 >>> 0 > BA4 >>> 0) + sA4 | 0) | 0) | 0, QA4 = I7 = g8 >>> 0 > rA4 >>> 0 ? I7 + 1 | 0 : I7, sA4 = I7 = I7 - (((g8 = rA4) >>> 0 < 4293918720) - 1 | 0) | 0, UA3 = gA4 = I7 >> 21, I7 = Wr(YA2 = (2097151 & I7) << 11 | (kA4 = g8 - -1048576 | 0) >>> 21, gA4, -683901, -1), g8 = h3 + a5 | 0, g8 = I7 >>> 0 > (gA4 = I7 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, RA2 = gA4 - (I7 = -2097152 & uA4) | 0, NA2 = g8 - ((I7 >>> 0 > gA4 >>> 0) + oA4 | 0) | 0, g8 = Wr(YA2, UA3, 136657, 0), I7 = h3 + cA4 | 0, I7 = g8 >>> 0 > (a5 = g8 + lA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, bA4 = a5 - (g8 = -2097152 & pA4) | 0, PA2 = I7 - ((g8 >>> 0 > a5 >>> 0) + eA4 | 0) | 0, a5 = (g8 = Wr(x4, qA2, 666643, 0)) + (tA4 - (I7 = -2097152 & wA4) | 0) | 0, I7 = h3 + (_A4 - ((I7 >>> 0 > tA4 >>> 0) + yA4 | 0) | 0) | 0, I7 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7, gA4 = (g8 = a5) + (a5 = Wr(fA4, EA4, -997805, -1)) | 0, g8 = h3 + I7 | 0, g8 = a5 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, a5 = (I7 = Wr(dA4, FA4, 470296, 0)) + gA4 | 0, gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > a5 >>> 0 ? gA4 + 1 | 0 : gA4, g8 = Wr(DA4, mA4, 654183, 0), I7 = h3 + gA4 | 0, _A4 = a5 = g8 + a5 | 0, BA4 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7, IA4 = aA4, I7 = Wr(H4, 0, k4, 0), g8 = h3, a5 = I7, I7 = Wr(F4, 0, b4, 0), g8 = h3 + g8 | 0, g8 = I7 >>> 0 > (a5 = a5 + I7 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = a5, I7 = (a5 = z4 >>> 5 & 2097151) >>> 0 > (gA4 = I7 + a5 | 0) >>> 0 ? g8 + 1 | 0 : g8, a5 = 2097151 & j4, aA4 = Wr(H4, 0, b4, 0) + a5 | 0, g8 = h3, cA4 = a5 = (yA4 = g8 = a5 >>> 0 > aA4 >>> 0 ? g8 + 1 | 0 : g8) - (((g8 = aA4) >>> 0 < 4293918720) - 1 | 0) | 0, tA4 = gA4, I7 = I7 + (gA4 = a5 >>> 21 | 0) | 0, eA4 = I7 = (g8 = (2097151 & a5) << 11 | (wA4 = g8 - -1048576 | 0) >>> 21) >>> 0 > (a5 = tA4 + g8 | 0) >>> 0 ? I7 + 1 | 0 : I7, lA4 = (g8 = a5) - -1048576 | 0, oA4 = I7 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >>> 21 | 0) + IA4 | 0, g8 = (I7 = (2097151 & I7) << 11 | lA4 >>> 21) >>> 0 > (tA4 = I7 + nA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, tA4 = (gA4 = Wr(fA4, EA4, 654183, 0)) + ((IA4 = tA4) - (I7 = -2097152 & SA4) | 0) | 0, I7 = h3 + (g8 - ((16383 & iA4) + (I7 >>> 0 > IA4 >>> 0) | 0) | 0) | 0, g8 = Wr(dA4, FA4, 666643, 0), gA4 = h3 + (gA4 >>> 0 > tA4 >>> 0 ? I7 + 1 | 0 : I7) | 0, gA4 = g8 >>> 0 > (IA4 = g8 + tA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, I7 = Wr(DA4, mA4, 470296, 0), g8 = h3 + gA4 | 0, pA4 = IA4 = I7 + IA4 | 0, nA4 = g8 = I7 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8, uA4 = (g8 = IA4) - -1048576 | 0, tA4 = I7 = nA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, g8 = (gA4 = I7 >> 21) + BA4 | 0, iA4 = IA4 = (I7 = (2097151 & I7) << 11 | uA4 >>> 21) + _A4 | 0, I7 = g8 = I7 >>> 0 > IA4 >>> 0 ? g8 + 1 | 0 : g8, _A4 = (g8 = IA4) - -1048576 | 0, g8 = (gA4 = (IA4 = BA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0) >> 21) + PA2 | 0, BA4 = (BA4 = (2097151 & IA4) << 11 | _A4 >>> 21) >>> 0 > (bA4 = SA4 = BA4 + bA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, g8 = Wr(YA2, UA3, -997805, -1);
                        I7 = h3 + I7 | 0, I7 = g8 >>> 0 > (gA4 = g8 + iA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, PA2 = gA4 - (g8 = -2097152 & _A4) | 0, SA4 = I7 - ((g8 >>> 0 > gA4 >>> 0) + IA4 | 0) | 0, g8 = Wr(YA2, UA3, 654183, 0), I7 = h3 + nA4 | 0, I7 = g8 >>> 0 > (gA4 = g8 + pA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, iA4 = gA4 - (g8 = -2097152 & uA4) | 0, _A4 = I7 - ((g8 >>> 0 > gA4 >>> 0) + tA4 | 0) | 0, gA4 = (I7 = Wr(fA4, EA4, 470296, 0)) + (a5 - (g8 = -2097152 & lA4) | 0) | 0, g8 = h3 + (eA4 - ((16383 & oA4) + (g8 >>> 0 > a5 >>> 0) | 0) | 0) | 0, g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, a5 = (I7 = Wr(DA4, mA4, 666643, 0)) + gA4 | 0, gA4 = h3 + g8 | 0, gA4 = I7 >>> 0 > a5 >>> 0 ? gA4 + 1 | 0 : gA4, IA4 = a5, a5 = (g8 = Wr(fA4, EA4, 666643, 0)) + (aA4 - (I7 = -2097152 & wA4) | 0) | 0, I7 = h3 + (yA4 - ((4095 & cA4) + (I7 >>> 0 > aA4 >>> 0) | 0) | 0) | 0, nA4 = I7 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7, cA4 = (g8 = a5) - -1048576 | 0, tA4 = aA4 = I7 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, gA4 = (g8 = aA4 >> 21) + gA4 | 0, eA4 = aA4 = (I7 = (2097151 & aA4) << 11 | cA4 >>> 21) + IA4 | 0, IA4 = gA4 = I7 >>> 0 > aA4 >>> 0 ? gA4 + 1 | 0 : gA4, oA4 = (g8 = aA4) - -1048576 | 0, aA4 = gA4 = gA4 - ((g8 >>> 0 < 4293918720) - 1 | 0) | 0, I7 = (g8 = gA4 >> 21) + _A4 | 0, gA4 = I7 = (gA4 = (2097151 & gA4) << 11 | oA4 >>> 21) >>> 0 > (yA4 = gA4 + iA4 | 0) >>> 0 ? I7 + 1 | 0 : I7, I7 = Wr(YA2, UA3, 470296, 0), g8 = h3 + IA4 | 0, g8 = I7 >>> 0 > (eA4 = I7 + eA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, I7 = eA4 - (IA4 = -2097152 & oA4) | 0, IA4 = g8 - ((IA4 >>> 0 > eA4 >>> 0) + aA4 | 0) | 0, oA4 = I7, aA4 = (g8 = Wr(YA2, UA3, 666643, 0)) + (a5 - (I7 = -2097152 & cA4) | 0) | 0, I7 = h3 + (nA4 - ((I7 >>> 0 > a5 >>> 0) + tA4 | 0) | 0) | 0, g8 = (g8 = (I7 = g8 >>> 0 > aA4 >>> 0 ? I7 + 1 | 0 : I7) >> 21) + IA4 | 0, tA4 = a5 = oA4 + (I7 = (2097151 & I7) << 11 | (a5 = aA4) >>> 21) | 0, gA4 = (I7 = (g8 = I7 >>> 0 > a5 >>> 0 ? g8 + 1 | 0 : g8) >> 21) + gA4 | 0, IA4 = a5 = (g8 = (2097151 & g8) << 11 | a5 >>> 21) + yA4 | 0, a5 = (2097151 & (gA4 = g8 >>> 0 > (I7 = a5) >>> 0 ? gA4 + 1 | 0 : gA4)) << 11 | I7 >>> 21, I7 = (g8 = gA4 >> 21) + SA4 | 0, eA4 = gA4 = a5 + PA2 | 0, gA4 = (I7 = a5 >>> 0 > (g8 = gA4) >>> 0 ? I7 + 1 | 0 : I7) >> 21, I7 = (2097151 & I7) << 11 | g8 >>> 21, g8 = gA4 + BA4 | 0, lA4 = a5 = I7 + bA4 | 0, I7 = (I7 = (g8 = I7 >>> 0 > a5 >>> 0 ? g8 + 1 | 0 : g8) >> 21) + NA2 | 0, pA4 = a5 = (g8 = (2097151 & g8) << 11 | a5 >>> 21) + RA2 | 0, g8 = (g8 = (I7 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7) >> 21) + hA4 | 0, uA4 = a5 = (I7 = (2097151 & I7) << 11 | a5 >>> 21) + KA2 | 0, gA4 = (I7 = (g8 = I7 >>> 0 > a5 >>> 0 ? g8 + 1 | 0 : g8) >> 21) + VA2 | 0, iA4 = a5 = (g8 = (2097151 & g8) << 11 | a5 >>> 21) + XA2 | 0, a5 = (2097151 & (gA4 = g8 >>> 0 > (I7 = a5) >>> 0 ? gA4 + 1 | 0 : gA4)) << 11 | I7 >>> 21, I7 = (g8 = gA4 >> 21) + CA4 | 0, _A4 = gA4 = a5 + HA4 | 0, gA4 = (I7 = a5 >>> 0 > (g8 = gA4) >>> 0 ? I7 + 1 | 0 : I7) >> 21, I7 = (2097151 & I7) << 11 | g8 >>> 21, g8 = gA4 + GA4 | 0, hA4 = a5 = I7 + zA2 | 0, I7 = (I7 = (g8 = I7 >>> 0 > a5 >>> 0 ? g8 + 1 | 0 : g8) >> 21) + jA2 | 0, yA4 = a5 = (g8 = (2097151 & g8) << 11 | a5 >>> 21) + ZA2 | 0, g8 = (I7 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7) >> 21, nA4 = (gA4 = (2097151 & I7) << 11 | a5 >>> 21) + (I7 = rA4 - (a5 = -2097152 & kA4) | 0) | 0, gA4 = (QA4 - ((a5 >>> 0 > rA4 >>> 0) + sA4 | 0) | 0) + g8 | 0, cA4 = nA4, sA4 = (2097151 & (gA4 = I7 >>> 0 > (g8 = nA4) >>> 0 ? gA4 + 1 | 0 : gA4)) << 11 | g8 >>> 21, BA4 = I7 = gA4 >> 21, g8 = 2097151 & aA4, a5 = Wr(sA4, I7, 666643, 0) + g8 | 0, I7 = h3, nA4 = a5, a5 = I7 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7, t3[0 | A9] = nA4, t3[A9 + 1 | 0] = (255 & I7) << 24 | nA4 >>> 8, aA4 = A9, I7 = 2097151 & tA4, gA4 = Wr(sA4, BA4, 470296, 0) + I7 | 0, g8 = h3, g8 = I7 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, tA4 = gA4, rA4 = (2097151 & (gA4 = a5)) << 11 | nA4 >>> 21, gA4 = g8 + (I7 = gA4 >> 21) | 0, gA4 = rA4 >>> 0 > (tA4 = tA4 + rA4 | 0) >>> 0 ? gA4 + 1 | 0 : gA4, rA4 = tA4, t3[aA4 + 4 | 0] = (2047 & gA4) << 21 | rA4 >>> 11, g8 = gA4, gA4 = rA4, t3[aA4 + 3 | 0] = (7 & g8) << 29 | gA4 >>> 3, gA4 = 2097151 & IA4, IA4 = Wr(sA4, BA4, 654183, 0) + gA4 | 0, I7 = h3, I7 = gA4 >>> 0 > IA4 >>> 0 ? I7 + 1 | 0 : I7, gA4 = IA4, IA4 = (2097151 & g8) << 11 | rA4 >>> 21, g8 = (g8 >> 21) + I7 | 0, I7 = g8 = IA4 >>> 0 > (tA4 = gA4 + IA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, t3[aA4 + 6 | 0] = (63 & g8) << 26 | tA4 >>> 6, IA4 = 0, g8 = oA4 = 2097151 & rA4, t3[aA4 + 2 | 0] = 31 & ((65535 & a5) << 16 | nA4 >>> 16) | g8 << 5, a5 = 2097151 & eA4, gA4 = Wr(sA4, BA4, -997805, -1) + a5 | 0, g8 = h3, a5 = g8 = a5 >>> 0 > gA4 >>> 0 ? g8 + 1 | 0 : g8, g8 = I7 >> 21, rA4 = (I7 = (2097151 & I7) << 11 | tA4 >>> 21) + gA4 | 0, gA4 = g8 + a5 | 0, nA4 = rA4, gA4 = I7 >>> 0 > rA4 >>> 0 ? gA4 + 1 | 0 : gA4, t3[aA4 + 9 | 0] = (511 & gA4) << 23 | rA4 >>> 9, g8 = gA4, t3[aA4 + 8 | 0] = (1 & g8) << 31 | rA4 >>> 1, rA4 = 0, a5 = eA4 = 2097151 & tA4, t3[aA4 + 5 | 0] = (524287 & IA4) << 13 | oA4 >>> 19 | a5 << 2, a5 = 2097151 & lA4, gA4 = Wr(sA4, BA4, 136657, 0) + a5 | 0, I7 = h3, I7 = a5 >>> 0 > gA4 >>> 0 ? I7 + 1 | 0 : I7, a5 = gA4, I7 = I7 + (gA4 = g8 >> 21) | 0, tA4 = a5 = a5 + (g8 = (2097151 & g8) << 11 | nA4 >>> 21) | 0, I7 = g8 >>> 0 > a5 >>> 0 ? I7 + 1 | 0 : I7, t3[aA4 + 12 | 0] = (4095 & I7) << 20 | a5 >>> 12, a5 = I7, g8 = I7, I7 = tA4, t3[aA4 + 11 | 0] = (15 & g8) << 28 | I7 >>> 4, aA4 = 0, I7 = oA4 = 2097151 & nA4, t3[A9 + 7 | 0] = (16383 & rA4) << 18 | eA4 >>> 14 | I7 << 7, gA4 = A9, I7 = 2097151 & pA4, rA4 = Wr(sA4, BA4, -683901, -1) + I7 | 0, g8 = h3, g8 = (g8 = I7 >>> 0 > rA4 >>> 0 ? g8 + 1 | 0 : g8) + (I7 = a5 >> 21) | 0, I7 = g8 = (a5 = (2097151 & a5) << 11 | tA4 >>> 21) >>> 0 > (IA4 = rA4 = a5 + rA4 | 0) >>> 0 ? g8 + 1 | 0 : g8, t3[gA4 + 14 | 0] = (127 & g8) << 25 | IA4 >>> 7, rA4 = 0, a5 = nA4 = 2097151 & tA4, t3[gA4 + 10 | 0] = (131071 & aA4) << 15 | oA4 >>> 17 | a5 << 4, a5 = gA4, g8 >>= 21, gA4 = (I7 = (2097151 & I7) << 11 | IA4 >>> 21) >>> 0 > (tA4 = I7 + (2097151 & uA4) | 0) >>> 0 ? g8 + 1 | 0 : g8, t3[a5 + 17 | 0] = (1023 & gA4) << 22 | tA4 >>> 10, g8 = gA4, t3[a5 + 16 | 0] = (3 & g8) << 30 | tA4 >>> 2, a5 = BA4 = 2097151 & IA4, t3[A9 + 13 | 0] = (1048575 & rA4) << 12 | nA4 >>> 20 | a5 << 1, I7 = g8, g8 >>= 21, I7 = (gA4 = (2097151 & I7) << 11 | tA4 >>> 21) >>> 0 > (IA4 = gA4 + (2097151 & iA4) | 0) >>> 0 ? g8 + 1 | 0 : g8, t3[(a5 = A9) + 20 | 0] = (8191 & I7) << 19 | IA4 >>> 13, g8 = I7, I7 = IA4, t3[a5 + 19 | 0] = (31 & g8) << 27 | I7 >>> 5, I7 = nA4 = 2097151 & tA4, t3[a5 + 15 | 0] = (32767 & aA4) << 17 | BA4 >>> 15 | I7 << 6, I7 = g8, g8 >>= 21, I7 = (a5 = (2097151 & I7) << 11 | IA4 >>> 21) >>> 0 > (BA4 = a5 + (2097151 & _A4) | 0) >>> 0 ? g8 + 1 | 0 : g8, t3[A9 + 21 | 0] = BA4, g8 = IA4, t3[A9 + 18 | 0] = (262143 & rA4) << 14 | nA4 >>> 18 | g8 << 3, a5 = I7, g8 = I7, I7 = BA4, t3[A9 + 22 | 0] = (255 & g8) << 24 | I7 >>> 8, I7 = g8 >> 21, gA4 = (g8 = (2097151 & g8) << 11 | BA4 >>> 21) >>> 0 > (IA4 = g8 + (2097151 & hA4) | 0) >>> 0 ? I7 + 1 | 0 : I7, t3[A9 + 25 | 0] = (2047 & gA4) << 21 | IA4 >>> 11, g8 = gA4, gA4 = IA4, t3[A9 + 24 | 0] = (7 & g8) << 29 | gA4 >>> 3, I7 = g8 >> 21, I7 = (aA4 = (2097151 & g8) << 11 | IA4 >>> 21) >>> 0 > (tA4 = aA4 + (2097151 & yA4) | 0) >>> 0 ? I7 + 1 | 0 : I7, aA4 = tA4, g8 = I7, t3[(gA4 = A9) + 27 | 0] = (63 & g8) << 26 | aA4 >>> 6, gA4 = 0, I7 = tA4 = 2097151 & IA4, t3[A9 + 23 | 0] = 31 & ((65535 & a5) << 16 | BA4 >>> 16) | I7 << 5, I7 = g8, g8 >>= 21, g8 = (I7 = (2097151 & I7) << 11 | aA4 >>> 21) >>> 0 > (rA4 = I7 + (2097151 & cA4) | 0) >>> 0 ? g8 + 1 | 0 : g8, a5 = rA4, t3[A9 + 31 | 0] = (131071 & g8) << 15 | a5 >>> 17, t3[A9 + 30 | 0] = (511 & g8) << 23 | a5 >>> 9, t3[A9 + 29 | 0] = (1 & g8) << 31 | a5 >>> 1, g8 = 0, IA4 = aA4 &= 2097151, t3[A9 + 26 | 0] = (524287 & gA4) << 13 | tA4 >>> 19 | IA4 << 2, t3[A9 + 28 | 0] = (16383 & g8) << 18 | IA4 >>> 14 | a5 << 7;
                      }(B4, Q4 + 160 | 0, Q4 + 288 | 0, Q4 + 224 | 0), pI(Q4 + 288 | 0, 64), pI(Q4 + 224 | 0, 64), g7 && (n3[g7 >> 2] = 64, n3[g7 + 4 >> 2] = 0), u3 = Q4 + 560 | 0, 0;
                    }
                    function O3(A8, g7, I6) {
                      A8 |= 0, g7 |= 0, I6 |= 0;
                      var a4, r4, B4, e4 = 0;
                      u3 = a4 = u3 - 128 | 0, n3[a4 + 104 >> 2] = 0, n3[a4 + 108 >> 2] = 0, n3[a4 + 112 >> 2] = 0, n3[a4 + 116 >> 2] = 0, n3[a4 + 120 >> 2] = 0, n3[a4 + 124 >> 2] = 0, n3[a4 + 96 >> 2] = 0, n3[a4 + 100 >> 2] = 0, e4 = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, n3[a4 + 80 >> 2] = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, n3[a4 + 84 >> 2] = e4, e4 = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24, n3[a4 + 88 >> 2] = o3[g7 + 24 | 0] | o3[g7 + 25 | 0] << 8 | o3[g7 + 26 | 0] << 16 | o3[g7 + 27 | 0] << 24, n3[a4 + 92 >> 2] = e4, e4 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, r4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, B4 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, g7 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, n3[a4 + 40 >> 2] = 0, n3[a4 + 44 >> 2] = 0, n3[a4 + 48 >> 2] = 0, n3[a4 + 52 >> 2] = 0, n3[a4 + 56 >> 2] = 0, n3[a4 + 60 >> 2] = 0, n3[a4 + 64 >> 2] = B4, n3[a4 + 68 >> 2] = g7, n3[a4 + 72 >> 2] = e4, n3[a4 + 76 >> 2] = r4, n3[a4 + 32 >> 2] = 0, n3[a4 + 36 >> 2] = 0, g7 = o3[I6 + 20 | 0] | o3[I6 + 21 | 0] << 8 | o3[I6 + 22 | 0] << 16 | o3[I6 + 23 | 0] << 24, n3[a4 + 16 >> 2] = o3[I6 + 16 | 0] | o3[I6 + 17 | 0] << 8 | o3[I6 + 18 | 0] << 16 | o3[I6 + 19 | 0] << 24, n3[a4 + 20 >> 2] = g7, g7 = o3[I6 + 28 | 0] | o3[I6 + 29 | 0] << 8 | o3[I6 + 30 | 0] << 16 | o3[I6 + 31 | 0] << 24, n3[a4 + 24 >> 2] = o3[I6 + 24 | 0] | o3[I6 + 25 | 0] << 8 | o3[I6 + 26 | 0] << 16 | o3[I6 + 27 | 0] << 24, n3[a4 + 28 >> 2] = g7, g7 = o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24, n3[a4 >> 2] = o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24, n3[a4 + 4 >> 2] = g7, g7 = o3[I6 + 12 | 0] | o3[I6 + 13 | 0] << 8 | o3[I6 + 14 | 0] << 16 | o3[I6 + 15 | 0] << 24, n3[a4 + 8 >> 2] = o3[I6 + 8 | 0] | o3[I6 + 9 | 0] << 8 | o3[I6 + 10 | 0] << 16 | o3[I6 + 11 | 0] << 24, n3[a4 + 12 >> 2] = g7, function(A9, g8) {
                        for (var I7 = 0, a5 = 0, r5 = 0; r5 = A9 + I7 | 0, a5 = o3[g8 + I7 | 0] + (o3[0 | r5] + a5 | 0) | 0, t3[0 | r5] = a5, a5 = a5 >>> 8 | 0, (0 | (I7 = I7 + 1 | 0)) != 32; )
                          ;
                      }(a4 - -64 | 0, a4), kA3(A8, a4 - -64 | 0), u3 = a4 + 128 | 0;
                    }
                    function $3(A8) {
                      var g7, I6 = 0, a4 = 0, r4 = 0, t4 = 0, B4 = 0, o4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, f4 = 0, l4 = 0, h4 = 0, w4 = 0, D4 = 0, m4 = 0;
                      for (u3 = g7 = u3 + -64 | 0, zI(g7, A8), o4 = n3[g7 + 28 >> 2], e4 = n3[g7 + 12 >> 2], a4 = n3[g7 + 44 >> 2], r4 = n3[g7 + 60 >> 2], Q4 = n3[g7 + 8 >> 2], p4 = n3[g7 + 56 >> 2], t4 = n3[g7 + 24 >> 2], s4 = n3[g7 + 40 >> 2], y4 = n3[g7 + 52 >> 2], f4 = n3[g7 + 36 >> 2], B4 = n3[g7 + 4 >> 2], E4 = n3[g7 + 20 >> 2], i4 = n3[g7 + 32 >> 2], C4 = n3[g7 + 16 >> 2], _4 = n3[g7 + 48 >> 2], I6 = n3[g7 >> 2]; c4 = fa(B4 + E4 | 0, 7) ^ f4, l4 = fa(c4 + E4 | 0, 9) ^ y4, C4 = fa(I6 + _4 | 0, 7) ^ C4, h4 = fa(C4 + I6 | 0, 9) ^ i4, w4 = fa(h4 + C4 | 0, 13) ^ _4, e4 = fa(a4 + r4 | 0, 7) ^ e4, o4 = fa(e4 + r4 | 0, 9) ^ o4, i4 = fa(o4 + e4 | 0, 13) ^ a4, r4 = fa(o4 + i4 | 0, 18) ^ r4, a4 = fa(t4 + s4 | 0, 7) ^ p4, _4 = w4 ^ fa(r4 + a4 | 0, 7), y4 = l4 ^ fa(_4 + r4 | 0, 9), p4 = fa(_4 + y4 | 0, 13) ^ a4, r4 = fa(y4 + p4 | 0, 18) ^ r4, Q4 = fa(a4 + s4 | 0, 9) ^ Q4, D4 = fa(Q4 + a4 | 0, 13) ^ t4, t4 = fa(D4 + Q4 | 0, 18) ^ s4, a4 = fa(t4 + c4 | 0, 7) ^ i4, i4 = fa(a4 + t4 | 0, 9) ^ h4, f4 = fa(a4 + i4 | 0, 13) ^ c4, s4 = fa(i4 + f4 | 0, 18) ^ t4, c4 = fa(c4 + l4 | 0, 13) ^ B4, B4 = fa(c4 + l4 | 0, 18) ^ E4, t4 = fa(B4 + C4 | 0, 7) ^ D4, o4 = fa(t4 + B4 | 0, 9) ^ o4, C4 = fa(t4 + o4 | 0, 13) ^ C4, E4 = fa(o4 + C4 | 0, 18) ^ B4, I6 = fa(h4 + w4 | 0, 18) ^ I6, B4 = fa(I6 + e4 | 0, 7) ^ c4, Q4 = fa(B4 + I6 | 0, 9) ^ Q4, e4 = fa(Q4 + B4 | 0, 13) ^ e4, I6 = fa(Q4 + e4 | 0, 18) ^ I6, c4 = m4 >>> 0 < 6, m4 = m4 + 2 | 0, c4; )
                        ;
                      for (n3[g7 + 48 >> 2] = _4, n3[g7 + 32 >> 2] = i4, n3[g7 + 16 >> 2] = C4, n3[g7 + 20 >> 2] = E4, n3[g7 + 52 >> 2] = y4, n3[g7 + 36 >> 2] = f4, n3[g7 + 4 >> 2] = B4, n3[g7 + 40 >> 2] = s4, n3[g7 + 56 >> 2] = p4, n3[g7 + 24 >> 2] = t4, n3[g7 + 60 >> 2] = r4, n3[g7 + 8 >> 2] = Q4, n3[g7 + 44 >> 2] = a4, n3[g7 + 28 >> 2] = o4, n3[g7 + 12 >> 2] = e4, n3[g7 >> 2] = I6, n3[A8 >> 2] = n3[A8 >> 2] + I6, I6 = 1; n3[(r4 = (a4 = I6 << 2) + A8 | 0) >> 2] = n3[r4 >> 2] + n3[g7 + a4 >> 2], (0 | (I6 = I6 + 1 | 0)) != 16; )
                        ;
                      u3 = g7 - -64 | 0;
                    }
                    function AA3(A8, g7, I6) {
                      var a4, r4 = 0, B4 = 0, n4 = 0;
                      for (u3 = a4 = u3 - 4032 | 0, $I(a4 + 160 | 0, I6), Ka(a4 + 3528 | 0, I6), UI(a4 + 2408 | 0, a4 + 3528 | 0), $I(r4 = a4 + 320 | 0, a4 + 2408 | 0), Jg(a4 + 3368 | 0, I6, r4), UI(a4 + 2248 | 0, a4 + 3368 | 0), $I(a4 + 480 | 0, a4 + 2248 | 0), Ka(a4 + 3208 | 0, a4 + 2408 | 0), UI(a4 + 2088 | 0, a4 + 3208 | 0), $I(r4 = a4 + 640 | 0, a4 + 2088 | 0), Jg(a4 + 3048 | 0, I6, r4), UI(a4 + 1928 | 0, a4 + 3048 | 0), $I(a4 + 800 | 0, a4 + 1928 | 0), Ka(a4 + 2888 | 0, a4 + 2248 | 0), UI(a4 + 1768 | 0, a4 + 2888 | 0), $I(r4 = a4 + 960 | 0, a4 + 1768 | 0), Jg(a4 + 2728 | 0, I6, r4), UI(a4 + 1608 | 0, a4 + 2728 | 0), $I(a4 + 1120 | 0, a4 + 1608 | 0), Ka(a4 + 2568 | 0, a4 + 2088 | 0), UI(a4 + 1448 | 0, a4 + 2568 | 0), $I(a4 + 1280 | 0, a4 + 1448 | 0), r4 = 0, I6 = 0; B4 = I6 << 1, n4 = o3[g7 + I6 | 0], t3[B4 + (a4 + 3968 | 0) | 0] = 15 & n4, t3[(a4 + 3968 | 0) + (1 | B4) | 0] = n4 >>> 4, (0 | (I6 = I6 + 1 | 0)) != 32; )
                        ;
                      for (I6 = 0; g7 = ((B4 = (g7 = I6) + o3[0 | (I6 = (a4 + 3968 | 0) + r4 | 0)] | 0) << 24) - -134217728 | 0, t3[0 | I6] = B4 - (g7 >> 24 & 240), I6 = g7 >> 28, (0 | (r4 = r4 + 1 | 0)) != 63; )
                        ;
                      for (r4 = o3[a4 + 4031 | 0] + I6 | 0, t3[a4 + 4031 | 0] = r4, sr(A8), I6 = 63; Bg(a4, a4 + 160 | 0, r4 << 24 >> 24), Jg(a4 + 3808 | 0, A8, a4), ia(a4 + 3688 | 0, a4 + 3808 | 0), Tg(a4 + 3808 | 0, a4 + 3688 | 0), ia(a4 + 3688 | 0, a4 + 3808 | 0), Tg(a4 + 3808 | 0, a4 + 3688 | 0), ia(a4 + 3688 | 0, a4 + 3808 | 0), Tg(a4 + 3808 | 0, a4 + 3688 | 0), ia(a4 + 3688 | 0, a4 + 3808 | 0), Tg(a4 + 3808 | 0, a4 + 3688 | 0), UI(A8, a4 + 3808 | 0), I6 = I6 - 1 | 0; )
                        r4 = o3[(a4 + 3968 | 0) + I6 | 0];
                      Bg(a4, a4 + 160 | 0, t3[a4 + 3968 | 0]), Jg(a4 + 3808 | 0, A8, a4), UI(A8, a4 + 3808 | 0), u3 = a4 + 4032 | 0;
                    }
                    function gA3(A8, g7, I6) {
                      var a4, r4 = 0, B4 = 0;
                      if (I6 >>> 0 >= 512)
                        return E3(0 | A8, 0 | g7, 0 | I6), A8;
                      a4 = A8 + I6 | 0;
                      A:
                        if (3 & (A8 ^ g7))
                          if (a4 >>> 0 < 4)
                            I6 = A8;
                          else if ((r4 = a4 - 4 | 0) >>> 0 < A8 >>> 0)
                            I6 = A8;
                          else
                            for (I6 = A8; t3[0 | I6] = o3[0 | g7], t3[I6 + 1 | 0] = o3[g7 + 1 | 0], t3[I6 + 2 | 0] = o3[g7 + 2 | 0], t3[I6 + 3 | 0] = o3[g7 + 3 | 0], g7 = g7 + 4 | 0, r4 >>> 0 >= (I6 = I6 + 4 | 0) >>> 0; )
                              ;
                        else {
                          g:
                            if ((0 | I6) < 1)
                              I6 = A8;
                            else if (3 & A8)
                              for (I6 = A8; ; ) {
                                if (t3[0 | I6] = o3[0 | g7], g7 = g7 + 1 | 0, a4 >>> 0 <= (I6 = I6 + 1 | 0) >>> 0)
                                  break g;
                                if (!(3 & I6))
                                  break;
                              }
                            else
                              I6 = A8;
                          if (!((r4 = -4 & a4) >>> 0 < 64 || (B4 = r4 + -64 | 0) >>> 0 < I6 >>> 0))
                            for (; n3[I6 >> 2] = n3[g7 >> 2], n3[I6 + 4 >> 2] = n3[g7 + 4 >> 2], n3[I6 + 8 >> 2] = n3[g7 + 8 >> 2], n3[I6 + 12 >> 2] = n3[g7 + 12 >> 2], n3[I6 + 16 >> 2] = n3[g7 + 16 >> 2], n3[I6 + 20 >> 2] = n3[g7 + 20 >> 2], n3[I6 + 24 >> 2] = n3[g7 + 24 >> 2], n3[I6 + 28 >> 2] = n3[g7 + 28 >> 2], n3[I6 + 32 >> 2] = n3[g7 + 32 >> 2], n3[I6 + 36 >> 2] = n3[g7 + 36 >> 2], n3[I6 + 40 >> 2] = n3[g7 + 40 >> 2], n3[I6 + 44 >> 2] = n3[g7 + 44 >> 2], n3[I6 + 48 >> 2] = n3[g7 + 48 >> 2], n3[I6 + 52 >> 2] = n3[g7 + 52 >> 2], n3[I6 + 56 >> 2] = n3[g7 + 56 >> 2], n3[I6 + 60 >> 2] = n3[g7 + 60 >> 2], g7 = g7 - -64 | 0, B4 >>> 0 >= (I6 = I6 - -64 | 0) >>> 0; )
                              ;
                          if (I6 >>> 0 >= r4 >>> 0)
                            break A;
                          for (; n3[I6 >> 2] = n3[g7 >> 2], g7 = g7 + 4 | 0, r4 >>> 0 > (I6 = I6 + 4 | 0) >>> 0; )
                            ;
                        }
                      if (I6 >>> 0 < a4 >>> 0)
                        for (; t3[0 | I6] = o3[0 | g7], g7 = g7 + 1 | 0, (0 | a4) != (0 | (I6 = I6 + 1 | 0)); )
                          ;
                      return A8;
                    }
                    function IA3(A8, g7, I6, a4) {
                      var r4, B4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0;
                      if (u3 = r4 = u3 - 704 | 0, I6 | a4)
                        if (B4 = a4 << 3 | I6 >>> 29, Q4 = (_4 = n3[(e4 = A8) + 72 >> 2]) + (c4 = I6 << 3) | 0, B4 = B4 + (C4 = n3[e4 + 76 >> 2]) | 0, i4 = Q4, n3[e4 + 72 >> 2] = Q4, B4 = Q4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, n3[e4 + 76 >> 2] = B4, i4 = (c4 = (0 | B4) == (0 | C4) & _4 >>> 0 > i4 >>> 0 | B4 >>> 0 < C4 >>> 0) + n3[(e4 = Q4 = e4 - -64 | 0) >> 2] | 0, B4 = n3[e4 + 4 >> 2], B4 = c4 >>> 0 > i4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (c4 = a4 >>> 29 | 0) + i4 | 0, n3[e4 >> 2] = Q4, n3[e4 + 4 >> 2] = Q4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, (0 | (B4 = a4)) == (0 | (i4 = 0 - ((C4 = 127 & ((7 & C4) << 29 | _4 >>> 3)) >>> 0 > 128) | 0)) & I6 >>> 0 >= (Q4 = 128 - C4 | 0) >>> 0 | B4 >>> 0 > i4 >>> 0) {
                          for (e4 = 0, B4 = 0; t3[80 + (A8 + (c4 = e4 + C4 | 0) | 0) | 0] = o3[g7 + e4 | 0], (0 | Q4) != (0 | (e4 = e4 + 1 | 0)) | (0 | (B4 = e4 >>> 0 < 1 ? B4 + 1 | 0 : B4)) != (0 | i4); )
                            ;
                          if (m3(A8, A8 + 80 | 0, r4, B4 = r4 + 640 | 0), g7 = g7 + Q4 | 0, !(a4 = a4 - ((I6 >>> 0 < Q4 >>> 0) + i4 | 0) | 0) & (I6 = I6 - Q4 | 0) >>> 0 > 127 | a4)
                            for (; m3(A8, g7, r4, B4), g7 = g7 + 128 | 0, !(a4 = a4 - (I6 >>> 0 < 128) | 0) & (I6 = I6 - 128 | 0) >>> 0 > 127 | a4; )
                              ;
                          if (I6 | a4)
                            for (e4 = 0, B4 = 0; t3[80 + (A8 + e4 | 0) | 0] = o3[g7 + e4 | 0], (0 | I6) != (0 | (e4 = C4 = e4 + 1 | 0)) | (0 | a4) != (0 | (B4 = C4 >>> 0 < 1 ? B4 + 1 | 0 : B4)); )
                              ;
                          pI(r4, 704);
                        } else
                          for (e4 = I6, Q4 = (I6 = !a4 & I6 >>> 0 > 1 | (0 | a4) != 0) ? e4 : 1, _4 = I6 ? a4 : 0, e4 = 0, B4 = 0; t3[80 + (A8 + (a4 = e4 + C4 | 0) | 0) | 0] = o3[g7 + e4 | 0], (0 | Q4) != (0 | (e4 = I6 = e4 + 1 | 0)) | (0 | (B4 = I6 >>> 0 < 1 ? B4 + 1 | 0 : B4)) != (0 | _4); )
                            ;
                      return u3 = r4 + 704 | 0, 0;
                    }
                    function aA3(A8, g7, I6, a4, r4, B4, o4, e4) {
                      A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, B4 |= 0, o4 |= 0, e4 |= 0;
                      var Q4, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, f4 = 0;
                      u3 = Q4 = u3 - 16 | 0, n3[Q4 + 12 >> 2] = 0, tt(e4);
                      A: {
                        if (a4) {
                          p4 = 4 & e4;
                          g: {
                            I: {
                              a: {
                                for (; ; ) {
                                  C4 = _4;
                                  r: {
                                    t: {
                                      for (; ; ) {
                                        if (y4 = t3[I6 + C4 | 0], (0 | (i4 = p4 ? dg(y4) : Sg(y4))) != 255)
                                          break t;
                                        if (!r4)
                                          break r;
                                        if (!lr(r4, y4))
                                          break a;
                                        if (!((C4 = C4 + 1 | 0) >>> 0 < a4 >>> 0))
                                          break;
                                      }
                                      A8 = _4 + 1 | 0, n3[Q4 + 12 >> 2] = A8 >>> 0 < a4 >>> 0 ? a4 : A8;
                                      break I;
                                    }
                                    if (E4 = (E4 << 6) + i4 | 0, (i4 = c4 + 6 | 0) >>> 0 < 8)
                                      c4 = i4;
                                    else {
                                      if (c4 = c4 - 2 | 0, g7 >>> 0 <= s4 >>> 0) {
                                        n3[Q4 + 12 >> 2] = C4, n3[9184] = 68, C4 = 1;
                                        break g;
                                      }
                                      t3[A8 + s4 | 0] = E4 >>> c4, s4 = s4 + 1 | 0;
                                    }
                                    if ((_4 = C4 + 1 | 0) >>> 0 < a4 >>> 0)
                                      continue;
                                  }
                                  break;
                                }
                                n3[Q4 + 12 >> 2] = _4;
                                break I;
                              }
                              n3[Q4 + 12 >> 2] = C4;
                            }
                            C4 = 0;
                          }
                          if (!(c4 >>> 0 <= 4)) {
                            A8 = -1;
                            break A;
                          }
                        }
                        if (A8 = -1, !((-1 << c4 ^ -1) & E4 | C4) && (2 & e4 || !(A8 = function(A9, g8, I7, a5, r5) {
                          var B5 = 0, o5 = 0, e5 = 0;
                          g:
                            if (r5)
                              for (B5 = n3[I7 >> 2]; ; ) {
                                I: {
                                  if (g8 >>> 0 <= B5 >>> 0)
                                    n3[9184] = 68;
                                  else {
                                    if ((0 | (o5 = t3[A9 + B5 | 0])) == 61) {
                                      r5 = r5 - 1 | 0;
                                      break I;
                                    }
                                    if (a5 && lr(a5, o5))
                                      break I;
                                    n3[9184] = 28;
                                  }
                                  e5 = -1;
                                  break g;
                                }
                                if (B5 = B5 + 1 | 0, n3[I7 >> 2] = B5, !r5)
                                  break;
                              }
                          return e5;
                        }(I6, a4, Q4 + 12 | 0, r4, c4 >>> 1 | 0)))) {
                          A8 = 0;
                          g:
                            if (r4 && !((C4 = n3[Q4 + 12 >> 2]) >>> 0 >= a4 >>> 0)) {
                              I: {
                                for (; ; ) {
                                  if (!lr(r4, t3[I6 + C4 | 0]))
                                    break I;
                                  if ((0 | (C4 = C4 + 1 | 0)) == (0 | a4))
                                    break;
                                }
                                n3[Q4 + 12 >> 2] = a4;
                                break g;
                              }
                              n3[Q4 + 12 >> 2] = C4;
                            }
                          f4 = s4;
                        }
                      }
                      return g7 = n3[Q4 + 12 >> 2], o4 ? n3[o4 >> 2] = g7 + I6 : (0 | g7) != (0 | a4) && (n3[9184] = 28, A8 = -1), B4 && (n3[B4 >> 2] = f4), u3 = Q4 + 16 | 0, 0 | A8;
                    }
                    function rA3(A8, g7, I6) {
                      var a4, r4, t4, B4 = 0;
                      u3 = a4 = u3 - 16 | 0, r4 = n3[A8 + 20 >> 2], n3[A8 + 20 >> 2] = 0, t4 = n3[A8 + 4 >> 2], n3[A8 + 4 >> 2] = 0, B4 = -26;
                      A: {
                        g: {
                          I:
                            switch (I6 - 1 | 0) {
                              case 1:
                                if (B4 = -32, Ug(g7, 36374, 9))
                                  break A;
                                g7 = g7 + 9 | 0;
                                break g;
                              case 0:
                                break I;
                              default:
                                break A;
                            }
                          if (B4 = -32, Ug(g7, 36384, 8))
                            break A;
                          g7 = g7 + 8 | 0;
                        }
                        if (!Ug(g7, 36393, 3) && (g7 = ig(g7 + 3 | 0, a4 + 12 | 0))) {
                          if (B4 = -26, n3[a4 + 12 >> 2] != 19)
                            break A;
                          if (!Ug(g7, 36397, 3) && (g7 = ig(g7 + 3 | 0, a4 + 12 | 0)) && (n3[A8 + 44 >> 2] = n3[a4 + 12 >> 2], !Ug(g7, 36401, 3) && (g7 = ig(g7 + 3 | 0, a4 + 12 | 0)) && (n3[A8 + 40 >> 2] = n3[a4 + 12 >> 2], !Ug(g7, 36405, 3) && (g7 = ig(g7 + 3 | 0, a4 + 12 | 0)) && (I6 = n3[a4 + 12 >> 2], n3[A8 + 48 >> 2] = I6, n3[A8 + 52 >> 2] = I6, (0 | (I6 = o3[0 | g7])) == 36 && (n3[a4 + 12 >> 2] = r4, g7 = (0 | I6) == 36 ? g7 + 1 | 0 : g7, !aA3(n3[A8 + 16 >> 2], r4, g7, cg(g7), 0, a4 + 12 | 0, a4 + 8 | 0, 3) && (n3[A8 + 20 >> 2] = n3[a4 + 12 >> 2], g7 = n3[a4 + 8 >> 2], (0 | (I6 = o3[0 | g7])) == 36 && (n3[a4 + 12 >> 2] = t4, g7 = (0 | I6) == 36 ? g7 + 1 | 0 : g7, !aA3(n3[A8 >> 2], t4, g7, cg(g7), 0, a4 + 12 | 0, a4 + 8 | 0, 3)))))))) {
                            if (n3[A8 + 4 >> 2] = n3[a4 + 12 >> 2], g7 = n3[a4 + 8 >> 2], B4 = UA2(A8))
                              break A;
                            return u3 = a4 + 16 | 0, o3[0 | g7] ? -32 : 0;
                          }
                        }
                        B4 = -32;
                      }
                      return u3 = a4 + 16 | 0, B4;
                    }
                    function tA3(A8, g7) {
                      var I6;
                      for (u3 = I6 = u3 - 192 | 0, H3(I6 + 144 | 0, g7), H3(I6 + 96 | 0, I6 + 144 | 0), H3(I6 + 96 | 0, I6 + 96 | 0), F3(I6 + 96 | 0, g7, I6 + 96 | 0), F3(I6 + 144 | 0, I6 + 144 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 144 | 0), F3(I6 + 96 | 0, I6 + 96 | 0, I6 + 48 | 0), H3(I6 + 48 | 0, I6 + 96 | 0), g7 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (g7 = g7 + 1 | 0)) != 5; )
                        ;
                      for (F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 96 | 0), g7 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (g7 = g7 + 1 | 0)) != 10; )
                        ;
                      for (F3(I6 + 48 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6, I6 + 48 | 0), g7 = 1; H3(I6, I6), (0 | (g7 = g7 + 1 | 0)) != 20; )
                        ;
                      for (F3(I6 + 48 | 0, I6, I6 + 48 | 0), g7 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (g7 = g7 + 1 | 0)) != 11; )
                        ;
                      for (F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 96 | 0), g7 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (g7 = g7 + 1 | 0)) != 50; )
                        ;
                      for (F3(I6 + 48 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6, I6 + 48 | 0), g7 = 1; H3(I6, I6), (0 | (g7 = g7 + 1 | 0)) != 100; )
                        ;
                      for (F3(I6 + 48 | 0, I6, I6 + 48 | 0), g7 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (g7 = g7 + 1 | 0)) != 51; )
                        ;
                      for (F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), g7 = 1; H3(I6 + 96 | 0, I6 + 96 | 0), (0 | (g7 = g7 + 1 | 0)) != 6; )
                        ;
                      F3(A8, I6 + 96 | 0, I6 + 144 | 0), u3 = I6 + 192 | 0;
                    }
                    function BA3(A8, g7, I6) {
                      var a4 = 0, r4 = 0, t4 = 0, B4 = 0, n4 = 0, o4 = 0, e4 = 0, c4 = 0, i4 = 0;
                      A: {
                        g: {
                          I: {
                            a: {
                              r: {
                                t: {
                                  B: {
                                    n: {
                                      o: {
                                        if (r4 = g7) {
                                          if (!(a4 = I6))
                                            break o;
                                          break n;
                                        }
                                        return f3 = (g7 = A8) - Q3(A8 = (A8 >>> 0) / (I6 >>> 0) | 0, I6) | 0, l3 = 0, h3 = 0, A8;
                                      }
                                      if (!A8)
                                        break B;
                                      break t;
                                    }
                                    if (!((B4 = a4 - 1 | 0) & a4))
                                      break r;
                                    o4 = 0 - (B4 = (C3(a4) + 33 | 0) - C3(r4) | 0) | 0;
                                    break I;
                                  }
                                  return f3 = 0, l3 = r4 - Q3(A8 = (r4 >>> 0) / 0 | 0, 0) | 0, h3 = 0, A8;
                                }
                                if ((a4 = 32 - C3(r4) | 0) >>> 0 < 31)
                                  break a;
                                break g;
                              }
                              if (f3 = A8 & B4, l3 = 0, (0 | a4) == 1)
                                break A;
                              return I6 = 31 & (a4 = a4 ? 31 - C3(a4 - 1 ^ a4) | 0 : 32), (63 & a4) >>> 0 >= 32 ? (r4 = 0, A8 = g7 >>> I6 | 0) : (r4 = g7 >>> I6 | 0, A8 = ((1 << I6) - 1 & g7) << 32 - I6 | A8 >>> I6), h3 = r4, A8;
                            }
                            B4 = a4 + 1 | 0, o4 = 63 - a4 | 0;
                          }
                          if (a4 = g7, t4 = 31 & (r4 = 63 & B4), r4 >>> 0 >= 32 ? (r4 = 0, t4 = a4 >>> t4 | 0) : (r4 = a4 >>> t4 | 0, t4 = ((1 << t4) - 1 & a4) << 32 - t4 | A8 >>> t4), a4 = 31 & (o4 &= 63), o4 >>> 0 >= 32 ? (g7 = A8 << a4, A8 = 0) : (g7 = (1 << a4) - 1 & A8 >>> 32 - a4 | g7 << a4, A8 <<= a4), B4)
                            for (o4 = (0 | (a4 = I6 - 1 | 0)) != -1 ? 0 : -1; t4 = (e4 = n4 = t4 << 1 | g7 >>> 31) - (c4 = I6 & (n4 = o4 - ((r4 = r4 << 1 | t4 >>> 31) + (a4 >>> 0 < n4 >>> 0) | 0) >> 31)) | 0, r4 = r4 - (e4 >>> 0 < c4 >>> 0) | 0, g7 = g7 << 1 | A8 >>> 31, A8 = i4 | A8 << 1, i4 = n4 &= 1, B4 = B4 - 1 | 0; )
                              ;
                          return f3 = t4, l3 = r4, h3 = g7 << 1 | A8 >>> 31, n4 | A8 << 1;
                        }
                        f3 = A8, l3 = g7, A8 = 0, g7 = 0;
                      }
                      return h3 = g7, A8;
                    }
                    function nA3(A8, g7) {
                      var I6, a4, r4, B4, o4, e4, C4, c4, i4, _4, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0;
                      (y4 = E4 = n3[A8 + 60 >> 2]) | (s4 = n3[A8 + 56 >> 2]) && (E4 = s4, t3[(p4 = s4 + A8 | 0) - -64 | 0] = 1, !(y4 = (s4 = s4 + 1 | 0) >>> 0 < 1 ? y4 + 1 | 0 : y4) & s4 >>> 0 <= 15 && DA3(p4 + 65 | 0, 0, 15 - E4 | 0), t3[A8 + 80 | 0] = 1, x3(A8, A8 - -64 | 0, 16, 0)), i4 = n3[A8 + 52 >> 2], _4 = n3[A8 + 48 >> 2], E4 = n3[A8 + 44 >> 2], l4 = n3[A8 + 24 >> 2], u4 = n3[A8 + 28 >> 2] + (l4 >>> 26 | 0) | 0, s4 = n3[A8 + 32 >> 2] + (u4 >>> 26 | 0) | 0, c4 = (I6 = (B4 = (-67108864 | (r4 = n3[A8 + 36 >> 2] + (s4 >>> 26 | 0) | 0)) + ((C4 = (e4 = 67108863 & s4) + ((u4 = (f4 = 67108863 & u4) + ((y4 = (s4 = (67108863 & l4) + ((y4 = n3[A8 + 20 >> 2] + Q3(r4 >>> 26 | 0, 5) | 0) >>> 26 | 0) | 0) + ((o4 = 5 + (p4 = 67108863 & y4) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >> 31) & s4 | (a4 = 67108863 & (l4 = (B4 >>> 31 | 0) - 1 | 0)) & y4, y4 = 0, y4 = (s4 = p4 & I6 | a4 & o4 | c4 << 26) >>> 0 > (p4 = s4 + n3[A8 + 40 >> 2] | 0) >>> 0 ? 1 : y4, La(g7, p4), u4 = (s4 = (f4 = f4 & I6 | u4 & a4) << 20 | c4 >>> 6) + E4 | 0, E4 = 0, E4 = s4 >>> 0 > u4 >>> 0 ? 1 : E4, s4 = y4, y4 = E4, y4 = s4 >>> 0 > (u4 = s4 + u4 | 0) >>> 0 ? y4 + 1 | 0 : y4, La(g7 + 4 | 0, u4), E4 = 0, E4 = (s4 = (p4 = I6 & e4 | a4 & C4) << 14 | f4 >>> 12) >>> 0 > (f4 = s4 + _4 | 0) >>> 0 ? 1 : E4, s4 = y4, y4 = E4, y4 = s4 >>> 0 > (f4 = s4 + f4 | 0) >>> 0 ? y4 + 1 | 0 : y4, La(g7 + 8 | 0, f4), La(E4 = g7 + 12 | 0, y4 = y4 + (p4 = (g7 = (l4 & B4 | I6 & r4) << 8 | p4 >>> 18) + i4 | 0) | 0), pI(A8, 88);
                    }
                    function oA3(A8, g7, I6, a4, r4) {
                      A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0;
                      var B4 = 0, n4 = 0, e4 = 0, C4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0;
                      tt(r4 |= 0), n4 = (B4 = (a4 >>> 0) / 3 | 0) << 2, (B4 = Q3(B4, -3) + a4 | 0) && (n4 = 2 & r4 ? (2 | n4) + (B4 >>> 1 | 0) | 0 : n4 + 4 | 0);
                      A: {
                        g: {
                          I: {
                            a: {
                              if (g7 >>> 0 > n4 >>> 0) {
                                if (!(4 & r4)) {
                                  if (e4 = 0, !a4)
                                    break I;
                                  r4 = 0, B4 = 0;
                                  break a;
                                }
                                if (e4 = 0, !a4)
                                  break I;
                                for (r4 = 0, B4 = 0; ; ) {
                                  for (_4 = o3[I6 + C4 | 0] | _4 << 8, r4 = r4 + 8 | 0; s4 = B4, y4 = r4, E4 = A8 + B4 | 0, p4 = $g(_4 >>> (r4 = r4 - 6 | 0) & 63), t3[0 | E4] = p4, B4 = B4 + 1 | 0, r4 >>> 0 > 5; )
                                    ;
                                  if ((0 | (C4 = C4 + 1 | 0)) == (0 | a4))
                                    break;
                                }
                                if (e4 = B4, !r4)
                                  break I;
                                E4 = A8 + B4 | 0, p4 = $g(_4 << 12 - y4 & 63), t3[0 | E4] = p4, e4 = s4 + 2 | 0;
                                break I;
                              }
                              yr(), c3();
                            }
                            for (; ; ) {
                              for (_4 = o3[I6 + C4 | 0] | _4 << 8, r4 = r4 + 8 | 0; s4 = B4, y4 = r4, E4 = A8 + B4 | 0, p4 = AI(_4 >>> (r4 = r4 - 6 | 0) & 63), t3[0 | E4] = p4, B4 = B4 + 1 | 0, r4 >>> 0 > 5; )
                                ;
                              if ((0 | (C4 = C4 + 1 | 0)) == (0 | a4))
                                break;
                            }
                            e4 = B4, r4 && (E4 = A8 + B4 | 0, p4 = AI(_4 << 12 - y4 & 63), t3[0 | E4] = p4, e4 = s4 + 2 | 0);
                          }
                          if ((B4 = e4) >>> 0 <= n4 >>> 0) {
                            if (B4 >>> 0 < n4 >>> 0)
                              break g;
                            n4 = B4;
                            break A;
                          }
                          i3(36321, 36340, 230, 36356), c3();
                        }
                        DA3(A8 + B4 | 0, 61, n4 - B4 | 0);
                      }
                      return DA3(A8 + n4 | 0, 0, (g7 >>> 0 > (I6 = n4 + 1 | 0) >>> 0 ? g7 : I6) - n4 | 0), 0 | A8;
                    }
                    function eA3(A8, g7) {
                      var I6, a4 = 0;
                      for (u3 = I6 = u3 - 144 | 0, H3(I6 + 96 | 0, g7), H3(I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 48 | 0), F3(I6 + 48 | 0, g7, I6 + 48 | 0), F3(I6 + 96 | 0, I6 + 96 | 0, I6 + 48 | 0), H3(I6 + 96 | 0, I6 + 96 | 0), F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 96 | 0), a4 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (a4 = a4 + 1 | 0)) != 5; )
                        ;
                      for (F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 96 | 0), a4 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (a4 = a4 + 1 | 0)) != 10; )
                        ;
                      for (F3(I6 + 48 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6, I6 + 48 | 0), a4 = 1; H3(I6, I6), (0 | (a4 = a4 + 1 | 0)) != 20; )
                        ;
                      for (F3(I6 + 48 | 0, I6, I6 + 48 | 0), a4 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (a4 = a4 + 1 | 0)) != 11; )
                        ;
                      for (F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 48 | 0, I6 + 96 | 0), a4 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (a4 = a4 + 1 | 0)) != 50; )
                        ;
                      for (F3(I6 + 48 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6, I6 + 48 | 0), a4 = 1; H3(I6, I6), (0 | (a4 = a4 + 1 | 0)) != 100; )
                        ;
                      for (F3(I6 + 48 | 0, I6, I6 + 48 | 0), a4 = 1; H3(I6 + 48 | 0, I6 + 48 | 0), (0 | (a4 = a4 + 1 | 0)) != 51; )
                        ;
                      F3(I6 + 96 | 0, I6 + 48 | 0, I6 + 96 | 0), H3(I6 + 96 | 0, I6 + 96 | 0), H3(I6 + 96 | 0, I6 + 96 | 0), F3(A8, I6 + 96 | 0, g7), u3 = I6 + 144 | 0;
                    }
                    function QA3(A8, g7, I6, a4) {
                      var r4, B4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0;
                      u3 = r4 = u3 - 288 | 0;
                      A:
                        if (I6 | a4) {
                          if (c4 = B4 = n3[A8 + 36 >> 2], i4 = (_4 = n3[A8 + 32 >> 2]) + (C4 = I6 << 3) | 0, B4 = B4 + (a4 << 3 | I6 >>> 29) | 0, n3[A8 + 32 >> 2] = i4, n3[A8 + 36 >> 2] = C4 >>> 0 > i4 >>> 0 ? B4 + 1 | 0 : B4, B4 = 64 - (C4 = c4 = 63 & ((7 & (B4 = c4)) << 29 | (c4 = _4) >>> 3)) | 0, (0 | (C4 = 0 - (C4 >>> 0 > 64) | 0)) == (0 | a4) & I6 >>> 0 < B4 >>> 0 | a4 >>> 0 < C4 >>> 0) {
                            for (; ; )
                              if (t3[40 + (A8 + (B4 = Q4 + c4 | 0) | 0) | 0] = o3[g7 + Q4 | 0], B4 = e4, Q4 = e4 = Q4 + 1 | 0, e4 = B4 = e4 >>> 0 < 1 ? B4 + 1 | 0 : B4, !((0 | I6) != (0 | Q4) | (0 | a4) != (0 | B4)))
                                break A;
                          }
                          for (; t3[40 + (A8 + (i4 = Q4 + c4 | 0) | 0) | 0] = o3[g7 + Q4 | 0], (0 | B4) != (0 | (Q4 = Q4 + 1 | 0)) | (0 | (e4 = Q4 >>> 0 < 1 ? e4 + 1 | 0 : e4)) != (0 | C4); )
                            ;
                          if (S3(A8, A8 + 40 | 0, r4, e4 = r4 + 256 | 0), g7 = g7 + B4 | 0, !(a4 = a4 - ((I6 >>> 0 < B4 >>> 0) + C4 | 0) | 0) & (I6 = I6 - B4 | 0) >>> 0 > 63 | a4)
                            for (; S3(A8, g7, r4, e4), g7 = g7 - -64 | 0, a4 = a4 - 1 | 0, !(a4 = (I6 = I6 + -64 | 0) >>> 0 < 4294967232 ? a4 + 1 | 0 : a4) & I6 >>> 0 > 63 | a4; )
                              ;
                          if (I6 | a4)
                            for (Q4 = 0, e4 = 0; t3[40 + ((B4 = Q4) + A8 | 0) | 0] = o3[g7 + B4 | 0], Q4 = B4 = B4 + 1 | 0, (0 | I6) != (0 | B4) | (0 | a4) != (0 | (e4 = B4 >>> 0 < 1 ? e4 + 1 | 0 : e4)); )
                              ;
                          pI(r4, 288);
                        }
                      return u3 = r4 + 288 | 0, 0;
                    }
                    function CA3(A8, g7, I6, a4) {
                      var r4 = 0, B4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0;
                      A: {
                        if ((r4 = n3[A8 + 56 >> 2]) | (B4 = n3[A8 + 60 >> 2])) {
                          if (c4 = A8, C4 = e4 = 16 - r4 | 0, C4 = (e4 = (0 | (Q4 = 0 - ((r4 >>> 0 > 16) + B4 | 0) | 0)) == (0 | a4) & I6 >>> 0 < e4 >>> 0 | a4 >>> 0 < Q4 >>> 0) ? I6 : C4, (e4 = Q4 = e4 ? a4 : Q4) | C4) {
                            if (t3[(A8 + r4 | 0) - -64 | 0] = o3[0 | g7], B4 = 1, r4 = 0, (0 | C4) != 1 | e4)
                              for (; Q4 = B4 + n3[A8 + 56 >> 2] | 0, t3[(A8 + Q4 | 0) - -64 | 0] = o3[g7 + B4 | 0], (0 | C4) != (0 | (B4 = B4 + 1 | 0)) | (0 | (r4 = B4 >>> 0 < 1 ? r4 + 1 | 0 : r4)) != (0 | e4); )
                                ;
                            r4 = n3[A8 + 56 >> 2], B4 = n3[A8 + 60 >> 2];
                          }
                          if (Q4 = r4 + C4 | 0, r4 = B4 + e4 | 0, B4 = Q4, n3[c4 + 56 >> 2] = B4, r4 = B4 >>> 0 < C4 >>> 0 ? r4 + 1 | 0 : r4, n3[c4 + 60 >> 2] = r4, !r4 & B4 >>> 0 < 16)
                            break A;
                          x3(A8, A8 - -64 | 0, 16, 0), n3[A8 + 56 >> 2] = 0, n3[A8 + 60 >> 2] = 0, I6 = (r4 = I6) - (B4 = C4) | 0, a4 = a4 - ((r4 >>> 0 < B4 >>> 0) + e4 | 0) | 0, g7 = g7 + B4 | 0;
                        }
                        if (!a4 & I6 >>> 0 >= 16 | a4 && (x3(A8, g7, r4 = -16 & I6, a4), I6 &= 15, a4 = 0, g7 = g7 + r4 | 0), I6 | a4) {
                          for (B4 = 0, r4 = 0; c4 = B4 + n3[A8 + 56 >> 2] | 0, t3[(A8 + c4 | 0) - -64 | 0] = o3[g7 + B4 | 0], (0 | I6) != (0 | (B4 = B4 + 1 | 0)) | (0 | a4) != (0 | (r4 = B4 >>> 0 < 1 ? r4 + 1 | 0 : r4)); )
                            ;
                          g7 = A8, r4 = I6 + n3[A8 + 56 >> 2] | 0, A8 = a4 + n3[A8 + 60 >> 2] | 0, n3[g7 + 56 >> 2] = r4, n3[g7 + 60 >> 2] = I6 >>> 0 > r4 >>> 0 ? A8 + 1 | 0 : A8;
                        }
                      }
                    }
                    function cA3(A8, g7) {
                      var I6 = 0, a4 = 0, r4 = 0, t4 = 0, B4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0;
                      A:
                        if (A8 && (n3[A8 + 36 >> 2] != 2 || (r4 = n3[g7 >> 2], o3[g7 + 8 | 0] < 2 && !r4) ? (function(A9, g8, I7) {
                          var a5, r5 = 0, t5 = 0, B5 = 0;
                          if (u3 = a5 = u3 - 4096 | 0, lt(a5 + 3072 | 0), lt(a5 + 2048 | 0), !(!A9 | !g8) && (n3[a5 + 2048 >> 2] = n3[g8 >> 2], n3[a5 + 2052 >> 2] = 0, n3[a5 + 2056 >> 2] = n3[g8 + 4 >> 2], n3[a5 + 2060 >> 2] = 0, n3[a5 + 2064 >> 2] = o3[g8 + 8 | 0], n3[a5 + 2068 >> 2] = 0, n3[a5 + 2072 >> 2] = n3[A9 + 16 >> 2], n3[a5 + 2076 >> 2] = 0, n3[a5 + 2080 >> 2] = n3[A9 + 8 >> 2], n3[a5 + 2084 >> 2] = 0, n3[a5 + 2088 >> 2] = n3[A9 + 36 >> 2], n3[a5 + 2092 >> 2] = 0, n3[A9 + 20 >> 2]))
                            for (g8 = 0; (B5 = 127 & g8) || (r5 = n3[a5 + 2100 >> 2], r5 = (t5 = n3[a5 + 2096 >> 2] + 1 | 0) >>> 0 < 1 ? r5 + 1 | 0 : r5, n3[a5 + 2096 >> 2] = t5, n3[a5 + 2100 >> 2] = r5, lt(a5), lt(a5 + 1024 | 0), d3(a5 + 3072 | 0, a5 + 2048 | 0, a5), d3(a5 + 3072 | 0, a5, a5 + 1024 | 0)), B5 = n3[4 + (t5 = (a5 + 1024 | 0) + (B5 << 3) | 0) >> 2], n3[(r5 = (g8 << 3) + I7 | 0) >> 2] = n3[t5 >> 2], n3[r5 + 4 >> 2] = B5, (g8 = g8 + 1 | 0) >>> 0 < e3[A9 + 20 >> 2]; )
                              ;
                          u3 = a5 + 4096 | 0;
                        }(A8, g7, i4 = n3[A8 + 4 >> 2]), r4 = n3[g7 >> 2], a4 = 0) : (i4 = n3[A8 + 4 >> 2], a4 = 1), s4 = a4, !((B4 = !((a4 = o3[g7 + 8 | 0]) | r4) << 1) >>> 0 >= (I6 = n3[A8 + 20 >> 2]) >>> 0)))
                          for (t4 = n3[A8 + 24 >> 2], I6 = (r4 = (Q3(t4, n3[g7 + 4 >> 2]) + B4 | 0) + Q3(I6, a4) | 0) + ((r4 >>> 0) % (t4 >>> 0) | 0 ? -1 : t4 - 1 | 0) | 0; ; ) {
                            if (_4 = ((r4 >>> 0) % (t4 >>> 0) | 0) == 1 ? r4 - 1 | 0 : I6, s4 ? (C4 = n3[A8 >> 2], I6 = n3[C4 + 4 >> 2] + (_4 << 10) | 0) : (C4 = n3[A8 >> 2], I6 = (B4 << 3) + i4 | 0), a4 = n3[I6 + 4 >> 2], y4 = n3[I6 >> 2], I6 = n3[A8 + 28 >> 2], n3[g7 + 12 >> 2] = B4, a4 = (a4 >>> 0) % (I6 >>> 0) | 0, c4 = n3[g7 + 4 >> 2], I6 = o3[g7 + 8 | 0] ? a4 : c4, C4 = n3[C4 + 4 >> 2], E4 = t4, p4 = a4, t4 = n3[g7 >> 2], c4 = (C4 + (Q3(E4, I6 = (a4 = t4) ? p4 : I6) << 10) | 0) + (rg(A8, g7, y4, true & (0 | I6) == (0 | c4)) << 10) | 0, a4 = C4 + (_4 << 10) | 0, I6 = C4 + (r4 << 10) | 0, t4 ? d3(a4, c4, I6) : v3(a4, c4, I6), (B4 = B4 + 1 | 0) >>> 0 >= e3[A8 + 20 >> 2])
                              break A;
                            r4 = r4 + 1 | 0, I6 = _4 + 1 | 0, t4 = n3[A8 + 24 >> 2];
                          }
                    }
                    function iA3(A8, g7, I6) {
                      var a4, r4, t4, B4, o4, e4, Q4, C4, c4, i4, _4, s4, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0, l4 = 0, h4 = 0, w4 = 0, D4 = 0;
                      a4 = n3[g7 + 4 >> 2], r4 = n3[A8 + 4 >> 2], t4 = n3[g7 + 8 >> 2], E4 = n3[A8 + 8 >> 2], B4 = n3[g7 + 12 >> 2], p4 = n3[A8 + 12 >> 2], o4 = n3[g7 + 16 >> 2], u4 = n3[A8 + 16 >> 2], e4 = n3[g7 + 20 >> 2], f4 = n3[A8 + 20 >> 2], Q4 = n3[g7 + 24 >> 2], l4 = n3[A8 + 24 >> 2], C4 = n3[g7 + 28 >> 2], h4 = n3[A8 + 28 >> 2], c4 = n3[g7 + 32 >> 2], w4 = n3[A8 + 32 >> 2], i4 = n3[g7 + 36 >> 2], D4 = n3[A8 + 36 >> 2], s4 = (I6 = 0 - I6 | 0) & ((_4 = n3[g7 >> 2]) ^ (y4 = n3[A8 >> 2])), n3[A8 >> 2] = s4 ^ y4, y4 = D4, D4 = I6 & (D4 ^ i4), n3[A8 + 36 >> 2] = y4 ^ D4, y4 = w4, w4 = I6 & (w4 ^ c4), n3[A8 + 32 >> 2] = y4 ^ w4, y4 = h4, h4 = I6 & (h4 ^ C4), n3[A8 + 28 >> 2] = y4 ^ h4, y4 = l4, l4 = I6 & (l4 ^ Q4), n3[A8 + 24 >> 2] = y4 ^ l4, y4 = f4, f4 = I6 & (f4 ^ e4), n3[A8 + 20 >> 2] = y4 ^ f4, y4 = u4, u4 = I6 & (u4 ^ o4), n3[A8 + 16 >> 2] = y4 ^ u4, y4 = p4, p4 = I6 & (p4 ^ B4), n3[A8 + 12 >> 2] = y4 ^ p4, y4 = E4, E4 = I6 & (E4 ^ t4), n3[A8 + 8 >> 2] = y4 ^ E4, y4 = A8, A8 = I6 & (a4 ^ r4), n3[y4 + 4 >> 2] = A8 ^ r4, n3[g7 + 36 >> 2] = D4 ^ i4, n3[g7 + 32 >> 2] = w4 ^ c4, n3[g7 + 28 >> 2] = h4 ^ C4, n3[g7 + 24 >> 2] = l4 ^ Q4, n3[g7 + 20 >> 2] = f4 ^ e4, n3[g7 + 16 >> 2] = u4 ^ o4, n3[g7 + 12 >> 2] = p4 ^ B4, n3[g7 + 8 >> 2] = E4 ^ t4, n3[g7 + 4 >> 2] = A8 ^ a4, n3[g7 >> 2] = _4 ^ s4;
                    }
                    function _A3(A8, g7) {
                      var I6, a4;
                      u3 = I6 = u3 - 672 | 0, gt(I6 + 528 | 0), H3(I6 + 480 | 0, g7), F3(I6 + 480 | 0, 2176, I6 + 480 | 0), jA(I6 + 240 | 0, I6 + 480 | 0, I6 + 528 | 0), F3(I6 + 240 | 0, I6 + 240 | 0, 34560), gt(I6 + 624 | 0), _g(I6 + 624 | 0, I6 + 624 | 0), jA(I6 + 432 | 0, I6 + 480 | 0, 2128), F3(I6 + 192 | 0, I6 + 480 | 0, 2128), ZA(I6 + 192 | 0, I6 + 624 | 0, I6 + 192 | 0), F3(I6 + 192 | 0, I6 + 192 | 0, I6 + 432 | 0), a4 = eg(I6 + 384 | 0, I6 + 240 | 0, I6 + 192 | 0), F3(I6 + 336 | 0, I6 + 384 | 0, g7), Qt(I6 + 336 | 0, I6 + 336 | 0), _g(I6 + 336 | 0, I6 + 336 | 0), NA(I6 + 384 | 0, I6 + 336 | 0, g7 = 1 - a4 | 0), NA(I6 + 624 | 0, I6 + 480 | 0, g7), ZA(I6 + 576 | 0, I6 + 480 | 0, I6 + 528 | 0), F3(I6 + 576 | 0, I6 + 576 | 0, I6 + 624 | 0), F3(I6 + 576 | 0, I6 + 576 | 0, 34608), ZA(I6 + 576 | 0, I6 + 576 | 0, I6 + 192 | 0), jA(I6 + 144 | 0, I6 + 384 | 0, I6 + 384 | 0), F3(I6 + 144 | 0, I6 + 144 | 0, I6 + 192 | 0), F3(I6 + 96 | 0, I6 + 576 | 0, 34656), H3(I6 + 288 | 0, I6 + 384 | 0), ZA(I6 + 48 | 0, I6 + 528 | 0, I6 + 288 | 0), jA(I6, I6 + 528 | 0, I6 + 288 | 0), F3(A8, I6 + 144 | 0, I6), F3(A8 + 40 | 0, I6 + 48 | 0, I6 + 96 | 0), F3(A8 + 80 | 0, I6 + 96 | 0, I6), F3(A8 + 120 | 0, I6 + 144 | 0, I6 + 48 | 0), u3 = I6 + 672 | 0;
                    }
                    function sA3(A8, g7) {
                      var I6;
                      n3[A8 >> 2] = 67108863 & (o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24), n3[A8 + 4 >> 2] = (o3[g7 + 3 | 0] | o3[g7 + 4 | 0] << 8 | o3[g7 + 5 | 0] << 16 | o3[g7 + 6 | 0] << 24) >>> 2 & 67108611, n3[A8 + 8 >> 2] = (o3[g7 + 6 | 0] | o3[g7 + 7 | 0] << 8 | o3[g7 + 8 | 0] << 16 | o3[g7 + 9 | 0] << 24) >>> 4 & 67092735, n3[A8 + 12 >> 2] = (o3[g7 + 9 | 0] | o3[g7 + 10 | 0] << 8 | o3[g7 + 11 | 0] << 16 | o3[g7 + 12 | 0] << 24) >>> 6 & 66076671, I6 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, n3[A8 + 20 >> 2] = 0, n3[A8 + 24 >> 2] = 0, n3[A8 + 28 >> 2] = 0, n3[A8 + 32 >> 2] = 0, n3[A8 + 36 >> 2] = 0, n3[A8 + 16 >> 2] = I6 >>> 8 & 1048575, n3[A8 + 40 >> 2] = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, n3[A8 + 44 >> 2] = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, n3[A8 + 48 >> 2] = o3[g7 + 24 | 0] | o3[g7 + 25 | 0] << 8 | o3[g7 + 26 | 0] << 16 | o3[g7 + 27 | 0] << 24, g7 = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24, t3[A8 + 80 | 0] = 0, n3[A8 + 56 >> 2] = 0, n3[A8 + 60 >> 2] = 0, n3[A8 + 52 >> 2] = g7;
                    }
                    function yA3(A8, g7, I6, a4, r4, t4) {
                      var B4 = 0, o4 = 0, Q4 = 0;
                      n3[t4 >> 2] = 8, o4 = A8, B4 = (A8 = !g7 & A8 >>> 0 > 32768 | (0 | g7) != 0) ? o4 : 32768;
                      A:
                        if (!(A8 = o4 = A8 ? g7 : 0) & I6 >>> 5 >>> 0 <= B4 >>> 0 | A8) {
                          for (n3[a4 >> 2] = 1, Q4 = I6 >>> 11 | 0, A8 = 1, g7 = 0; ; ) {
                            if (!((63 & A8) >>> 0 >= 32) && Q4 >>> A8 | 0) {
                              if (g7 = (A8 = A8 + 1 | 0) >>> 0 < 1 ? g7 + 1 | 0 : g7, n3[a4 >> 2] = A8, I6 = 63, (0 | A8) != 63 | g7)
                                continue;
                            } else
                              I6 = A8;
                            break;
                          }
                          g7 = o4 >>> 2 | 0, a4 = (3 & o4) << 30 | B4 >>> 2, A8 = 31 & I6, (63 & I6) >>> 0 >= 32 ? (I6 = 0, A8 = g7 >>> A8 | 0) : (I6 = g7 >>> A8 | 0, A8 = ((1 << A8) - 1 & g7) << 32 - A8 | a4 >>> A8), n3[r4 >> 2] = ((!I6 & A8 >>> 0 < 1073741823 ? A8 : 1073741823) >>> 0) / e3[t4 >> 2];
                        } else
                          for (n3[r4 >> 2] = 1, A8 = n3[t4 >> 2], n3[a4 >> 2] = 1, A8 = BA3(B4, o4, A8 << 2), r4 = (g7 = h3) >>> 1 | 0, Q4 = (1 & g7) << 31 | A8 >>> 1, A8 = 1, g7 = 0; ; ) {
                            if (I6 = r4, o4 = Q4, B4 = 31 & A8, (63 & A8) >>> 0 >= 32 ? (t4 = 0, I6 = I6 >>> B4 | 0) : (t4 = I6 >>> B4 | 0, I6 = ((1 << B4) - 1 & I6) << 32 - B4 | o4 >>> B4), !(I6 | t4))
                              break A;
                            if (g7 = (A8 = A8 + 1 | 0) >>> 0 < 1 ? g7 + 1 | 0 : g7, n3[a4 >> 2] = A8, !((0 | A8) != 63 | g7))
                              break;
                          }
                    }
                    function EA3(A8, g7, I6) {
                      var a4 = 0;
                      A:
                        if ((0 | A8) != (0 | g7)) {
                          if ((g7 - A8 | 0) - I6 >>> 0 <= 0 - (I6 << 1) >>> 0)
                            return gA3(A8, g7, I6);
                          if (a4 = 3 & (A8 ^ g7), A8 >>> 0 < g7 >>> 0) {
                            if (a4)
                              a4 = A8;
                            else {
                              if (3 & A8)
                                for (a4 = A8; ; ) {
                                  if (!I6)
                                    break A;
                                  if (t3[0 | a4] = o3[0 | g7], g7 = g7 + 1 | 0, I6 = I6 - 1 | 0, !(3 & (a4 = a4 + 1 | 0)))
                                    break;
                                }
                              else
                                a4 = A8;
                              if (!(I6 >>> 0 <= 3))
                                for (; n3[a4 >> 2] = n3[g7 >> 2], g7 = g7 + 4 | 0, a4 = a4 + 4 | 0, (I6 = I6 - 4 | 0) >>> 0 > 3; )
                                  ;
                            }
                            if (I6)
                              for (; t3[0 | a4] = o3[0 | g7], a4 = a4 + 1 | 0, g7 = g7 + 1 | 0, I6 = I6 - 1 | 0; )
                                ;
                          } else {
                            if (!a4) {
                              if (A8 + I6 & 3)
                                for (; ; ) {
                                  if (!I6)
                                    break A;
                                  if (t3[0 | (a4 = (I6 = I6 - 1 | 0) + A8 | 0)] = o3[g7 + I6 | 0], !(3 & a4))
                                    break;
                                }
                              if (!(I6 >>> 0 <= 3))
                                for (; n3[(I6 = I6 - 4 | 0) + A8 >> 2] = n3[g7 + I6 >> 2], I6 >>> 0 > 3; )
                                  ;
                            }
                            if (!I6)
                              break A;
                            for (; t3[(I6 = I6 - 1 | 0) + A8 | 0] = o3[g7 + I6 | 0], I6; )
                              ;
                          }
                        }
                      return A8;
                    }
                    function pA3(A8, g7) {
                      var I6, a4 = 0;
                      u3 = I6 = u3 - 48 | 0, bA3(I6, g7), g7 = n3[I6 >> 2], t3[0 | A8] = g7, t3[A8 + 2 | 0] = g7 >>> 16, t3[A8 + 1 | 0] = g7 >>> 8, a4 = n3[I6 + 4 >> 2], t3[A8 + 5 | 0] = a4 >>> 14, t3[A8 + 4 | 0] = a4 >>> 6, t3[A8 + 3 | 0] = a4 << 2 | g7 >>> 24, g7 = n3[I6 + 8 >> 2], t3[A8 + 8 | 0] = g7 >>> 13, t3[A8 + 7 | 0] = g7 >>> 5, t3[A8 + 6 | 0] = g7 << 3 | a4 >>> 22, a4 = n3[I6 + 12 >> 2], t3[A8 + 11 | 0] = a4 >>> 11, t3[A8 + 10 | 0] = a4 >>> 3, t3[A8 + 9 | 0] = a4 << 5 | g7 >>> 21, g7 = n3[I6 + 16 >> 2], t3[A8 + 15 | 0] = g7 >>> 18, t3[A8 + 14 | 0] = g7 >>> 10, t3[A8 + 13 | 0] = g7 >>> 2, t3[A8 + 12 | 0] = g7 << 6 | a4 >>> 19, g7 = n3[I6 + 20 >> 2], t3[A8 + 16 | 0] = g7, t3[A8 + 18 | 0] = g7 >>> 16, t3[A8 + 17 | 0] = g7 >>> 8, a4 = n3[I6 + 24 >> 2], t3[A8 + 21 | 0] = a4 >>> 15, t3[A8 + 20 | 0] = a4 >>> 7, t3[A8 + 19 | 0] = a4 << 1 | g7 >>> 24, g7 = n3[I6 + 28 >> 2], t3[A8 + 24 | 0] = g7 >>> 13, t3[A8 + 23 | 0] = g7 >>> 5, t3[A8 + 22 | 0] = g7 << 3 | a4 >>> 23, a4 = n3[I6 + 32 >> 2], t3[A8 + 27 | 0] = a4 >>> 12, t3[A8 + 26 | 0] = a4 >>> 4, t3[A8 + 25 | 0] = a4 << 4 | g7 >>> 21, g7 = n3[I6 + 36 >> 2], t3[A8 + 31 | 0] = g7 >>> 18, t3[A8 + 30 | 0] = g7 >>> 10, t3[A8 + 29 | 0] = g7 >>> 2, t3[A8 + 28 | 0] = g7 << 6 | a4 >>> 20, u3 = I6 + 48 | 0;
                    }
                    function uA3(A8, g7, I6, a4) {
                      var r4 = 0, B4 = 0, n4 = 0, e4 = 0, Q4 = 0, C4 = 0;
                      A:
                        if (I6 | a4)
                          for (C4 = A8 + 224 | 0, n4 = A8 + 96 | 0, r4 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24; ; ) {
                            if (e4 = 96 + (A8 + r4 | 0) | 0, Q4 = B4 = 256 - r4 | 0, !a4 & I6 >>> 0 <= B4 >>> 0) {
                              gA3(e4, g7, I6), g7 = I6 + (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) | 0, t3[A8 + 352 | 0] = g7, t3[A8 + 353 | 0] = g7 >>> 8, t3[A8 + 354 | 0] = g7 >>> 16, t3[A8 + 355 | 0] = g7 >>> 24;
                              break A;
                            }
                            if (gA3(e4, g7, B4), r4 = (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) + B4 | 0, t3[A8 + 352 | 0] = r4, t3[A8 + 353 | 0] = r4 >>> 8, t3[A8 + 354 | 0] = r4 >>> 16, t3[A8 + 355 | 0] = r4 >>> 24, SA3(A8, 128), w3(A8, n4), gA3(n4, C4, 128), r4 = (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) - 128 | 0, t3[A8 + 352 | 0] = r4, t3[A8 + 353 | 0] = r4 >>> 8, t3[A8 + 354 | 0] = r4 >>> 16, t3[A8 + 355 | 0] = r4 >>> 24, g7 = g7 + B4 | 0, !((I6 = (B4 = I6) - Q4 | 0) | (a4 = a4 - (B4 >>> 0 < Q4 >>> 0) | 0)))
                              break;
                          }
                      return 0;
                    }
                    function fA3(A8, g7, I6, a4, r4, t4) {
                      var B4, e4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0;
                      if (B4 = g7 << 5)
                        for (; i4 = (C4 = e4 << 2) + t4 | 0, C4 = A8 + C4 | 0, n3[i4 >> 2] = o3[0 | C4] | o3[C4 + 1 | 0] << 8 | o3[C4 + 2 | 0] << 16 | o3[C4 + 3 | 0] << 24, (0 | B4) != (0 | (e4 = e4 + 1 | 0)); )
                          ;
                      if (I6 | a4) {
                        for (y4 = (g7 << 8) + t4 | 0, C4 = (g7 << 7) + t4 | 0, i4 = g7 << 7; EI((Q3(e4 = _4, B4) << 2) + r4 | 0, t4, i4), Rg(t4, C4, y4, g7), EI((Q3(1 | e4, B4) << 2) + r4 | 0, C4, i4), Rg(C4, t4, y4, g7), e4 = c4, _4 = c4 = _4 + 2 | 0, c4 = e4 = c4 >>> 0 < 2 ? e4 + 1 | 0 : e4, (0 | a4) == (0 | e4) & I6 >>> 0 > _4 >>> 0 | a4 >>> 0 > e4 >>> 0; )
                          ;
                        for (c4 = g7 << 7, _4 = I6 - 1 | 0; eI(t4, (Q3(Wa(t4, g7) & _4, B4) << 2) + r4 | 0, c4), Rg(t4, C4, y4, g7), eI(C4, (Q3(Wa(C4, g7) & _4, B4) << 2) + r4 | 0, c4), Rg(C4, t4, y4, g7), e4 = s4, E4 = s4 = E4 + 2 | 0, i4 = s4, s4 = e4 = s4 >>> 0 < 2 ? e4 + 1 | 0 : e4, (0 | a4) == (0 | e4) & I6 >>> 0 > i4 >>> 0 | a4 >>> 0 > e4 >>> 0; )
                          ;
                      }
                      if (B4)
                        for (e4 = 0; La((g7 = e4 << 2) + A8 | 0, n3[g7 + t4 >> 2]), (0 | B4) != (0 | (e4 = e4 + 1 | 0)); )
                          ;
                    }
                    function lA3(A8, g7) {
                      var I6, a4 = 0, r4 = 0, B4 = 0, n4 = 0;
                      for (u3 = I6 = u3 - 464 | 0; r4 = a4 << 1, n4 = o3[g7 + a4 | 0], t3[r4 + (I6 + 400 | 0) | 0] = 15 & n4, t3[(I6 + 400 | 0) + (1 | r4) | 0] = n4 >>> 4, (0 | (a4 = a4 + 1 | 0)) != 32; )
                        ;
                      for (a4 = 0; g7 = ((r4 = (g7 = a4) + o3[0 | (a4 = (I6 + 400 | 0) + B4 | 0)] | 0) << 24) - -134217728 | 0, t3[0 | a4] = r4 - (g7 >> 24 & 240), a4 = g7 >> 28, (0 | (B4 = B4 + 1 | 0)) != 63; )
                        ;
                      for (t3[I6 + 463 | 0] = o3[I6 + 463 | 0] + a4, sr(A8), a4 = 1; Tr(I6, a4 >>> 1 | 0, t3[(I6 + 400 | 0) + a4 | 0]), qg(I6 + 240 | 0, A8, I6), UI(A8, I6 + 240 | 0), g7 = a4 >>> 0 < 62, a4 = a4 + 2 | 0, g7; )
                        ;
                      for (Ka(I6 + 240 | 0, A8), ia(I6 + 120 | 0, I6 + 240 | 0), Tg(I6 + 240 | 0, I6 + 120 | 0), ia(I6 + 120 | 0, I6 + 240 | 0), Tg(I6 + 240 | 0, I6 + 120 | 0), ia(I6 + 120 | 0, I6 + 240 | 0), Tg(I6 + 240 | 0, I6 + 120 | 0), UI(A8, I6 + 240 | 0), a4 = 0; Tr(I6, a4 >>> 1 | 0, t3[(I6 + 400 | 0) + a4 | 0]), qg(I6 + 240 | 0, A8, I6), UI(A8, I6 + 240 | 0), g7 = a4 >>> 0 < 62, a4 = a4 + 2 | 0, g7; )
                        ;
                      u3 = I6 + 464 | 0;
                    }
                    function hA3(A8, g7, I6, a4, r4, t4, B4, o4, C4, c4, i4) {
                      var _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0;
                      if (s4 = Wr(C4, 0, o4, 0), !(y4 = h3) & s4 >>> 0 >= 1073741824 | y4)
                        return n3[9184] = 22, -1;
                      if ((0 | B4) == 1 | B4 >>> 0 > 1)
                        return n3[9184] = 22, -1;
                      if (s4 = function(A9, g8) {
                        for (var I7 = 0, a5 = 0, r5 = 0, t5 = 0; t5 = r5, I7 = a5, A9 | g8; )
                          A9 = (I7 = A9) - 1 & I7, g8 &= g8 - (I7 >>> 0 < 1), a5 = (I7 = r5 + 1 | 0) >>> 0 < 1 ? a5 + 1 | 0 : a5, r5 = I7;
                        return h3 = I7, t5;
                      }(t4, B4), !(!h3 & s4 >>> 0 < 2 && !B4 & t4 >>> 0 >= 2 | (0 | B4) != 0))
                        return n3[9184] = 28, -1;
                      if (!C4 || !o4)
                        return n3[9184] = 28, -1;
                      if (!B4 & t4 >>> 0 <= 33554431 / (o4 >>> 0) >>> 0 && !(33554431 / (C4 >>> 0) >>> 0 < o4 >>> 0 | o4 >>> 0 > 16777215) && !((s4 = Q3(y4 = o4 << 7, C4)) >>> 0 > (_4 = (p4 = Q3(t4, y4)) + s4 | 0) >>> 0 || _4 >>> 0 > (E4 = _4 + (o4 << 8 | 64) | 0) >>> 0)) {
                        A: {
                          if (e3[A8 + 8 >> 2] < E4 >>> 0) {
                            if (_4 = -1, nr(A8))
                              break A;
                            if (!function(A9, g8) {
                              var I7, a5 = 0;
                              return u3 = I7 = u3 - 16 | 0, a5 = Ia(I7 + 12 | 0, g8), n3[9184] = a5, a5 = a5 ? 0 : n3[I7 + 12 >> 2], n3[A9 + 4 >> 2] = a5, n3[A9 >> 2] = a5, n3[A9 + 8 >> 2] = a5 ? g8 : 0, u3 = I7 + 16 | 0, a5;
                            }(A8, E4))
                              break A;
                          }
                          for (zA(g7, I6, _4 = a4, r4, a4 = n3[A8 + 4 >> 2], s4), _4 = (r4 = a4 + s4 | 0) + p4 | 0, A8 = 0; fA3(a4 + Q3(A8, y4) | 0, o4, t4, B4, r4, _4), (0 | C4) != (0 | (A8 = A8 + 1 | 0)); )
                            ;
                          zA(g7, I6, a4, s4, c4, i4), _4 = 0;
                        }
                        return _4;
                      }
                      return n3[9184] = 48, -1;
                    }
                    function wA3(A8, g7, I6) {
                      A8 |= 0, g7 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 + -64 | 0, la(a4, I6 |= 0, 32, 0), I6 = n3[a4 + 28 >> 2], r4 = n3[a4 + 24 >> 2], t3[g7 + 24 | 0] = r4, t3[g7 + 25 | 0] = r4 >>> 8, t3[g7 + 26 | 0] = r4 >>> 16, t3[g7 + 27 | 0] = r4 >>> 24, t3[g7 + 28 | 0] = I6, t3[g7 + 29 | 0] = I6 >>> 8, t3[g7 + 30 | 0] = I6 >>> 16, t3[g7 + 31 | 0] = I6 >>> 24, I6 = n3[a4 + 20 >> 2], r4 = n3[a4 + 16 >> 2], t3[g7 + 16 | 0] = r4, t3[g7 + 17 | 0] = r4 >>> 8, t3[g7 + 18 | 0] = r4 >>> 16, t3[g7 + 19 | 0] = r4 >>> 24, t3[g7 + 20 | 0] = I6, t3[g7 + 21 | 0] = I6 >>> 8, t3[g7 + 22 | 0] = I6 >>> 16, t3[g7 + 23 | 0] = I6 >>> 24, I6 = n3[a4 + 12 >> 2], r4 = n3[a4 + 8 >> 2], t3[g7 + 8 | 0] = r4, t3[g7 + 9 | 0] = r4 >>> 8, t3[g7 + 10 | 0] = r4 >>> 16, t3[g7 + 11 | 0] = r4 >>> 24, t3[g7 + 12 | 0] = I6, t3[g7 + 13 | 0] = I6 >>> 8, t3[g7 + 14 | 0] = I6 >>> 16, t3[g7 + 15 | 0] = I6 >>> 24, I6 = n3[a4 + 4 >> 2], r4 = n3[a4 >> 2], t3[0 | g7] = r4, t3[g7 + 1 | 0] = r4 >>> 8, t3[g7 + 2 | 0] = r4 >>> 16, t3[g7 + 3 | 0] = r4 >>> 24, t3[g7 + 4 | 0] = I6, t3[g7 + 5 | 0] = I6 >>> 8, t3[g7 + 6 | 0] = I6 >>> 16, t3[g7 + 7 | 0] = I6 >>> 24, pI(a4, 64), A8 = fr(A8, g7), u3 = a4 - -64 | 0, 0 | A8;
                    }
                    function DA3(A8, g7, I6) {
                      var a4 = 0, r4 = 0, B4 = 0, o4 = 0;
                      if (I6 && (t3[(a4 = A8 + I6 | 0) - 1 | 0] = g7, t3[0 | A8] = g7, !(I6 >>> 0 < 3 || (t3[a4 - 2 | 0] = g7, t3[A8 + 1 | 0] = g7, t3[a4 - 3 | 0] = g7, t3[A8 + 2 | 0] = g7, I6 >>> 0 < 7 || (t3[a4 - 4 | 0] = g7, t3[A8 + 3 | 0] = g7, I6 >>> 0 < 9 || (r4 = (a4 = 0 - A8 & 3) + A8 | 0, g7 = Q3(255 & g7, 16843009), n3[r4 >> 2] = g7, n3[(a4 = (I6 = I6 - a4 & -4) + r4 | 0) - 4 >> 2] = g7, I6 >>> 0 < 9 || (n3[r4 + 8 >> 2] = g7, n3[r4 + 4 >> 2] = g7, n3[a4 - 8 >> 2] = g7, n3[a4 - 12 >> 2] = g7, I6 >>> 0 < 25 || (n3[r4 + 24 >> 2] = g7, n3[r4 + 20 >> 2] = g7, n3[r4 + 16 >> 2] = g7, n3[r4 + 12 >> 2] = g7, n3[a4 - 16 >> 2] = g7, n3[a4 - 20 >> 2] = g7, n3[a4 - 24 >> 2] = g7, n3[a4 - 28 >> 2] = g7, (I6 = I6 - (o4 = 4 & r4 | 24) | 0) >>> 0 < 32))))))))
                        for (a4 = g7, B4 = g7, g7 = r4 + o4 | 0; n3[g7 + 24 >> 2] = B4, n3[g7 + 28 >> 2] = a4, n3[g7 + 16 >> 2] = B4, n3[g7 + 20 >> 2] = a4, n3[g7 + 8 >> 2] = B4, n3[g7 + 12 >> 2] = a4, n3[g7 >> 2] = B4, n3[g7 + 4 >> 2] = a4, g7 = g7 + 32 | 0, (I6 = I6 - 32 | 0) >>> 0 > 31; )
                          ;
                      return A8;
                    }
                    function mA3(A8, g7) {
                      var I6, a4, r4, t4 = 0;
                      u3 = I6 = u3 - 864 | 0, jA(I6 + 336 | 0, r4 = g7 + 80 | 0, a4 = g7 + 40 | 0), ZA(I6, r4, a4), F3(I6 + 336 | 0, I6 + 336 | 0, I6), F3(I6 + 288 | 0, g7, a4), H3(I6 + 240 | 0, I6 + 288 | 0), F3(I6 + 240 | 0, I6 + 336 | 0, I6 + 240 | 0), gt(I6 + 480 | 0), eg(I6 + 624 | 0, I6 + 480 | 0, I6 + 240 | 0), F3(I6 + 816 | 0, I6 + 624 | 0, I6 + 336 | 0), F3(I6 + 768 | 0, I6 + 624 | 0, I6 + 288 | 0), F3(I6 + 48 | 0, I6 + 816 | 0, I6 + 768 | 0), F3(I6 + 48 | 0, I6 + 48 | 0, t4 = g7 + 120 | 0), F3(I6 + 576 | 0, g7, 2176), F3(I6 + 528 | 0, a4, 2176), F3(I6 + 672 | 0, I6 + 816 | 0, 3488), F3(I6 + 384 | 0, t4, I6 + 48 | 0), t4 = Ta(I6 + 384 | 0), ug(I6 + 192 | 0, g7), ug(I6 + 144 | 0, a4), ug(I6 + 720 | 0, I6 + 768 | 0), NA(I6 + 192 | 0, I6 + 528 | 0, t4), NA(I6 + 144 | 0, I6 + 576 | 0, t4), NA(I6 + 720 | 0, I6 + 672 | 0, t4), F3(I6 + 96 | 0, I6 + 192 | 0, I6 + 48 | 0), Ma(I6 + 144 | 0, I6 + 144 | 0, Ta(I6 + 96 | 0)), ZA(I6 + 432 | 0, r4, I6 + 144 | 0), F3(I6 + 432 | 0, I6 + 720 | 0, I6 + 432 | 0), Qt(I6 + 432 | 0, I6 + 432 | 0), pA3(A8, I6 + 432 | 0), u3 = I6 + 864 | 0;
                    }
                    function GA3(A8, g7, I6) {
                      var a4;
                      u3 = a4 = u3 - 832 | 0, b3(a4 + 688 | 0, g7), n3[a4 + 688 >> 2] = n3[a4 + 688 >> 2] + 1, tA3(a4 + 688 | 0, a4 + 688 | 0), L3(a4 + 640 | 0, a4 + 688 | 0), _g(a4 + 640 | 0, a4 + 640 | 0), H3(a4 + 592 | 0, a4 + 640 | 0), F3(a4 + 544 | 0, a4 + 640 | 0, a4 + 592 | 0), jA(a4 + 784 | 0, a4 + 544 | 0, a4 + 640 | 0), L3(a4 + 592 | 0, a4 + 592 | 0), jA(a4 + 784 | 0, a4 + 592 | 0, a4 + 784 | 0), g7 = function(A9) {
                        var g8;
                        return u3 = g8 = u3 - 464 | 0, F3(g8 + 416 | 0, A9, A9), F3(g8 + 368 | 0, A9, g8 + 416 | 0), H3(g8 + 320 | 0, g8 + 368 | 0), H3(g8 + 320 | 0, g8 + 320 | 0), F3(g8 + 272 | 0, g8 + 368 | 0, g8 + 320 | 0), H3(g8 + 224 | 0, g8 + 272 | 0), H3(g8 + 224 | 0, g8 + 224 | 0), H3(g8 + 224 | 0, g8 + 224 | 0), H3(g8 + 224 | 0, g8 + 224 | 0), F3(g8 + 176 | 0, g8 + 272 | 0, g8 + 224 | 0), ug(g8 + 128 | 0, g8 + 176 | 0), PI(g8 + 128 | 0, 2, g8 + 368 | 0), ug(g8 + 80 | 0, g8 + 128 | 0), PI(g8 + 128 | 0, 10, g8 + 80 | 0), PI(g8 + 128 | 0, 10, g8 + 80 | 0), ug(g8 + 32 | 0, g8 + 128 | 0), PI(g8 + 128 | 0, 30, g8 + 32 | 0), ug(g8 + 32 | 0, g8 + 128 | 0), PI(g8 + 128 | 0, 60, g8 + 32 | 0), ug(g8 + 32 | 0, g8 + 128 | 0), PI(g8 + 128 | 0, 120, g8 + 32 | 0), PI(g8 + 128 | 0, 10, g8 + 80 | 0), PI(g8 + 128 | 0, 3, g8 + 368 | 0), H3(g8 + 128 | 0, g8 + 128 | 0), pA3(g8, g8 + 128 | 0), u3 = g8 + 464 | 0, 1 & t3[g8 + 1 | 0];
                      }(a4 + 784 | 0), _g(a4 + 736 | 0, a4 + 640 | 0), NA(a4 + 640 | 0, a4 + 736 | 0, g7), wt(a4 + 592 | 0), NA(a4 + 592 | 0, 34512, g7), ZA(a4 + 640 | 0, a4 + 640 | 0, a4 + 592 | 0), gt(a4 + 384 | 0), jA(a4 + 224 | 0, a4 + 640 | 0, a4 + 384 | 0), ZA(a4 + 48 | 0, a4 + 640 | 0, a4 + 384 | 0), tA3(a4 + 96 | 0, a4 + 224 | 0), F3(a4, a4 + 48 | 0, a4 + 96 | 0), pA3(A8, a4), t3[A8 + 31 | 0] = o3[A8 + 31 | 0] | I6, qA(a4 + 384 | 0, A8) && (_3(), c3()), Ka(a4 + 224 | 0, a4 + 384 | 0), ia(a4 + 96 | 0, a4 + 224 | 0), Tg(a4 + 224 | 0, a4 + 96 | 0), ia(a4 + 96 | 0, a4 + 224 | 0), Tg(a4 + 224 | 0, a4 + 96 | 0), UI(a4 + 384 | 0, a4 + 224 | 0), gI(A8, a4 + 384 | 0), u3 = a4 + 832 | 0;
                    }
                    function kA3(A8, g7) {
                      A8 |= 0;
                      var I6 = 0, a4 = 0;
                      u3 = I6 = u3 + -64 | 0, G3(g7 = gA3(I6, g7 |= 0, 64)), I6 = n3[g7 + 28 >> 2], a4 = n3[g7 + 24 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = I6, t3[A8 + 29 | 0] = I6 >>> 8, t3[A8 + 30 | 0] = I6 >>> 16, t3[A8 + 31 | 0] = I6 >>> 24, I6 = n3[g7 + 20 >> 2], a4 = n3[g7 + 16 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = I6, t3[A8 + 21 | 0] = I6 >>> 8, t3[A8 + 22 | 0] = I6 >>> 16, t3[A8 + 23 | 0] = I6 >>> 24, I6 = n3[g7 + 12 >> 2], a4 = n3[g7 + 8 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = I6, t3[A8 + 13 | 0] = I6 >>> 8, t3[A8 + 14 | 0] = I6 >>> 16, t3[A8 + 15 | 0] = I6 >>> 24, I6 = n3[g7 + 4 >> 2], a4 = n3[g7 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = I6, t3[A8 + 5 | 0] = I6 >>> 8, t3[A8 + 6 | 0] = I6 >>> 16, t3[A8 + 7 | 0] = I6 >>> 24, pI(g7, 64), u3 = g7 - -64 | 0;
                    }
                    function FA3(A8, g7) {
                      g7 |= 0;
                      var I6, a4 = 0;
                      return u3 = I6 = u3 + -64 | 0, bI(A8 |= 0, I6), a4 = n3[I6 + 28 >> 2], A8 = n3[I6 + 24 >> 2], t3[g7 + 24 | 0] = A8, t3[g7 + 25 | 0] = A8 >>> 8, t3[g7 + 26 | 0] = A8 >>> 16, t3[g7 + 27 | 0] = A8 >>> 24, t3[g7 + 28 | 0] = a4, t3[g7 + 29 | 0] = a4 >>> 8, t3[g7 + 30 | 0] = a4 >>> 16, t3[g7 + 31 | 0] = a4 >>> 24, a4 = n3[I6 + 20 >> 2], A8 = n3[I6 + 16 >> 2], t3[g7 + 16 | 0] = A8, t3[g7 + 17 | 0] = A8 >>> 8, t3[g7 + 18 | 0] = A8 >>> 16, t3[g7 + 19 | 0] = A8 >>> 24, t3[g7 + 20 | 0] = a4, t3[g7 + 21 | 0] = a4 >>> 8, t3[g7 + 22 | 0] = a4 >>> 16, t3[g7 + 23 | 0] = a4 >>> 24, a4 = n3[I6 + 12 >> 2], A8 = n3[I6 + 8 >> 2], t3[g7 + 8 | 0] = A8, t3[g7 + 9 | 0] = A8 >>> 8, t3[g7 + 10 | 0] = A8 >>> 16, t3[g7 + 11 | 0] = A8 >>> 24, t3[g7 + 12 | 0] = a4, t3[g7 + 13 | 0] = a4 >>> 8, t3[g7 + 14 | 0] = a4 >>> 16, t3[g7 + 15 | 0] = a4 >>> 24, a4 = n3[I6 + 4 >> 2], A8 = n3[I6 >> 2], t3[0 | g7] = A8, t3[g7 + 1 | 0] = A8 >>> 8, t3[g7 + 2 | 0] = A8 >>> 16, t3[g7 + 3 | 0] = A8 >>> 24, t3[g7 + 4 | 0] = a4, t3[g7 + 5 | 0] = a4 >>> 8, t3[g7 + 6 | 0] = a4 >>> 16, t3[g7 + 7 | 0] = a4 >>> 24, u3 = I6 - -64 | 0, 0;
                    }
                    function bA3(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, C4, c4 = 0;
                      a4 = n3[g7 + 28 >> 2], r4 = n3[g7 + 24 >> 2], t4 = n3[g7 + 20 >> 2], B4 = n3[g7 + 16 >> 2], o4 = n3[g7 + 12 >> 2], e4 = n3[g7 + 8 >> 2], C4 = n3[g7 + 4 >> 2], c4 = n3[g7 >> 2], I6 = n3[g7 + 36 >> 2], g7 = n3[g7 + 32 >> 2], c4 = Q3(((a4 + (r4 + (t4 + (B4 + (o4 + (e4 + (C4 + (c4 + (Q3(I6, 19) + 16777216 >>> 25 | 0) >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) + g7 >> 26) + I6 >> 25, 19) + c4 | 0, n3[A8 >> 2] = 67108863 & c4, c4 = C4 + (c4 >> 26) | 0, n3[A8 + 4 >> 2] = 33554431 & c4, c4 = e4 + (c4 >> 25) | 0, n3[A8 + 8 >> 2] = 67108863 & c4, c4 = o4 + (c4 >> 26) | 0, n3[A8 + 12 >> 2] = 33554431 & c4, c4 = B4 + (c4 >> 25) | 0, n3[A8 + 16 >> 2] = 67108863 & c4, c4 = t4 + (c4 >> 26) | 0, n3[A8 + 20 >> 2] = 33554431 & c4, c4 = r4 + (c4 >> 25) | 0, n3[A8 + 24 >> 2] = 67108863 & c4, c4 = a4 + (c4 >> 26) | 0, n3[A8 + 28 >> 2] = 33554431 & c4, g7 = g7 + (c4 >> 25) | 0, n3[A8 + 32 >> 2] = 67108863 & g7, n3[A8 + 36 >> 2] = I6 + (g7 >> 26) & 33554431;
                    }
                    function HA3(A8, g7, I6, a4, r4, t4, B4) {
                      var o4, e4, Q4, C4, c4 = 0;
                      return u3 = o4 = u3 - 352 | 0, K3(o4, t4, B4, 0), !r4 & a4 >>> 0 <= I6 - A8 >>> 0 | A8 >>> 0 >= I6 >>> 0 && !(!r4 & a4 >>> 0 > A8 - I6 >>> 0 | r4 && A8 >>> 0 > I6 >>> 0) || (I6 = EA3(A8, I6, a4)), n3[o4 + 56 >> 2] = 0, n3[o4 + 60 >> 2] = 0, n3[o4 + 48 >> 2] = 0, n3[o4 + 52 >> 2] = 0, n3[o4 + 40 >> 2] = 0, n3[o4 + 44 >> 2] = 0, n3[o4 + 32 >> 2] = 0, n3[o4 + 36 >> 2] = 0, (e4 = !((B4 = (c4 = !r4 & a4 >>> 0 > 32 | (0 | r4) != 0) ? 32 : a4) | (c4 = c4 ? 0 : r4))) || gA3(o4 - -64 | 0, I6, B4), C4 = t4 + 16 | 0, Ea(o4 + 32 | 0, o4 + 32 | 0, Q4 = B4 + 32 | 0, t4 = Q4 >>> 0 < 32 ? c4 + 1 | 0 : c4, C4, o4), wr(o4 + 96 | 0, o4 + 32 | 0), e4 || gA3(A8, o4 - -64 | 0, B4), pI(o4 + 32 | 0, 64), !r4 & a4 >>> 0 >= 33 | r4 && aa(A8 + B4 | 0, t4 = I6 + B4 | 0, (I6 = a4) - B4 | 0, r4 - (c4 + (I6 >>> 0 < B4 >>> 0) | 0) | 0, C4, 1, 0, o4), pI(o4, 32), Sr(o4 + 96 | 0, A8, a4, r4), Dr(o4 + 96 | 0, g7), pI(o4 + 96 | 0, 256), u3 = o4 + 352 | 0, 0;
                    }
                    function dA3(A8, g7, I6, a4, r4, t4, B4) {
                      var o4, e4, Q4, C4, c4 = 0;
                      return u3 = o4 = u3 - 352 | 0, W3(o4, t4, B4, 0), !r4 & a4 >>> 0 <= I6 - A8 >>> 0 | A8 >>> 0 >= I6 >>> 0 && !(!r4 & a4 >>> 0 > A8 - I6 >>> 0 | r4 && A8 >>> 0 > I6 >>> 0) || (I6 = EA3(A8, I6, a4)), n3[o4 + 56 >> 2] = 0, n3[o4 + 60 >> 2] = 0, n3[o4 + 48 >> 2] = 0, n3[o4 + 52 >> 2] = 0, n3[o4 + 40 >> 2] = 0, n3[o4 + 44 >> 2] = 0, n3[o4 + 32 >> 2] = 0, n3[o4 + 36 >> 2] = 0, (e4 = !((B4 = (c4 = !r4 & a4 >>> 0 > 32 | (0 | r4) != 0) ? 32 : a4) | (c4 = c4 ? 0 : r4))) || gA3(o4 - -64 | 0, I6, B4), C4 = t4 + 16 | 0, tr(o4 + 32 | 0, o4 + 32 | 0, Q4 = B4 + 32 | 0, t4 = Q4 >>> 0 < 32 ? c4 + 1 | 0 : c4, C4, o4), wr(o4 + 96 | 0, o4 + 32 | 0), e4 || gA3(A8, o4 - -64 | 0, B4), pI(o4 + 32 | 0, 64), !r4 & a4 >>> 0 >= 33 | r4 && $a(A8 + B4 | 0, t4 = I6 + B4 | 0, (I6 = a4) - B4 | 0, r4 - (c4 + (I6 >>> 0 < B4 >>> 0) | 0) | 0, C4, 1, 0, o4), pI(o4, 32), Sr(o4 + 96 | 0, A8, a4, r4), Dr(o4 + 96 | 0, g7), pI(o4 + 96 | 0, 256), u3 = o4 + 352 | 0, 0;
                    }
                    function SA3(A8, g7) {
                      var I6, a4, r4, B4 = 0, n4 = 0;
                      n4 = B4 = A8 - -64 | 0, a4 = 1 + (I6 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24) | 0, B4 = (g7 = g7 + (B4 = r4 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24) | 0) >>> 0 < B4 >>> 0 ? a4 : I6, t3[0 | n4] = g7, t3[n4 + 1 | 0] = g7 >>> 8, t3[n4 + 2 | 0] = g7 >>> 16, t3[n4 + 3 | 0] = g7 >>> 24, t3[n4 + 4 | 0] = B4, t3[n4 + 5 | 0] = B4 >>> 8, t3[n4 + 6 | 0] = B4 >>> 16, t3[n4 + 7 | 0] = B4 >>> 24, g7 = (B4 = (0 | B4) == (0 | I6) & g7 >>> 0 < r4 >>> 0 | B4 >>> 0 < I6 >>> 0) + (o3[A8 + 72 | 0] | o3[A8 + 73 | 0] << 8 | o3[A8 + 74 | 0] << 16 | o3[A8 + 75 | 0] << 24) | 0, n4 = o3[A8 + 76 | 0] | o3[A8 + 77 | 0] << 8 | o3[A8 + 78 | 0] << 16 | o3[A8 + 79 | 0] << 24, B4 = g7 >>> 0 < B4 >>> 0 ? n4 + 1 | 0 : n4, t3[A8 + 72 | 0] = g7, t3[A8 + 73 | 0] = g7 >>> 8, t3[A8 + 74 | 0] = g7 >>> 16, t3[A8 + 75 | 0] = g7 >>> 24, t3[A8 + 76 | 0] = B4, t3[A8 + 77 | 0] = B4 >>> 8, t3[A8 + 78 | 0] = B4 >>> 16, t3[A8 + 79 | 0] = B4 >>> 24;
                    }
                    function vA3(A8, g7) {
                      n3[A8 >> 2] = 1634760805, n3[A8 + 4 >> 2] = 857760878, n3[A8 + 8 >> 2] = 2036477234, n3[A8 + 12 >> 2] = 1797285236, n3[A8 + 16 >> 2] = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, n3[A8 + 20 >> 2] = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, n3[A8 + 24 >> 2] = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, n3[A8 + 28 >> 2] = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, n3[A8 + 32 >> 2] = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, n3[A8 + 36 >> 2] = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, n3[A8 + 40 >> 2] = o3[g7 + 24 | 0] | o3[g7 + 25 | 0] << 8 | o3[g7 + 26 | 0] << 16 | o3[g7 + 27 | 0] << 24, n3[A8 + 44 >> 2] = o3[g7 + 28 | 0] | o3[g7 + 29 | 0] << 8 | o3[g7 + 30 | 0] << 16 | o3[g7 + 31 | 0] << 24;
                    }
                    function UA2(A8) {
                      var g7 = 0, I6 = 0, a4 = 0;
                      if (!A8)
                        return -25;
                      if (!n3[A8 >> 2])
                        return -1;
                      A: {
                        g: {
                          if (g7 = -2, !(e3[A8 + 4 >> 2] < 16) && (n3[A8 + 8 >> 2] || (g7 = -18, !n3[A8 + 12 >> 2]))) {
                            if (I6 = n3[A8 + 20 >> 2], !n3[A8 + 16 >> 2])
                              break g;
                            if (g7 = -6, !(I6 >>> 0 < 8) && (n3[A8 + 24 >> 2] || (g7 = -20, !n3[A8 + 28 >> 2])) && (n3[A8 + 32 >> 2] || (g7 = -21, !n3[A8 + 36 >> 2]))) {
                              if (!(I6 = n3[A8 + 48 >> 2]))
                                return -16;
                              if (g7 = -17, !(I6 >>> 0 > 16777215 || (g7 = -14, (a4 = n3[A8 + 44 >> 2]) >>> 0 < 8 || (g7 = -15, a4 >>> 0 > 2097152 || (g7 = -14, I6 << 3 >>> 0 > a4 >>> 0))))) {
                                if (!n3[A8 + 40 >> 2])
                                  return -12;
                                if (A8 = n3[A8 + 52 >> 2])
                                  break A;
                                g7 = -28;
                              }
                            }
                          }
                          return g7;
                        }
                        return I6 ? -19 : -6;
                      }
                      return A8 >>> 0 > 16777215 ? -29 : 0;
                    }
                    function JA2(A8, g7, I6, a4, r4, t4, B4) {
                      var n4, o4, e4 = 0, Q4 = 0;
                      u3 = n4 = u3 - 96 | 0, W3(n4, t4, B4, 0), ur(n4 + 32 | 0, 32, 0, o4 = t4 + 16 | 0, n4), t4 = -1;
                      A: {
                        if (!hr(I6, g7, a4, r4, n4 + 32 | 0)) {
                          if (t4 = 0, !A8)
                            break A;
                          !r4 & a4 >>> 0 <= A8 - g7 >>> 0 | A8 >>> 0 <= g7 >>> 0 && !(!r4 & a4 >>> 0 > g7 - A8 >>> 0 | r4 && A8 >>> 0 < g7 >>> 0) || (g7 = EA3(A8, g7, a4)), I6 = (t4 = !r4 & a4 >>> 0 > 32 | (0 | r4) != 0) ? 32 : a4, B4 = t4 = t4 ? 0 : r4, I6 | t4 ? (Q4 = gA3(n4 - -64 | 0, g7, I6), t4 = B4, tr(n4 + 32 | 0, n4 + 32 | 0, e4 = I6 + 32 | 0, t4 = e4 >>> 0 < 32 ? t4 + 1 | 0 : t4, o4, n4), gA3(A8, Q4, I6)) : (t4 = B4, tr(n4 + 32 | 0, n4 + 32 | 0, e4 = I6 + 32 | 0, t4 = e4 >>> 0 < 32 ? t4 + 1 | 0 : t4, o4, n4)), t4 = 0, !r4 & a4 >>> 0 < 33 || $a((e4 = A8) + (A8 = I6) | 0, A8 + g7 | 0, a4 - A8 | 0, r4 - (B4 + (A8 >>> 0 > a4 >>> 0) | 0) | 0, o4, 1, 0, n4);
                        }
                        pI(n4, 32);
                      }
                      return u3 = n4 + 96 | 0, t4;
                    }
                    function YA(A8, g7, I6, a4, r4, t4, B4) {
                      var n4, o4, e4 = 0, Q4 = 0;
                      u3 = n4 = u3 - 96 | 0, K3(n4, t4, B4, 0), da(n4 + 32 | 0, 32, 0, o4 = t4 + 16 | 0, n4), t4 = -1;
                      A: {
                        if (!hr(I6, g7, a4, r4, n4 + 32 | 0)) {
                          if (t4 = 0, !A8)
                            break A;
                          !r4 & a4 >>> 0 <= A8 - g7 >>> 0 | A8 >>> 0 <= g7 >>> 0 && !(!r4 & a4 >>> 0 > g7 - A8 >>> 0 | r4 && A8 >>> 0 < g7 >>> 0) || (g7 = EA3(A8, g7, a4)), I6 = (t4 = !r4 & a4 >>> 0 > 32 | (0 | r4) != 0) ? 32 : a4, B4 = t4 = t4 ? 0 : r4, I6 | t4 ? (Q4 = gA3(n4 - -64 | 0, g7, I6), t4 = B4, Ea(n4 + 32 | 0, n4 + 32 | 0, e4 = I6 + 32 | 0, t4 = e4 >>> 0 < 32 ? t4 + 1 | 0 : t4, o4, n4), gA3(A8, Q4, I6)) : (t4 = B4, Ea(n4 + 32 | 0, n4 + 32 | 0, e4 = I6 + 32 | 0, t4 = e4 >>> 0 < 32 ? t4 + 1 | 0 : t4, o4, n4)), t4 = 0, !r4 & a4 >>> 0 < 33 || aa((e4 = A8) + (A8 = I6) | 0, A8 + g7 | 0, a4 - A8 | 0, r4 - (B4 + (A8 >>> 0 > a4 >>> 0) | 0) | 0, o4, 1, 0, n4);
                        }
                        pI(n4, 32);
                      }
                      return u3 = n4 + 96 | 0, t4;
                    }
                    function xA(A8, g7, I6) {
                      A8 |= 0, g7 |= 0;
                      var a4, r4 = 0, B4 = 0;
                      if (u3 = a4 = u3 - 192 | 0, (I6 |= 0) >>> 0 >= 129 && (ga(A8), IA3(A8, g7, I6, 0), LI(A8, a4), I6 = 64, g7 = a4), ga(A8), DA3(a4 - -64 | 0, 54, 128), I6 && (t3[a4 + 64 | 0] = 54 ^ o3[0 | g7], r4 = 1, (0 | I6) != 1))
                        for (; t3[0 | (B4 = (a4 - -64 | 0) + r4 | 0)] = o3[0 | B4] ^ o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != (0 | I6); )
                          ;
                      if (IA3(A8, a4 - -64 | 0, 128, 0), ga(A8 = A8 + 208 | 0), DA3(a4 - -64 | 0, 92, 128), I6 && (t3[a4 + 64 | 0] = 92 ^ o3[0 | g7], r4 = 1, (0 | I6) != 1))
                        for (; t3[0 | (B4 = (a4 - -64 | 0) + r4 | 0)] = o3[0 | B4] ^ o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != (0 | I6); )
                          ;
                      return IA3(A8, a4 - -64 | 0, 128, 0), pI(a4 - -64 | 0, 128), pI(a4, 64), u3 = a4 + 192 | 0, 0;
                    }
                    function NA(A8, g7, I6) {
                      var a4, r4, t4, B4, o4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4, h4, w4;
                      _4 = n3[g7 + 4 >> 2], a4 = n3[A8 + 4 >> 2], s4 = n3[g7 + 8 >> 2], r4 = n3[A8 + 8 >> 2], y4 = n3[g7 + 12 >> 2], t4 = n3[A8 + 12 >> 2], E4 = n3[g7 + 16 >> 2], B4 = n3[A8 + 16 >> 2], p4 = n3[g7 + 20 >> 2], o4 = n3[A8 + 20 >> 2], u4 = n3[g7 + 24 >> 2], e4 = n3[A8 + 24 >> 2], f4 = n3[g7 + 28 >> 2], Q4 = n3[A8 + 28 >> 2], l4 = n3[g7 + 32 >> 2], C4 = n3[A8 + 32 >> 2], h4 = n3[g7 + 36 >> 2], c4 = n3[A8 + 36 >> 2], i4 = n3[A8 >> 2], w4 = n3[g7 >> 2] ^ i4, g7 = 0 - I6 | 0, n3[A8 >> 2] = i4 ^ w4 & g7, n3[A8 + 36 >> 2] = g7 & (c4 ^ h4) ^ c4, n3[A8 + 32 >> 2] = g7 & (C4 ^ l4) ^ C4, n3[A8 + 28 >> 2] = g7 & (Q4 ^ f4) ^ Q4, n3[A8 + 24 >> 2] = g7 & (e4 ^ u4) ^ e4, n3[A8 + 20 >> 2] = g7 & (o4 ^ p4) ^ o4, n3[A8 + 16 >> 2] = g7 & (B4 ^ E4) ^ B4, n3[A8 + 12 >> 2] = g7 & (t4 ^ y4) ^ t4, n3[A8 + 8 >> 2] = g7 & (r4 ^ s4) ^ r4, n3[A8 + 4 >> 2] = g7 & (a4 ^ _4) ^ a4;
                    }
                    function MA(A8, g7) {
                      for (var I6 = 0, a4 = 0, r4 = 0, B4 = 0, n4 = 0, e4 = 0, Q4 = 0, C4 = 0; t3[A8 + I6 | 0] = o3[(I6 >>> 3 | 0) + g7 | 0] >>> (7 & I6) & 1, (0 | (I6 = I6 + 1 | 0)) != 256; )
                        ;
                      for (; ; ) {
                        e4 = (g7 = e4) + 1 | 0;
                        A:
                          if (o3[0 | (n4 = A8 + g7 | 0)] && (I6 = e4, r4 = 1, !(g7 >>> 0 > 254)))
                            for (; ; ) {
                              g:
                                if (B4 = t3[0 | (a4 = A8 + I6 | 0)])
                                  if ((0 | (C4 = (Q4 = t3[0 | n4]) + (B4 <<= r4) | 0)) <= 15)
                                    t3[0 | n4] = C4, t3[0 | a4] = 0;
                                  else {
                                    if ((0 | (a4 = Q4 - B4 | 0)) < -15)
                                      break A;
                                    for (t3[0 | n4] = a4; ; ) {
                                      if (!o3[0 | (a4 = A8 + I6 | 0)]) {
                                        t3[0 | a4] = 1;
                                        break g;
                                      }
                                      if (t3[0 | a4] = 0, a4 = I6 >>> 0 < 255, I6 = I6 + 1 | 0, !a4)
                                        break;
                                    }
                                  }
                              if (r4 >>> 0 > 5)
                                break A;
                              if (!((I6 = g7 + (r4 = r4 + 1 | 0) | 0) >>> 0 < 256))
                                break;
                            }
                        if ((0 | e4) == 256)
                          break;
                      }
                    }
                    function RA(A8, g7, I6) {
                      A8 |= 0, g7 |= 0;
                      var a4, r4 = 0, B4 = 0;
                      if (u3 = a4 = u3 - 96 | 0, (I6 |= 0) >>> 0 >= 65 && (Mg(A8), QA3(A8, g7, I6, 0), TI(A8, a4), I6 = 32, g7 = a4), Mg(A8), DA3(a4 + 32 | 0, 54, 64), I6 && (t3[a4 + 32 | 0] = 54 ^ o3[0 | g7], r4 = 1, (0 | I6) != 1))
                        for (; t3[0 | (B4 = (a4 + 32 | 0) + r4 | 0)] = o3[0 | B4] ^ o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != (0 | I6); )
                          ;
                      if (QA3(A8, a4 + 32 | 0, 64, 0), Mg(A8 = A8 + 104 | 0), DA3(a4 + 32 | 0, 92, 64), I6 && (t3[a4 + 32 | 0] = 92 ^ o3[0 | g7], r4 = 1, (0 | I6) != 1))
                        for (; t3[0 | (B4 = (a4 + 32 | 0) + r4 | 0)] = o3[0 | B4] ^ o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != (0 | I6); )
                          ;
                      return QA3(A8, a4 + 32 | 0, 64, 0), pI(a4 + 32 | 0, 64), pI(a4, 32), u3 = a4 + 96 | 0, 0;
                    }
                    function PA(A8, g7, I6, a4) {
                      var r4, t4, B4, o4, e4 = 0;
                      u3 = r4 = u3 + -64 | 0, DA3(r4 + 8 | 0, 0, 52), e4 = cg(A8), n3[r4 + 20 >> 2] = e4, n3[r4 + 36 >> 2] = e4, n3[r4 + 4 >> 2] = e4, t4 = k3(e4), n3[r4 + 32 >> 2] = t4, B4 = k3(e4), n3[r4 + 16 >> 2] = B4, o4 = k3(e4), n3[r4 >> 2] = o4;
                      A:
                        if (!o4 | !t4 | !B4 || !(e4 = k3(e4)))
                          U3(t4), U3(B4), U3(o4), A8 = -22;
                        else {
                          if (A8 = rA3(r4, A8, a4)) {
                            U3(n3[r4 + 32 >> 2]), U3(n3[r4 + 16 >> 2]), U3(n3[r4 >> 2]), U3(e4);
                            break A;
                          }
                          A8 = 0, g7 = Ig(n3[r4 + 40 >> 2], n3[r4 + 44 >> 2], n3[r4 + 52 >> 2], g7, I6, n3[r4 + 16 >> 2], n3[r4 + 20 >> 2], e4, n3[r4 + 4 >> 2], 0, 0, a4), U3(n3[r4 + 32 >> 2]), U3(n3[r4 + 16 >> 2]), (g7 || Kg(e4, n3[r4 >> 2], n3[r4 + 4 >> 2])) && (A8 = -35), U3(e4), U3(n3[r4 >> 2]);
                        }
                      return u3 = r4 - -64 | 0, A8;
                    }
                    function qA(A8, g7) {
                      var I6, a4, r4, t4 = 0;
                      return u3 = I6 = u3 - 384 | 0, P3(a4 = A8 + 40 | 0, g7), gt(t4 = A8 + 80 | 0), H3(I6 + 336 | 0, a4), F3(I6 + 288 | 0, I6 + 336 | 0, 2128), ZA(I6 + 336 | 0, I6 + 336 | 0, t4), jA(I6 + 288 | 0, I6 + 288 | 0, t4), H3(I6 + 240 | 0, I6 + 288 | 0), F3(I6 + 240 | 0, I6 + 240 | 0, I6 + 288 | 0), H3(A8, I6 + 240 | 0), F3(A8, A8, I6 + 288 | 0), F3(A8, A8, I6 + 336 | 0), eA3(A8, A8), F3(A8, A8, I6 + 240 | 0), F3(A8, A8, I6 + 336 | 0), H3(I6 + 192 | 0, A8), F3(I6 + 192 | 0, I6 + 192 | 0, I6 + 288 | 0), ZA(I6 + 144 | 0, I6 + 192 | 0, I6 + 336 | 0), jA(I6 + 96 | 0, I6 + 192 | 0, I6 + 336 | 0), t4 = Xa(I6 + 144 | 0), r4 = Xa(I6 + 96 | 0), F3(I6, A8, 2176), NA(A8, I6, 1 - t4 | 0), _g(I6 + 48 | 0, A8), NA(A8, I6 + 48 | 0, Ta(A8) ^ o3[g7 + 31 | 0] >>> 7), F3(A8 + 120 | 0, A8, a4), u3 = I6 + 384 | 0, (t4 | r4) - 1 | 0;
                    }
                    function LA(A8, g7) {
                      var I6, a4 = 0, r4 = 0;
                      return u3 = I6 = u3 - 480 | 0, a4 = -1, function(A9) {
                        var g8, I7 = 0, a5 = 0;
                        for (a5 = 127 & (-1 ^ (g8 = o3[A9 + 31 | 0])), I7 = 30; a5 = -1 ^ o3[A9 + I7 | 0] | a5, I7 = I7 - 1 | 0; )
                          ;
                        return 1 & (-1 ^ (((255 & a5) - 1 & 236 - (A9 = o3[0 | A9])) >>> 8 | A9 | g8 >>> 7));
                      }(g7) && (P3(I6 + 336 | 0, g7), H3(I6 + 288 | 0, I6 + 336 | 0), gt(I6 + 240 | 0), ZA(I6 + 240 | 0, I6 + 240 | 0, I6 + 288 | 0), H3(I6 + 144 | 0, I6 + 240 | 0), gt(I6 + 192 | 0), jA(I6 + 192 | 0, I6 + 192 | 0, I6 + 288 | 0), H3(I6 + 96 | 0, I6 + 192 | 0), F3(I6 + 48 | 0, 2128, I6 + 144 | 0), _g(I6 + 48 | 0, I6 + 48 | 0), ZA(I6 + 48 | 0, I6 + 48 | 0, I6 + 96 | 0), F3(I6, I6 + 48 | 0, I6 + 96 | 0), gt(I6 + 384 | 0), a4 = eg(I6 + 432 | 0, I6 + 384 | 0, I6), F3(A8, I6 + 432 | 0, I6 + 192 | 0), F3(g7 = A8 + 40 | 0, I6 + 432 | 0, A8), F3(g7, g7, I6 + 48 | 0), F3(A8, A8, I6 + 336 | 0), jA(A8, A8, A8), Qt(A8, A8), F3(g7, I6 + 240 | 0, g7), gt(A8 + 80 | 0), F3(r4 = A8 + 120 | 0, A8, g7), a4 = 0 - (Ta(r4) | 1 - a4 | Xa(g7)) | 0), u3 = I6 + 480 | 0, a4;
                    }
                    function KA(A8, g7, I6, a4, r4) {
                      var B4, o4, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0;
                      return u3 = B4 = u3 - 48 | 0, (o4 = BI(a4, B4 + 12 | 0, B4 + 8 | 0, B4 + 4 | 0)) && (c4 = n3[B4 + 12 >> 2], (Q4 = 45 + (C4 = (e4 = (e4 = VI(o4, cg(o4) + 1 | 0)) ? e4 - o4 | 0 : cg(o4)) + (o4 - a4 | 0) | 0) | 0) >>> 0 > 102 | e4 >>> 0 > Q4 >>> 0 || (Q4 = A8, i4 = g7, A8 = 31 & c4, (63 & c4) >>> 0 >= 32 ? (g7 = 1 << A8, A8 = 0) : (g7 = (1 << A8) - 1 & 1 >>> 32 - A8, A8 = 1 << A8), hA3(Q4, i4, I6, o4, e4, A8, g7, n3[B4 + 8 >> 2], n3[B4 + 4 >> 2], B4 + 16 | 0, 32) || (A8 = gA3(r4, a4, C4), t3[0 | (g7 = A8 + C4 | 0)] = 36, g7 = bg(g7 = g7 + 1 | 0, (I6 = A8 + 102 | 0) - g7 | 0, B4 + 16 | 0), pI(B4 + 16 | 0, 32), !g7 | g7 >>> 0 >= I6 >>> 0 || (t3[0 | g7] = 0, _4 = A8)))), u3 = B4 + 48 | 0, _4;
                    }
                    function XA(A8, g7) {
                      var I6, a4, r4 = 0;
                      u3 = I6 = u3 - 288 | 0, P3(a4 = A8 + 40 | 0, g7), gt(r4 = A8 + 80 | 0), H3(I6 + 240 | 0, a4), F3(I6 + 192 | 0, I6 + 240 | 0, 2128), ZA(I6 + 240 | 0, I6 + 240 | 0, r4), jA(I6 + 192 | 0, I6 + 192 | 0, r4), H3(I6 + 144 | 0, I6 + 192 | 0), F3(I6 + 144 | 0, I6 + 144 | 0, I6 + 192 | 0), H3(A8, I6 + 144 | 0), F3(A8, A8, I6 + 192 | 0), F3(A8, A8, I6 + 240 | 0), eA3(A8, A8), F3(A8, A8, I6 + 144 | 0), F3(A8, A8, I6 + 240 | 0), H3(I6 + 96 | 0, A8), F3(I6 + 96 | 0, I6 + 96 | 0, I6 + 192 | 0), ZA(I6 + 48 | 0, I6 + 96 | 0, I6 + 240 | 0);
                      A: {
                        if (!Xa(I6 + 48 | 0)) {
                          if (jA(I6, I6 + 96 | 0, I6 + 240 | 0), r4 = -1, !Xa(I6))
                            break A;
                          F3(A8, A8, 2176);
                        }
                        (0 | Ta(A8)) == (o3[g7 + 31 | 0] >>> 7 | 0) && _g(A8, A8), F3(A8 + 120 | 0, A8, a4), r4 = 0;
                      }
                      return u3 = I6 + 288 | 0, r4;
                    }
                    function VA(A8, g7, I6, a4, r4, o4) {
                      var e4;
                      if (u3 = e4 = u3 - 192 | 0, !(!I6 | (g7 - 1 & 255) >>> 0 >= 64 | (a4 - 1 & 255) >>> 0 >= 64))
                        return B3[e4 + 130 >> 1] = 257, t3[e4 + 129 | 0] = a4, t3[e4 + 128 | 0] = g7, er(e4 + 128 | 4), yI(e4 + 128 | 8, 0, 0), n3[e4 + 152 >> 2] = 0, n3[e4 + 156 >> 2] = 0, n3[e4 + 144 >> 2] = 0, n3[e4 + 148 >> 2] = 0, r4 ? WA(e4 + 128 | 0, r4) : (n3[e4 + 168 >> 2] = 0, n3[e4 + 172 >> 2] = 0, n3[e4 + 160 >> 2] = 0, n3[e4 + 164 >> 2] = 0), o4 ? TA(e4 + 128 | 0, o4) : (n3[e4 + 184 >> 2] = 0, n3[e4 + 188 >> 2] = 0, n3[e4 + 176 >> 2] = 0, n3[e4 + 180 >> 2] = 0), $A(A8, e4 + 128 | 0), DA3(a4 + e4 | 0, 0, 128 - a4 | 0), uA3(g7 = A8, A8 = gA3(e4, I6, a4), 128, 0), pI(A8, 128), u3 = A8 + 192 | 0, 0;
                      yr(), c3();
                    }
                    function WA(A8, g7) {
                      var I6, a4 = 0;
                      a4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, I6 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, t3[A8 + 32 | 0] = I6, t3[A8 + 33 | 0] = I6 >>> 8, t3[A8 + 34 | 0] = I6 >>> 16, t3[A8 + 35 | 0] = I6 >>> 24, t3[A8 + 36 | 0] = a4, t3[A8 + 37 | 0] = a4 >>> 8, t3[A8 + 38 | 0] = a4 >>> 16, t3[A8 + 39 | 0] = a4 >>> 24, a4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, g7 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, t3[A8 + 40 | 0] = g7, t3[A8 + 41 | 0] = g7 >>> 8, t3[A8 + 42 | 0] = g7 >>> 16, t3[A8 + 43 | 0] = g7 >>> 24, t3[A8 + 44 | 0] = a4, t3[A8 + 45 | 0] = a4 >>> 8, t3[A8 + 46 | 0] = a4 >>> 16, t3[A8 + 47 | 0] = a4 >>> 24;
                    }
                    function TA(A8, g7) {
                      var I6, a4 = 0;
                      a4 = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, I6 = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, t3[A8 + 48 | 0] = I6, t3[A8 + 49 | 0] = I6 >>> 8, t3[A8 + 50 | 0] = I6 >>> 16, t3[A8 + 51 | 0] = I6 >>> 24, t3[A8 + 52 | 0] = a4, t3[A8 + 53 | 0] = a4 >>> 8, t3[A8 + 54 | 0] = a4 >>> 16, t3[A8 + 55 | 0] = a4 >>> 24, a4 = o3[g7 + 12 | 0] | o3[g7 + 13 | 0] << 8 | o3[g7 + 14 | 0] << 16 | o3[g7 + 15 | 0] << 24, g7 = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24, t3[A8 + 56 | 0] = g7, t3[A8 + 57 | 0] = g7 >>> 8, t3[A8 + 58 | 0] = g7 >>> 16, t3[A8 + 59 | 0] = g7 >>> 24, t3[A8 + 60 | 0] = a4, t3[A8 + 61 | 0] = a4 >>> 8, t3[A8 + 62 | 0] = a4 >>> 16, t3[A8 + 63 | 0] = a4 >>> 24;
                    }
                    function ZA(A8, g7, I6) {
                      var a4, r4, t4, B4, o4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4;
                      a4 = n3[I6 + 4 >> 2], r4 = n3[g7 + 4 >> 2], t4 = n3[I6 + 8 >> 2], B4 = n3[g7 + 8 >> 2], o4 = n3[I6 + 12 >> 2], e4 = n3[g7 + 12 >> 2], Q4 = n3[I6 + 16 >> 2], C4 = n3[g7 + 16 >> 2], c4 = n3[I6 + 20 >> 2], i4 = n3[g7 + 20 >> 2], _4 = n3[I6 + 24 >> 2], s4 = n3[g7 + 24 >> 2], y4 = n3[I6 + 28 >> 2], E4 = n3[g7 + 28 >> 2], p4 = n3[I6 + 32 >> 2], u4 = n3[g7 + 32 >> 2], f4 = n3[I6 + 36 >> 2], l4 = n3[g7 + 36 >> 2], n3[A8 >> 2] = n3[g7 >> 2] - n3[I6 >> 2], n3[A8 + 36 >> 2] = l4 - f4, n3[A8 + 32 >> 2] = u4 - p4, n3[A8 + 28 >> 2] = E4 - y4, n3[A8 + 24 >> 2] = s4 - _4, n3[A8 + 20 >> 2] = i4 - c4, n3[A8 + 16 >> 2] = C4 - Q4, n3[A8 + 12 >> 2] = e4 - o4, n3[A8 + 8 >> 2] = B4 - t4, n3[A8 + 4 >> 2] = r4 - a4;
                    }
                    function jA(A8, g7, I6) {
                      var a4, r4, t4, B4, o4, e4, Q4, C4, c4, i4, _4, s4, y4, E4, p4, u4, f4, l4;
                      a4 = n3[I6 + 4 >> 2], r4 = n3[g7 + 4 >> 2], t4 = n3[I6 + 8 >> 2], B4 = n3[g7 + 8 >> 2], o4 = n3[I6 + 12 >> 2], e4 = n3[g7 + 12 >> 2], Q4 = n3[I6 + 16 >> 2], C4 = n3[g7 + 16 >> 2], c4 = n3[I6 + 20 >> 2], i4 = n3[g7 + 20 >> 2], _4 = n3[I6 + 24 >> 2], s4 = n3[g7 + 24 >> 2], y4 = n3[I6 + 28 >> 2], E4 = n3[g7 + 28 >> 2], p4 = n3[I6 + 32 >> 2], u4 = n3[g7 + 32 >> 2], f4 = n3[I6 + 36 >> 2], l4 = n3[g7 + 36 >> 2], n3[A8 >> 2] = n3[I6 >> 2] + n3[g7 >> 2], n3[A8 + 36 >> 2] = f4 + l4, n3[A8 + 32 >> 2] = p4 + u4, n3[A8 + 28 >> 2] = y4 + E4, n3[A8 + 24 >> 2] = _4 + s4, n3[A8 + 20 >> 2] = c4 + i4, n3[A8 + 16 >> 2] = Q4 + C4, n3[A8 + 12 >> 2] = o4 + e4, n3[A8 + 8 >> 2] = t4 + B4, n3[A8 + 4 >> 2] = a4 + r4;
                    }
                    function zA(A8, g7, I6, a4, r4, t4) {
                      var B4, o4 = 0;
                      if (u3 = B4 = u3 - 496 | 0, RA(B4 + 288 | 0, A8, g7), jr(B4 + 288 | 0, I6, a4, 0), t4)
                        for (a4 = 0; dI(B4 + 76 | 0, o4 = o4 + 1 | 0), gA3(B4 + 80 | 0, B4 + 288 | 0, 208), jr(B4 + 80 | 0, B4 + 76 | 0, 4, 0), vI(B4 + 80 | 0, B4 + 32 | 0), A8 = n3[B4 + 60 >> 2], n3[B4 + 24 >> 2] = n3[B4 + 56 >> 2], n3[B4 + 28 >> 2] = A8, A8 = n3[B4 + 52 >> 2], n3[B4 + 16 >> 2] = n3[B4 + 48 >> 2], n3[B4 + 20 >> 2] = A8, A8 = n3[B4 + 44 >> 2], n3[B4 + 8 >> 2] = n3[B4 + 40 >> 2], n3[B4 + 12 >> 2] = A8, A8 = n3[B4 + 36 >> 2], n3[B4 >> 2] = n3[B4 + 32 >> 2], n3[B4 + 4 >> 2] = A8, gA3(a4 + r4 | 0, B4, (A8 = t4 - a4 | 0) >>> 0 < 32 ? A8 : 32), t4 >>> 0 > (a4 = o4 << 5) >>> 0; )
                          ;
                      pI(B4 + 288 | 0, 208), u3 = B4 + 496 | 0;
                    }
                    function OA(A8) {
                      var g7, I6 = 0, a4 = 0, r4 = 0, B4 = 0;
                      for (t3[11 + (g7 = u3 - 16 | 0) | 0] = 0, t3[g7 + 12 | 0] = 0, t3[g7 + 13 | 0] = 0, t3[g7 + 14 | 0] = 0, n3[g7 + 8 >> 2] = 0; ; ) {
                        for (r4 = o3[A8 + a4 | 0], I6 = 0; t3[0 | (B4 = (g7 + 8 | 0) + I6 | 0)] = o3[0 | B4] | r4 ^ o3[(3232 + (I6 << 5) | 0) + a4 | 0], (0 | (I6 = I6 + 1 | 0)) != 7; )
                          ;
                        if ((0 | (a4 = a4 + 1 | 0)) == 31)
                          break;
                      }
                      for (a4 = 127 & o3[A8 + 31 | 0], A8 = 0, I6 = 0; t3[0 | (r4 = (g7 + 8 | 0) + I6 | 0)] = o3[0 | r4] | a4 ^ o3[3263 + (I6 << 5) | 0], (0 | (I6 = I6 + 1 | 0)) != 7; )
                        ;
                      for (I6 = 0; I6 = o3[(g7 + 8 | 0) + A8 | 0] - 1 | I6, (0 | (A8 = A8 + 1 | 0)) != 7; )
                        ;
                      return I6 >>> 8 & 1;
                    }
                    function $A(A8, g7) {
                      var I6 = 0, a4 = 0, r4 = 0, B4 = 0, n4 = 0;
                      for (DA3(gA3(A8, 1952, 64) - -64 | 0, 0, 293); r4 = a4 = (I6 = B4 << 3) + A8 | 0, I6 = g7 + I6 | 0, n4 = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, a4 = (o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24) ^ (o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24), I6 = (o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24) ^ n4, t3[0 | r4] = I6, t3[r4 + 1 | 0] = I6 >>> 8, t3[r4 + 2 | 0] = I6 >>> 16, t3[r4 + 3 | 0] = I6 >>> 24, t3[r4 + 4 | 0] = a4, t3[r4 + 5 | 0] = a4 >>> 8, t3[r4 + 6 | 0] = a4 >>> 16, t3[r4 + 7 | 0] = a4 >>> 24, (0 | (B4 = B4 + 1 | 0)) != 8; )
                        ;
                    }
                    function Ag(A8, g7, I6, a4, r4) {
                      var t4, B4 = 0;
                      u3 = t4 = u3 + -64 | 0;
                      A: {
                        g: {
                          if (B4 = !I6, (I6 = cg(A8)) >>> 0 < 128 && B4) {
                            if (n3[t4 + 56 >> 2] = 0, n3[t4 + 48 >> 2] = 0, n3[t4 + 52 >> 2] = 0, n3[t4 + 40 >> 2] = 0, n3[t4 + 44 >> 2] = 0, B4 = function(A9) {
                              var g8 = 0, I7 = 0;
                              return g8 = 0, A9 && (I7 = A9, g8 = A9, (1 | A9) >>> 0 < 65536 || (g8 = I7)), I7 = g8, !(A9 = k3(g8)) | !(3 & o3[A9 - 4 | 0]) || DA3(A9, 0, I7), A9;
                            }(I6))
                              break g;
                          } else
                            n3[9184] = 28;
                          A8 = -1;
                          break A;
                        }
                        n3[t4 + 32 >> 2] = 0, n3[t4 + 36 >> 2] = 0, n3[t4 + 8 >> 2] = B4, n3[t4 + 16 >> 2] = B4, n3[t4 + 20 >> 2] = I6, n3[t4 >> 2] = B4, n3[t4 + 12 >> 2] = I6, n3[t4 + 24 >> 2] = 0, n3[t4 + 28 >> 2] = 0, n3[t4 + 4 >> 2] = I6, rA3(t4, A8, r4) ? (n3[9184] = 28, A8 = -1) : (A8 = 1, (0 | g7) == n3[t4 + 40 >> 2] && (A8 = n3[t4 + 44 >> 2] != (a4 >>> 10 | 0))), U3(B4);
                      }
                      return u3 = t4 - -64 | 0, A8;
                    }
                    function gg(A8, g7) {
                      var I6, a4 = 0, r4 = 0, B4 = 0, C4 = 0;
                      if (u3 = I6 = u3 - 48 | 0, !((a4 = UA2(A8)) || (a4 = -26, g7 - 1 >>> 0 > 1 || (B4 = n3[A8 + 44 >> 2], a4 = n3[A8 + 48 >> 2], n3[I6 >> 2] = 0, r4 = n3[A8 + 40 >> 2], n3[I6 + 28 >> 2] = a4, n3[I6 + 12 >> 2] = -1, n3[I6 + 8 >> 2] = r4, a4 = ((r4 = B4 >>> 0 < (r4 = a4 << 3) >>> 0 ? r4 : B4) >>> 0) / ((B4 = a4 << 2) >>> 0) | 0, n3[I6 + 20 >> 2] = a4, n3[I6 + 24 >> 2] = a4 << 2, n3[I6 + 16 >> 2] = Q3(a4, B4), a4 = n3[A8 + 52 >> 2], n3[I6 + 36 >> 2] = g7, n3[I6 + 32 >> 2] = a4, a4 = function(A9, g8) {
                        var I7, a5 = 0;
                        return u3 = I7 = u3 - 80 | 0, a5 = -25, !A9 | !g8 || (a5 = k3(n3[A9 + 20 >> 2] << 3), n3[A9 + 4 >> 2] = a5, a5 ? (a5 = function(A10, g9) {
                          var I8, a6 = 0, r5 = 0;
                          u3 = I8 = u3 - 16 | 0, r5 = -22;
                          A:
                            if (!(!A10 | !g9) && (((a6 = g9 << 10) >>> 0) / (g9 >>> 0) | 0) == 1024 && (g9 = k3(12), n3[A10 >> 2] = g9, g9)) {
                              n3[g9 >> 2] = 0, n3[g9 + 4 >> 2] = 0, g9 = Ia(I8 + 12 | 0, a6), n3[9184] = g9;
                              g: {
                                if (g9)
                                  n3[I8 + 12 >> 2] = 0;
                                else if (g9 = n3[I8 + 12 >> 2])
                                  break g;
                                U3(n3[A10 >> 2]), n3[A10 >> 2] = 0;
                                break A;
                              }
                              n3[n3[A10 >> 2] >> 2] = g9, n3[n3[A10 >> 2] + 4 >> 2] = g9, n3[n3[A10 >> 2] + 8 >> 2] = a6, r5 = 0;
                            }
                          return u3 = I8 + 16 | 0, r5;
                        }(A9, n3[A9 + 16 >> 2])) ? _I(A9, n3[g8 + 56 >> 2]) : (function(A10, g9, I8) {
                          var a6, r5 = 0;
                          a6 = r5 = u3, u3 = r5 = r5 - 448 & -64, !A10 | !g9 || (Wg(r5 - -64 | 0, 0, 0, 64), La(r5 + 60 | 0, n3[g9 + 48 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), La(r5 + 60 | 0, n3[g9 + 4 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), La(r5 + 60 | 0, n3[g9 + 44 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), La(r5 + 60 | 0, n3[g9 + 40 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), La(r5 + 60 | 0, 19), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), La(r5 + 60 | 0, I8), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), La(r5 + 60 | 0, n3[g9 + 12 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), (I8 = n3[g9 + 8 >> 2]) && (At(r5 - -64 | 0, I8, n3[g9 + 12 >> 2], 0), 1 & t3[g9 + 56 | 0] && (pI(n3[g9 + 8 >> 2], n3[g9 + 12 >> 2]), n3[g9 + 12 >> 2] = 0)), La(r5 + 60 | 0, n3[g9 + 20 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), (I8 = n3[g9 + 16 >> 2]) && At(r5 - -64 | 0, I8, n3[g9 + 20 >> 2], 0), La(r5 + 60 | 0, n3[g9 + 28 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), (I8 = n3[g9 + 24 >> 2]) && (At(r5 - -64 | 0, I8, n3[g9 + 28 >> 2], 0), 2 & o3[g9 + 56 | 0] && (pI(n3[g9 + 24 >> 2], n3[g9 + 28 >> 2]), n3[g9 + 28 >> 2] = 0)), La(r5 + 60 | 0, n3[g9 + 36 >> 2]), At(r5 - -64 | 0, r5 + 60 | 0, 4, 0), (I8 = n3[g9 + 32 >> 2]) && At(r5 - -64 | 0, I8, n3[g9 + 36 >> 2], 0), OI(r5 - -64 | 0, A10, 64)), u3 = a6;
                        }(I7, g8, n3[A9 + 36 >> 2]), pI(I7 - -64 | 0, 8), function(A10, g9) {
                          var I8, a6 = 0, r5 = 0, t4 = 0;
                          if (u3 = I8 = u3 - 1024 | 0, n3[g9 + 28 >> 2])
                            for (t4 = A10 + 68 | 0, r5 = A10 - -64 | 0; La(r5, 0), La(t4, a6), V3(I8, 1024, A10, 72), Ng(n3[n3[g9 >> 2] + 4 >> 2] + (Q3(n3[g9 + 24 >> 2], a6) << 10) | 0, I8), La(r5, 1), V3(I8, 1024, A10, 72), Ng(1024 + (n3[n3[g9 >> 2] + 4 >> 2] + (Q3(n3[g9 + 24 >> 2], a6) << 10) | 0) | 0, I8), (a6 = a6 + 1 | 0) >>> 0 < e3[g9 + 28 >> 2]; )
                              ;
                          pI(I8, 1024), u3 = I8 + 1024 | 0;
                        }(I7, A9), pI(I7, 72), a5 = 0) : a5 = -22), u3 = I7 + 80 | 0, a5;
                      }(I6, A8))))) {
                        if (n3[I6 + 8 >> 2])
                          for (; og(I6, C4), (C4 = C4 + 1 | 0) >>> 0 < e3[I6 + 8 >> 2]; )
                            ;
                        !function(A9, g8) {
                          var I7, a5 = 0, r5 = 0;
                          if (u3 = I7 = u3 - 2048 | 0, !(!A9 | !g8)) {
                            if (yt(I7 + 1024 | 0, (n3[n3[g8 >> 2] + 4 >> 2] + (n3[g8 + 24 >> 2] << 10) | 0) - 1024 | 0), e3[g8 + 28 >> 2] >= 2)
                              for (a5 = 1; r5 = n3[g8 + 24 >> 2], Og(I7 + 1024 | 0, (n3[n3[g8 >> 2] + 4 >> 2] + (r5 + Q3(a5, r5) << 10) | 0) - 1024 | 0), (a5 = a5 + 1 | 0) >>> 0 < e3[g8 + 28 >> 2]; )
                                ;
                            !function(A10, g9) {
                              for (var I8 = 0, a6 = 0; yI((I8 = a6 << 3) + A10 | 0, n3[(I8 = g9 + I8 | 0) >> 2], n3[I8 + 4 >> 2]), (0 | (a6 = a6 + 1 | 0)) != 128; )
                                ;
                            }(I7, I7 + 1024 | 0), V3(n3[A9 >> 2], n3[A9 + 4 >> 2], I7, 1024), pI(I7 + 1024 | 0, 1024), pI(I7, 1024), _I(g8, n3[A9 + 56 >> 2]);
                          }
                          u3 = I7 + 2048 | 0;
                        }(A8, I6), a4 = 0;
                      }
                      return u3 = I6 + 48 | 0, a4;
                    }
                    function Ig(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4, c4) {
                      var i4, _4;
                      return u3 = i4 = u3 + -64 | 0, (_4 = k3(e4)) ? (n3[i4 + 32 >> 2] = 0, n3[i4 + 36 >> 2] = 0, n3[i4 + 24 >> 2] = 0, n3[i4 + 28 >> 2] = 0, n3[i4 + 20 >> 2] = B4, n3[i4 + 16 >> 2] = t4, n3[i4 + 12 >> 2] = r4, n3[i4 + 8 >> 2] = a4, n3[i4 + 4 >> 2] = e4, n3[i4 >> 2] = _4, n3[i4 + 56 >> 2] = 0, n3[i4 + 52 >> 2] = I6, n3[i4 + 48 >> 2] = I6, n3[i4 + 44 >> 2] = g7, n3[i4 + 40 >> 2] = A8, (I6 = gg(i4, c4)) ? pI(_4, e4) : !Q4 | !C4 || !X3(Q4, C4, i4, c4) ? (o4 && gA3(o4, _4, e4), pI(_4, e4), I6 = 0) : (pI(_4, e4), pI(Q4, C4), I6 = -31), U3(_4)) : I6 = -22, u3 = i4 - -64 | 0, I6;
                    }
                    function ag(A8, g7, I6, a4, r4, B4) {
                      var n4, e4, C4 = 0, c4 = 0, i4 = 0;
                      return u3 = n4 = u3 - 592 | 0, C4 = -1, II(e4 = A8 + 32 | 0) && (OA(A8) || QI(r4) && (OA(r4) || XA(n4 + 128 | 0, r4) || (Mr(n4 + 384 | 0, B4), IA3(n4 + 384 | 0, A8, 32, 0), IA3(n4 + 384 | 0, r4, 32, 0), IA3(n4 + 384 | 0, g7, I6, a4), LI(n4 + 384 | 0, n4 + 320 | 0), G3(n4 + 320 | 0), function(A9, g8, I7, a5) {
                        var r5;
                        u3 = r5 = u3 - 2272 | 0, MA(r5 + 2016 | 0, g8), MA(r5 + 1760 | 0, a5), $I(r5 + 480 | 0, I7), Ka(r5 + 320 | 0, I7), UI(r5, r5 + 320 | 0), Jg(r5 + 320 | 0, r5, r5 + 480 | 0), UI(r5 + 160 | 0, r5 + 320 | 0), $I(g8 = r5 + 640 | 0, r5 + 160 | 0), Jg(r5 + 320 | 0, r5, g8), UI(r5 + 160 | 0, r5 + 320 | 0), $I(g8 = r5 + 800 | 0, r5 + 160 | 0), Jg(r5 + 320 | 0, r5, g8), UI(r5 + 160 | 0, r5 + 320 | 0), $I(g8 = r5 + 960 | 0, r5 + 160 | 0), Jg(r5 + 320 | 0, r5, g8), UI(r5 + 160 | 0, r5 + 320 | 0), $I(g8 = r5 + 1120 | 0, r5 + 160 | 0), Jg(r5 + 320 | 0, r5, g8), UI(r5 + 160 | 0, r5 + 320 | 0), $I(g8 = r5 + 1280 | 0, r5 + 160 | 0), Jg(r5 + 320 | 0, r5, g8), UI(r5 + 160 | 0, r5 + 320 | 0), $I(g8 = r5 + 1440 | 0, r5 + 160 | 0), Jg(r5 + 320 | 0, r5, g8), UI(r5 + 160 | 0, r5 + 320 | 0), $I(r5 + 1600 | 0, r5 + 160 | 0), wt(A9), gt(A9 + 40 | 0), gt(A9 + 80 | 0), a5 = 255;
                        A: {
                          for (; ; ) {
                            if (!(o3[(I7 = a5) + (r5 + 2016 | 0) | 0] | o3[(r5 + 1760 | 0) + I7 | 0])) {
                              if (a5 = I7 - 1 | 0, I7)
                                continue;
                              break A;
                            }
                            break;
                          }
                          if (!((0 | I7) < 0))
                            for (; Tg(r5 + 320 | 0, A9), (0 | (I7 = t3[(g8 = I7) + (r5 + 2016 | 0) | 0])) >= 1 ? (UI(r5 + 160 | 0, r5 + 320 | 0), Jg(r5 + 320 | 0, r5 + 160 | 0, (r5 + 480 | 0) + Q3((254 & I7) >>> 1 | 0, 160) | 0)) : (0 | I7) > -1 || (UI(r5 + 160 | 0, r5 + 320 | 0), Yg(r5 + 320 | 0, r5 + 160 | 0, (r5 + 480 | 0) + Q3((0 - I7 & 254) >>> 1 | 0, 160) | 0)), (0 | (I7 = t3[g8 + (r5 + 1760 | 0) | 0])) >= 1 ? (UI(r5 + 160 | 0, r5 + 320 | 0), qg(r5 + 320 | 0, r5 + 160 | 0, Q3((254 & I7) >>> 1 | 0, 120) + 2272 | 0)) : (0 | I7) > -1 || (UI(r5 + 160 | 0, r5 + 320 | 0), Lg(r5 + 320 | 0, r5 + 160 | 0, Q3((0 - I7 & 254) >>> 1 | 0, 120) + 2272 | 0)), ia(A9, r5 + 320 | 0), I7 = g8 - 1 | 0, (0 | g8) > 0; )
                              ;
                        }
                        u3 = r5 + 2272 | 0;
                      }(n4 + 8 | 0, n4 + 320 | 0, n4 + 128 | 0, e4), gI(n4 + 288 | 0, n4 + 8 | 0), c4 = -1, i4 = Yr(n4 + 288 | 0, A8), C4 = ((n4 + 288 | 0) == (0 | A8) ? c4 : i4) | Kg(A8, n4 + 288 | 0, 32)))), u3 = n4 + 592 | 0, C4;
                    }
                    function rg(A8, g7, I6, a4) {
                      var r4 = 0, t4 = 0;
                      A:
                        if (n3[g7 >> 2])
                          t4 = n3[A8 + 24 >> 2], r4 = n3[A8 + 20 >> 2], a4 = a4 ? n3[g7 + 12 >> 2] + (t4 + (-1 ^ r4) | 0) | 0 : (t4 - r4 | 0) - !n3[g7 + 12 >> 2] | 0, t4 = 0, (0 | (g7 = o3[g7 + 8 | 0])) != 3 && (t4 = Q3(r4, g7 + 1 | 0));
                        else {
                          if (!(r4 = o3[g7 + 8 | 0])) {
                            a4 = n3[g7 + 12 >> 2] - 1 | 0, t4 = 0;
                            break A;
                          }
                          if (r4 = Q3(r4, n3[A8 + 20 >> 2]), g7 = n3[g7 + 12 >> 2], a4) {
                            a4 = (g7 + r4 | 0) - 1 | 0, t4 = 0;
                            break A;
                          }
                          a4 = r4 - !g7 | 0, t4 = 0;
                        }
                      return g7 = t4 + (r4 = a4 - 1 | 0) | 0, Wr(I6, 0, I6, 0), Wr(a4, 0, h3, 0), BA3(g7 - (I6 = h3) | 0, (g7 >>> 0 < r4 >>> 0) - (g7 >>> 0 < I6 >>> 0) | 0, n3[A8 + 24 >> 2]), h3 = l3, f3;
                    }
                    function tg(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4) {
                      var Q4;
                      return u3 = Q4 = u3 - 352 | 0, Ra(Q4 + 32 | 0, 64, 0, o4, e4), wr(Q4 + 96 | 0, Q4 + 32 | 0), pI(Q4 + 32 | 0, 64), Sr(Q4 + 96 | 0, t4, B4, n4), Sr(Q4 + 96 | 0, 34928, 0 - B4 & 15, 0), Sr(Q4 + 96 | 0, g7, I6, a4), Sr(Q4 + 96 | 0, 34928, 0 - I6 & 15, 0), yI(Q4 + 24 | 0, B4, n4), Sr(Q4 + 96 | 0, Q4 + 24 | 0, 8, 0), yI(Q4 + 24 | 0, I6, a4), Sr(Q4 + 96 | 0, Q4 + 24 | 0, 8, 0), Dr(Q4 + 96 | 0, Q4), pI(Q4 + 96 | 0, 256), r4 = Jr(Q4, r4), pI(Q4, 16), A8 && (r4 ? (DA3(A8, 0, I6), r4 = -1) : (Zg(A8, g7, I6, a4, o4, 1, e4), r4 = 0)), u3 = Q4 + 352 | 0, r4;
                    }
                    function Bg(A8, g7, I6) {
                      var a4, r4;
                      u3 = a4 = u3 - 160 | 0, r4 = nt(I6), gt(A8), gt(A8 + 40 | 0), gt(A8 + 80 | 0), wt(A8 + 120 | 0), pa(A8, g7, Vr(I6 = I6 - ((0 - r4 & I6) << 1) << 24 >> 24, 1)), pa(A8, g7 + 160 | 0, Vr(I6, 2)), pa(A8, g7 + 320 | 0, Vr(I6, 3)), pa(A8, g7 + 480 | 0, Vr(I6, 4)), pa(A8, g7 + 640 | 0, Vr(I6, 5)), pa(A8, g7 + 800 | 0, Vr(I6, 6)), pa(A8, g7 + 960 | 0, Vr(I6, 7)), pa(A8, g7 + 1120 | 0, Vr(I6, 8)), ug(a4, A8 + 40 | 0), ug(a4 + 40 | 0, A8), ug(a4 + 80 | 0, A8 + 80 | 0), _g(a4 + 120 | 0, A8 + 120 | 0), pa(A8, a4, r4), u3 = a4 + 160 | 0;
                    }
                    function ng(A8, g7, I6, a4) {
                      var r4;
                      if (u3 = r4 = u3 + -64 | 0, (g7 - 1 & 255) >>> 0 < 64)
                        return t3[r4 + 3 | 0] = 1, t3[r4 + 1 | 0] = 0, t3[r4 + 2 | 0] = 1, t3[0 | r4] = g7, er(4 | r4), yI(8 | r4, 0, 0), n3[r4 + 24 >> 2] = 0, n3[r4 + 28 >> 2] = 0, n3[r4 + 16 >> 2] = 0, n3[r4 + 20 >> 2] = 0, I6 ? WA(r4, I6) : (n3[r4 + 40 >> 2] = 0, n3[r4 + 44 >> 2] = 0, n3[r4 + 32 >> 2] = 0, n3[r4 + 36 >> 2] = 0), a4 ? TA(r4, a4) : (n3[r4 + 56 >> 2] = 0, n3[r4 + 60 >> 2] = 0, n3[r4 + 48 >> 2] = 0, n3[r4 + 52 >> 2] = 0), $A(A8, r4), u3 = r4 - -64 | 0, 0;
                      yr(), c3();
                    }
                    function og(A8, g7) {
                      var I6, a4 = 0, r4 = 0, B4 = 0;
                      if (u3 = I6 = u3 - 32 | 0, !(!A8 | !n3[A8 + 28 >> 2]))
                        for (n3[I6 + 16 >> 2] = g7, a4 = 1; ; ) {
                          if (t3[I6 + 24 | 0] = r4, g7 = 0, B4 = 0, a4)
                            for (; n3[I6 + 28 >> 2] = 0, a4 = n3[I6 + 28 >> 2], n3[I6 + 8 >> 2] = n3[I6 + 24 >> 2], n3[I6 + 12 >> 2] = a4, n3[I6 + 20 >> 2] = g7, a4 = n3[I6 + 20 >> 2], n3[I6 >> 2] = n3[I6 + 16 >> 2], n3[I6 + 4 >> 2] = a4, cA3(A8, I6), (g7 = g7 + 1 | 0) >>> 0 < (B4 = n3[A8 + 28 >> 2]) >>> 0; )
                              ;
                          if (a4 = B4, (0 | (r4 = r4 + 1 | 0)) == 4)
                            break;
                        }
                      u3 = I6 + 32 | 0;
                    }
                    function eg(A8, g7, I6) {
                      var a4, r4;
                      return u3 = a4 = u3 - 288 | 0, H3(a4 + 240 | 0, I6), F3(a4 + 240 | 0, a4 + 240 | 0, I6), H3(A8, a4 + 240 | 0), F3(A8, A8, I6), F3(A8, A8, g7), eA3(A8, A8), F3(A8, A8, a4 + 240 | 0), F3(A8, A8, g7), H3(a4 + 192 | 0, A8), F3(a4 + 192 | 0, a4 + 192 | 0, I6), ZA(a4 + 144 | 0, a4 + 192 | 0, g7), jA(a4 + 96 | 0, a4 + 192 | 0, g7), F3(a4 + 48 | 0, g7, 2176), jA(a4 + 48 | 0, a4 + 192 | 0, a4 + 48 | 0), I6 = Xa(a4 + 144 | 0), g7 = Xa(a4 + 96 | 0), r4 = Xa(a4 + 48 | 0), F3(a4, A8, 2176), NA(A8, a4, g7 | r4), Qt(A8, A8), u3 = a4 + 288 | 0, g7 | I6;
                    }
                    function Qg(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      var c4;
                      return u3 = c4 = u3 - 336 | 0, Ra(c4 + 16 | 0, 64, 0, Q4, C4), wr(c4 + 80 | 0, c4 + 16 | 0), pI(c4 + 16 | 0, 64), Sr(c4 + 80 | 0, B4, o4, e4), Sr(c4 + 80 | 0, 34928, 0 - o4 & 15, 0), Zg(A8, a4, r4, t4, Q4, 1, C4), Sr(c4 + 80 | 0, A8, r4, t4), Sr(c4 + 80 | 0, 34928, 0 - r4 & 15, 0), yI(c4 + 8 | 0, o4, e4), Sr(c4 + 80 | 0, c4 + 8 | 0, 8, 0), yI(c4 + 8 | 0, r4, t4), Sr(c4 + 80 | 0, c4 + 8 | 0, 8, 0), Dr(c4 + 80 | 0, g7), pI(c4 + 80 | 0, 256), I6 && (n3[I6 >> 2] = 16, n3[I6 + 4 >> 2] = 0), u3 = c4 + 336 | 0, 0;
                    }
                    function Cg(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4) {
                      var Q4;
                      return u3 = Q4 = u3 - 352 | 0, da(Q4 + 32 | 0, 64, 0, o4, e4), wr(Q4 + 96 | 0, Q4 + 32 | 0), pI(Q4 + 32 | 0, 64), Sr(Q4 + 96 | 0, t4, B4, n4), yI(Q4 + 24 | 0, B4, n4), Sr(Q4 + 96 | 0, Q4 + 24 | 0, 8, 0), Sr(Q4 + 96 | 0, g7, I6, a4), yI(Q4 + 24 | 0, I6, a4), Sr(Q4 + 96 | 0, Q4 + 24 | 0, 8, 0), Dr(Q4 + 96 | 0, Q4), pI(Q4 + 96 | 0, 256), r4 = Jr(Q4, r4), pI(Q4, 16), A8 && (r4 ? (DA3(A8, 0, I6), r4 = -1) : (aa(A8, g7, I6, a4, o4, 1, 0, e4), r4 = 0)), u3 = Q4 + 352 | 0, r4;
                    }
                    function cg(A8) {
                      var g7 = 0, I6 = 0, a4 = 0;
                      A: {
                        g:
                          if (3 & (g7 = A8)) {
                            if (!o3[0 | A8])
                              return 0;
                            for (; ; ) {
                              if (!(3 & (g7 = g7 + 1 | 0)))
                                break g;
                              if (!o3[0 | g7])
                                break;
                            }
                            break A;
                          }
                        for (; I6 = g7, g7 = g7 + 4 | 0, !((-1 ^ (a4 = n3[I6 >> 2])) & a4 - 16843009 & -2139062144); )
                          ;
                        if (!(255 & a4))
                          return I6 - A8 | 0;
                        for (; a4 = o3[I6 + 1 | 0], I6 = g7 = I6 + 1 | 0, a4; )
                          ;
                      }
                      return g7 - A8 | 0;
                    }
                    function ig(A8, g7) {
                      var I6, a4 = 0, r4 = 0, t4 = 0, B4 = 0, e4 = 0;
                      A:
                        if (!(((I6 = o3[0 | A8]) - 48 & 255) >>> 0 > 9)) {
                          for (r4 = I6, a4 = A8; ; ) {
                            if (B4 = a4, t4 >>> 0 > 429496729)
                              break A;
                            if ((r4 = (255 & r4) - 48 | 0) >>> 0 > (-1 ^ (a4 = Q3(t4, 10))) >>> 0)
                              break A;
                            if (t4 = a4 + r4 | 0, !(((r4 = o3[0 | (a4 = B4 + 1 | 0)]) - 48 & 255) >>> 0 < 10))
                              break;
                          }
                          (0 | A8) == (0 | a4) | ((0 | I6) == 48 ? (0 | A8) != (0 | B4) : 0) || (n3[g7 >> 2] = t4, e4 = a4);
                        }
                      return e4;
                    }
                    function _g(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, Q4, C4;
                      I6 = n3[g7 + 4 >> 2], a4 = n3[g7 + 8 >> 2], r4 = n3[g7 + 12 >> 2], t4 = n3[g7 + 16 >> 2], B4 = n3[g7 + 20 >> 2], o4 = n3[g7 + 24 >> 2], e4 = n3[g7 + 28 >> 2], Q4 = n3[g7 + 32 >> 2], C4 = n3[g7 + 36 >> 2], n3[A8 >> 2] = 0 - n3[g7 >> 2], n3[A8 + 36 >> 2] = 0 - C4, n3[A8 + 32 >> 2] = 0 - Q4, n3[A8 + 28 >> 2] = 0 - e4, n3[A8 + 24 >> 2] = 0 - o4, n3[A8 + 20 >> 2] = 0 - B4, n3[A8 + 16 >> 2] = 0 - t4, n3[A8 + 12 >> 2] = 0 - r4, n3[A8 + 8 >> 2] = 0 - a4, n3[A8 + 4 >> 2] = 0 - I6;
                    }
                    function sg(A8, g7, I6, a4) {
                      var r4, B4 = 0;
                      if (u3 = r4 = u3 - 320 | 0, B4 = -1, QI(I6) && !OA(I6) && !qA(r4, I6) && Va(r4)) {
                        for (I6 = 0; t3[A8 + I6 | 0] = o3[g7 + I6 | 0], (0 | (I6 = I6 + 1 | 0)) != 32; )
                          ;
                        a4 && Cr(A8), t3[A8 + 31 | 0] = 127 & o3[A8 + 31 | 0], AA3(r4 + 160 | 0, A8, r4), gI(A8, r4 + 160 | 0), iI(A8) || (B4 = rI(g7, 32) ? -1 : 0);
                      }
                      return u3 = r4 + 320 | 0, B4;
                    }
                    function yg(A8, g7, I6) {
                      var a4 = 0;
                      a4 = g7 << 8 & 16711680 | g7 << 24, a4 |= 255 & (I6 << 8 | g7 >>> 24) | 65280 & (I6 << 24 | g7 >>> 8), g7 = -16777216 & ((255 & I6) << 24 | g7 >>> 8) | 16711680 & ((16777215 & I6) << 8 | g7 >>> 24) | I6 >>> 8 & 65280 | I6 >>> 24 | 0, t3[0 | A8] = g7, t3[A8 + 1 | 0] = g7 >>> 8, t3[A8 + 2 | 0] = g7 >>> 16, t3[A8 + 3 | 0] = g7 >>> 24, g7 = a4, t3[A8 + 4 | 0] = g7, t3[A8 + 5 | 0] = g7 >>> 8, t3[A8 + 6 | 0] = g7 >>> 16, t3[A8 + 7 | 0] = g7 >>> 24;
                    }
                    function Eg(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      var c4;
                      return u3 = c4 = u3 - 336 | 0, da(c4 + 16 | 0, 64, 0, Q4, C4), wr(c4 + 80 | 0, c4 + 16 | 0), pI(c4 + 16 | 0, 64), Sr(c4 + 80 | 0, B4, o4, e4), yI(c4 + 8 | 0, o4, e4), Sr(c4 + 80 | 0, c4 + 8 | 0, 8, 0), aa(A8, a4, r4, t4, Q4, 1, 0, C4), Sr(c4 + 80 | 0, A8, r4, t4), yI(c4 + 8 | 0, r4, t4), Sr(c4 + 80 | 0, c4 + 8 | 0, 8, 0), Dr(c4 + 80 | 0, g7), pI(c4 + 80 | 0, 256), I6 && (n3[I6 >> 2] = 16, n3[I6 + 4 >> 2] = 0), u3 = c4 + 336 | 0, 0;
                    }
                    function pg(A8, g7, I6) {
                      var a4;
                      a4 = A8, I6 ? (n3[A8 + 48 >> 2] = o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24, I6 = o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24) : (n3[A8 + 48 >> 2] = 0, I6 = 0), n3[a4 + 52 >> 2] = I6, n3[A8 + 56 >> 2] = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, n3[A8 + 60 >> 2] = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24;
                    }
                    function ug(A8, g7) {
                      var I6, a4, r4, t4, B4, o4, e4, Q4, C4;
                      I6 = n3[g7 + 8 >> 2], a4 = n3[g7 + 12 >> 2], r4 = n3[g7 + 16 >> 2], t4 = n3[g7 + 20 >> 2], B4 = n3[g7 + 24 >> 2], o4 = n3[g7 + 28 >> 2], e4 = n3[g7 >> 2], Q4 = n3[g7 + 4 >> 2], C4 = n3[g7 + 36 >> 2], n3[A8 + 32 >> 2] = n3[g7 + 32 >> 2], n3[A8 + 36 >> 2] = C4, n3[A8 + 24 >> 2] = B4, n3[A8 + 28 >> 2] = o4, n3[A8 + 16 >> 2] = r4, n3[A8 + 20 >> 2] = t4, n3[A8 + 8 >> 2] = I6, n3[A8 + 12 >> 2] = a4, n3[A8 >> 2] = e4, n3[A8 + 4 >> 2] = Q4;
                    }
                    function fg(A8, g7, I6, a4, r4, t4, B4, e4, Q4, C4, c4) {
                      var i4;
                      return u3 = i4 = u3 - 48 | 0, n3[i4 + 8 >> 2] = 0, n3[i4 >> 2] = 0, n3[i4 + 4 >> 2] = 0, K3(i4 + 16 | 0, C4, c4, 0), c4 = o3[C4 + 16 | 0] | o3[C4 + 17 | 0] << 8 | o3[C4 + 18 | 0] << 16 | o3[C4 + 19 | 0] << 24, C4 = o3[C4 + 20 | 0] | o3[C4 + 21 | 0] << 8 | o3[C4 + 22 | 0] << 16 | o3[C4 + 23 | 0] << 24, n3[i4 + 4 >> 2] = c4, n3[i4 + 8 >> 2] = C4, function(A9, g8, I7, a5, r5, t5, B5, o4, e5, Q5, C5) {
                        var c5;
                        u3 = c5 = u3 - 336 | 0, Ha(c5 + 16 | 0, 64, 0, Q5, C5), wr(c5 + 80 | 0, c5 + 16 | 0), pI(c5 + 16 | 0, 64), Sr(c5 + 80 | 0, B5, o4, e5), Sr(c5 + 80 | 0, 34944, 0 - o4 & 15, 0), ya(A9, a5, r5, t5, Q5, 1, C5), Sr(c5 + 80 | 0, A9, r5, t5), Sr(c5 + 80 | 0, 34944, 0 - r5 & 15, 0), yI(c5 + 8 | 0, o4, e5), Sr(c5 + 80 | 0, c5 + 8 | 0, 8, 0), yI(c5 + 8 | 0, r5, t5), Sr(c5 + 80 | 0, c5 + 8 | 0, 8, 0), Dr(c5 + 80 | 0, g8), pI(c5 + 80 | 0, 256), I7 && (n3[I7 >> 2] = 16, n3[I7 + 4 >> 2] = 0), u3 = c5 + 336 | 0;
                      }(A8, g7, I6, a4, r4, t4, B4, e4, Q4, i4, i4 + 16 | 0), pI(i4 + 16 | 0, 32), u3 = i4 + 48 | 0, 0;
                    }
                    function lg(A8, g7, I6, a4, r4, t4, B4, e4, Q4, C4) {
                      var c4;
                      return u3 = c4 = u3 - 48 | 0, n3[c4 + 8 >> 2] = 0, n3[c4 >> 2] = 0, n3[c4 + 4 >> 2] = 0, K3(c4 + 16 | 0, Q4, C4, 0), C4 = o3[Q4 + 16 | 0] | o3[Q4 + 17 | 0] << 8 | o3[Q4 + 18 | 0] << 16 | o3[Q4 + 19 | 0] << 24, Q4 = o3[Q4 + 20 | 0] | o3[Q4 + 21 | 0] << 8 | o3[Q4 + 22 | 0] << 16 | o3[Q4 + 23 | 0] << 24, n3[c4 + 4 >> 2] = C4, n3[c4 + 8 >> 2] = Q4, A8 = function(A9, g8, I7, a5, r5, t5, B5, n4, o4, e5) {
                        var Q5;
                        return u3 = Q5 = u3 - 352 | 0, Ha(Q5 + 32 | 0, 64, 0, o4, e5), wr(Q5 + 96 | 0, Q5 + 32 | 0), pI(Q5 + 32 | 0, 64), Sr(Q5 + 96 | 0, t5, B5, n4), Sr(Q5 + 96 | 0, 34944, 0 - B5 & 15, 0), Sr(Q5 + 96 | 0, g8, I7, a5), Sr(Q5 + 96 | 0, 34944, 0 - I7 & 15, 0), yI(Q5 + 24 | 0, B5, n4), Sr(Q5 + 96 | 0, Q5 + 24 | 0, 8, 0), yI(Q5 + 24 | 0, I7, a5), Sr(Q5 + 96 | 0, Q5 + 24 | 0, 8, 0), Dr(Q5 + 96 | 0, Q5), pI(Q5 + 96 | 0, 256), r5 = Jr(Q5, r5), pI(Q5, 16), A9 && (r5 ? (DA3(A9, 0, I7), r5 = -1) : (ya(A9, g8, I7, a5, o4, 1, e5), r5 = 0)), u3 = Q5 + 352 | 0, r5;
                      }(A8, g7, I6, a4, r4, t4, B4, e4, c4, c4 + 16 | 0), pI(c4 + 16 | 0, 32), u3 = c4 + 48 | 0, A8;
                    }
                    function hg(A8) {
                      var g7;
                      return g7 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, A8 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, h3 = 65280 & (A8 << 24 | g7 >>> 8) | 255 & (A8 << 8 | g7 >>> 24) | g7 << 8 & 16711680 | g7 << 24, -16777216 & ((255 & A8) << 24 | g7 >>> 8) | 16711680 & ((16777215 & A8) << 8 | g7 >>> 24) | A8 >>> 8 & 65280 | A8 >>> 24 | 0;
                    }
                    function wg(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      var c4, i4;
                      i4 = g7, c4 = DA3(A8, 0, g7), A8 = 22;
                      A:
                        if (!I6) {
                          if (!(!I6 & g7 >>> 0 < 16)) {
                            if (t4 | e4 | Q4 >>> 0 > 2147483648)
                              break A;
                            if (!(!e4 & o4 >>> 0 < 3 | (0 | C4) != 1 | Q4 >>> 0 < 8192)) {
                              if (A8 = 28, (0 | a4) == (0 | c4))
                                break A;
                              return Ig(o4, Q4 >>> 10 | 0, 1, a4, r4, B4, 16, c4, i4, 0, 0, 1) ? -1 : 0;
                            }
                          }
                          A8 = 28;
                        }
                      return n3[9184] = A8, -1;
                    }
                    function Dg(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      var c4, i4;
                      i4 = g7, c4 = DA3(A8, 0, g7), A8 = 22;
                      A:
                        if (!I6) {
                          if (!(!I6 & g7 >>> 0 < 16)) {
                            if (t4 | e4 | Q4 >>> 0 > 2147483648)
                              break A;
                            if (!(!(o4 | e4) | (0 | C4) != 2 | Q4 >>> 0 < 8192)) {
                              if (A8 = 28, (0 | a4) == (0 | c4))
                                break A;
                              return Ig(o4, Q4 >>> 10 | 0, 1, a4, r4, B4, 16, c4, i4, 0, 0, 2) ? -1 : 0;
                            }
                          }
                          A8 = 28;
                        }
                      return n3[9184] = A8, -1;
                    }
                    function mg(A8, g7, I6, a4) {
                      var r4;
                      if (u3 = r4 = u3 - 192 | 0, !(!I6 | (g7 - 1 & 255) >>> 0 >= 64 | (a4 - 1 & 255) >>> 0 >= 64))
                        return B3[r4 + 130 >> 1] = 257, t3[r4 + 129 | 0] = a4, t3[r4 + 128 | 0] = g7, er(r4 + 128 | 4), yI(r4 + 128 | 8, 0, 0), DA3(r4 + 144 | 0, 0, 48), $A(A8, r4 + 128 | 0), DA3(a4 + r4 | 0, 0, 128 - a4 | 0), uA3(g7 = A8, A8 = gA3(r4, I6, a4), 128, 0), pI(A8, 128), u3 = A8 + 192 | 0, 0;
                      yr(), c3();
                    }
                    function Gg(A8, g7, I6) {
                      n3[A8 + 48 >> 2] = I6 ? o3[0 | I6] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24 : 0, n3[A8 + 52 >> 2] = o3[0 | g7] | o3[g7 + 1 | 0] << 8 | o3[g7 + 2 | 0] << 16 | o3[g7 + 3 | 0] << 24, n3[A8 + 56 >> 2] = o3[g7 + 4 | 0] | o3[g7 + 5 | 0] << 8 | o3[g7 + 6 | 0] << 16 | o3[g7 + 7 | 0] << 24, n3[A8 + 60 >> 2] = o3[g7 + 8 | 0] | o3[g7 + 9 | 0] << 8 | o3[g7 + 10 | 0] << 16 | o3[g7 + 11 | 0] << 24;
                    }
                    function kg(A8, g7, I6, a4, r4, t4, B4) {
                      var o4;
                      return u3 = o4 = u3 - 16 | 0, A8 = DA3(A8, 0, 128), B4 >>> 0 < 2147483649 && !(a4 | t4) ? B4 >>> 0 > 8191 && !t4 & r4 >>> 0 >= 3 | (0 | t4) != 0 ? (fI(o4, 16), A8 = Ig(r4, B4 >>> 10 | 0, 1, g7, I6, o4, 16, 0, 32, A8, 128, 1) ? -1 : 0) : (n3[9184] = 28, A8 = -1) : (n3[9184] = 22, A8 = -1), u3 = o4 + 16 | 0, A8;
                    }
                    function Fg(A8) {
                      var g7;
                      return u3 = g7 = u3 - 288 | 0, H3(g7 + 240 | 0, A8), H3(g7 + 192 | 0, A8 + 40 | 0), H3(g7 + 144 | 0, A8 + 80 | 0), ZA(g7 + 48 | 0, g7 + 192 | 0, g7 + 240 | 0), F3(g7 + 48 | 0, g7 + 48 | 0, g7 + 144 | 0), F3(g7, g7 + 240 | 0, g7 + 192 | 0), F3(g7, g7, 2128), H3(g7 + 96 | 0, g7 + 144 | 0), jA(g7, g7, g7 + 96 | 0), ZA(g7 + 48 | 0, g7 + 48 | 0, g7), A8 = Xa(g7 + 48 | 0), u3 = g7 + 288 | 0, A8;
                    }
                    function bg(A8, g7, I6) {
                      var a4 = 0, r4 = 0, t4 = 0, B4 = 0, n4 = 0;
                      A: {
                        for (; ; ) {
                          if (t4 = 0, a4 = 0, r4 >>> 0 >= 32)
                            break A;
                          for (; B4 = a4 + 8 | 0, t4 = o3[I6 + r4 | 0] << a4 | t4, !((r4 = r4 + 1 | 0) >>> 0 >= 32) && (n4 = a4 >>> 0 < 16, a4 = B4, n4); )
                            ;
                          if (g7 = (a4 = A8 + g7 | 0) - (A8 = aI(A8, g7, t4, B4)) | 0, !A8)
                            break;
                        }
                        A8 = 0;
                      }
                      return A8;
                    }
                    function Hg(A8, g7, I6, a4, r4, t4, B4) {
                      var o4;
                      return u3 = o4 = u3 - 16 | 0, A8 = DA3(A8, 0, 128), B4 >>> 0 < 2147483649 && !(a4 | t4) ? B4 >>> 0 > 8191 && r4 | t4 ? (fI(o4, 16), A8 = Ig(r4, B4 >>> 10 | 0, 1, g7, I6, o4, 16, 0, 32, A8, 128, 2) ? -1 : 0) : (n3[9184] = 28, A8 = -1) : (n3[9184] = 22, A8 = -1), u3 = o4 + 16 | 0, A8;
                    }
                    function dg(A8) {
                      var g7 = 0;
                      return (0 - (g7 = A8 + 4 & (A8 + 65488 >>> 8 ^ -1) & (57 - A8 >>> 8 ^ -1) & 255 | ((g7 = A8 - 65 | 0) >>> 8 ^ -1) & g7 & (90 - A8 >>> 8 ^ -1) & 255 | A8 + 185 & (A8 + 65439 >>> 8 ^ -1) & (122 - A8 >>> 8 ^ -1) & 255 | 63 & (1 + (16288 ^ A8) >>> 8 ^ -1) | 62 & (1 + (16338 ^ A8) >>> 8 ^ -1)) >>> 8 ^ -1) & 1 + (65470 ^ A8) >>> 8 & 255 | g7;
                    }
                    function Sg(A8) {
                      var g7 = 0;
                      return (0 - (g7 = A8 + 4 & (A8 + 65488 >>> 8 ^ -1) & (57 - A8 >>> 8 ^ -1) & 255 | ((g7 = A8 - 65 | 0) >>> 8 ^ -1) & g7 & (90 - A8 >>> 8 ^ -1) & 255 | A8 + 185 & (A8 + 65439 >>> 8 ^ -1) & (122 - A8 >>> 8 ^ -1) & 255 | 63 & (1 + (16336 ^ A8) >>> 8 ^ -1) | 62 & (1 + (16340 ^ A8) >>> 8 ^ -1)) >>> 8 ^ -1) & 1 + (65470 ^ A8) >>> 8 & 255 | g7;
                    }
                    function vg(A8, g7) {
                      var I6, a4, r4 = 0, B4 = 0, n4 = 0, o4 = 0;
                      for (u3 = I6 = u3 - 16 | 0, r4 = 10; o4 = r4, n4 = (g7 >>> 0) / 10 | 0, t3[0 | (B4 = (r4 = r4 - 1 | 0) + (I6 + 6 | 0) | 0)] = g7 - Q3(n4, 10) | 48, !(g7 >>> 0 < 10) && (g7 = n4, r4); )
                        ;
                      a4 = gA3(g7 = A8, B4, A8 = 11 - o4 | 0) + A8 | 0, t3[0 | a4] = 0, u3 = I6 + 16 | 0;
                    }
                    function Ug(A8, g7, I6) {
                      var a4 = 0, r4 = 0, t4 = 0;
                      if (!I6)
                        return 0;
                      A:
                        if (a4 = o3[0 | A8]) {
                          for (; ; ) {
                            if ((0 | (r4 = o3[0 | g7])) == (0 | a4) && !(!(I6 = I6 - 1 | 0) | !r4)) {
                              if (g7 = g7 + 1 | 0, a4 = o3[A8 + 1 | 0], A8 = A8 + 1 | 0, a4)
                                continue;
                              break A;
                            }
                            break;
                          }
                          t4 = a4;
                        }
                      return (255 & t4) - o3[0 | g7] | 0;
                    }
                    function Jg(A8, g7, I6) {
                      var a4, r4, t4, B4 = 0;
                      u3 = r4 = u3 - 48 | 0, jA(A8, B4 = g7 + 40 | 0, g7), ZA(a4 = A8 + 40 | 0, B4, g7), F3(B4 = A8 + 80 | 0, A8, I6), F3(a4, a4, I6 + 40 | 0), F3(t4 = A8 + 120 | 0, I6 + 120 | 0, g7 + 120 | 0), F3(A8, g7 + 80 | 0, I6 + 80 | 0), jA(r4, A8, A8), ZA(A8, B4, a4), jA(a4, B4, a4), jA(B4, r4, t4), ZA(t4, r4, t4), u3 = r4 + 48 | 0;
                    }
                    function Yg(A8, g7, I6) {
                      var a4, r4, t4, B4 = 0;
                      u3 = r4 = u3 - 48 | 0, jA(A8, B4 = g7 + 40 | 0, g7), ZA(a4 = A8 + 40 | 0, B4, g7), F3(B4 = A8 + 80 | 0, A8, I6 + 40 | 0), F3(a4, a4, I6), F3(t4 = A8 + 120 | 0, I6 + 120 | 0, g7 + 120 | 0), F3(A8, g7 + 80 | 0, I6 + 80 | 0), jA(r4, A8, A8), ZA(A8, B4, a4), jA(a4, B4, a4), ZA(B4, r4, t4), jA(t4, r4, t4), u3 = r4 + 48 | 0;
                    }
                    function xg(A8, g7, I6) {
                      A8 |= 0, g7 |= 0, I6 |= 0;
                      var a4, r4 = 0, B4 = 0;
                      if (u3 = a4 = u3 - 16 | 0, t3[a4 + 15 | 0] = 0, B4 = -1, !(0 | Vt[n3[9174]](A8, g7, I6))) {
                        for (; t3[a4 + 15 | 0] = o3[A8 + r4 | 0] | o3[a4 + 15 | 0], (0 | (r4 = r4 + 1 | 0)) != 32; )
                          ;
                        B4 = 0 - (o3[a4 + 15 | 0] - 1 >>> 8 & 1) | 0;
                      }
                      return u3 = a4 + 16 | 0, 0 | B4;
                    }
                    function Ng(A8, g7) {
                      for (var I6 = 0, a4 = 0, r4 = 0, t4 = 0; r4 = (I6 = a4 << 3) + A8 | 0, t4 = o3[0 | (I6 = g7 + I6 | 0)] | o3[I6 + 1 | 0] << 8 | o3[I6 + 2 | 0] << 16 | o3[I6 + 3 | 0] << 24, I6 = o3[I6 + 4 | 0] | o3[I6 + 5 | 0] << 8 | o3[I6 + 6 | 0] << 16 | o3[I6 + 7 | 0] << 24, n3[r4 >> 2] = t4, n3[r4 + 4 >> 2] = I6, (0 | (a4 = a4 + 1 | 0)) != 128; )
                        ;
                    }
                    function Mg(A8) {
                      var g7 = 0;
                      return n3[32 + (A8 |= 0) >> 2] = 0, n3[A8 + 36 >> 2] = 0, g7 = n3[8953], n3[A8 >> 2] = n3[8952], n3[A8 + 4 >> 2] = g7, g7 = n3[8955], n3[A8 + 8 >> 2] = n3[8954], n3[A8 + 12 >> 2] = g7, g7 = n3[8957], n3[A8 + 16 >> 2] = n3[8956], n3[A8 + 20 >> 2] = g7, g7 = n3[8959], n3[A8 + 24 >> 2] = n3[8958], n3[A8 + 28 >> 2] = g7, 0;
                    }
                    function Rg(A8, g7, I6, a4) {
                      var r4, t4 = 0, B4 = 0;
                      if (zI(I6, ((a4 << 7) + A8 | 0) - 64 | 0), r4 = a4 << 1)
                        for (B4 = a4 << 4, a4 = 0; hI(I6, (t4 = a4 << 6) + A8 | 0), $3(I6), zI((a4 << 5) + g7 | 0, I6), hI(I6, (64 | t4) + A8 | 0), $3(I6), zI(((a4 << 3) + B4 << 2) + g7 | 0, I6), r4 >>> 0 > (a4 = a4 + 2 | 0) >>> 0; )
                          ;
                    }
                    function Pg(A8, g7, I6) {
                      var a4;
                      if (n3[12 + (a4 = u3 - 16 | 0) >> 2] = A8, n3[a4 + 8 >> 2] = g7, g7 = 0, n3[a4 + 4 >> 2] = 0, (0 | I6) >= 1)
                        for (; n3[a4 + 4 >> 2] = n3[a4 + 4 >> 2] | o3[n3[a4 + 8 >> 2] + g7 | 0] ^ o3[n3[a4 + 12 >> 2] + g7 | 0], (0 | I6) != (0 | (g7 = g7 + 1 | 0)); )
                          ;
                      return (n3[a4 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function qg(A8, g7, I6) {
                      var a4, r4, t4, B4 = 0;
                      u3 = r4 = u3 - 48 | 0, jA(A8, B4 = g7 + 40 | 0, g7), ZA(a4 = A8 + 40 | 0, B4, g7), F3(B4 = A8 + 80 | 0, A8, I6), F3(a4, a4, I6 + 40 | 0), F3(t4 = A8 + 120 | 0, I6 + 80 | 0, g7 + 120 | 0), jA(r4, g7 = g7 + 80 | 0, g7), ZA(A8, B4, a4), jA(a4, B4, a4), jA(B4, r4, t4), ZA(t4, r4, t4), u3 = r4 + 48 | 0;
                    }
                    function Lg(A8, g7, I6) {
                      var a4, r4, t4, B4 = 0;
                      u3 = r4 = u3 - 48 | 0, jA(A8, B4 = g7 + 40 | 0, g7), ZA(a4 = A8 + 40 | 0, B4, g7), F3(B4 = A8 + 80 | 0, A8, I6 + 40 | 0), F3(a4, a4, I6), F3(t4 = A8 + 120 | 0, I6 + 80 | 0, g7 + 120 | 0), jA(r4, g7 = g7 + 80 | 0, g7), ZA(A8, B4, a4), jA(a4, B4, a4), ZA(B4, r4, t4), jA(t4, r4, t4), u3 = r4 + 48 | 0;
                    }
                    function Kg(A8, g7, I6) {
                      var a4;
                      if (n3[12 + (a4 = u3 - 16 | 0) >> 2] = A8, n3[a4 + 8 >> 2] = g7, g7 = 0, t3[a4 + 7 | 0] = 0, I6)
                        for (; t3[a4 + 7 | 0] = o3[a4 + 7 | 0] | o3[n3[a4 + 8 >> 2] + g7 | 0] ^ o3[n3[a4 + 12 >> 2] + g7 | 0], (0 | I6) != (0 | (g7 = g7 + 1 | 0)); )
                          ;
                      return (o3[a4 + 7 | 0] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function Xg(A8, g7, I6) {
                      var a4, r4 = 0;
                      for (u3 = a4 = u3 - 160 | 0; t3[A8 + r4 | 0] = o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != 32; )
                        ;
                      return I6 && Cr(A8), t3[A8 + 31 | 0] = 127 & o3[A8 + 31 | 0], lA3(a4, A8), gI(A8, a4), r4 = -1, iI(A8) || (r4 = rI(g7, 32) ? -1 : 0), u3 = a4 + 160 | 0, r4;
                    }
                    function Vg(A8, g7) {
                      var I6, a4 = 0, r4 = 0, t4 = 0;
                      u3 = I6 = u3 - 16 | 0;
                      A: {
                        for (; ; ) {
                          if (qa(I6 + 12 | 0, o3[0 | g7])) {
                            g7 = 0, n3[A8 >> 2] = 0;
                            break A;
                          }
                          if (g7 = g7 + 1 | 0, r4 = n3[I6 + 12 >> 2] << a4 | r4, t4 = a4 >>> 0 < 24, a4 = a4 + 6 | 0, !t4)
                            break;
                        }
                        n3[A8 >> 2] = r4;
                      }
                      return u3 = I6 + 16 | 0, g7;
                    }
                    function Wg(A8, g7, I6, a4) {
                      A8 |= 0, g7 |= 0;
                      var r4 = 0;
                      r4 = -1;
                      A:
                        if (!((I6 |= 0) >>> 0 > 64 | (a4 |= 0) - 1 >>> 0 > 63)) {
                          g: {
                            if (!I6 || !g7) {
                              if (!zg(A8, 255 & a4))
                                break g;
                              break A;
                            }
                            if (mg(A8, 255 & a4, g7, 255 & I6))
                              break A;
                          }
                          r4 = 0;
                        }
                      return 0 | r4;
                    }
                    function Tg(A8, g7) {
                      var I6, a4, r4, t4, B4;
                      u3 = a4 = u3 - 48 | 0, H3(A8, g7), H3(I6 = A8 + 80 | 0, B4 = g7 + 40 | 0), b3(t4 = A8 + 120 | 0, g7 + 80 | 0), jA(r4 = A8 + 40 | 0, g7, B4), H3(a4, r4), jA(r4, I6, A8), ZA(I6, I6, A8), ZA(A8, a4, r4), ZA(t4, t4, I6), u3 = a4 + 48 | 0;
                    }
                    function Zg(A8, g7, I6, a4, r4, t4, B4) {
                      var n4 = 0, o4 = 0;
                      return n4 = a4, (((n4 = (o4 = I6 + 63 | 0) >>> 0 < 63 ? n4 + 1 | 0 : n4) >>> 6 | 0) + ((0 | (n4 = (63 & n4) << 26 | o4 >>> 6)) != 0) | 0) == 1 & (o4 = 0 - n4 | 0) >>> 0 < t4 >>> 0 && (yr(), c3()), ya(A8, g7, I6, a4, r4, t4, B4);
                    }
                    function jg(A8) {
                      var g7, I6;
                      return (A8 = (g7 = n3[9167]) + (I6 = A8 + 3 & -4) | 0) >>> 0 <= g7 >>> 0 && (0 | I6) >= 1 || A8 >>> 0 > Wt() << 16 >>> 0 && !(0 | p3(0 | A8)) ? (n3[9184] = 48, -1) : (n3[9167] = A8, g7);
                    }
                    function zg(A8, g7) {
                      var I6;
                      return u3 = I6 = u3 + -64 | 0, (g7 - 1 & 255) >>> 0 >= 64 && (yr(), c3()), t3[I6 + 3 | 0] = 1, t3[I6 + 1 | 0] = 0, t3[I6 + 2 | 0] = 1, t3[0 | I6] = g7, er(4 | I6), yI(8 | I6, 0, 0), DA3(I6 + 16 | 0, 0, 48), $A(A8, I6), u3 = I6 - -64 | 0, 0;
                    }
                    function Og(A8, g7) {
                      for (var I6 = 0, a4 = 0, r4 = 0, t4 = 0; a4 = (I6 = r4 << 3) + A8 | 0, t4 = n3[(I6 = g7 + I6 | 0) >> 2], I6 = n3[a4 + 4 >> 2] ^ n3[I6 + 4 >> 2], n3[a4 >> 2] = n3[a4 >> 2] ^ t4, n3[a4 + 4 >> 2] = I6, (0 | (r4 = r4 + 1 | 0)) != 128; )
                        ;
                    }
                    function $g(A8) {
                      var g7, I6;
                      return 95 & (1 + (32704 ^ A8) >>> 8 ^ -1) | 45 & (1 + (16321 ^ A8) >>> 8 ^ -1) | (g7 = A8 + 65510 >>> 8 & 255) & A8 + 65 | (I6 = A8 + 65484 >>> 8 | 0) & A8 + 71 & (255 ^ g7) | A8 + 252 & A8 + 65474 >>> 8 & (-1 ^ I6) & 255;
                    }
                    function AI(A8) {
                      var g7, I6;
                      return 47 & (1 + (16320 ^ A8) >>> 8 ^ -1) | 43 & (1 + (16321 ^ A8) >>> 8 ^ -1) | (g7 = A8 + 65510 >>> 8 & 255) & A8 + 65 | (I6 = A8 + 65484 >>> 8 | 0) & A8 + 71 & (255 ^ g7) | A8 + 252 & A8 + 65474 >>> 8 & (-1 ^ I6) & 255;
                    }
                    function gI(A8, g7) {
                      var I6, a4, r4;
                      u3 = I6 = u3 - 144 | 0, tA3(I6 + 96 | 0, g7 + 80 | 0), F3(I6 + 48 | 0, g7, I6 + 96 | 0), F3(I6, g7 + 40 | 0, I6 + 96 | 0), pA3(A8, I6), a4 = A8, r4 = Ta(I6 + 48 | 0) << 7 ^ o3[A8 + 31 | 0], t3[a4 + 31 | 0] = r4, u3 = I6 + 144 | 0;
                    }
                    function II(A8) {
                      var g7 = 0, I6 = 0, a4 = 0, r4 = 0, t4 = 0;
                      for (g7 = 32, I6 = 1; t4 = (a4 = o3[(g7 = g7 - 1 | 0) + A8 | 0]) - (r4 = o3[g7 + 3456 | 0]) >> 8 & I6 | 255 & t4, I6 &= 65535 + (a4 ^ r4) >>> 8, g7; )
                        ;
                      return (0 | t4) != 0;
                    }
                    function aI(A8, g7, I6, a4) {
                      var r4 = 0;
                      if (a4)
                        for (; ; ) {
                          if (!g7)
                            return 0;
                          if (t3[0 | A8] = o3[36484 + (63 & I6) | 0], I6 = I6 >>> 6 | 0, g7 = g7 - 1 | 0, A8 = A8 + 1 | 0, !((r4 = r4 + 6 | 0) >>> 0 < a4 >>> 0))
                            break;
                        }
                      return A8;
                    }
                    function rI(A8, g7) {
                      var I6, a4 = 0;
                      if (t3[15 + (I6 = u3 - 16 | 0) | 0] = 0, g7)
                        for (; t3[I6 + 15 | 0] = o3[A8 + a4 | 0] | o3[I6 + 15 | 0], (0 | (a4 = a4 + 1 | 0)) != (0 | g7); )
                          ;
                      return o3[I6 + 15 | 0] - 1 >>> 8 & 1;
                    }
                    function tI(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4) {
                      var Q4, C4 = 0, c4 = 0, i4 = 0;
                      return u3 = Q4 = u3 - 16 | 0, C4 = -1, ut(Q4) || (c4 = -1, i4 = hA3(Q4, A8, g7, I6, a4, r4, t4, B4, n4, o4, e4), C4 = ft(Q4) ? c4 : i4), u3 = Q4 + 16 | 0, C4;
                    }
                    function BI(A8, g7, I6, a4) {
                      return o3[0 | A8] != 36 | o3[A8 + 1 | 0] != 55 | o3[A8 + 2 | 0] != 36 || qa(g7, o3[A8 + 3 | 0]) || !(A8 = Vg(I6, A8 + 4 | 0)) ? 0 : Vg(a4, A8);
                    }
                    function nI(A8, g7, I6, a4) {
                      var r4;
                      return a4 = g7 + a4 | 0, a4 = (r4 = A8 + I6 | 0) >>> 0 < I6 >>> 0 ? a4 + 1 | 0 : a4, I6 = Wr(A8 << 1 & -2, 1 & (g7 = g7 << 1 | A8 >>> 31), I6, 0), A8 = h3 + a4 | 0, h3 = A8 = (g7 = I6 + r4 | 0) >>> 0 < I6 >>> 0 ? A8 + 1 | 0 : A8, g7;
                    }
                    function oI(A8, g7, I6) {
                      var a4, r4 = 0;
                      if (a4 = I6 >>> 3 | 0)
                        for (I6 = 0; yg((r4 = I6 << 3) + A8 | 0, n3[(r4 = g7 + r4 | 0) >> 2], n3[r4 + 4 >> 2]), (0 | a4) != (0 | (I6 = I6 + 1 | 0)); )
                          ;
                    }
                    function eI(A8, g7, I6) {
                      var a4, r4 = 0, t4 = 0;
                      if (a4 = I6 >>> 2 | 0)
                        for (I6 = 0; n3[(t4 = (r4 = I6 << 2) + A8 | 0) >> 2] = n3[t4 >> 2] ^ n3[g7 + r4 >> 2], (0 | a4) != (0 | (I6 = I6 + 1 | 0)); )
                          ;
                    }
                    function QI(A8) {
                      var g7 = 0, I6 = 0;
                      for (I6 = 127 & (-1 ^ o3[A8 + 31 | 0]), g7 = 30; I6 = -1 ^ o3[A8 + g7 | 0] | I6, g7 = g7 - 1 | 0; )
                        ;
                      return 1 & (((255 & I6) - 1 & 236 - o3[0 | A8]) >>> 8 ^ -1);
                    }
                    function CI(A8, g7, I6, a4) {
                      A: {
                        if ((0 | a4) == 1 | a4 >>> 0 > 1)
                          n3[9184] = 22;
                        else {
                          if (!(A8 = PA(A8, g7, I6, 2)))
                            break A;
                          (0 | A8) == -35 && (n3[9184] = 28);
                        }
                        A8 = -1;
                      }
                      return A8;
                    }
                    function cI(A8, g7, I6, a4) {
                      A: {
                        if ((0 | a4) == 1 | a4 >>> 0 > 1)
                          n3[9184] = 22;
                        else {
                          if (!(A8 = PA(A8, g7, I6, 1)))
                            break A;
                          (0 | A8) == -35 && (n3[9184] = 28);
                        }
                        A8 = -1;
                      }
                      return A8;
                    }
                    function iI(A8) {
                      var g7 = 0, I6 = 0;
                      for (I6 = 1 ^ o3[0 | A8], g7 = 1; I6 = o3[A8 + g7 | 0] | I6, (0 | (g7 = g7 + 1 | 0)) != 31; )
                        ;
                      return (127 & o3[A8 + 31 | 0] | 255 & I6) - 1 >>> 8 & 1;
                    }
                    function _I(A8, g7) {
                      var I6 = 0;
                      !function(A9, g8) {
                        g8 && ((g8 = n3[A9 >> 2]) && pI(n3[g8 + 4 >> 2], n3[A9 + 16 >> 2] << 10), (g8 = n3[A9 + 4 >> 2]) && pI(g8, n3[A9 + 20 >> 2] << 3));
                      }(A8, 4 & g7), U3(n3[A8 + 4 >> 2]), n3[A8 + 4 >> 2] = 0, (g7 = n3[A8 >> 2]) && (I6 = n3[g7 >> 2]) && U3(I6), U3(g7), n3[A8 >> 2] = 0;
                    }
                    function sI(A8, g7) {
                      for (var I6 = 0, a4 = 0, r4 = 0; a4 = (o3[0 | (r4 = A8 + I6 | 0)] - o3[g7 + I6 | 0] | 0) - a4 | 0, t3[0 | r4] = a4, a4 = a4 >>> 8 & 1, (0 | (I6 = I6 + 1 | 0)) != 64; )
                        ;
                    }
                    function yI(A8, g7, I6) {
                      t3[0 | A8] = g7, t3[A8 + 1 | 0] = g7 >>> 8, t3[A8 + 2 | 0] = g7 >>> 16, t3[A8 + 3 | 0] = g7 >>> 24, t3[A8 + 4 | 0] = I6, t3[A8 + 5 | 0] = I6 >>> 8, t3[A8 + 6 | 0] = I6 >>> 16, t3[A8 + 7 | 0] = I6 >>> 24;
                    }
                    function EI(A8, g7, I6) {
                      var a4, r4 = 0;
                      if (a4 = I6 >>> 2 | 0)
                        for (I6 = 0; n3[(r4 = I6 << 2) + A8 >> 2] = n3[g7 + r4 >> 2], (0 | a4) != (0 | (I6 = I6 + 1 | 0)); )
                          ;
                    }
                    function pI(A8, g7) {
                      var I6;
                      if (n3[12 + (I6 = u3 - 16 | 0) >> 2] = A8, g7)
                        for (A8 = 0; t3[n3[I6 + 12 >> 2] + A8 | 0] = 0, (0 | g7) != (0 | (A8 = A8 + 1 | 0)); )
                          ;
                    }
                    function uI(A8, g7, I6, a4, r4) {
                      var t4, B4;
                      return A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, u3 = t4 = (B4 = u3) - 128 & -64, sA3(t4, r4 |= 0), CA3(t4, g7, I6, a4), nA3(t4, A8), u3 = B4, 0;
                    }
                    function fI(A8, g7) {
                      A8 |= 0;
                      var I6 = 0, a4 = 0, r4 = 0;
                      if (g7 |= 0)
                        for (; a4 = A8 + I6 | 0, r4 = sa(), t3[0 | a4] = r4, (0 | (I6 = I6 + 1 | 0)) != (0 | g7); )
                          ;
                    }
                    function lI(A8) {
                      var g7 = 0, I6 = 0, a4 = 0;
                      for (g7 = 1; g7 = o3[0 | (a4 = A8 + I6 | 0)] + g7 | 0, t3[0 | a4] = g7, g7 = g7 >>> 8 | 0, (0 | (I6 = I6 + 1 | 0)) != 4; )
                        ;
                    }
                    function hI(A8, g7) {
                      for (var I6 = 0, a4 = 0, r4 = 0; n3[(r4 = (a4 = I6 << 2) + A8 | 0) >> 2] = n3[r4 >> 2] ^ n3[g7 + a4 >> 2], (0 | (I6 = I6 + 1 | 0)) != 16; )
                        ;
                    }
                    function wI(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4, e4 = 0;
                      return u3 = o4 = u3 - 32 | 0, e4 = -1, kI(o4, B4, n4) || (e4 = kr(A8, g7, I6, a4, r4, t4, o4), pI(o4, 32)), u3 = o4 + 32 | 0, e4;
                    }
                    function DI(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4, e4 = 0;
                      return u3 = o4 = u3 - 32 | 0, e4 = -1, kI(o4, B4, n4) || (e4 = Fr(A8, g7, I6, a4, r4, t4, o4), pI(o4, 32)), u3 = o4 + 32 | 0, e4;
                    }
                    function mI(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4, e4 = 0;
                      return u3 = o4 = u3 - 32 | 0, e4 = -1, cr(o4, B4, n4) || (e4 = br(A8, g7, I6, a4, r4, t4, o4), pI(o4, 32)), u3 = o4 + 32 | 0, e4;
                    }
                    function GI(A8, g7, I6) {
                      A8 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 - 32 | 0, r4 = -1, xg(a4, I6 |= 0, g7 |= 0) || (r4 = W3(A8, 36160, a4, 0)), u3 = a4 + 32 | 0, 0 | r4;
                    }
                    function kI(A8, g7, I6) {
                      A8 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 - 32 | 0, r4 = -1, xg(a4, I6 |= 0, g7 |= 0) || (r4 = K3(A8, 36208, a4, 0)), u3 = a4 + 32 | 0, 0 | r4;
                    }
                    function FI(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4, e4 = 0;
                      return u3 = o4 = u3 - 32 | 0, e4 = -1, cr(o4, B4, n4) || (e4 = Hr(A8, g7, I6, a4, r4, t4, o4), pI(o4, 32)), u3 = o4 + 32 | 0, e4;
                    }
                    function bI(A8, g7) {
                      var I6;
                      return g7 |= 0, u3 = I6 = u3 + -64 | 0, LI(A8 |= 0, I6), IA3(A8 = A8 + 208 | 0, I6, 64, 0), LI(A8, g7), pI(I6, 64), u3 = I6 - -64 | 0, 0;
                    }
                    function HI(A8, g7, I6, a4) {
                      var r4;
                      return g7 |= 0, I6 |= 0, a4 |= 0, u3 = r4 = u3 + -64 | 0, LI(A8 |= 0, r4), A8 = z3(g7, I6, r4, 64, 0, a4, 1), u3 = r4 - -64 | 0, 0 | A8;
                    }
                    function dI(A8, g7) {
                      g7 = g7 << 8 & 16711680 | g7 << 24 | g7 >>> 8 & 65280 | g7 >>> 24, t3[0 | A8] = g7, t3[A8 + 1 | 0] = g7 >>> 8, t3[A8 + 2 | 0] = g7 >>> 16, t3[A8 + 3 | 0] = g7 >>> 24;
                    }
                    function SI(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4;
                      return u3 = o4 = u3 - 32 | 0, W3(o4, r4, n4, 0), A8 = $a(A8, g7, I6, a4, r4 + 16 | 0, t4, B4, o4), pI(o4, 32), u3 = o4 + 32 | 0, A8;
                    }
                    function vI(A8, g7) {
                      var I6;
                      return g7 |= 0, u3 = I6 = u3 - 32 | 0, TI(A8 |= 0, I6), QA3(A8 = A8 + 104 | 0, I6, 32, 0), TI(A8, g7), pI(I6, 32), u3 = I6 + 32 | 0, 0;
                    }
                    function UI(A8, g7) {
                      var I6, a4, r4;
                      F3(A8, g7, I6 = g7 + 120 | 0), F3(A8 + 40 | 0, a4 = g7 + 40 | 0, r4 = g7 + 80 | 0), F3(A8 + 80 | 0, r4, I6), F3(A8 + 120 | 0, g7, a4);
                    }
                    function JI(A8) {
                      return (A8 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) << 24 | A8 << 8 & 16711680 | A8 >>> 8 & 65280 | A8 >>> 24;
                    }
                    function YI(A8) {
                      for (A8 |= 0; fI(A8, 32), t3[A8 + 31 | 0] = 31 & o3[A8 + 31 | 0], !II(A8) || rI(A8, 32); )
                        ;
                    }
                    function xI(A8, g7, I6, a4, r4, t4, B4) {
                      return !a4 & I6 >>> 0 >= 16 | a4 ? DI(A8, g7 + 16 | 0, g7, I6 - 16 | 0, a4 - (I6 >>> 0 < 16) | 0, r4, t4, B4) : -1;
                    }
                    function NI(A8, g7, I6, a4, r4, t4, B4) {
                      return !a4 & I6 >>> 0 >= 16 | a4 ? FI(A8, g7 + 16 | 0, g7, I6 - 16 | 0, a4 - (I6 >>> 0 < 16) | 0, r4, t4, B4) : -1;
                    }
                    function MI(A8, g7, I6) {
                      var a4;
                      return g7 |= 0, I6 |= 0, u3 = a4 = u3 + -64 | 0, LI(A8 |= 0, a4), A8 = ag(g7, a4, 64, 0, I6, 1), u3 = a4 - -64 | 0, 0 | A8;
                    }
                    function RI(A8, g7, I6) {
                      var a4 = 0;
                      if ((0 | g7) >= 1)
                        for (; ht(A8, A8), (0 | (a4 = a4 + 1 | 0)) != (0 | g7); )
                          ;
                      D3(A8, A8, I6);
                    }
                    function PI(A8, g7, I6) {
                      var a4 = 0;
                      if ((0 | g7) >= 1)
                        for (; H3(A8, A8), (0 | (a4 = a4 + 1 | 0)) != (0 | g7); )
                          ;
                      F3(A8, A8, I6);
                    }
                    function qI(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4;
                      return u3 = o4 = u3 - 32 | 0, K3(o4, r4, n4, 0), A8 = aa(A8, g7, I6, a4, r4 + 16 | 0, t4, B4, o4), u3 = o4 + 32 | 0, A8;
                    }
                    function LI(A8, g7) {
                      var I6;
                      return g7 |= 0, u3 = I6 = u3 - 704 | 0, function(A9, g8) {
                        var I7, a4 = 0;
                        (I7 = n3[A9 + 72 >> 2] >>> 3 & 127) >>> 0 <= 111 ? gA3(80 + (A9 + I7 | 0) | 0, 35664, 112 - I7 | 0) : (gA3((a4 = A9 + 80 | 0) + I7 | 0, 35664, 128 - I7 | 0), m3(A9, a4, g8, g8 + 640 | 0), DA3(a4, 0, 112)), oI(A9 + 192 | 0, A9 - -64 | 0, 16), m3(A9, A9 + 80 | 0, g8, g8 + 640 | 0);
                      }(A8 |= 0, I6), oI(g7, A8, 64), pI(I6, 704), pI(A8, 208), u3 = I6 + 704 | 0, 0;
                    }
                    function KI(A8, g7) {
                      for (var I6 = 0, a4 = 0; t3[0 | (a4 = A8 + I6 | 0)] = o3[0 | a4] ^ o3[g7 + I6 | 0], (0 | (I6 = I6 + 1 | 0)) != 8; )
                        ;
                    }
                    function XI(A8, g7, I6, a4, r4, t4, B4, n4, o4) {
                      return g7 - 1 >>> 0 > 63 | B4 >>> 0 > 64 ? -1 : function(A9, g8, I7, a5, r5, t5, B5, n5, o5) {
                        var e4, Q4 = 0;
                        if (e4 = Q4 = u3, u3 = Q4 = Q4 - 384 & -64, !(!A9 | (a5 - 1 & 255) >>> 0 >= 64 | (r5 | t5 ? !g8 : 0) | B5 >>> 0 >= 65 | (B5 ? !I7 : 0)))
                          return B5 ? VA(Q4, a5, I7, B5, n5, o5) : ng(Q4, a5, n5, o5), uA3(Q4, g8, r5, t5), R3(Q4, A9, a5), u3 = e4, 0;
                        yr(), c3();
                      }(A8, I6, t4, 255 & g7, a4, r4, 255 & B4, n4, o4);
                    }
                    function VI(A8, g7) {
                      for (var I6 = 0; ; ) {
                        if (!g7)
                          return 0;
                        if (o3[0 | (I6 = (g7 = g7 - 1 | 0) + A8 | 0)] == 36)
                          break;
                      }
                      return I6;
                    }
                    function WI(A8, g7, I6) {
                      var a4, r4;
                      u3 = a4 = (r4 = u3) - 384 & -64, Ar(a4, 0, 0, 24), It(a4, g7, 32, 0), It(a4, I6, 32, 0), ir(a4, A8, 24), u3 = r4;
                    }
                    function TI(A8, g7) {
                      var I6;
                      return g7 |= 0, u3 = I6 = u3 - 288 | 0, function(A9, g8) {
                        var I7, a4 = 0, r4 = 0;
                        a4 = n3[A9 + 36 >> 2], (I7 = (r4 = n3[A9 + 32 >> 2]) >>> 3 & 63) >>> 0 <= 55 ? gA3(40 + (A9 + I7 | 0) | 0, 36096, 56 - I7 | 0) : (gA3((a4 = A9 + 40 | 0) + I7 | 0, 36096, 64 - I7 | 0), S3(A9, a4, g8, g8 + 256 | 0), DA3(a4, 0, 56), r4 = n3[A9 + 32 >> 2], a4 = n3[A9 + 36 >> 2]), yg(A9 + 96 | 0, r4, a4), S3(A9, A9 + 40 | 0, g8, g8 + 256 | 0);
                      }(A8 |= 0, I6), function(A9, g8) {
                        for (var I7 = 0, a4 = 0; dI((a4 = I7 << 2) + A9 | 0, n3[g8 + a4 >> 2]), (0 | (I7 = I7 + 1 | 0)) != 8; )
                          ;
                      }(g7, A8), pI(I6, 288), pI(A8, 104), u3 = I6 + 288 | 0, 0;
                    }
                    function ZI(A8) {
                      for (var g7 = 0; ; ) {
                        if (!o3[A8 + g7 | 0])
                          return g7;
                        if ((0 | (g7 = g7 + 1 | 0)) == 102)
                          break;
                      }
                      return 102;
                    }
                    function jI(A8, g7, I6, a4, r4) {
                      var t4;
                      return u3 = t4 = u3 - 32 | 0, W3(t4, a4, r4, 0), A8 = ur(A8, g7, I6, a4 + 16 | 0, t4), pI(t4, 32), u3 = t4 + 32 | 0, A8;
                    }
                    function zI(A8, g7) {
                      for (var I6 = 0, a4 = 0; n3[(a4 = I6 << 2) + A8 >> 2] = n3[g7 + a4 >> 2], (0 | (I6 = I6 + 1 | 0)) != 16; )
                        ;
                    }
                    function OI(A8, g7, I6) {
                      return A8 |= 0, g7 |= 0, (I6 |= 0) >>> 0 >= 256 && (i3(2016, 2036, 107, 2089), c3()), 0 | R3(A8, g7, 255 & I6);
                    }
                    function $I(A8, g7) {
                      var I6;
                      jA(A8, I6 = g7 + 40 | 0, g7), ZA(A8 + 40 | 0, I6, g7), ug(A8 + 80 | 0, g7 + 80 | 0), F3(A8 + 120 | 0, g7 + 120 | 0, 2224);
                    }
                    function Aa(A8, g7, I6, a4, r4, t4, B4) {
                      return g7 - 1 >>> 0 > 63 | B4 >>> 0 > 64 ? -1 : function(A9, g8, I7, a5, r5, t5, B5) {
                        var n4, o4 = 0;
                        if (n4 = o4 = u3, u3 = o4 = o4 - 384 & -64, !(!A9 | (a5 - 1 & 255) >>> 0 >= 64 | (r5 | t5 ? !g8 : 0) | B5 >>> 0 >= 65 | (B5 ? !I7 : 0)))
                          return B5 ? mg(o4, a5, I7, B5) : zg(o4, a5), uA3(o4, g8, r5, t5), R3(o4, A9, a5), u3 = n4, 0;
                        yr(), c3();
                      }(A8, I6, t4, 255 & g7, a4, r4, 255 & B4);
                    }
                    function ga(A8) {
                      return n3[64 + (A8 |= 0) >> 2] = 0, n3[A8 + 68 >> 2] = 0, n3[A8 + 72 >> 2] = 0, n3[A8 + 76 >> 2] = 0, gA3(A8, 34960, 64), 0;
                    }
                    function Ia(A8, g7) {
                      if (g7 >>> 0 > 4294967168)
                        A8 = 48;
                      else {
                        if (!(g7 = function(A9) {
                          var g8 = 0, I6 = 0, a4 = 0, r4 = 0, t4 = 0, B4 = 0;
                          return A9 >>> 0 >= 4294967168 ? (n3[9184] = 48, 0) : (A9 = k3(76 + (a4 = A9 >>> 0 < 11 ? 16 : A9 + 11 & -8) | 0)) ? (g8 = A9 - 8 | 0, 63 & A9 ? (r4 = (-8 & (B4 = n3[(t4 = A9 - 4 | 0) >> 2])) - (I6 = (A9 = (A9 = (A9 + 63 & -64) - 8 | 0) - g8 >>> 0 > 15 ? A9 : A9 - -64 | 0) - g8 | 0) | 0, 3 & B4 ? (n3[A9 + 4 >> 2] = r4 | 1 & n3[A9 + 4 >> 2] | 2, n3[4 + (r4 = A9 + r4 | 0) >> 2] = 1 | n3[r4 + 4 >> 2], n3[t4 >> 2] = I6 | 1 & n3[t4 >> 2] | 2, n3[A9 + 4 >> 2] = 1 | n3[A9 + 4 >> 2], Y3(g8, I6)) : (g8 = n3[g8 >> 2], n3[A9 + 4 >> 2] = r4, n3[A9 >> 2] = g8 + I6)) : A9 = g8, 3 & (g8 = n3[A9 + 4 >> 2]) && ((I6 = -8 & g8) >>> 0 <= a4 + 16 >>> 0 || (n3[A9 + 4 >> 2] = a4 | 1 & g8 | 2, g8 = A9 + a4 | 0, a4 = I6 - a4 | 0, n3[g8 + 4 >> 2] = 3 | a4, n3[4 + (I6 = A9 + I6 | 0) >> 2] = 1 | n3[I6 + 4 >> 2], Y3(g8, a4))), A9 + 8 | 0) : 0;
                        }(g7)))
                          return 48;
                        n3[A8 >> 2] = g7, A8 = 0;
                      }
                      return A8;
                    }
                    function aa(A8, g7, I6, a4, r4, t4, B4, o4) {
                      return (0 | a4) == 1 | a4 >>> 0 > 1 && (yr(), c3()), 0 | Vt[n3[9180]](A8, g7, I6, a4, r4, t4, B4, o4);
                    }
                    function ra(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5) {
                        var n4, o4 = 0;
                        return u3 = n4 = u3 - 32 | 0, o4 = -1, GI(n4, t5, B5) || (o4 = xr(A9, g8, I7, a5, r5, n4), pI(n4, 32)), u3 = n4 + 32 | 0, o4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }
                    function ta(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5) {
                        var n4, o4 = 0;
                        return u3 = n4 = u3 - 32 | 0, o4 = -1, GI(n4, t5, B5) || (o4 = Nr(A9, g8, I7, a5, r5, n4), pI(n4, 32)), u3 = n4 + 32 | 0, o4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }
                    function Ba(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | Hg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }
                    function na(A8, g7, I6, a4, r4) {
                      var t4;
                      return u3 = t4 = u3 - 416 | 0, xA(t4, r4, 32), Zr(t4, g7, I6, a4), bI(t4, A8), u3 = t4 + 416 | 0, 0;
                    }
                    function oa(A8, g7, I6, a4, r4) {
                      var t4;
                      return u3 = t4 = u3 - 416 | 0, Qr(t4, r4, 32), $r(t4, g7, I6, a4), FA3(t4, A8), u3 = t4 + 416 | 0, 0;
                    }
                    function ea(A8, g7, I6, a4, r4) {
                      var t4;
                      return u3 = t4 = u3 - 208 | 0, RA(t4, r4, 32), jr(t4, g7, I6, a4), vI(t4, A8), u3 = t4 + 208 | 0, 0;
                    }
                    function Qa(A8, g7, I6, a4, r4, t4, B4) {
                      return !a4 & I6 >>> 0 >= 4294967280 | a4 && (yr(), c3()), wI(A8 + 16 | 0, A8, g7, I6, a4, r4, t4, B4);
                    }
                    function Ca(A8, g7, I6, a4, r4, t4, B4) {
                      return !a4 & I6 >>> 0 >= 4294967280 | a4 && (yr(), c3()), mI(A8 + 16 | 0, A8, g7, I6, a4, r4, t4, B4);
                    }
                    function ca(A8, g7) {
                      var I6;
                      return A8 |= 0, g7 |= 0, u3 = I6 = u3 - 32 | 0, fI(I6, 32), N4(A8, g7, I6), pI(I6, 32), u3 = I6 + 32 | 0, 0;
                    }
                    function ia(A8, g7) {
                      var I6;
                      F3(A8, g7, I6 = g7 + 120 | 0), F3(A8 + 40 | 0, g7 + 40 | 0, g7 = g7 + 80 | 0), F3(A8 + 80 | 0, g7, I6);
                    }
                    function _a(A8) {
                      var g7;
                      return g7 = o3[0 | A8] | o3[A8 + 1 | 0] << 8, A8 = o3[A8 + 2 | 0], h3 = A8 >>> 16 | 0, g7 | A8 << 16;
                    }
                    function sa() {
                      var A8, g7;
                      return u3 = A8 = u3 - 16 | 0, t3[A8 + 15 | 0] = 0, g7 = 0 | s3(1027, A8 + 15 | 0, 0), u3 = A8 + 16 | 0, 0 | g7;
                    }
                    function ya(A8, g7, I6, a4, r4, t4, B4) {
                      return (0 | a4) == 1 | a4 >>> 0 > 1 && (yr(), c3()), 0 | Vt[n3[9181]](A8, g7, I6, a4, r4, t4, B4);
                    }
                    function Ea(A8, g7, I6, a4, r4, t4) {
                      return (0 | a4) == 1 | a4 >>> 0 > 1 && (yr(), c3()), 0 | Vt[n3[9180]](A8, g7, I6, a4, r4, 0, 0, t4);
                    }
                    function pa(A8, g7, I6) {
                      NA(A8, g7, I6), NA(A8 + 40 | 0, g7 + 40 | 0, I6), NA(A8 + 80 | 0, g7 + 80 | 0, I6), NA(A8 + 120 | 0, g7 + 120 | 0, I6);
                    }
                    function ua(A8, g7, I6, a4, r4, t4) {
                      return (0 | a4) == 1 | a4 >>> 0 > 1 && (yr(), c3()), 0 | Vt[n3[9181]](A8, g7, I6, a4, r4, 0, t4);
                    }
                    function fa(A8, g7) {
                      var I6 = 0;
                      return (-1 >>> (I6 = 31 & g7) & A8) << I6 | ((I6 = A8) & -1 << (A8 = 0 - g7 & 31)) >>> A8;
                    }
                    function la(A8, g7, I6, a4) {
                      var r4;
                      return u3 = r4 = u3 - 208 | 0, ga(r4), IA3(r4, g7, I6, a4), LI(r4, A8), u3 = r4 + 208 | 0, 0;
                    }
                    function ha(A8, g7, I6, a4, r4, t4) {
                      return 0 | xr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function wa(A8, g7, I6, a4, r4, t4) {
                      return 0 | Nr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function Da(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        var B4, e4;
                        return u3 = B4 = u3 - 32 | 0, e4 = o3[0 | r5] | o3[r5 + 1 | 0] << 8 | o3[r5 + 2 | 0] << 16 | o3[r5 + 3 | 0] << 24, r5 = o3[r5 + 4 | 0] | o3[r5 + 5 | 0] << 8 | o3[r5 + 6 | 0] << 16 | o3[r5 + 7 | 0] << 24, n3[B4 + 24 >> 2] = 0, n3[B4 + 28 >> 2] = 0, n3[B4 + 16 >> 2] = e4, n3[B4 + 20 >> 2] = r5, yI(B4, I7, a5), n3[B4 + 8 >> 2] = 0, n3[B4 + 12 >> 2] = 0, g8 - 16 >>> 0 >= 49 ? (n3[9184] = 28, A9 = -1) : A9 = XI(A9, g8, 0, 0, 0, t5, 32, B4, B4 + 16 | 0), u3 = B4 + 32 | 0, A9;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function ma(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        var B4, o4;
                        return u3 = B4 = u3 - 16 | 0, o4 = I7, I7 = a5, Gr(A9, B4 + 8 | 0, EA3(A9 - -64 | 0, o4, a5), a5, r5, t5), n3[B4 + 8 >> 2] != 64 | n3[B4 + 12 >> 2] ? (g8 && (n3[g8 >> 2] = 0, n3[g8 + 4 >> 2] = 0), DA3(A9, 0, I7 - -64 | 0), A9 = -1) : (A9 = 0, g8 && (n3[g8 >> 2] = a5 - -64, n3[g8 + 4 >> 2] = r5 - ((a5 >>> 0 < 4294967232) - 1 | 0))), u3 = B4 + 16 | 0, A9;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function Ga(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        var B4 = 0;
                        A: {
                          g: {
                            if (!(!r5 & a5 >>> 0 < 64 || (r5 = r5 - 1 | 0, !(r5 = (a5 = a5 + -64 | 0) >>> 0 < 4294967232 ? r5 + 1 | 0 : r5) & a5 >>> 0 > 4294967231 | r5))) {
                              if (!Lr(I7, B4 = I7 - -64 | 0, a5, r5, t5))
                                break g;
                              A9 && DA3(A9, 0, a5);
                            }
                            if (I7 = -1, !g8)
                              break A;
                            return n3[g8 >> 2] = 0, n3[g8 + 4 >> 2] = 0, -1;
                          }
                          g8 && (n3[g8 >> 2] = a5, n3[g8 + 4 >> 2] = r5), I7 = 0, A9 && EA3(A9, B4, a5);
                        }
                        return I7;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function ka(A8, g7, I6, a4, r4, t4) {
                      return 0 | Gr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function Fa(A8, g7, I6, a4, r4, t4) {
                      return 0 | dr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }
                    function ba(A8, g7, I6) {
                      var a4;
                      A8 |= 0, g7 |= 0, u3 = a4 = u3 - 32 | 0, Z3(a4, I6 |= 0), O3(A8, g7, a4), u3 = a4 + 32 | 0;
                    }
                    function Ha(A8, g7, I6, a4, r4) {
                      return (0 | I6) == 1 | I6 >>> 0 > 1 && (yr(), c3()), 0 | Vt[n3[9179]](A8, g7, I6, a4, r4);
                    }
                    function da(A8, g7, I6, a4, r4) {
                      return (0 | I6) == 1 | I6 >>> 0 > 1 && (yr(), c3()), 0 | Vt[n3[9178]](A8, g7, I6, a4, r4);
                    }
                    function Sa(A8, g7, I6, a4, r4) {
                      return 0 | oa(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }
                    function va(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var t4;
                        return u3 = t4 = u3 - 32 | 0, oa(t4, g8, I7, a5, r5), g8 = Yr(A9, t4), I7 = Kg(t4, A9, 32), u3 = t4 + 32 | 0, I7 | ((0 | A9) == (0 | t4) ? -1 : g8);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }
                    function Ua(A8, g7, I6, a4, r4) {
                      return 0 | pr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }
                    function Ja(A8, g7, I6, a4, r4) {
                      return 0 | hr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }
                    function Ya(A8, g7, I6, a4, r4) {
                      return 0 | Lr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }
                    function xa(A8, g7, I6, a4, r4) {
                      return 0 | jI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }
                    function Na() {
                      var A8;
                      u3 = A8 = u3 - 16 | 0, t3[A8 + 15 | 0] = 0, s3(1065, A8 + 15 | 0, 0), u3 = A8 + 16 | 0;
                    }
                    function Ma(A8, g7, I6) {
                      var a4;
                      u3 = a4 = u3 - 48 | 0, _g(a4, g7), ug(A8, g7), NA(A8, a4, I6), u3 = a4 + 48 | 0;
                    }
                    function Ra(A8, g7, I6, a4, r4) {
                      return (0 | I6) == 1 | I6 >>> 0 > 1 && (yr(), c3()), Ha(A8, g7, I6, a4, r4);
                    }
                    function Pa(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5) {
                        var r5 = 0, t4 = 0, B4 = 0, n4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0;
                        if (r5 = 1886610805 ^ (B4 = o3[0 | a5] | o3[a5 + 1 | 0] << 8 | o3[a5 + 2 | 0] << 16 | o3[a5 + 3 | 0] << 24), n4 = 1936682341 ^ (t4 = o3[a5 + 4 | 0] | o3[a5 + 5 | 0] << 8 | o3[a5 + 6 | 0] << 16 | o3[a5 + 7 | 0] << 24), e4 = 1852142177 ^ B4, C4 = 1819895653 ^ t4, B4 = 1852075885 ^ (i4 = o3[a5 + 8 | 0] | o3[a5 + 9 | 0] << 8 | o3[a5 + 10 | 0] << 16 | o3[a5 + 11 | 0] << 24), t4 = 1685025377 ^ (a5 = o3[a5 + 12 | 0] | o3[a5 + 13 | 0] << 8 | o3[a5 + 14 | 0] << 16 | o3[a5 + 15 | 0] << 24), i4 ^= 2037671283, Q4 = 1952801890 ^ a5, (0 | (a5 = (g8 + I7 | 0) - (y4 = 7 & I7) | 0)) != (0 | g8)) {
                          for (; c4 = o3[0 | g8] | o3[g8 + 1 | 0] << 8 | o3[g8 + 2 | 0] << 16 | o3[g8 + 3 | 0] << 24, _4 = o3[g8 + 4 | 0] | o3[g8 + 5 | 0] << 8 | o3[g8 + 6 | 0] << 16 | o3[g8 + 7 | 0] << 24, s4 = at(B4, t4, 13), E4 = h3, p4 = 1 + (t4 = t4 + n4 | 0) | 0, n4 = t4, u4 = at(t4 = r5 + B4 | 0, n4 = t4 >>> 0 < r5 >>> 0 ? p4 : n4, 32), p4 = h3, Q4 = r5 = Q4 ^ _4, B4 = at(i4 ^= c4, r5, 16), r5 = e4 + i4 | 0, e4 = C4 + Q4 | 0, i4 = C4 = (e4 = r5 >>> 0 < i4 >>> 0 ? e4 + 1 | 0 : e4) ^ h3, C4 = at(B4 ^= r5, C4, 21), Q4 = h3, s4 = at(t4 ^= s4, n4 ^= E4, 17), f4 = h3, n4 = e4 + n4 | 0, e4 = r5, n4 = at(r5 = r5 + t4 | 0, t4 = e4 >>> 0 > r5 >>> 0 ? n4 + 1 | 0 : n4, 32), e4 = h3, E4 = at(s4 ^= r5, t4 ^= f4, 13), f4 = h3, p4 = 1 + (r5 = i4 + p4 | 0) | 0, i4 = r5, B4 = (r5 = B4 + u4 | 0) >>> 0 < B4 >>> 0 ? p4 : i4, s4 = i4 = r5 + s4 | 0, t4 = B4 + t4 | 0, t4 = at(i4, u4 = r5 >>> 0 > i4 >>> 0 ? t4 + 1 | 0 : t4, 32), i4 = h3, C4 = at(r5 ^= C4, B4 ^= Q4, 16), B4 = e4 + B4 | 0, B4 = (r5 = r5 + n4 | 0) >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4, n4 = t4 + (e4 = r5 ^ C4) | 0, t4 = (Q4 = i4) + (i4 = B4 ^ h3) | 0, i4 = at(e4, i4, 21) ^ n4, Q4 = (p4 = n4 >>> 0 < e4 >>> 0 ? t4 + 1 | 0 : t4) ^ h3, e4 = t4 = u4 ^ f4, t4 = at(C4 = s4 ^ E4, t4, 17), B4 = B4 + e4 | 0, C4 = (e4 = r5 + C4 | 0) >>> 0 < r5 >>> 0 ? B4 + 1 | 0 : B4, B4 = t4 ^ e4, t4 = C4 ^ h3, r5 = n4 ^ c4, n4 = _4 ^ p4, e4 = at(e4, C4, 32), C4 = h3, (0 | a5) != (0 | (g8 = g8 + 8 | 0)); )
                            ;
                          g8 = a5;
                        }
                        switch (a5 = I7 << 24, I7 = 0, y4 - 1 | 0) {
                          case 6:
                            a5 |= o3[g8 + 6 | 0] << 16;
                          case 5:
                            a5 |= o3[g8 + 5 | 0] << 8;
                          case 4:
                            a5 |= o3[g8 + 4 | 0];
                          case 3:
                            c4 = (I7 = o3[g8 + 3 | 0]) >>> 8 | 0, I7 <<= 24, a5 |= c4;
                          case 2:
                            I7 |= (c4 = o3[g8 + 2 | 0]) << 16, a5 |= _4 = c4 >>> 16 | 0;
                          case 1:
                            I7 |= (c4 = o3[g8 + 1 | 0]) << 8, a5 |= _4 = c4 >>> 24 | 0;
                          case 0:
                            I7 = o3[0 | g8] | I7;
                        }
                        return c4 = at(B4, t4, 13), _4 = h3, g8 = t4 + n4 | 0, y4 = at(B4 = r5 + B4 | 0, t4 = B4 >>> 0 < r5 >>> 0 ? g8 + 1 | 0 : g8, 32), s4 = h3, n4 = r5 = a5 ^ Q4, r5 = at(g8 = I7 ^ i4, r5, 16), n4 = n4 + C4 | 0, C4 = e4 = (n4 = (Q4 = g8) >>> 0 > (g8 = g8 + e4 | 0) >>> 0 ? n4 + 1 | 0 : n4) ^ h3, e4 = at(r5 ^= g8, e4, 21), i4 = h3, c4 = at(B4 ^= c4, t4 ^= _4, 17), _4 = h3, t4 = n4 + t4 | 0, Q4 = g8, t4 = at(g8 = g8 + B4 | 0, B4 = Q4 >>> 0 > g8 >>> 0 ? t4 + 1 | 0 : t4, 32), n4 = h3, c4 = at(Q4 = g8 ^ c4, B4 ^= _4, 13), _4 = h3, E4 = 1 + (g8 = C4 + s4 | 0) | 0, C4 = g8, B4 = (r5 = (g8 = r5 + y4 | 0) >>> 0 < r5 >>> 0 ? E4 : C4) + B4 | 0, B4 = at(Q4 = C4 = g8 + Q4 | 0, C4 = g8 >>> 0 > C4 >>> 0 ? B4 + 1 | 0 : B4, 32), y4 = h3, e4 = at(g8 ^= e4, r5 ^= i4, 16), r5 = n4 + r5 | 0, r5 = (g8 = g8 + t4 | 0) >>> 0 < t4 >>> 0 ? r5 + 1 | 0 : r5, t4 = g8 ^ e4, e4 = n4 = r5 ^ h3, n4 = at(t4, n4, 21), i4 = h3, _4 = C4 ^= _4, C4 = at(Q4 ^= c4, C4, 17), c4 = h3, r5 = r5 + _4 | 0, E4 = g8, Q4 = at(g8 = g8 + Q4 | 0, r5 = E4 >>> 0 > g8 >>> 0 ? r5 + 1 | 0 : r5, 32), _4 = h3, c4 = at(g8 ^= C4, C4 = r5 ^ c4, 13), s4 = h3, E4 = g8, e4 = 1 + (g8 = e4 + y4 | 0) | 0, r5 = g8, a5 = C4 + (a5 ^ (r5 = (g8 = B4 + t4 | 0) >>> 0 < B4 >>> 0 ? e4 : r5)) | 0, I7 = at(t4 = B4 = E4 + (I7 ^= g8) | 0, B4 = I7 >>> 0 > B4 >>> 0 ? a5 + 1 | 0 : a5, 32), e4 = h3, n4 = at(g8 ^= n4, a5 = r5 ^ i4, 16), a5 = a5 + _4 | 0, a5 = (r5 = g8) >>> 0 > (g8 = g8 + (255 ^ Q4) | 0) >>> 0 ? a5 + 1 | 0 : a5, r5 = g8 ^ n4, C4 = n4 = a5 ^ h3, n4 = at(r5, n4, 21), i4 = h3, Q4 = B4 ^= s4, B4 = at(t4 ^= c4, B4, 17), c4 = h3, a5 = a5 + Q4 | 0, Q4 = g8, t4 = at(g8 = g8 + t4 | 0, a5 = Q4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), Q4 = h3, _4 = at(B4 ^= g8, c4 ^= a5, 13), y4 = h3, C4 = 1 + (g8 = e4 + C4 | 0) | 0, a5 = g8, r5 = (a5 = (g8 = I7 + r5 | 0) >>> 0 < I7 >>> 0 ? C4 : a5) + c4 | 0, e4 = r5 = g8 >>> 0 > (I7 = g8 + B4 | 0) >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), C4 = h3, n4 = at(g8 ^= n4, a5 ^= i4, 16), a5 = a5 + Q4 | 0, Q4 = g8, B4 = (g8 = g8 + t4 | 0) ^ n4, n4 = t4 = (a5 = Q4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5) ^ h3, t4 = at(B4, t4, 21), i4 = h3, Q4 = e4 ^= y4, e4 = at(I7 ^= _4, e4, 17), c4 = h3, a5 = a5 + Q4 | 0, Q4 = g8, Q4 = at(g8 = g8 + I7 | 0, I7 = Q4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), _4 = h3, y4 = at(e4 ^= g8, c4 ^= I7, 13), s4 = h3, a5 = 1 + (g8 = n4 + C4 | 0) | 0, I7 = g8, r5 = (a5 = (g8 = r5 + B4 | 0) >>> 0 < r5 >>> 0 ? a5 : I7) + c4 | 0, n4 = r5 = g8 >>> 0 > (I7 = g8 + e4 | 0) >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), e4 = h3, t4 = at(g8 ^= t4, a5 ^= i4, 16), a5 = a5 + _4 | 0, C4 = g8, B4 = (g8 = g8 + Q4 | 0) ^ t4, C4 = t4 = (a5 = C4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5) ^ h3, t4 = at(B4, t4, 21), i4 = h3, Q4 = n4 ^= s4, n4 = at(I7 ^= y4, n4, 17), c4 = h3, a5 = a5 + Q4 | 0, Q4 = g8, a5 = at(g8 = g8 + I7 | 0, I7 = Q4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), Q4 = h3, c4 = I7 ^= c4, _4 = at(n4 ^= g8, I7, 13), y4 = h3, C4 = 1 + (g8 = e4 + C4 | 0) | 0, I7 = g8, e4 = B4 = i4 ^ (r5 = (g8 = r5 + B4 | 0) >>> 0 < r5 >>> 0 ? C4 : I7), B4 = at(I7 = g8 ^ t4, B4, 16), t4 = e4 + Q4 | 0, Q4 = I7, B4 = at((I7 = I7 + a5 | 0) ^ B4, (a5 = Q4 >>> 0 > I7 >>> 0 ? t4 + 1 | 0 : t4) ^ h3, 21), t4 = h3, r5 = r5 + c4 | 0, C4 = 1 + (a5 = a5 + (r5 = ((Q4 = g8) >>> 0 > (g8 = g8 + n4 | 0) >>> 0 ? r5 + 1 | 0 : r5) ^ y4) | 0) | 0, Q4 = a5, I7 = (g8 = I7 + (a5 = g8 ^ _4) | 0) >>> 0 < I7 >>> 0 ? C4 : Q4, a5 = at(a5, r5, 17) ^ g8 ^ B4, r5 = h3 ^ I7 ^ t4, yI(A9, at(g8, I7, 32) ^ a5, h3 ^ r5), 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, r4 |= 0);
                    }
                    function qa(A8, g7) {
                      var I6;
                      return I6 = A8, A8 = function(A9) {
                        var g8 = 0, I7 = 0, a4 = 0, r4 = 0;
                        g8 = 65, I7 = 36484;
                        A:
                          if (o3[36484] != (255 & A9))
                            for (r4 = Q3(255 & A9, 16843009); ; ) {
                              if ((-1 ^ (a4 = n3[I7 >> 2] ^ r4)) & a4 - 16843009 & -2139062144)
                                break A;
                              if (I7 = I7 + 4 | 0, !((g8 = g8 - 4 | 0) >>> 0 > 3))
                                break;
                            }
                        if (g8)
                          for (A9 &= 255; ; ) {
                            if ((0 | A9) == o3[0 | I7])
                              return I7;
                            if (I7 = I7 + 1 | 0, !(g8 = g8 - 1 | 0))
                              break;
                          }
                        return 0;
                      }(g7), n3[I6 >> 2] = A8 ? A8 - 36484 | 0 : 0, A8 ? 0 : -1;
                    }
                    function La(A8, g7) {
                      t3[0 | A8] = g7, t3[A8 + 1 | 0] = g7 >>> 8, t3[A8 + 2 | 0] = g7 >>> 16, t3[A8 + 3 | 0] = g7 >>> 24;
                    }
                    function Ka(A8, g7) {
                      var I6;
                      u3 = I6 = u3 - 128 | 0, function(A9, g8) {
                        ug(A9, g8), ug(A9 + 40 | 0, g8 + 40 | 0), ug(A9 + 80 | 0, g8 + 80 | 0);
                      }(I6 + 8 | 0, g7), Tg(A8, I6 + 8 | 0), u3 = I6 + 128 | 0;
                    }
                    function Xa(A8) {
                      var g7;
                      return u3 = g7 = u3 - 32 | 0, pA3(g7, A8), A8 = rI(g7, 32), u3 = g7 + 32 | 0, A8;
                    }
                    function Va(A8) {
                      var g7;
                      return u3 = g7 = u3 - 160 | 0, function(A9, g8) {
                        var I6, a4 = 0;
                        for (u3 = I6 = u3 - 1760 | 0, $I(I6 + 480 | 0, g8), Ka(I6 + 320 | 0, g8), UI(I6, I6 + 320 | 0), Jg(I6 + 320 | 0, I6, I6 + 480 | 0), UI(I6 + 160 | 0, I6 + 320 | 0), $I(g8 = I6 + 640 | 0, I6 + 160 | 0), Jg(I6 + 320 | 0, I6, g8), UI(I6 + 160 | 0, I6 + 320 | 0), $I(g8 = I6 + 800 | 0, I6 + 160 | 0), Jg(I6 + 320 | 0, I6, g8), UI(I6 + 160 | 0, I6 + 320 | 0), $I(g8 = I6 + 960 | 0, I6 + 160 | 0), Jg(I6 + 320 | 0, I6, g8), UI(I6 + 160 | 0, I6 + 320 | 0), $I(g8 = I6 + 1120 | 0, I6 + 160 | 0), Jg(I6 + 320 | 0, I6, g8), UI(I6 + 160 | 0, I6 + 320 | 0), $I(g8 = I6 + 1280 | 0, I6 + 160 | 0), Jg(I6 + 320 | 0, I6, g8), UI(I6 + 160 | 0, I6 + 320 | 0), $I(g8 = I6 + 1440 | 0, I6 + 160 | 0), Jg(I6 + 320 | 0, I6, g8), UI(I6 + 160 | 0, I6 + 320 | 0), $I(I6 + 1600 | 0, I6 + 160 | 0), sr(A9), g8 = 252; Ka(I6 + 320 | 0, A9), a4 = g8, (0 | (g8 = t3[g8 + 34256 | 0])) >= 1 ? (UI(I6 + 160 | 0, I6 + 320 | 0), Jg(I6 + 320 | 0, I6 + 160 | 0, (I6 + 480 | 0) + Q3((254 & g8) >>> 1 | 0, 160) | 0)) : (0 | g8) > -1 || (UI(I6 + 160 | 0, I6 + 320 | 0), Yg(I6 + 320 | 0, I6 + 160 | 0, (I6 + 480 | 0) + Q3((0 - g8 & 254) >>> 1 | 0, 160) | 0)), UI(A9, I6 + 320 | 0), g8 = a4 - 1 | 0, a4; )
                          ;
                        u3 = I6 + 1760 | 0;
                      }(g7, A8), A8 = Xa(g7), u3 = g7 + 160 | 0, A8;
                    }
                    function Wa(A8, g7) {
                      return g7 = n3[(A8 = ((g7 << 7) + A8 | 0) - 64 | 0) >> 2], h3 = n3[A8 + 4 >> 2], g7;
                    }
                    function Ta(A8) {
                      var g7;
                      return u3 = g7 = u3 - 32 | 0, pA3(g7, A8), u3 = g7 + 32 | 0, 1 & t3[0 | g7];
                    }
                    function Za(A8, g7, I6) {
                      NA(A8, g7, I6), NA(A8 + 40 | 0, g7 + 40 | 0, I6), NA(A8 + 80 | 0, g7 + 80 | 0, I6);
                    }
                    function ja(A8, g7, I6, a4) {
                      return M3(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, 20), 0;
                    }
                    function za(A8, g7, I6, a4) {
                      return M3(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, 12), 0;
                    }
                    function Oa(A8, g7, I6, a4) {
                      return M3(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, 8), 0;
                    }
                    function $a(A8, g7, I6, a4, r4, t4, B4, o4) {
                      return 0 | Vt[n3[9177]](A8, g7, I6, a4, r4, t4, B4, o4);
                    }
                    function Ar(A8, g7, I6, a4) {
                      return 0 | Wg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }
                    function gr(A8, g7, I6, a4) {
                      return 0 | la(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }
                    function Ir(A8, g7, I6, a4) {
                      return 0 | Sr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }
                    function ar(A8, g7, I6, a4) {
                      return 0 | IA3(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }
                    function rr(A8) {
                      t3[A8 + 32 | 0] = 1, t3[A8 + 33 | 0] = 0, t3[A8 + 34 | 0] = 0, t3[A8 + 35 | 0] = 0;
                    }
                    function tr(A8, g7, I6, a4, r4, t4) {
                      return 0 | Vt[n3[9177]](A8, g7, I6, a4, r4, 0, 0, t4);
                    }
                    function Br(A8) {
                      n3[A8 >> 2] = 0, n3[A8 + 4 >> 2] = 0, n3[A8 + 8 >> 2] = 0, n3[A8 + 12 >> 2] = 0;
                    }
                    function nr(A8) {
                      var g7;
                      return (g7 = n3[A8 >> 2]) && U3(g7), Ur(A8), 0;
                    }
                    function or(A8, g7) {
                      return function(A9, g8) {
                        var I6;
                        u3 = I6 = u3 - 736 | 0, ht(I6 + 704 | 0, g8), D3(I6 + 224 | 0, g8, I6 + 704 | 0), D3(I6 + 672 | 0, g8, I6 + 224 | 0), ht(I6 + 640 | 0, I6 + 672 | 0), D3(I6 + 416 | 0, I6 + 704 | 0, I6 + 640 | 0), D3(I6 + 320 | 0, g8, I6 + 416 | 0), ht(I6 + 608 | 0, I6 + 640 | 0), ht(I6 + 288 | 0, I6 + 320 | 0), D3(I6 + 576 | 0, I6 + 416 | 0, I6 + 288 | 0), D3(I6 + 448 | 0, I6 + 608 | 0, I6 + 288 | 0), ht(I6 + 544 | 0, I6 + 576 | 0), D3(I6 + 384 | 0, I6 + 608 | 0, I6 + 544 | 0), D3(I6 + 352 | 0, I6 + 224 | 0, I6 + 384 | 0), D3(I6 + 192 | 0, I6 + 608 | 0, I6 + 352 | 0), D3(I6 + 160 | 0, I6 + 672 | 0, I6 + 192 | 0), D3(I6 + 96 | 0, I6 + 672 | 0, I6 + 160 | 0), D3(I6 + 512 | 0, I6 + 544 | 0, I6 + 352 | 0), D3(I6 + 480 | 0, I6 + 672 | 0, I6 + 512 | 0), D3(I6 + 256 | 0, I6 + 448 | 0, I6 + 480 | 0), D3(I6 + 128 | 0, I6 + 288 | 0, I6 + 256 | 0), D3(I6 - -64 | 0, I6 + 384 | 0, I6 + 480 | 0), D3(I6 + 32 | 0, I6 + 672 | 0, I6 - -64 | 0), D3(I6, I6 + 416 | 0, I6 + 32 | 0), D3(A9, I6 + 320 | 0, I6), RI(A9, 126, I6 + 352 | 0), RI(A9, 9, I6 + 704 | 0), D3(A9, A9, I6), RI(A9, 7, I6 + 160 | 0), RI(A9, 9, I6), RI(A9, 11, I6 + 256 | 0), RI(A9, 8, I6 - -64 | 0), RI(A9, 9, I6 + 96 | 0), RI(A9, 6, I6 + 320 | 0), RI(A9, 14, I6 + 512 | 0), RI(A9, 10, I6 + 192 | 0), RI(A9, 9, I6 + 480 | 0), RI(A9, 10, I6), RI(A9, 8, I6 + 128 | 0), RI(A9, 8, I6 + 32 | 0), u3 = I6 + 736 | 0;
                      }(A8 |= 0, g7 |= 0), 0 - rI(g7, 32) | 0;
                    }
                    function er(A8) {
                      t3[0 | A8] = 0, t3[A8 + 1 | 0] = 0, t3[A8 + 2 | 0] = 0, t3[A8 + 3 | 0] = 0;
                    }
                    function Qr(A8, g7, I6) {
                      return 0 | xA(A8 |= 0, g7 |= 0, I6 |= 0);
                    }
                    function Cr(A8) {
                      t3[0 | A8] = 248 & o3[0 | A8], t3[A8 + 31 | 0] = 64 | o3[A8 + 31 | 0];
                    }
                    function cr(A8, g7, I6) {
                      return 0 | GI(A8 |= 0, g7 |= 0, I6 |= 0);
                    }
                    function ir(A8, g7, I6) {
                      return 0 | OI(A8 |= 0, g7 |= 0, I6 |= 0);
                    }
                    function _r(A8, g7, I6) {
                      return 0 | xg(A8 |= 0, g7 |= 0, I6 |= 0);
                    }
                    function sr(A8) {
                      wt(A8), gt(A8 + 40 | 0), gt(A8 + 80 | 0), wt(A8 + 120 | 0);
                    }
                    function yr() {
                      var A8;
                      (A8 = n3[9329]) && Vt[0 | A8](), _3(), c3();
                    }
                    function Er(A8, g7) {
                      return A8 |= 0, fI(g7 |= 0, 32), 0 | fr(A8, g7);
                    }
                    function pr(A8, g7, I6, a4, r4) {
                      return 0 | Vt[n3[9169]](A8, g7, I6, a4, r4);
                    }
                    function ur(A8, g7, I6, a4, r4) {
                      return 0 | Vt[n3[9176]](A8, g7, I6, a4, r4);
                    }
                    function fr(A8, g7) {
                      return A8 |= 0, g7 |= 0, 0 | Vt[n3[9175]](A8, g7);
                    }
                    function lr(A8, g7) {
                      return A8 = function(A9, g8) {
                        var I6 = 0, a4 = 0;
                        A: {
                          if (a4 = 255 & g8) {
                            if (3 & A9)
                              for (; ; ) {
                                if (!(I6 = o3[0 | A9]) | (0 | I6) == (255 & g8))
                                  break A;
                                if (!(3 & (A9 = A9 + 1 | 0)))
                                  break;
                              }
                            g:
                              if (!((-1 ^ (I6 = n3[A9 >> 2])) & I6 - 16843009 & -2139062144))
                                for (a4 = Q3(a4, 16843009); ; ) {
                                  if ((-1 ^ (I6 ^= a4)) & I6 - 16843009 & -2139062144)
                                    break g;
                                  if (I6 = n3[A9 + 4 >> 2], A9 = A9 + 4 | 0, I6 - 16843009 & (-1 ^ I6) & -2139062144)
                                    break;
                                }
                            for (; (a4 = o3[0 | (I6 = A9)]) && (A9 = I6 + 1 | 0, (0 | a4) != (255 & g8)); )
                              ;
                            return I6;
                          }
                          return cg(A9) + A9 | 0;
                        }
                        return A9;
                      }(A8, g7), o3[0 | A8] == (255 & g7) ? A8 : 0;
                    }
                    function hr(A8, g7, I6, a4, r4) {
                      return 0 | Vt[n3[9170]](A8, g7, I6, a4, r4);
                    }
                    function wr(A8, g7) {
                      return A8 |= 0, g7 |= 0, 0 | Vt[n3[9171]](A8, g7);
                    }
                    function Dr(A8, g7) {
                      return A8 |= 0, g7 |= 0, 0 | Vt[n3[9173]](A8, g7);
                    }
                    function mr(A8, g7, I6, a4, r4, t4, B4) {
                      return Aa(A8, g7, I6, a4, r4, t4, B4);
                    }
                    function Gr(A8, g7, I6, a4, r4, t4) {
                      return z3(A8, g7, I6, a4, r4, t4, 0), 0;
                    }
                    function kr(A8, g7, I6, a4, r4, t4, B4) {
                      return HA3(A8, g7, I6, a4, r4, t4, B4);
                    }
                    function Fr(A8, g7, I6, a4, r4, t4, B4) {
                      return YA(A8, g7, I6, a4, r4, t4, B4);
                    }
                    function br(A8, g7, I6, a4, r4, t4, B4) {
                      return dA3(A8, g7, I6, a4, r4, t4, B4);
                    }
                    function Hr(A8, g7, I6, a4, r4, t4, B4) {
                      return JA2(A8, g7, I6, a4, r4, t4, B4);
                    }
                    function dr(A8, g7, I6, a4, r4, t4) {
                      return SI(A8, g7, I6, a4, r4, 0, 0, t4);
                    }
                    function Sr(A8, g7, I6, a4) {
                      return 0 | Vt[n3[9172]](A8, g7, I6, a4);
                    }
                    function vr(A8, g7) {
                      return 0 | Pg(A8 |= 0, g7 |= 0, 64);
                    }
                    function Ur(A8) {
                      n3[A8 + 8 >> 2] = 0, n3[A8 >> 2] = 0, n3[A8 + 4 >> 2] = 0;
                    }
                    function Jr(A8, g7) {
                      return 0 | Pg(A8 |= 0, g7 |= 0, 16);
                    }
                    function Yr(A8, g7) {
                      return 0 | Pg(A8 |= 0, g7 |= 0, 32);
                    }
                    function xr(A8, g7, I6, a4, r4, B4) {
                      return function(A9, g8, I7, a5, r5, B5) {
                        return !a5 & I7 >>> 0 >= 32 | a5 ? (dr(A9, g8, I7, a5, r5, B5), pr(A9 + 16 | 0, A9 + 32 | 0, I7 - 32 | 0, a5 - (I7 >>> 0 < 32) | 0, A9), t3[A9 + 8 | 0] = 0, t3[A9 + 9 | 0] = 0, t3[A9 + 10 | 0] = 0, t3[A9 + 11 | 0] = 0, t3[A9 + 12 | 0] = 0, t3[A9 + 13 | 0] = 0, t3[A9 + 14 | 0] = 0, t3[A9 + 15 | 0] = 0, t3[0 | A9] = 0, t3[A9 + 1 | 0] = 0, t3[A9 + 2 | 0] = 0, t3[A9 + 3 | 0] = 0, t3[A9 + 4 | 0] = 0, t3[A9 + 5 | 0] = 0, t3[A9 + 6 | 0] = 0, t3[A9 + 7 | 0] = 0, A9 = 0) : A9 = -1, A9;
                      }(A8, g7, I6, a4, r4, B4);
                    }
                    function Nr(A8, g7, I6, a4, r4, B4) {
                      return function(A9, g8, I7, a5, r5, B5) {
                        var n4, o4 = 0;
                        return u3 = n4 = u3 - 32 | 0, o4 = -1, !a5 & I7 >>> 0 < 32 || (jI(n4, 32, 0, r5, B5), hr(g8 + 16 | 0, g8 + 32 | 0, I7 - 32 | 0, a5 - (I7 >>> 0 < 32) | 0, n4) || (dr(A9, g8, I7, a5, r5, B5), t3[A9 + 24 | 0] = 0, t3[A9 + 25 | 0] = 0, t3[A9 + 26 | 0] = 0, t3[A9 + 27 | 0] = 0, t3[A9 + 28 | 0] = 0, t3[A9 + 29 | 0] = 0, t3[A9 + 30 | 0] = 0, t3[A9 + 31 | 0] = 0, t3[A9 + 16 | 0] = 0, t3[A9 + 17 | 0] = 0, t3[A9 + 18 | 0] = 0, t3[A9 + 19 | 0] = 0, t3[A9 + 20 | 0] = 0, t3[A9 + 21 | 0] = 0, t3[A9 + 22 | 0] = 0, t3[A9 + 23 | 0] = 0, t3[A9 + 8 | 0] = 0, t3[A9 + 9 | 0] = 0, t3[A9 + 10 | 0] = 0, t3[A9 + 11 | 0] = 0, t3[A9 + 12 | 0] = 0, t3[A9 + 13 | 0] = 0, t3[A9 + 14 | 0] = 0, t3[A9 + 15 | 0] = 0, t3[0 | A9] = 0, t3[A9 + 1 | 0] = 0, t3[A9 + 2 | 0] = 0, t3[A9 + 3 | 0] = 0, t3[A9 + 4 | 0] = 0, t3[A9 + 5 | 0] = 0, t3[A9 + 6 | 0] = 0, t3[A9 + 7 | 0] = 0, o4 = 0)), u3 = n4 + 32 | 0, o4;
                      }(A8, g7, I6, a4, r4, B4);
                    }
                    function Mr(A8, g7) {
                      ga(A8), g7 && IA3(A8, 36608, 34, 0);
                    }
                    function Rr(A8, g7, I6) {
                      D3(A8 |= 0, g7 |= 0, I6 |= 0);
                    }
                    function Pr(A8, g7) {
                      return 0 | Er(A8 |= 0, g7 |= 0);
                    }
                    function qr(A8, g7) {
                      return function(A9, g8) {
                        var I6, a4 = 0, r4 = 0;
                        u3 = I6 = u3 - 48 | 0, a4 = o3[g8 + 28 | 0] | o3[g8 + 29 | 0] << 8 | o3[g8 + 30 | 0] << 16 | o3[g8 + 31 | 0] << 24, r4 = o3[g8 + 24 | 0] | o3[g8 + 25 | 0] << 8 | o3[g8 + 26 | 0] << 16 | o3[g8 + 27 | 0] << 24, t3[A9 + 24 | 0] = r4, t3[A9 + 25 | 0] = r4 >>> 8, t3[A9 + 26 | 0] = r4 >>> 16, t3[A9 + 27 | 0] = r4 >>> 24, t3[A9 + 28 | 0] = a4, t3[A9 + 29 | 0] = a4 >>> 8, t3[A9 + 30 | 0] = a4 >>> 16, t3[A9 + 31 | 0] = a4 >>> 24, a4 = o3[g8 + 4 | 0] | o3[g8 + 5 | 0] << 8 | o3[g8 + 6 | 0] << 16 | o3[g8 + 7 | 0] << 24, r4 = o3[0 | g8] | o3[g8 + 1 | 0] << 8 | o3[g8 + 2 | 0] << 16 | o3[g8 + 3 | 0] << 24, t3[0 | A9] = r4, t3[A9 + 1 | 0] = r4 >>> 8, t3[A9 + 2 | 0] = r4 >>> 16, t3[A9 + 3 | 0] = r4 >>> 24, t3[A9 + 4 | 0] = a4, t3[A9 + 5 | 0] = a4 >>> 8, t3[A9 + 6 | 0] = a4 >>> 16, t3[A9 + 7 | 0] = a4 >>> 24, a4 = o3[g8 + 20 | 0] | o3[g8 + 21 | 0] << 8 | o3[g8 + 22 | 0] << 16 | o3[g8 + 23 | 0] << 24, r4 = o3[g8 + 16 | 0] | o3[g8 + 17 | 0] << 8 | o3[g8 + 18 | 0] << 16 | o3[g8 + 19 | 0] << 24, t3[A9 + 16 | 0] = r4, t3[A9 + 17 | 0] = r4 >>> 8, t3[A9 + 18 | 0] = r4 >>> 16, t3[A9 + 19 | 0] = r4 >>> 24, t3[A9 + 20 | 0] = a4, t3[A9 + 21 | 0] = a4 >>> 8, t3[A9 + 22 | 0] = a4 >>> 16, t3[A9 + 23 | 0] = a4 >>> 24, a4 = o3[g8 + 12 | 0] | o3[g8 + 13 | 0] << 8 | o3[g8 + 14 | 0] << 16 | o3[g8 + 15 | 0] << 24, g8 = o3[g8 + 8 | 0] | o3[g8 + 9 | 0] << 8 | o3[g8 + 10 | 0] << 16 | o3[g8 + 11 | 0] << 24, t3[A9 + 8 | 0] = g8, t3[A9 + 9 | 0] = g8 >>> 8, t3[A9 + 10 | 0] = g8 >>> 16, t3[A9 + 11 | 0] = g8 >>> 24, t3[A9 + 12 | 0] = a4, t3[A9 + 13 | 0] = a4 >>> 8, t3[A9 + 14 | 0] = a4 >>> 16, t3[A9 + 15 | 0] = a4 >>> 24, g8 = o3[A9 + 31 | 0], t3[A9 + 31 | 0] = 127 & g8, P3(I6, A9), GA3(A9, I6, 128 & g8), u3 = I6 + 48 | 0;
                      }(A8 |= 0, g7 |= 0), 0;
                    }
                    function Lr(A8, g7, I6, a4, r4) {
                      return ag(A8, g7, I6, a4, r4, 0);
                    }
                    function Kr(A8, g7) {
                      return function(A9, g8) {
                        var I6;
                        u3 = I6 = u3 - 896 | 0, P3(I6 + 848 | 0, g8), P3(I6 + 800 | 0, g8 + 32 | 0), _A3(I6 + 320 | 0, I6 + 848 | 0), _A3(I6 + 160 | 0, I6 + 800 | 0), $I(I6 + 640 | 0, I6 + 160 | 0), Jg(I6 + 480 | 0, I6 + 320 | 0, I6 + 640 | 0), UI(I6, I6 + 480 | 0), mA3(A9, I6), u3 = I6 + 896 | 0;
                      }(A8 |= 0, g7 |= 0), 0;
                    }
                    function Xr(A8, g7) {
                      return 0 | fr(A8 |= 0, g7 |= 0);
                    }
                    function Vr(A8, g7) {
                      return (255 & (A8 ^ g7)) - 1 >>> 31 | 0;
                    }
                    function Wr(A8, g7, I6, a4) {
                      return function(A9, g8, I7, a5) {
                        var r4, t4, B4, n4, o4 = 0, e4 = 0;
                        return n4 = Q3(o4 = I7 >>> 16 | 0, e4 = A9 >>> 16 | 0), o4 = (65535 & (e4 = ((B4 = Q3(r4 = 65535 & I7, t4 = 65535 & A9)) >>> 16 | 0) + Q3(e4, r4) | 0)) + Q3(o4, t4) | 0, A9 = (Q3(g8, I7) + n4 | 0) + Q3(A9, a5) + (e4 >>> 16) + (o4 >>> 16) | 0, h3 = A9, 65535 & B4 | o4 << 16;
                      }(A8, g7, I6, a4);
                    }
                    function Tr(A8, g7, I6) {
                      !function(A9, g8, I7) {
                        var a4, r4;
                        u3 = a4 = u3 - 128 | 0, r4 = nt(I7), gt(A9), gt(A9 + 40 | 0), wt(A9 + 80 | 0), Za(A9, g8, Vr(I7 = I7 - ((0 - r4 & I7) << 1) << 24 >> 24, 1)), Za(A9, g8 + 120 | 0, Vr(I7, 2)), Za(A9, g8 + 240 | 0, Vr(I7, 3)), Za(A9, g8 + 360 | 0, Vr(I7, 4)), Za(A9, g8 + 480 | 0, Vr(I7, 5)), Za(A9, g8 + 600 | 0, Vr(I7, 6)), Za(A9, g8 + 720 | 0, Vr(I7, 7)), Za(A9, g8 + 840 | 0, Vr(I7, 8)), ug(a4 + 8 | 0, A9 + 40 | 0), ug(a4 + 48 | 0, A9), _g(a4 + 88 | 0, A9 + 80 | 0), Za(A9, a4 + 8 | 0, r4), u3 = a4 + 128 | 0;
                      }(A8, Q3(g7, 960) + 3536 | 0, I6);
                    }
                    function Zr(A8, g7, I6, a4) {
                      return IA3(A8, g7, I6, a4), 0;
                    }
                    function jr(A8, g7, I6, a4) {
                      return QA3(A8, g7, I6, a4), 0;
                    }
                    function zr(A8, g7, I6, a4) {
                      return Ag(A8, g7, I6, a4, 1);
                    }
                    function Or(A8, g7, I6, a4) {
                      return Ag(A8, g7, I6, a4, 2);
                    }
                    function $r(A8, g7, I6, a4) {
                      return Zr(A8, g7, I6, a4);
                    }
                    function At(A8, g7, I6, a4) {
                      return uA3(A8, g7, I6, a4);
                    }
                    function gt(A8) {
                      n3[A8 >> 2] = 1, DA3(A8 + 4 | 0, 0, 36);
                    }
                    function It(A8, g7, I6, a4) {
                      return At(A8, g7, I6, a4);
                    }
                    function at(A8, g7, I6) {
                      return function(A9, g8, I7) {
                        var a4 = 0, r4 = 0, t4 = 0, B4 = 0;
                        return a4 = 31 & (t4 = B4 = 63 & I7), t4 >>> 0 >= 32 ? a4 = -1 >>> a4 | 0 : (r4 = -1 >>> a4 | 0, a4 = (1 << a4) - 1 << 32 - a4 | -1 >>> a4), t4 = a4 & A9, a4 = g8 & r4, r4 = 31 & B4, B4 >>> 0 >= 32 ? (a4 = t4 << r4, B4 = 0) : (a4 = (1 << r4) - 1 & t4 >>> 32 - r4 | a4 << r4, B4 = t4 << r4), t4 = a4, I7 = 31 & (a4 = r4 = 0 - I7 & 63), a4 >>> 0 >= 32 ? (a4 = -1 << I7, I7 = 0) : (a4 = (1 << I7) - 1 & -1 >>> 32 - I7 | -1 << I7, I7 = -1 << I7), A9 &= I7, a4 &= g8, g8 = 31 & r4, r4 >>> 0 >= 32 ? (I7 = 0, A9 = a4 >>> g8 | 0) : (I7 = a4 >>> g8 | 0, A9 = ((1 << g8) - 1 & a4) << 32 - g8 | A9 >>> g8), h3 = I7 | t4, A9 | B4;
                      }(A8, g7, I6);
                    }
                    function rt(A8, g7, I6) {
                      return function(A9, g8, I7) {
                        var a4 = 0, r4 = 0, t4 = 0, B4 = 0, n4 = 0;
                        return a4 = 31 & (B4 = 63 & I7), B4 >>> 0 >= 32 ? (r4 = -1 << a4, n4 = 0) : (r4 = (1 << a4) - 1 & -1 >>> 32 - a4 | -1 << a4, n4 = -1 << a4), n4 &= A9, a4 = g8 & r4, t4 = 31 & B4, B4 >>> 0 >= 32 ? (r4 = 0, B4 = a4 >>> t4 | 0) : (r4 = a4 >>> t4 | 0, B4 = ((1 << t4) - 1 & a4) << 32 - t4 | n4 >>> t4), n4 = r4, t4 = 31 & (a4 = 0 - I7 & 63), a4 >>> 0 >= 32 ? (r4 = 0, I7 = -1 >>> t4 | 0) : (r4 = -1 >>> t4 | 0, I7 = (1 << t4) - 1 << 32 - t4 | -1 >>> t4), A9 &= I7, g8 &= r4, r4 = 31 & a4, a4 >>> 0 >= 32 ? (I7 = A9 << r4, A9 = 0) : (I7 = (1 << r4) - 1 & A9 >>> 32 - r4 | g8 << r4, A9 <<= r4), h3 = I7 | n4, A9 | B4;
                      }(A8, g7, I6);
                    }
                    function tt(A8) {
                      (-7 & A8) != 1 && (yr(), c3());
                    }
                    function Bt(A8) {
                      return ga(A8 |= 0), 0;
                    }
                    function nt(A8) {
                      return (128 & A8) >>> 7 | 0;
                    }
                    function ot() {
                      return -2147483648;
                    }
                    function et() {
                      return 1073741824;
                    }
                    function Qt(A8, g7) {
                      Ma(A8, g7, Ta(g7));
                    }
                    function Ct(A8, g7) {
                      return fa(A8, g7);
                    }
                    function ct(A8, g7) {
                      return function(A9, g8) {
                        var I6 = 0;
                        return (-1 << (I6 = 31 & g8) & A9) >>> I6 | 0 | ((I6 = A9) & -1 >>> (A9 = 0 - g8 & 31)) << A9;
                      }(A8, g7);
                    }
                    function it() {
                      return 268435456;
                    }
                    function _t(A8) {
                      fI(A8 |= 0, 32);
                    }
                    function st() {
                      return 16777216;
                    }
                    function yt(A8, g7) {
                      gA3(A8, g7, 1024);
                    }
                    function Et() {
                      return 33554432;
                    }
                    function pt() {
                      return 67108864;
                    }
                    function ut(A8) {
                      return Ur(A8), 0;
                    }
                    function ft(A8) {
                      return nr(A8), 0;
                    }
                    function lt(A8) {
                      DA3(A8, 0, 1024);
                    }
                    function ht(A8, g7) {
                      D3(A8, g7, g7);
                    }
                    function wt(A8) {
                      DA3(A8, 0, 40);
                    }
                    function Dt() {
                      return 8192;
                    }
                    function mt() {
                      return 256;
                    }
                    function Gt() {
                      return 384;
                    }
                    function kt() {
                      return 208;
                    }
                    function Ft() {
                      return 128;
                    }
                    function bt() {
                      return 416;
                    }
                    function Ht() {
                      return 64;
                    }
                    function dt() {
                      return 16;
                    }
                    function St() {
                      return 48;
                    }
                    function vt() {
                      return 32;
                    }
                    function Ut() {
                      return -65;
                    }
                    function Jt() {
                      return -17;
                    }
                    function Yt() {
                      return 12;
                    }
                    function xt() {
                      return 24;
                    }
                    function Nt() {
                      return 1;
                    }
                    function Mt() {
                      return 3;
                    }
                    function Rt() {
                      return -1;
                    }
                    function Pt() {
                      return 2;
                    }
                    function qt() {
                      return 0;
                    }
                    function Lt() {
                      return 8;
                    }
                    function Kt() {
                      return 4;
                    }
                    r3(g6 = o3, 1024, "anMAInsgcmV0dXJuIE1vZHVsZS5nZXRSYW5kb21WYWx1ZSgpOyB9IgB7IGlmIChNb2R1bGUuZ2V0UmFuZG9tVmFsdWUgPT09IHVuZGVmaW5lZCkgeyB0cnkgeyB2YXIgd2luZG93XyA9ICdvYmplY3QnID09PSB0eXBlb2Ygd2luZG93ID8gd2luZG93IDogc2VsZjsgdmFyIGNyeXB0b18gPSB0eXBlb2Ygd2luZG93Xy5jcnlwdG8gIT09ICd1bmRlZmluZWQnID8gd2luZG93Xy5jcnlwdG8gOiB3aW5kb3dfLm1zQ3J5cHRvOyB2YXIgcmFuZG9tVmFsdWVzU3RhbmRhcmQgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IG5ldyBVaW50MzJBcnJheSgxKTsgY3J5cHRvXy5nZXRSYW5kb21WYWx1ZXMoYnVmKTsgcmV0dXJuIGJ1ZlswXSA+Pj4gMDsgfTsgcmFuZG9tVmFsdWVzU3RhbmRhcmQoKTsgTW9kdWxlLmdldFJhbmRvbVZhbHVlID0gcmFuZG9tVmFsdWVzU3RhbmRhcmQ7IH0gY2F0Y2ggKGUpIHsgdHJ5IHsgdmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpOyB2YXIgcmFuZG9tVmFsdWVOb2RlSlMgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IGNyeXB0b1sncmFuZG9tQnl0ZXMnXSg0KTsgcmV0dXJuIChidWZbMF0gPDwgMjQgfCBidWZbMV0gPDwgMTYgfCBidWZbMl0gPDwgOCB8IGJ1ZlszXSkgPj4+IDA7IH07IHJhbmRvbVZhbHVlTm9kZUpTKCk7IE1vZHVsZS5nZXRSYW5kb21WYWx1ZSA9IHJhbmRvbVZhbHVlTm9kZUpTOyB9IGNhdGNoIChlKSB7IHRocm93ICdObyBzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgZm91bmQnOyB9IH0gfSB9AExpYnNvZGl1bURSR2J1Zl9sZW4gPD0gU0laRV9NQVgAcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwByYW5kb21ieXRlcwBTLT5idWZsZW4gPD0gQkxBS0UyQl9CTE9DS0JZVEVTAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGJsYWtlMmJfZmluYWwAAAAAAAjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeSF+ExnN4FtvdXRsZW4gPD0gVUlOVDhfTUFYAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAAAAAAAAAtnhZ/4Vy0wC9bhX/DwpqACnAAQCY6Hn/vDyg/5lxzv8At+L+tA1I/wAAAAAAAAAAsKAO/tPJhv+eGI8Af2k1AGAMvQCn1/v/n0yA/mpl4f8e/AQAkgyu"), r3(g6, 2224, "WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"), r3(g6, 2272, "hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"), r3(g6, 3264, "AQ=="), r3(g6, 3296, "JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="), r3(g6, 3487, ""), r3(g6, 34508, "AQAAAAZtBw=="), r3(g6, 34560, "dsFfAGVwAv9Q/KH+8mrG/4UGsgDk33AA3+5V/jPzGgA+K4v+y0EK"), r3(g6, 34608, "M03tAJGqVv82JjP/8YBl/yl5Sv/sTpsAqZdp/pwpSADCZq//zqJl/wAAAAAAAAAAGy57ARKo/f/Tr5f+w9tgADh2vv7+0fX/mWR+/uiBFf81uPL/x6Td"), r3(g6, 34736, "AQ=="), r3(g6, 34768, "4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw=="), r3(g6, 34960, "CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA"), r3(g6, 35792, "aG1hY3NoYTUxMjI1NgAAAGfmCWqFrme7cvNuPDr1T6V/Ug5RjGgFm6vZgx8ZzeBbmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBmcpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsGkGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxoA="), r3(g6, 36176, "Y3VydmUyNTUxOXhzYWxzYTIwcG9seTEzMDU="), r3(g6, 36224, "Ymxha2UyYg=="), r3(g6, 36240, "7dP1XBpjEljWnPei3vneFA=="), r3(g6, 36271, "EHNoYTUxMgBibGFrZTJiAGN1cnZlMjU1MTkAeDI1NTE5Ymxha2UyYgBwb2x5MTMwNQBiNjRfcG9zIDw9IGI2NF9sZW4Ac29kaXVtL2NvZGVjcy5jAHNvZGl1bV9iaW4yYmFzZTY0ACRhcmdvbjJpZAAkYXJnb24yaQAkdj0AJG09ACx0PQAscD0AJGFyZ29uMmlkJHY9ACRhcmdvbjJpJHY9ACRhcmdvbjJpJAAkYXJnb24yaWQkACRhcmdvbjJpZCQAJGFyZ29uMmkkAGFyZ29uMmkALi8wMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5egAkNyQAeHNhbHNhMjBwb2x5MTMwNQ=="), r3(g6, 36592, "c2lwaGFzaDI0AAAAAAAAAFNpZ0VkMjU1MTkgbm8gRWQyNTUxOSBjb2xsaXNpb25zAQBlZDI1NTE5AHhzYWxzYTIwADEuMC4xOA=="), r3(g6, 36668, "0JFQAABAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAAN");
                    var Xt, Vt = ((Xt = [null, uI, function(A8, g7, I6, a4, r4) {
                      var t4;
                      return A8 |= 0, u3 = t4 = u3 - 16 | 0, uI(t4, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0), A8 = Jr(A8, t4), u3 = t4 + 16 | 0, 0 | A8;
                    }, function(A8, g7) {
                      return sA3(A8 |= 0, g7 |= 0), 0;
                    }, function(A8, g7, I6, a4) {
                      return CA3(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0), 0;
                    }, function(A8, g7) {
                      return nA3(A8 |= 0, g7 |= 0), 0;
                    }, function(A8, g7, I6) {
                      A8 |= 0, g7 |= 0;
                      var a4, r4 = 0, B4 = 0;
                      if (u3 = a4 = u3 - 336 | 0, r4 = -1, !function(A9) {
                        var g8, I7 = 0, a5 = 0, r5 = 0, B5 = 0;
                        for (t3[11 + (g8 = u3 - 16 | 0) | 0] = 0, t3[g8 + 12 | 0] = 0, t3[g8 + 13 | 0] = 0, t3[g8 + 14 | 0] = 0, n3[g8 + 8 >> 2] = 0; ; ) {
                          for (r5 = o3[A9 + a5 | 0], I7 = 0; t3[0 | (B5 = (g8 + 8 | 0) + I7 | 0)] = o3[0 | B5] | r5 ^ o3[(34704 + (I7 << 5) | 0) + a5 | 0], (0 | (I7 = I7 + 1 | 0)) != 7; )
                            ;
                          if ((0 | (a5 = a5 + 1 | 0)) == 31)
                            break;
                        }
                        for (a5 = 127 & o3[A9 + 31 | 0], A9 = 0, I7 = 0; t3[0 | (r5 = (g8 + 8 | 0) + I7 | 0)] = o3[0 | r5] | a5 ^ o3[34735 + (I7 << 5) | 0], (0 | (I7 = I7 + 1 | 0)) != 7; )
                          ;
                        for (I7 = 0; I7 = o3[(g8 + 8 | 0) + A9 | 0] - 1 | I7, (0 | (A9 = A9 + 1 | 0)) != 7; )
                          ;
                        return I7 >>> 8 & 1;
                      }(I6 |= 0)) {
                        for (r4 = 0; t3[A8 + r4 | 0] = o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != 32; )
                          ;
                        for (t3[0 | A8] = 248 & o3[0 | A8], t3[A8 + 31 | 0] = 63 & o3[A8 + 31 | 0] | 64, P3(a4 + 288 | 0, I6), gt(a4 + 240 | 0), wt(a4 + 192 | 0), ug(a4 + 144 | 0, a4 + 288 | 0), gt(a4 + 96 | 0), I6 = 254, g7 = 0; r4 = g7, B4 = I6, iA3(a4 + 240 | 0, a4 + 144 | 0, r4 ^= g7 = o3[(I6 >>> 3 | 0) + A8 | 0] >>> (7 & I6) & 1), iA3(a4 + 192 | 0, a4 + 96 | 0, r4), I6 = I6 - 1 | 0, ZA(a4 + 48 | 0, a4 + 144 | 0, a4 + 96 | 0), ZA(a4, a4 + 240 | 0, a4 + 192 | 0), jA(a4 + 240 | 0, a4 + 240 | 0, a4 + 192 | 0), jA(a4 + 192 | 0, a4 + 144 | 0, a4 + 96 | 0), F3(a4 + 96 | 0, a4 + 48 | 0, a4 + 240 | 0), F3(a4 + 192 | 0, a4 + 192 | 0, a4), H3(a4 + 48 | 0, a4), H3(a4, a4 + 240 | 0), jA(a4 + 144 | 0, a4 + 96 | 0, a4 + 192 | 0), ZA(a4 + 192 | 0, a4 + 96 | 0, a4 + 192 | 0), F3(a4 + 240 | 0, a4, a4 + 48 | 0), ZA(a4, a4, a4 + 48 | 0), H3(a4 + 192 | 0, a4 + 192 | 0), q3(a4 + 96 | 0, a4), H3(a4 + 144 | 0, a4 + 144 | 0), jA(a4 + 48 | 0, a4 + 48 | 0, a4 + 96 | 0), F3(a4 + 96 | 0, a4 + 288 | 0, a4 + 192 | 0), F3(a4 + 192 | 0, a4, a4 + 48 | 0), B4; )
                          ;
                        iA3(a4 + 240 | 0, a4 + 144 | 0, g7), iA3(a4 + 192 | 0, a4 + 96 | 0, g7), tA3(a4 + 192 | 0, a4 + 192 | 0), F3(a4 + 240 | 0, a4 + 240 | 0, a4 + 192 | 0), pA3(A8, a4 + 240 | 0), r4 = 0;
                      }
                      return u3 = a4 + 336 | 0, 0 | r4;
                    }, function(A8, g7) {
                      A8 |= 0, g7 |= 0;
                      var I6, a4 = 0;
                      for (u3 = I6 = u3 - 208 | 0; t3[A8 + a4 | 0] = o3[g7 + a4 | 0], (0 | (a4 = a4 + 1 | 0)) != 32; )
                        ;
                      return t3[0 | A8] = 248 & o3[0 | A8], t3[A8 + 31 | 0] = 63 & o3[A8 + 31 | 0] | 64, lA3(I6 + 48 | 0, A8), function(A9, g8, I7) {
                        var a5;
                        u3 = a5 = u3 - 96 | 0, jA(a5 + 48 | 0, I7, g8), ZA(a5, I7, g8), tA3(a5, a5), F3(A9, a5 + 48 | 0, a5), u3 = a5 + 96 | 0;
                      }(I6, I6 + 88 | 0, I6 + 128 | 0), pA3(A8, I6), u3 = I6 + 208 | 0, 0;
                    }, function(A8, g7, I6, a4, r4) {
                      A8 |= 0, a4 |= 0, r4 |= 0;
                      var B4, e4 = 0;
                      if (u3 = B4 = u3 - 112 | 0, (g7 |= 0) | (I6 |= 0)) {
                        e4 = o3[r4 + 28 | 0] | o3[r4 + 29 | 0] << 8 | o3[r4 + 30 | 0] << 16 | o3[r4 + 31 | 0] << 24, n3[B4 + 24 >> 2] = o3[r4 + 24 | 0] | o3[r4 + 25 | 0] << 8 | o3[r4 + 26 | 0] << 16 | o3[r4 + 27 | 0] << 24, n3[B4 + 28 >> 2] = e4, e4 = o3[r4 + 20 | 0] | o3[r4 + 21 | 0] << 8 | o3[r4 + 22 | 0] << 16 | o3[r4 + 23 | 0] << 24, n3[B4 + 16 >> 2] = o3[r4 + 16 | 0] | o3[r4 + 17 | 0] << 8 | o3[r4 + 18 | 0] << 16 | o3[r4 + 19 | 0] << 24, n3[B4 + 20 >> 2] = e4, e4 = o3[r4 + 4 | 0] | o3[r4 + 5 | 0] << 8 | o3[r4 + 6 | 0] << 16 | o3[r4 + 7 | 0] << 24, n3[B4 >> 2] = o3[0 | r4] | o3[r4 + 1 | 0] << 8 | o3[r4 + 2 | 0] << 16 | o3[r4 + 3 | 0] << 24, n3[B4 + 4 >> 2] = e4, e4 = o3[r4 + 12 | 0] | o3[r4 + 13 | 0] << 8 | o3[r4 + 14 | 0] << 16 | o3[r4 + 15 | 0] << 24, n3[B4 + 8 >> 2] = o3[r4 + 8 | 0] | o3[r4 + 9 | 0] << 8 | o3[r4 + 10 | 0] << 16 | o3[r4 + 11 | 0] << 24, n3[B4 + 12 >> 2] = e4, r4 = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, a4 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, n3[B4 + 104 >> 2] = 0, n3[B4 + 108 >> 2] = 0, n3[B4 + 96 >> 2] = r4, n3[B4 + 100 >> 2] = a4;
                        A: {
                          if (!I6 & g7 >>> 0 >= 64 | I6) {
                            for (; ; ) {
                              for (ja(A8, B4 + 96 | 0, B4, 0), r4 = 8, a4 = 1; a4 = o3[0 | (e4 = (B4 + 96 | 0) + r4 | 0)] + a4 | 0, t3[0 | e4] = a4, a4 = a4 >>> 8 | 0, (0 | (r4 = r4 + 1 | 0)) != 16; )
                                ;
                              if (A8 = A8 - -64 | 0, I6 = I6 - 1 | 0, !(!(I6 = (g7 = g7 + -64 | 0) >>> 0 < 4294967232 ? I6 + 1 | 0 : I6) & g7 >>> 0 > 63 | I6))
                                break;
                            }
                            if (!(g7 | I6))
                              break A;
                          }
                          for (r4 = 0, ja(B4 + 32 | 0, B4 + 96 | 0, B4, 0); t3[A8 + r4 | 0] = o3[(B4 + 32 | 0) + r4 | 0], (0 | g7) != (0 | (r4 = r4 + 1 | 0)); )
                            ;
                        }
                        pI(B4 + 32 | 0, 64), pI(B4, 32);
                      }
                      return u3 = B4 + 112 | 0, 0;
                    }, function(A8, g7, I6, a4, r4, B4, e4, Q4) {
                      A8 |= 0, g7 |= 0, r4 |= 0, B4 |= 0, e4 |= 0, Q4 |= 0;
                      var C4, c4 = 0, i4 = 0;
                      if (u3 = C4 = u3 - 112 | 0, (I6 |= 0) | (a4 |= 0)) {
                        for (c4 = o3[Q4 + 28 | 0] | o3[Q4 + 29 | 0] << 8 | o3[Q4 + 30 | 0] << 16 | o3[Q4 + 31 | 0] << 24, n3[C4 + 24 >> 2] = o3[Q4 + 24 | 0] | o3[Q4 + 25 | 0] << 8 | o3[Q4 + 26 | 0] << 16 | o3[Q4 + 27 | 0] << 24, n3[C4 + 28 >> 2] = c4, c4 = o3[Q4 + 20 | 0] | o3[Q4 + 21 | 0] << 8 | o3[Q4 + 22 | 0] << 16 | o3[Q4 + 23 | 0] << 24, n3[C4 + 16 >> 2] = o3[Q4 + 16 | 0] | o3[Q4 + 17 | 0] << 8 | o3[Q4 + 18 | 0] << 16 | o3[Q4 + 19 | 0] << 24, n3[C4 + 20 >> 2] = c4, c4 = o3[Q4 + 4 | 0] | o3[Q4 + 5 | 0] << 8 | o3[Q4 + 6 | 0] << 16 | o3[Q4 + 7 | 0] << 24, n3[C4 >> 2] = o3[0 | Q4] | o3[Q4 + 1 | 0] << 8 | o3[Q4 + 2 | 0] << 16 | o3[Q4 + 3 | 0] << 24, n3[C4 + 4 >> 2] = c4, c4 = 8, i4 = o3[Q4 + 12 | 0] | o3[Q4 + 13 | 0] << 8 | o3[Q4 + 14 | 0] << 16 | o3[Q4 + 15 | 0] << 24, n3[C4 + 8 >> 2] = o3[Q4 + 8 | 0] | o3[Q4 + 9 | 0] << 8 | o3[Q4 + 10 | 0] << 16 | o3[Q4 + 11 | 0] << 24, n3[C4 + 12 >> 2] = i4, Q4 = o3[r4 + 4 | 0] | o3[r4 + 5 | 0] << 8 | o3[r4 + 6 | 0] << 16 | o3[r4 + 7 | 0] << 24, n3[C4 + 96 >> 2] = o3[0 | r4] | o3[r4 + 1 | 0] << 8 | o3[r4 + 2 | 0] << 16 | o3[r4 + 3 | 0] << 24, n3[C4 + 100 >> 2] = Q4; t3[(C4 + 96 | 0) + c4 | 0] = B4, B4 = (255 & e4) << 24 | B4 >>> 8, e4 = e4 >>> 8 | 0, (0 | (c4 = c4 + 1 | 0)) != 16; )
                          ;
                        if (!a4 & I6 >>> 0 > 63 | a4)
                          for (; ; ) {
                            for (c4 = 0, ja(C4 + 32 | 0, C4 + 96 | 0, C4, 0); t3[A8 + c4 | 0] = o3[(C4 + 32 | 0) + c4 | 0] ^ o3[g7 + c4 | 0], Q4 = 1, (0 | (c4 = c4 + 1 | 0)) != 64; )
                              ;
                            for (c4 = 8; r4 = o3[0 | (B4 = (C4 + 96 | 0) + c4 | 0)] + Q4 | 0, t3[0 | B4] = r4, Q4 = r4 >>> 8 | 0, (0 | (c4 = c4 + 1 | 0)) != 16; )
                              ;
                            if (g7 = g7 - -64 | 0, A8 = A8 - -64 | 0, a4 = a4 - 1 | 0, !(!(a4 = (I6 = I6 + -64 | 0) >>> 0 < 4294967232 ? a4 + 1 | 0 : a4) & I6 >>> 0 > 63 | a4))
                              break;
                          }
                        if (I6 | a4)
                          for (c4 = 0, ja(C4 + 32 | 0, C4 + 96 | 0, C4, 0); t3[A8 + c4 | 0] = o3[(C4 + 32 | 0) + c4 | 0] ^ o3[g7 + c4 | 0], (0 | I6) != (0 | (c4 = c4 + 1 | 0)); )
                            ;
                        pI(C4 + 32 | 0, 64), pI(C4, 32);
                      }
                      return u3 = C4 + 112 | 0, 0;
                    }, function(A8, g7, I6, a4, r4) {
                      var t4;
                      return A8 |= 0, a4 |= 0, u3 = t4 = u3 + -64 | 0, (g7 |= 0) | (I6 |= 0) && (vA3(t4, r4 |= 0), pg(t4, a4, 0), J3(t4, A8 = DA3(A8, 0, g7), A8, g7, I6), pI(t4, 64)), u3 = t4 - -64 | 0, 0;
                    }, function(A8, g7, I6, a4, r4) {
                      var t4;
                      return A8 |= 0, a4 |= 0, u3 = t4 = u3 + -64 | 0, (g7 |= 0) | (I6 |= 0) && (vA3(t4, r4 |= 0), Gg(t4, a4, 0), J3(t4, A8 = DA3(A8, 0, g7), A8, g7, I6), pI(t4, 64)), u3 = t4 - -64 | 0, 0;
                    }, function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      var o4;
                      return A8 |= 0, g7 |= 0, r4 |= 0, B4 |= 0, n4 |= 0, u3 = o4 = u3 - 80 | 0, (I6 |= 0) | (a4 |= 0) && (La(o4 + 8 | 0, t4 |= 0), La(o4 + 12 | 0, B4), vA3(o4 + 16 | 0, n4), pg(o4 + 16 | 0, r4, o4 + 8 | 0), J3(o4 + 16 | 0, g7, A8, I6, a4), pI(o4 + 16 | 0, 64)), u3 = o4 + 80 | 0, 0;
                    }, function(A8, g7, I6, a4, r4, t4, B4) {
                      var n4;
                      return A8 |= 0, g7 |= 0, r4 |= 0, B4 |= 0, u3 = n4 = u3 - 80 | 0, (I6 |= 0) | (a4 |= 0) && (La(n4 + 12 | 0, t4 |= 0), vA3(n4 + 16 | 0, B4), Gg(n4 + 16 | 0, r4, n4 + 12 | 0), J3(n4 + 16 | 0, g7, A8, I6, a4), pI(n4 + 16 | 0, 64)), u3 = n4 + 80 | 0, 0;
                    }]).grow = function(A8) {
                      var g7 = this.length;
                      return this.length = this.length + A8, g7;
                    }, Xt.set = function(A8, g7) {
                      this[A8] = g7;
                    }, Xt.get = function(A8) {
                      return this[A8];
                    }, Xt);
                    function Wt() {
                      return a3.byteLength / 65536 | 0;
                    }
                    return { h: Vt, i: function() {
                    }, j: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4, C4) {
                      return 0 | Eg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, Q4 |= 0, C4 |= 0);
                    }, k: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        if (!r5 & a5 >>> 0 < 4294967280)
                          return Eg(A9, A9 + a5 | 0, 0, I7, a5, r5, t5, B5, o5, e5, Q5), g8 && (r5 = (A9 = a5 + 16 | 0) >>> 0 < 16 ? r5 + 1 | 0 : r5, n3[g8 >> 2] = A9, n3[g8 + 4 >> 2] = r5), 0;
                        yr(), c3();
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, Q4 |= 0, C4 |= 0);
                    }, l: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4, C4) {
                      return 0 | Qg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, Q4 |= 0, C4 |= 0);
                    }, m: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        if (!r5 & a5 >>> 0 < 4294967280)
                          return Qg(A9, A9 + a5 | 0, 0, I7, a5, r5, t5, B5, o5, e5, Q5), g8 && (r5 = (A9 = a5 + 16 | 0) >>> 0 < 16 ? r5 + 1 | 0 : r5, n3[g8 >> 2] = A9, n3[g8 + 4 >> 2] = r5), 0;
                        yr(), c3();
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, Q4 |= 0, C4 |= 0);
                    }, n: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4) {
                      return 0 | Cg(A8 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0);
                    }, o: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        var C5 = 0;
                        return C5 = -1, !r5 & a5 >>> 0 >= 16 | r5 && (C5 = Cg(A9, I7, a5 - 16 | 0, r5 - (a5 >>> 0 < 16) | 0, (I7 + a5 | 0) - 16 | 0, t5, B5, o5, e5, Q5)), g8 && (n3[g8 >> 2] = C5 ? 0 : a5 - 16 | 0, n3[g8 + 4 >> 2] = C5 ? 0 : r5 - (a5 >>> 0 < 16) | 0), C5;
                      }(A8 |= 0, g7 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0, C4 |= 0);
                    }, p: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4) {
                      return 0 | tg(A8 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0);
                    }, q: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        var C5 = 0;
                        return C5 = -1, !r5 & a5 >>> 0 >= 16 | r5 && (C5 = tg(A9, I7, a5 - 16 | 0, r5 - (a5 >>> 0 < 16) | 0, (I7 + a5 | 0) - 16 | 0, t5, B5, o5, e5, Q5)), g8 && (n3[g8 >> 2] = C5 ? 0 : a5 - 16 | 0, n3[g8 + 4 >> 2] = C5 ? 0 : r5 - (a5 >>> 0 < 16) | 0), C5;
                      }(A8 |= 0, g7 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0, C4 |= 0);
                    }, r: vt, s: Yt, t: qt, u: dt, v: Jt, w: _t, x: vt, y: Lt, z: qt, A: dt, B: Jt, C: _t, D: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4, C4) {
                      return 0 | fg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, Q4 |= 0, C4 |= 0);
                    }, E: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        if (!r5 & a5 >>> 0 < 4294967280)
                          return fg(A9, A9 + a5 | 0, 0, I7, a5, r5, t5, B5, o5, e5, Q5), g8 && (r5 = (A9 = a5 + 16 | 0) >>> 0 < 16 ? r5 + 1 | 0 : r5, n3[g8 >> 2] = A9, n3[g8 + 4 >> 2] = r5), 0;
                        yr(), c3();
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, Q4 |= 0, C4 |= 0);
                    }, F: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4) {
                      return 0 | lg(A8 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0);
                    }, G: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        var C5 = 0;
                        return C5 = -1, !r5 & a5 >>> 0 >= 16 | r5 && (C5 = lg(A9, I7, a5 - 16 | 0, r5 - (a5 >>> 0 < 16) | 0, (I7 + a5 | 0) - 16 | 0, t5, B5, o5, e5, Q5)), g8 && (n3[g8 >> 2] = C5 ? 0 : a5 - 16 | 0, n3[g8 + 4 >> 2] = C5 ? 0 : r5 - (a5 >>> 0 < 16) | 0), C5;
                      }(A8 |= 0, g7 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0, C4 |= 0);
                    }, H: vt, I: xt, J: qt, K: dt, L: Jt, M: _t, N: vt, O: vt, P: function() {
                      return 35792;
                    }, Q: Sa, R: va, S: _t, T: vt, U: vt, V: kt, W: _t, X: RA, Y: function(A8, g7, I6, a4) {
                      return 0 | jr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Z: vI, _: function(A8, g7, I6, a4, r4) {
                      return 0 | ea(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, $: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var t4;
                        return u3 = t4 = u3 - 32 | 0, ea(t4, g8, I7, a5, r5), g8 = Yr(A9, t4), I7 = Kg(t4, A9, 32), u3 = t4 + 32 | 0, I7 | ((0 | A9) == (0 | t4) ? -1 : g8);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, aa: Ht, ba: vt, ca: bt, da: _t, ea: xA, fa: $r, ga: bI, ha: function(A8, g7, I6, a4, r4) {
                      return 0 | na(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, ia: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var t4;
                        return u3 = t4 = u3 + -64 | 0, na(t4, g8, I7, a5, r5), g8 = vr(A9, t4), I7 = Kg(t4, A9, 64), u3 = t4 - -64 | 0, I7 | ((0 | A9) == (0 | t4) ? -1 : g8);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, ja: vt, ka: vt, la: bt, ma: _t, na: Qr, oa: function(A8, g7, I6, a4) {
                      return 0 | $r(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, pa: FA3, qa: Sa, ra: va, sa: vt, ta: vt, ua: vt, va: vt, wa: xt, xa: vt, ya: dt, za: dt, Aa: Jt, Ba: function() {
                      return 36176;
                    }, Ca: function(A8, g7, I6) {
                      return 0 | wA3(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, Da: Pr, Ea: cr, Fa: ha, Ga: wa, Ha: ra, Ia: ta, Ja: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | br(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Ka: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | mI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, La: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 4294967280 | a5 && (yr(), c3()), br(A9 + 16 | 0, A9, g8, I7, a5, r5, t5);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Ma: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | Ca(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Na: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | Hr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Oa: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | FI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, Pa: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 16 | a5 ? Hr(A9, g8 + 16 | 0, g8, I7 - 16 | 0, a5 - (I7 >>> 0 < 16) | 0, r5, t5) : -1;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Qa: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | NI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Ra: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var B4, o4 = 0;
                        return u3 = B4 = u3 - 96 | 0, o4 = -1, Pr(B4 + 32 | 0, B4) || (WI(B4 - -64 | 0, B4 + 32 | 0, r5), o4 = Ca(A9 + 32 | 0, g8, I7, a5, B4 - -64 | 0, r5, B4), g8 = n3[B4 + 60 >> 2], I7 = n3[B4 + 56 >> 2], t3[A9 + 24 | 0] = I7, t3[A9 + 25 | 0] = I7 >>> 8, t3[A9 + 26 | 0] = I7 >>> 16, t3[A9 + 27 | 0] = I7 >>> 24, t3[A9 + 28 | 0] = g8, t3[A9 + 29 | 0] = g8 >>> 8, t3[A9 + 30 | 0] = g8 >>> 16, t3[A9 + 31 | 0] = g8 >>> 24, g8 = n3[B4 + 52 >> 2], I7 = n3[B4 + 48 >> 2], t3[A9 + 16 | 0] = I7, t3[A9 + 17 | 0] = I7 >>> 8, t3[A9 + 18 | 0] = I7 >>> 16, t3[A9 + 19 | 0] = I7 >>> 24, t3[A9 + 20 | 0] = g8, t3[A9 + 21 | 0] = g8 >>> 8, t3[A9 + 22 | 0] = g8 >>> 16, t3[A9 + 23 | 0] = g8 >>> 24, g8 = n3[B4 + 44 >> 2], I7 = n3[B4 + 40 >> 2], t3[A9 + 8 | 0] = I7, t3[A9 + 9 | 0] = I7 >>> 8, t3[A9 + 10 | 0] = I7 >>> 16, t3[A9 + 11 | 0] = I7 >>> 24, t3[A9 + 12 | 0] = g8, t3[A9 + 13 | 0] = g8 >>> 8, t3[A9 + 14 | 0] = g8 >>> 16, t3[A9 + 15 | 0] = g8 >>> 24, g8 = n3[B4 + 36 >> 2], I7 = n3[B4 + 32 >> 2], t3[0 | A9] = I7, t3[A9 + 1 | 0] = I7 >>> 8, t3[A9 + 2 | 0] = I7 >>> 16, t3[A9 + 3 | 0] = I7 >>> 24, t3[A9 + 4 | 0] = g8, t3[A9 + 5 | 0] = g8 >>> 8, t3[A9 + 6 | 0] = g8 >>> 16, t3[A9 + 7 | 0] = g8 >>> 24, pI(B4, 32), pI(B4 + 32 | 0, 32), pI(B4 - -64 | 0, 24)), u3 = B4 + 96 | 0, o4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, Sa: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        var B4, n4 = 0;
                        return u3 = B4 = u3 - 32 | 0, n4 = -1, !a5 & I7 >>> 0 >= 48 | a5 && (WI(B4, g8, r5), n4 = NI(A9, g8 + 32 | 0, I7 - 32 | 0, a5 - (I7 >>> 0 < 32) | 0, B4, g8, t5)), u3 = B4 + 32 | 0, n4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Ta: St, Ua: wA3, Va: Er, Wa: GI, Xa: ha, Ya: wa, Za: ra, _a: ta, $a: vt, ab: vt, bb: vt, cb: vt, db: xt, eb: vt, fb: dt, gb: dt, hb: Jt, ib: K3, jb: vt, kb: dt, lb: vt, mb: dt, nb: W3, ob: vt, pb: dt, qb: vt, rb: dt, sb: ja, tb: Ht, ub: dt, vb: vt, wb: dt, xb: za, yb: Ht, zb: dt, Ab: vt, Bb: dt, Cb: Oa, Db: Ht, Eb: dt, Fb: vt, Gb: dt, Hb: dt, Ib: Ht, Jb: vt, Kb: dt, Lb: Ht, Mb: vt, Nb: function() {
                      return 36224;
                    }, Ob: Gt, Pb: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | mr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Qb: Ar, Rb: function(A8, g7, I6, a4) {
                      return 0 | It(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Sb: ir, Tb: _t, Ub: dt, Vb: Ht, Wb: vt, Xb: dt, Yb: Ht, Zb: vt, _b: dt, $b: dt, ac: Gt, bc: _t, cc: mr, dc: function(A8, g7, I6, a4, r4, t4, B4, n4, o4) {
                      return 0 | XI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0);
                    }, ec: Wg, fc: function(A8, g7, I6, a4, r4, t4) {
                      A8 |= 0, g7 |= 0, r4 |= 0, t4 |= 0;
                      var B4 = 0;
                      B4 = -1;
                      A:
                        if (!((I6 |= 0) >>> 0 > 64 | (a4 |= 0) - 1 >>> 0 > 63)) {
                          g: {
                            if (!I6 || !g7) {
                              if (!ng(A8, 255 & a4, r4, t4))
                                break g;
                              break A;
                            }
                            if (VA(A8, 255 & a4, g7, 255 & I6, r4, t4))
                              break A;
                          }
                          B4 = 0;
                        }
                      return 0 | B4;
                    }, gc: It, hc: OI, ic: Ht, jc: gr, kc: function() {
                      return 36272;
                    }, lc: vt, mc: function() {
                      return 104;
                    }, nc: Mg, oc: function(A8, g7, I6, a4) {
                      return 0 | QA3(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, pc: TI, qc: function(A8, g7, I6, a4) {
                      return 0 | function(A9, g8, I7, a5) {
                        var r4;
                        return u3 = r4 = u3 - 112 | 0, Mg(r4 + 8 | 0), QA3(r4 + 8 | 0, g8, I7, a5), TI(r4 + 8 | 0, A9), u3 = r4 + 112 | 0, 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, rc: Ht, sc: kt, tc: ga, uc: ar, vc: LI, wc: gr, xc: dt, yc: Ht, zc: Lt, Ac: vt, Bc: Da, Cc: function() {
                      return 36279;
                    }, Dc: dt, Ec: Ht, Fc: Lt, Gc: vt, Hc: Da, Ic: _t, Jc: function(A8, g7, I6) {
                      return A8 |= 0, mr(g7 |= 0, 32, I6 |= 0, 32, 0, 0, 0), 0 | Xr(A8, g7);
                    }, Kc: function(A8, g7) {
                      return A8 |= 0, fI(g7 |= 0, 32), 0 | Xr(A8, g7);
                    }, Lc: function(A8, g7, I6, a4, r4) {
                      g7 |= 0, I6 |= 0, r4 |= 0;
                      var B4, n4, e4 = 0;
                      if (n4 = e4 = u3, u3 = e4 = e4 - 512 & -64, B4 = (A8 |= 0) || g7) {
                        if (A8 = -1, !_r(e4 + 96 | 0, a4 |= 0, r4)) {
                          for (g7 = g7 || B4, A8 = 0, Ar(e4 + 128 | 0, 0, 0, 64), It(e4 + 128 | 0, e4 + 96 | 0, 32, 0), pI(e4 + 96 | 0, 32), It(e4 + 128 | 0, I6, 32, 0), It(e4 + 128 | 0, r4, 32, 0), ir(e4 + 128 | 0, e4 + 32 | 0, 64), pI(e4 + 128 | 0, 384); I6 = (e4 + 32 | 0) + A8 | 0, t3[A8 + B4 | 0] = o3[0 | I6], t3[A8 + g7 | 0] = o3[I6 + 32 | 0], (0 | (A8 = A8 + 1 | 0)) != 32; )
                            ;
                          pI(e4 + 32 | 0, 64), A8 = 0;
                        }
                        return u3 = n4, 0 | A8;
                      }
                      yr(), c3();
                    }, Mc: function(A8, g7, I6, a4, r4) {
                      g7 |= 0, I6 |= 0, r4 |= 0;
                      var B4, n4, e4 = 0;
                      if (n4 = e4 = u3, u3 = e4 = e4 - 512 & -64, B4 = (A8 |= 0) || g7) {
                        if (A8 = -1, !_r(e4 + 96 | 0, a4 |= 0, r4)) {
                          for (g7 = g7 || B4, A8 = 0, Ar(e4 + 128 | 0, 0, 0, 64), It(e4 + 128 | 0, e4 + 96 | 0, 32, 0), pI(e4 + 96 | 0, 32), It(e4 + 128 | 0, r4, 32, 0), It(e4 + 128 | 0, I6, 32, 0), ir(e4 + 128 | 0, e4 + 32 | 0, 64), pI(e4 + 128 | 0, 384); I6 = (e4 + 32 | 0) + A8 | 0, t3[A8 + g7 | 0] = o3[0 | I6], t3[A8 + B4 | 0] = o3[I6 + 32 | 0], (0 | (A8 = A8 + 1 | 0)) != 32; )
                            ;
                          pI(e4 + 32 | 0, 64), A8 = 0;
                        }
                        return u3 = n4, 0 | A8;
                      }
                      yr(), c3();
                    }, Nc: vt, Oc: vt, Pc: vt, Qc: vt, Rc: function() {
                      return 36298;
                    }, Sc: mt, Tc: dt, Uc: vt, Vc: Ua, Wc: Ja, Xc: function(A8, g7) {
                      return 0 | wr(A8 |= 0, g7 |= 0);
                    }, Yc: Ir, Zc: function(A8, g7) {
                      return 0 | Dr(A8 |= 0, g7 |= 0);
                    }, _c: function() {
                      return 36312;
                    }, $c: _t, ad: Ua, bd: Ja, cd: wr, dd: Ir, ed: Dr, fd: dt, gd: vt, hd: mt, id: _t, jd: Nt, kd: dt, ld: Rt, md: qt, nd: Rt, od: dt, pd: Ft, qd: function() {
                      return 36434;
                    }, rd: Mt, sd: Rt, td: Dt, ud: ot, vd: Kt, wd: Et, xd: function() {
                      return 6;
                    }, yd: function() {
                      return 134217728;
                    }, zd: Lt, Ad: function() {
                      return 536870912;
                    }, Bd: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4) {
                      return 0 | wg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0);
                    }, Cd: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | kg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Dd: function(A8, g7, I6, a4) {
                      return 0 | cI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Ed: function(A8, g7, I6, a4) {
                      return 0 | zr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Fd: function(A8, g7, I6, a4) {
                      return 0 | Or(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Gd: Pt, Hd: dt, Id: Rt, Jd: qt, Kd: Rt, Ld: dt, Md: Ft, Nd: function() {
                      return 36444;
                    }, Od: Nt, Pd: Rt, Qd: Dt, Rd: ot, Sd: Pt, Td: pt, Ud: Mt, Vd: it, Wd: Kt, Xd: et, Yd: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4, Q4) {
                      return 0 | Dg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0);
                    }, Zd: Ba, _d: function(A8, g7, I6, a4) {
                      return 0 | CI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, $d: Nt, ae: Pt, be: Pt, ce: dt, de: Rt, ee: qt, fe: Rt, ge: dt, he: Ft, ie: function() {
                      return 36455;
                    }, je: Nt, ke: Rt, le: Dt, me: ot, ne: Pt, oe: pt, pe: Mt, qe: it, re: Kt, se: et, te: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4, C4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5, C5) {
                        switch (C5 - 1 | 0) {
                          case 0:
                            return wg(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5, 1);
                          case 1:
                            return Dg(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5, 2);
                        }
                        return n3[9184] = 28, -1;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0, C4 |= 0);
                    }, ue: Ba, ve: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, n5) {
                        switch (n5 - 1 | 0) {
                          case 1:
                            return Hg(A9, g8, I7, a5, r5, t5, B5);
                          default:
                            yr(), c3();
                          case 0:
                        }
                        return kg(A9, g8, I7, a5, r5, t5, B5);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, we: function(A8, g7, I6, a4) {
                      return 0 | function(A9, g8, I7, a5) {
                        return Ug(A9, 36455, 10) ? Ug(A9, 36466, 9) ? (n3[9184] = 28, -1) : cI(A9, g8, I7, a5) : CI(A9, g8, I7, a5);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, xe: function(A8, g7, I6, a4) {
                      return 0 | function(A9, g8, I7, a5) {
                        return Ug(A9, 36455, 10) ? Ug(A9, 36466, 9) ? (n3[9184] = 28, -1) : zr(A9, g8, I7, a5) : Or(A9, g8, I7, a5);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, ye: function() {
                      return 36476;
                    }, ze: function() {
                      return 36287;
                    }, Ae: Xr, Be: _r, Ce: vt, De: vt, Ee: xg, Fe: fr, Ge: vt, He: vt, Ie: vt, Je: xt, Ke: vt, Le: dt, Me: dt, Ne: Jt, Oe: function() {
                      return 36553;
                    }, Pe: ha, Qe: wa, Re: _t, Se: br, Te: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 4294967280 | a5 && (yr(), c3()), dA3(A9 + 16 | 0, A9, g8, I7, a5, r5, t5), 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Ue: Hr, Ve: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 16 | a5 ? JA2(A9, g8 + 16 | 0, g8, I7 - 16 | 0, a5 - (I7 >>> 0 < 16) | 0, r5, t5) : -1;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, We: xr, Xe: Nr, Ye: vt, Ze: xt, _e: vt, $e: dt, af: dt, bf: Jt, cf: _t, df: _t, ef: function(A8, g7, I6) {
                      return A8 |= 0, I6 |= 0, fI(g7 |= 0, 24), K3(A8, g7, I6, 0), rr(A8), I6 = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, g7 = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, t3[A8 + 44 | 0] = 0, t3[A8 + 45 | 0] = 0, t3[A8 + 46 | 0] = 0, t3[A8 + 47 | 0] = 0, t3[A8 + 48 | 0] = 0, t3[A8 + 49 | 0] = 0, t3[A8 + 50 | 0] = 0, t3[A8 + 51 | 0] = 0, t3[A8 + 36 | 0] = I6, t3[A8 + 37 | 0] = I6 >>> 8, t3[A8 + 38 | 0] = I6 >>> 16, t3[A8 + 39 | 0] = I6 >>> 24, t3[A8 + 40 | 0] = g7, t3[A8 + 41 | 0] = g7 >>> 8, t3[A8 + 42 | 0] = g7 >>> 16, t3[A8 + 43 | 0] = g7 >>> 24, 0;
                    }, ff: function(A8, g7, I6) {
                      return K3(A8 |= 0, g7 |= 0, I6 |= 0, 0), rr(A8), I6 = o3[g7 + 16 | 0] | o3[g7 + 17 | 0] << 8 | o3[g7 + 18 | 0] << 16 | o3[g7 + 19 | 0] << 24, g7 = o3[g7 + 20 | 0] | o3[g7 + 21 | 0] << 8 | o3[g7 + 22 | 0] << 16 | o3[g7 + 23 | 0] << 24, t3[A8 + 44 | 0] = 0, t3[A8 + 45 | 0] = 0, t3[A8 + 46 | 0] = 0, t3[A8 + 47 | 0] = 0, t3[A8 + 48 | 0] = 0, t3[A8 + 49 | 0] = 0, t3[A8 + 50 | 0] = 0, t3[A8 + 51 | 0] = 0, t3[A8 + 36 | 0] = I6, t3[A8 + 37 | 0] = I6 >>> 8, t3[A8 + 38 | 0] = I6 >>> 16, t3[A8 + 39 | 0] = I6 >>> 24, t3[A8 + 40 | 0] = g7, t3[A8 + 41 | 0] = g7 >>> 8, t3[A8 + 42 | 0] = g7 >>> 16, t3[A8 + 43 | 0] = g7 >>> 24, 0;
                    }, gf: j3, hf: function(A8, g7, I6, a4, r4, B4, e4, Q4, C4, i4) {
                      return 0 | function(A9, g8, I7, a5, r5, B5, e5, Q5, C5, i5) {
                        var _4, s4 = 0;
                        if (u3 = _4 = u3 - 336 | 0, I7 && (n3[I7 >> 2] = 0, n3[I7 + 4 >> 2] = 0), !B5 & r5 >>> 0 < 4294967279)
                          return Ra(_4 + 16 | 0, 64, 0, s4 = A9 + 32 | 0, A9), wr(_4 + 80 | 0, _4 + 16 | 0), pI(_4 + 16 | 0, 64), Sr(_4 + 80 | 0, e5, Q5, C5), Sr(_4 + 80 | 0, 36576, 0 - Q5 & 15, 0), DA3(_4 + 16 | 0, 0, 64), t3[_4 + 16 | 0] = i5, Zg(_4 + 16 | 0, _4 + 16 | 0, 64, 0, s4, 1, A9), Sr(_4 + 80 | 0, _4 + 16 | 0, 64, 0), t3[0 | g8] = o3[_4 + 16 | 0], Zg(e5 = g8 + 1 | 0, a5, r5, B5, s4, 2, A9), Sr(_4 + 80 | 0, e5, r5, B5), Sr(_4 + 80 | 0, 36576, 15 & r5, 0), yI(_4 + 8 | 0, Q5, C5), Sr(_4 + 80 | 0, _4 + 8 | 0, 8, 0), yI(_4 + 8 | 0, r5 - -64 | 0, B5 - ((r5 >>> 0 < 4294967232) - 1 | 0) | 0), Sr(_4 + 80 | 0, _4 + 8 | 0, 8, 0), Dr(_4 + 80 | 0, g8 = r5 + e5 | 0), pI(_4 + 80 | 0, 256), KI(A9 + 36 | 0, g8), lI(s4), (2 & i5 || rI(s4, 4)) && j3(A9), I7 && (B5 = (A9 = r5 + 17 | 0) >>> 0 < 17 ? B5 + 1 | 0 : B5, n3[I7 >> 2] = A9, n3[I7 + 4 >> 2] = B5), u3 = _4 + 336 | 0, 0;
                        yr(), c3();
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, B4 |= 0, e4 |= 0, Q4 |= 0, C4 |= 0, i4 |= 0);
                    }, jf: function(A8, g7, I6, a4, r4, B4, e4, Q4, C4, i4) {
                      return 0 | function(A9, g8, I7, a5, r5, B5, e5, Q5, C5, i5) {
                        var _4, s4 = 0, y4 = 0, E4 = 0, p4 = 0, f4 = 0;
                        u3 = _4 = u3 - 352 | 0, I7 && (n3[I7 >> 2] = 0, n3[I7 + 4 >> 2] = 0), a5 && (t3[0 | a5] = 255), p4 = -1;
                        A: {
                          if (!(!e5 & B5 >>> 0 < 17)) {
                            if (!(s4 = e5 - (B5 >>> 0 < 17) | 0) & (y4 = B5 - 17 | 0) >>> 0 >= 4294967279 | s4)
                              break A;
                            Ra(_4 + 32 | 0, 64, 0, E4 = A9 + 32 | 0, A9), wr(_4 + 96 | 0, _4 + 32 | 0), pI(_4 + 32 | 0, 64), Sr(_4 + 96 | 0, Q5, C5, i5), Sr(_4 + 96 | 0, 36576, 0 - C5 & 15, 0), DA3(_4 + 32 | 0, 0, 64), t3[_4 + 32 | 0] = o3[0 | r5], Zg(_4 + 32 | 0, _4 + 32 | 0, 64, 0, E4, 1, A9), f4 = o3[_4 + 32 | 0], t3[_4 + 32 | 0] = o3[0 | r5], Sr(_4 + 96 | 0, _4 + 32 | 0, 64, 0), Sr(_4 + 96 | 0, Q5 = r5 + 1 | 0, y4, s4), Sr(_4 + 96 | 0, 36576, B5 - 1 & 15, 0), yI(_4 + 24 | 0, C5, i5), Sr(_4 + 96 | 0, _4 + 24 | 0, 8, 0), yI(_4 + 24 | 0, r5 = B5 + 47 | 0, e5 = r5 >>> 0 < 47 ? e5 + 1 | 0 : e5), Sr(_4 + 96 | 0, _4 + 24 | 0, 8, 0), Dr(_4 + 96 | 0, _4), pI(_4 + 96 | 0, 256), Kg(_4, Q5 + y4 | 0, 16) ? pI(_4, 16) : (Zg(g8, Q5, y4, s4, E4, 2, A9), KI(A9 + 36 | 0, _4), lI(E4), (2 & f4 || rI(E4, 4)) && j3(A9), I7 && (n3[I7 >> 2] = y4, n3[I7 + 4 >> 2] = s4), p4 = 0, a5 && (t3[0 | a5] = f4));
                          }
                          return u3 = _4 + 352 | 0, p4;
                        }
                        yr(), c3();
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, B4 |= 0, e4 |= 0, Q4 |= 0, C4 |= 0, i4 |= 0);
                    }, kf: function() {
                      return 52;
                    }, lf: function() {
                      return 17;
                    }, mf: xt, nf: vt, of: function() {
                      return -18;
                    }, pf: qt, qf: Nt, rf: Pt, sf: Mt, tf: Lt, uf: dt, vf: function() {
                      return 36592;
                    }, wf: Pa, xf: function(A8) {
                      fI(A8 |= 0, 16);
                    }, yf: Lt, zf: dt, Af: Pa, Bf: kt, Cf: Ht, Df: vt, Ef: vt, Ff: Ht, Gf: Ut, Hf: function() {
                      return 36642;
                    }, If: function(A8, g7, I6) {
                      return 0 | N4(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, Jf: function(A8, g7) {
                      return 0 | ca(A8 |= 0, g7 |= 0);
                    }, Kf: ma, Lf: Ga, Mf: ka, Nf: Ya, Of: function(A8) {
                      return 0 | Bt(A8 |= 0);
                    }, Pf: ar, Qf: function(A8, g7, I6, a4) {
                      return 0 | HI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Rf: function(A8, g7, I6) {
                      return 0 | MI(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, Sf: kt, Tf: Ht, Uf: vt, Vf: vt, Wf: Ht, Xf: Ut, Yf: function(A8, g7) {
                      A8 |= 0;
                      var I6, a4, r4, B4, n4, e4, Q4 = 0;
                      return I6 = o3[8 + (Q4 = g7 |= 0) | 0] | o3[Q4 + 9 | 0] << 8 | o3[Q4 + 10 | 0] << 16 | o3[Q4 + 11 | 0] << 24, a4 = o3[Q4 + 12 | 0] | o3[Q4 + 13 | 0] << 8 | o3[Q4 + 14 | 0] << 16 | o3[Q4 + 15 | 0] << 24, r4 = o3[Q4 + 16 | 0] | o3[Q4 + 17 | 0] << 8 | o3[Q4 + 18 | 0] << 16 | o3[Q4 + 19 | 0] << 24, B4 = o3[Q4 + 20 | 0] | o3[Q4 + 21 | 0] << 8 | o3[Q4 + 22 | 0] << 16 | o3[Q4 + 23 | 0] << 24, n4 = o3[0 | Q4] | o3[Q4 + 1 | 0] << 8 | o3[Q4 + 2 | 0] << 16 | o3[Q4 + 3 | 0] << 24, g7 = o3[Q4 + 4 | 0] | o3[Q4 + 5 | 0] << 8 | o3[Q4 + 6 | 0] << 16 | o3[Q4 + 7 | 0] << 24, e4 = o3[Q4 + 28 | 0] | o3[Q4 + 29 | 0] << 8 | o3[Q4 + 30 | 0] << 16 | o3[Q4 + 31 | 0] << 24, Q4 = o3[Q4 + 24 | 0] | o3[Q4 + 25 | 0] << 8 | o3[Q4 + 26 | 0] << 16 | o3[Q4 + 27 | 0] << 24, t3[A8 + 24 | 0] = Q4, t3[A8 + 25 | 0] = Q4 >>> 8, t3[A8 + 26 | 0] = Q4 >>> 16, t3[A8 + 27 | 0] = Q4 >>> 24, t3[A8 + 28 | 0] = e4, t3[A8 + 29 | 0] = e4 >>> 8, t3[A8 + 30 | 0] = e4 >>> 16, t3[A8 + 31 | 0] = e4 >>> 24, t3[A8 + 16 | 0] = r4, t3[A8 + 17 | 0] = r4 >>> 8, t3[A8 + 18 | 0] = r4 >>> 16, t3[A8 + 19 | 0] = r4 >>> 24, t3[A8 + 20 | 0] = B4, t3[A8 + 21 | 0] = B4 >>> 8, t3[A8 + 22 | 0] = B4 >>> 16, t3[A8 + 23 | 0] = B4 >>> 24, t3[A8 + 8 | 0] = I6, t3[A8 + 9 | 0] = I6 >>> 8, t3[A8 + 10 | 0] = I6 >>> 16, t3[A8 + 11 | 0] = I6 >>> 24, t3[A8 + 12 | 0] = a4, t3[A8 + 13 | 0] = a4 >>> 8, t3[A8 + 14 | 0] = a4 >>> 16, t3[A8 + 15 | 0] = a4 >>> 24, t3[0 | A8] = n4, t3[A8 + 1 | 0] = n4 >>> 8, t3[A8 + 2 | 0] = n4 >>> 16, t3[A8 + 3 | 0] = n4 >>> 24, t3[A8 + 4 | 0] = g7, t3[A8 + 5 | 0] = g7 >>> 8, t3[A8 + 6 | 0] = g7 >>> 16, t3[A8 + 7 | 0] = g7 >>> 24, 0;
                    }, Zf: function(A8, g7) {
                      A8 |= 0;
                      var I6, a4, r4, B4, n4, e4, Q4 = 0;
                      return I6 = o3[32 + (Q4 = g7 |= 0) | 0] | o3[Q4 + 33 | 0] << 8 | o3[Q4 + 34 | 0] << 16 | o3[Q4 + 35 | 0] << 24, a4 = o3[Q4 + 36 | 0] | o3[Q4 + 37 | 0] << 8 | o3[Q4 + 38 | 0] << 16 | o3[Q4 + 39 | 0] << 24, r4 = o3[Q4 + 40 | 0] | o3[Q4 + 41 | 0] << 8 | o3[Q4 + 42 | 0] << 16 | o3[Q4 + 43 | 0] << 24, B4 = o3[Q4 + 44 | 0] | o3[Q4 + 45 | 0] << 8 | o3[Q4 + 46 | 0] << 16 | o3[Q4 + 47 | 0] << 24, n4 = o3[Q4 + 48 | 0] | o3[Q4 + 49 | 0] << 8 | o3[Q4 + 50 | 0] << 16 | o3[Q4 + 51 | 0] << 24, g7 = o3[Q4 + 52 | 0] | o3[Q4 + 53 | 0] << 8 | o3[Q4 + 54 | 0] << 16 | o3[Q4 + 55 | 0] << 24, e4 = o3[Q4 + 60 | 0] | o3[Q4 + 61 | 0] << 8 | o3[Q4 + 62 | 0] << 16 | o3[Q4 + 63 | 0] << 24, Q4 = o3[Q4 + 56 | 0] | o3[Q4 + 57 | 0] << 8 | o3[Q4 + 58 | 0] << 16 | o3[Q4 + 59 | 0] << 24, t3[A8 + 24 | 0] = Q4, t3[A8 + 25 | 0] = Q4 >>> 8, t3[A8 + 26 | 0] = Q4 >>> 16, t3[A8 + 27 | 0] = Q4 >>> 24, t3[A8 + 28 | 0] = e4, t3[A8 + 29 | 0] = e4 >>> 8, t3[A8 + 30 | 0] = e4 >>> 16, t3[A8 + 31 | 0] = e4 >>> 24, t3[A8 + 16 | 0] = n4, t3[A8 + 17 | 0] = n4 >>> 8, t3[A8 + 18 | 0] = n4 >>> 16, t3[A8 + 19 | 0] = n4 >>> 24, t3[A8 + 20 | 0] = g7, t3[A8 + 21 | 0] = g7 >>> 8, t3[A8 + 22 | 0] = g7 >>> 16, t3[A8 + 23 | 0] = g7 >>> 24, t3[A8 + 8 | 0] = r4, t3[A8 + 9 | 0] = r4 >>> 8, t3[A8 + 10 | 0] = r4 >>> 16, t3[A8 + 11 | 0] = r4 >>> 24, t3[A8 + 12 | 0] = B4, t3[A8 + 13 | 0] = B4 >>> 8, t3[A8 + 14 | 0] = B4 >>> 16, t3[A8 + 15 | 0] = B4 >>> 24, t3[0 | A8] = I6, t3[A8 + 1 | 0] = I6 >>> 8, t3[A8 + 2 | 0] = I6 >>> 16, t3[A8 + 3 | 0] = I6 >>> 24, t3[A8 + 4 | 0] = a4, t3[A8 + 5 | 0] = a4 >>> 8, t3[A8 + 6 | 0] = a4 >>> 16, t3[A8 + 7 | 0] = a4 >>> 24, 0;
                    }, _f: Bt, $f: ar, ag: HI, bg: MI, cg: N4, dg: ca, eg: function(A8, g7) {
                      A8 |= 0;
                      var I6, a4 = 0;
                      return u3 = I6 = u3 - 256 | 0, a4 = -1, OA(g7 |= 0) || XA(I6 + 96 | 0, g7) || Va(I6 + 96 | 0) && (gt(I6), ZA(I6, I6, g7 = I6 + 136 | 0), gt(I6 + 48 | 0), jA(I6 + 48 | 0, I6 + 48 | 0, g7), tA3(I6, I6), F3(I6 + 48 | 0, I6 + 48 | 0, I6), pA3(A8, I6 + 48 | 0), a4 = 0), u3 = I6 + 256 | 0, 0 | a4;
                    }, fg: function(A8, g7) {
                      A8 |= 0;
                      var I6, a4 = 0;
                      return u3 = I6 = u3 + -64 | 0, la(I6, g7 |= 0, 32, 0), t3[0 | I6] = 248 & o3[0 | I6], t3[I6 + 31 | 0] = 63 & o3[I6 + 31 | 0] | 64, g7 = n3[I6 + 20 >> 2], a4 = n3[I6 + 16 >> 2], t3[A8 + 16 | 0] = a4, t3[A8 + 17 | 0] = a4 >>> 8, t3[A8 + 18 | 0] = a4 >>> 16, t3[A8 + 19 | 0] = a4 >>> 24, t3[A8 + 20 | 0] = g7, t3[A8 + 21 | 0] = g7 >>> 8, t3[A8 + 22 | 0] = g7 >>> 16, t3[A8 + 23 | 0] = g7 >>> 24, g7 = n3[I6 + 12 >> 2], a4 = n3[I6 + 8 >> 2], t3[A8 + 8 | 0] = a4, t3[A8 + 9 | 0] = a4 >>> 8, t3[A8 + 10 | 0] = a4 >>> 16, t3[A8 + 11 | 0] = a4 >>> 24, t3[A8 + 12 | 0] = g7, t3[A8 + 13 | 0] = g7 >>> 8, t3[A8 + 14 | 0] = g7 >>> 16, t3[A8 + 15 | 0] = g7 >>> 24, g7 = n3[I6 + 4 >> 2], a4 = n3[I6 >> 2], t3[0 | A8] = a4, t3[A8 + 1 | 0] = a4 >>> 8, t3[A8 + 2 | 0] = a4 >>> 16, t3[A8 + 3 | 0] = a4 >>> 24, t3[A8 + 4 | 0] = g7, t3[A8 + 5 | 0] = g7 >>> 8, t3[A8 + 6 | 0] = g7 >>> 16, t3[A8 + 7 | 0] = g7 >>> 24, g7 = n3[I6 + 28 >> 2], a4 = n3[I6 + 24 >> 2], t3[A8 + 24 | 0] = a4, t3[A8 + 25 | 0] = a4 >>> 8, t3[A8 + 26 | 0] = a4 >>> 16, t3[A8 + 27 | 0] = a4 >>> 24, t3[A8 + 28 | 0] = g7, t3[A8 + 29 | 0] = g7 >>> 8, t3[A8 + 30 | 0] = g7 >>> 16, t3[A8 + 31 | 0] = g7 >>> 24, pI(I6, 64), u3 = I6 - -64 | 0, 0;
                    }, gg: Ya, hg: Ga, ig: ka, jg: ma, kg: vt, lg: Lt, mg: Rt, ng: vt, og: Yt, pg: Rt, qg: function(A8, g7, I6, a4, r4) {
                      return 0 | da(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, rg: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | aa(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, sg: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | Ea(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, tg: function(A8, g7, I6, a4, r4) {
                      return 0 | Ra(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, ug: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | Zg(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, vg: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | ua(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, wg: _t, xg: _t, yg: vt, zg: xt, Ag: Rt, Bg: function() {
                      return 36650;
                    }, Cg: xa, Dg: Fa, Eg: _t, Fg: vt, Gg: Lt, Hg: Rt, Ig: function(A8, g7, I6, a4, r4) {
                      return 0 | ur(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, Jg: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | $a(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, Kg: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | tr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Lg: _t, Mg: xa, Ng: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | SI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, Og: Fa, Pg: vt, Qg: xt, Rg: Rt, Sg: _t, Tg: dt, Ug: vt, Vg: Ht, Wg: Jr, Xg: Yr, Yg: vr, Zg: function() {
                      return 1024;
                    }, _g: sa, $g: Na, ah: function(A8) {
                      var g7 = 0, I6 = 0;
                      if ((A8 |= 0) >>> 0 >= 2) {
                        for (I6 = (0 - A8 >>> 0) % (A8 >>> 0) | 0; (g7 = sa()) >>> 0 < I6 >>> 0; )
                          ;
                        A8 = (g7 >>> 0) % (A8 >>> 0) | 0;
                      } else
                        A8 = 0;
                      return 0 | A8;
                    }, bh: fI, ch: function(A8, g7, I6) {
                      Ra(A8 |= 0, g7 |= 0, 0, 1787, I6 |= 0);
                    }, dh: vt, eh: function() {
                      var A8 = 0, g7 = 0;
                      return (A8 = n3[9321]) && (A8 = n3[A8 + 20 >> 2]) && (g7 = 0 | Vt[0 | A8]()), 0 | g7;
                    }, fh: function(A8, g7, I6) {
                      !function(A9, g8, I7) {
                        (0 | I7) == 1 | I7 >>> 0 > 1 && (i3(1799, 1819, 197, 1845), c3()), fI(A9, g8);
                      }(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, gh: function(A8, g7, I6, a4) {
                      A8 |= 0, I6 |= 0;
                      var r4 = 0, B4 = 0, n4 = 0;
                      if (!((a4 |= 0) >>> 0 > 2147483646 | a4 << 1 >>> 0 >= (g7 |= 0) >>> 0)) {
                        if (g7 = 0, a4) {
                          for (; r4 = g7 << 1, B4 = (n4 = o3[g7 + I6 | 0]) >>> 4 | 0, t3[r4 + A8 | 0] = 87 + (B4 + (B4 + 65526 >>> 8 & 217) | 0), B4 = (1 | r4) + A8 | 0, r4 = 15 & n4, t3[0 | B4] = 22272 + ((r4 << 8) + (r4 + 65526 & 55552) | 0) >>> 8, (0 | a4) != (0 | (g7 = g7 + 1 | 0)); )
                            ;
                          g7 = a4 << 1;
                        } else
                          g7 = 0;
                        return t3[g7 + A8 | 0] = 0, 0 | A8;
                      }
                      yr(), c3();
                    }, hh: function(A8, g7, I6, a4, r4, B4, e4) {
                      A8 |= 0, g7 |= 0, I6 |= 0, r4 |= 0, B4 |= 0, e4 |= 0;
                      var Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0;
                      A:
                        if (a4 |= 0) {
                          g: {
                            I: {
                              a:
                                for (; ; ) {
                                  for (C4 = Q4; ; ) {
                                    r: {
                                      if (!(255 & ((p4 = (65526 + (y4 = (223 & (s4 = o3[I6 + C4 | 0])) - 55 & 255) ^ y4 + 65520) >>> 8 | 0) | (c4 = 65526 + (u4 = 48 ^ s4) >>> 8 | 0)))) {
                                        if (c4 = 1, !r4 | 255 & _4)
                                          break I;
                                        if (lr(r4, s4))
                                          break r;
                                        Q4 = C4;
                                        break A;
                                      }
                                      if (g7 >>> 0 <= i4 >>> 0) {
                                        n3[9184] = 68, c4 = 0;
                                        break I;
                                      }
                                      if (Q4 = y4 & p4 | c4 & u4, 255 & _4 ? (t3[A8 + i4 | 0] = Q4 | f4, i4 = i4 + 1 | 0) : f4 = Q4 << 4, _4 ^= -1, c4 = 1, (Q4 = C4 + 1 | 0) >>> 0 < a4 >>> 0)
                                        continue a;
                                      break g;
                                    }
                                    if (_4 = 0, !((C4 = C4 + 1 | 0) >>> 0 < a4 >>> 0))
                                      break;
                                  }
                                  break;
                                }
                              Q4 = (A8 = Q4 + 1 | 0) >>> 0 < a4 >>> 0 ? a4 : A8;
                              break A;
                            }
                            Q4 = C4;
                          }
                          255 & _4 ? (n3[9184] = 28, E4 = -1, Q4 = Q4 - 1 | 0, i4 = 0) : c4 || (i4 = 0, E4 = -1);
                        }
                      return e4 ? n3[e4 >> 2] = I6 + Q4 : (0 | a4) != (0 | Q4) && (n3[9184] = 28, E4 = -1), B4 && (n3[B4 >> 2] = i4), 0 | E4;
                    }, ih: function(A8, g7) {
                      var I6;
                      return A8 |= 0, tt(g7 |= 0), A8 = Q3(I6 = (A8 >>> 0) / 3 | 0, -3) + A8 | 0, Q3(4 - (3 - A8 & 0 - (g7 >>> 1 & 1)) | 0, 1 & (A8 | A8 >>> 1)) + (I6 << 2 | 1) | 0;
                    }, jh: oA3, kh: aA3, lh: function() {
                      var A8 = 0;
                      return n3[9328] ? A8 = 1 : (n3[9310] = 0, function() {
                        var A9;
                        u3 = A9 = u3 - 16 | 0, Br(A9), n3[A9 >> 2] && (Br(A9), DA3(37244, 0, 40)), u3 = A9 + 16 | 0;
                      }(), n3[9309] = 1, Na(), function() {
                        var A9 = 0;
                        (0 | (A9 = 0 | y3(30))) >= 1 ? n3[9168] = A9 : A9 = n3[9168], A9 >>> 0 <= 15 && (yr(), c3()), fI(37296, 16);
                      }(), n3[9328] = 1, A8 = 0), 0 | A8;
                    }, mh: function(A8, g7, I6, a4, r4) {
                      A8 |= 0, g7 |= 0, I6 |= 0, r4 |= 0;
                      var B4, e4 = 0, Q4 = 0, C4 = 0;
                      u3 = B4 = u3 - 16 | 0;
                      A: {
                        if (a4 |= 0) {
                          if (C4 = -1, (e4 = (e4 = a4 - 1 | 0) - (Q4 = e4 & a4 ? (I6 >>> 0) % (a4 >>> 0) | 0 : I6 & e4) | 0) >>> 0 >= (-1 ^ I6) >>> 0)
                            break A;
                          if (!((I6 = I6 + e4 | 0) >>> 0 >= r4 >>> 0))
                            for (A8 && (n3[A8 >> 2] = I6 + 1), A8 = g7 + I6 | 0, C4 = 0, t3[B4 + 15 | 0] = 0, g7 = a4 >>> 0 > 1 ? a4 : 1, a4 = 0; r4 = I6 = A8 - a4 | 0, Q4 = o3[0 | I6] & o3[B4 + 15 | 0], I6 = (a4 ^ e4) - 1 >>> 24 | 0, t3[0 | r4] = Q4 | 128 & I6, t3[B4 + 15 | 0] = I6 | o3[B4 + 15 | 0], (0 | g7) != (0 | (a4 = a4 + 1 | 0)); )
                              ;
                        } else
                          C4 = -1;
                        return u3 = B4 + 16 | 0, 0 | C4;
                      }
                      yr(), c3();
                    }, nh: function(A8, g7, I6, a4) {
                      A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0;
                      var r4, t4 = 0, B4 = 0, e4 = 0, Q4 = 0, C4 = 0;
                      if (n3[12 + (r4 = u3 - 16 | 0) >> 2] = 0, a4 - 1 >>> 0 < I6 >>> 0) {
                        for (C4 = (t4 = I6 - 1 | 0) + g7 | 0, I6 = 0, g7 = 0; Q4 = ((128 ^ (B4 = o3[C4 - I6 | 0])) - 1 & n3[r4 + 12 >> 2] - 1 & e4 - 1) >>> 8 & 1, n3[r4 + 12 >> 2] = n3[r4 + 12 >> 2] | 0 - Q4 & I6, g7 |= Q4, e4 |= B4, (0 | a4) != (0 | (I6 = I6 + 1 | 0)); )
                          ;
                        n3[A8 >> 2] = t4 - n3[r4 + 12 >> 2], A8 = g7 - 1 | 0;
                      } else
                        A8 = -1;
                      return 0 | A8;
                    }, oh: function() {
                      return 36659;
                    }, ph: function() {
                      return 10;
                    }, qh: Mt, rh: qt, sh: wA3, th: Er, uh: kI, vh: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | kr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, wh: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | wI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, xh: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 4294967280 | a5 && (yr(), c3()), kr(A9 + 16 | 0, A9, g8, I7, a5, r5, t5);
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, yh: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | Qa(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, zh: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | Fr(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Ah: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | DI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, Bh: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 16 | a5 ? Fr(A9, g8 + 16 | 0, g8, I7 - 16 | 0, a5 - (I7 >>> 0 < 16) | 0, r5, t5) : -1;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Ch: function(A8, g7, I6, a4, r4, t4, B4) {
                      return 0 | xI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0);
                    }, Dh: vt, Eh: vt, Fh: vt, Gh: vt, Hh: xt, Ih: dt, Jh: Jt, Kh: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var B4, o4 = 0;
                        return u3 = B4 = u3 - 96 | 0, o4 = -1, Er(B4 + 32 | 0, B4) || (WI(B4 - -64 | 0, B4 + 32 | 0, r5), o4 = Qa(A9 + 32 | 0, g8, I7, a5, B4 - -64 | 0, r5, B4), g8 = n3[B4 + 60 >> 2], I7 = n3[B4 + 56 >> 2], t3[A9 + 24 | 0] = I7, t3[A9 + 25 | 0] = I7 >>> 8, t3[A9 + 26 | 0] = I7 >>> 16, t3[A9 + 27 | 0] = I7 >>> 24, t3[A9 + 28 | 0] = g8, t3[A9 + 29 | 0] = g8 >>> 8, t3[A9 + 30 | 0] = g8 >>> 16, t3[A9 + 31 | 0] = g8 >>> 24, g8 = n3[B4 + 52 >> 2], I7 = n3[B4 + 48 >> 2], t3[A9 + 16 | 0] = I7, t3[A9 + 17 | 0] = I7 >>> 8, t3[A9 + 18 | 0] = I7 >>> 16, t3[A9 + 19 | 0] = I7 >>> 24, t3[A9 + 20 | 0] = g8, t3[A9 + 21 | 0] = g8 >>> 8, t3[A9 + 22 | 0] = g8 >>> 16, t3[A9 + 23 | 0] = g8 >>> 24, g8 = n3[B4 + 44 >> 2], I7 = n3[B4 + 40 >> 2], t3[A9 + 8 | 0] = I7, t3[A9 + 9 | 0] = I7 >>> 8, t3[A9 + 10 | 0] = I7 >>> 16, t3[A9 + 11 | 0] = I7 >>> 24, t3[A9 + 12 | 0] = g8, t3[A9 + 13 | 0] = g8 >>> 8, t3[A9 + 14 | 0] = g8 >>> 16, t3[A9 + 15 | 0] = g8 >>> 24, g8 = n3[B4 + 36 >> 2], I7 = n3[B4 + 32 >> 2], t3[0 | A9] = I7, t3[A9 + 1 | 0] = I7 >>> 8, t3[A9 + 2 | 0] = I7 >>> 16, t3[A9 + 3 | 0] = I7 >>> 24, t3[A9 + 4 | 0] = g8, t3[A9 + 5 | 0] = g8 >>> 8, t3[A9 + 6 | 0] = g8 >>> 16, t3[A9 + 7 | 0] = g8 >>> 24, pI(B4, 32), pI(B4 + 32 | 0, 32), pI(B4 - -64 | 0, 24)), u3 = B4 + 96 | 0, o4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, Lh: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        var B4, n4 = 0;
                        return u3 = B4 = u3 - 32 | 0, n4 = -1, !a5 & I7 >>> 0 >= 48 | a5 && (WI(B4, g8, r5), n4 = xI(A9, g8 + 32 | 0, I7 - 32 | 0, a5 - (I7 >>> 0 < 32) | 0, B4, g8, t5)), u3 = B4 + 32 | 0, n4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, Mh: St, Nh: function(A8) {
                      var g7, I6 = 0;
                      return u3 = g7 = u3 - 160 | 0, QI(A8 |= 0) && (OA(A8) || qA(g7, A8) || Fg(g7) && (I6 = (0 | Va(g7)) != 0)), u3 = g7 + 160 | 0, 0 | I6;
                    }, Oh: function(A8, g7, I6) {
                      A8 |= 0, I6 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 - 800 | 0, r4 = -1, qA(a4 + 640 | 0, g7 |= 0) || Fg(a4 + 640 | 0) && (qA(a4 + 480 | 0, I6) || Fg(a4 + 480 | 0) && ($I(a4, a4 + 480 | 0), Jg(a4 + 160 | 0, a4 + 640 | 0, a4), UI(a4 + 320 | 0, a4 + 160 | 0), gI(A8, a4 + 320 | 0), r4 = 0)), u3 = a4 + 800 | 0, 0 | r4;
                    }, Ph: function(A8, g7, I6) {
                      A8 |= 0, I6 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 - 800 | 0, r4 = -1, qA(a4 + 640 | 0, g7 |= 0) || Fg(a4 + 640 | 0) && (qA(a4 + 480 | 0, I6) || Fg(a4 + 480 | 0) && ($I(a4, a4 + 480 | 0), Yg(a4 + 160 | 0, a4 + 640 | 0, a4), UI(a4 + 320 | 0, a4 + 160 | 0), gI(A8, a4 + 320 | 0), r4 = 0)), u3 = a4 + 800 | 0, 0 | r4;
                    }, Qh: qr, Rh: function(A8, g7) {
                      return function(A9, g8) {
                        var I6, a4, r4 = 0, B4 = 0;
                        for (u3 = I6 = u3 - 160 | 0, a4 = o3[0 | g8]; B4 = g8 - r4 | 0, t3[(I6 + 128 | 0) + r4 | 0] = o3[B4 + 63 | 0], t3[(I6 + 96 | 0) + r4 | 0] = o3[B4 + 31 | 0], (0 | (r4 = r4 + 1 | 0)) != 32; )
                          ;
                        for (t3[I6 + 159 | 0] = 127 & o3[I6 + 159 | 0], t3[I6 + 127 | 0] = 127 & o3[I6 + 127 | 0], P3(I6 + 48 | 0, I6 + 128 | 0), P3(I6, I6 + 96 | 0), n3[I6 + 48 >> 2] = (n3[I6 + 48 >> 2] + (t3[g8 + 32 | 0] >>> 7 & 19) | 0) + Q3(n3[I6 >> 2], 38), r4 = 1; n3[(B4 = (g8 = r4 << 2) + (I6 + 48 | 0) | 0) >> 2] = n3[B4 >> 2] + Q3(n3[g8 + I6 >> 2], 38), (0 | (r4 = r4 + 1 | 0)) != 10; )
                          ;
                        bA3(I6 + 48 | 0, I6 + 48 | 0), GA3(A9, I6 + 48 | 0, 128 & a4), u3 = I6 + 160 | 0;
                      }(A8 |= 0, g7 |= 0), 0;
                    }, Sh: function(A8) {
                      var g7;
                      A8 |= 0, u3 = g7 = u3 - 32 | 0, fI(g7, 32), qr(A8, g7), u3 = g7 + 32 | 0;
                    }, Th: YI, Uh: or, Vh: Z3, Wh: T3, Xh: O3, Yh: kA3, Zh: ba, _h: Rr, $h: vt, ai: Ht, bi: vt, ci: Ht, di: vt, ei: function(A8) {
                      var g7;
                      return u3 = g7 = u3 - 160 | 0, A8 = LA(g7, A8 |= 0), u3 = g7 + 160 | 0, 0 | !A8;
                    }, fi: function(A8, g7, I6) {
                      A8 |= 0, I6 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 - 800 | 0, r4 = -1, LA(a4 + 640 | 0, g7 |= 0) || LA(a4 + 480 | 0, I6) || ($I(a4, a4 + 480 | 0), Jg(a4 + 160 | 0, a4 + 640 | 0, a4), UI(a4 + 320 | 0, a4 + 160 | 0), mA3(A8, a4 + 320 | 0), r4 = 0), u3 = a4 + 800 | 0, 0 | r4;
                    }, gi: function(A8, g7, I6) {
                      A8 |= 0, I6 |= 0;
                      var a4, r4 = 0;
                      return u3 = a4 = u3 - 800 | 0, r4 = -1, LA(a4 + 640 | 0, g7 |= 0) || LA(a4 + 480 | 0, I6) || ($I(a4, a4 + 480 | 0), Yg(a4 + 160 | 0, a4 + 640 | 0, a4), UI(a4 + 320 | 0, a4 + 160 | 0), mA3(A8, a4 + 320 | 0), r4 = 0), u3 = a4 + 800 | 0, 0 | r4;
                    }, hi: Kr, ii: function(A8) {
                      var g7;
                      A8 |= 0, u3 = g7 = u3 + -64 | 0, fI(g7, 64), Kr(A8, g7), u3 = g7 - -64 | 0;
                    }, ji: function(A8) {
                      YI(A8 |= 0);
                    }, ki: function(A8, g7) {
                      return 0 | or(A8 |= 0, g7 |= 0);
                    }, li: function(A8, g7) {
                      Z3(A8 |= 0, g7 |= 0);
                    }, mi: function(A8, g7) {
                      T3(A8 |= 0, g7 |= 0);
                    }, ni: function(A8, g7, I6) {
                      O3(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, oi: function(A8, g7, I6) {
                      ba(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, pi: Rr, qi: function(A8, g7) {
                      kA3(A8 |= 0, g7 |= 0);
                    }, ri: vt, si: Ht, ti: Ht, ui: vt, vi: function(A8, g7, I6, a4, r4, t4, B4, n4, o4, e4) {
                      return 0 | tI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0, o4 |= 0, e4 |= 0);
                    }, wi: dt, xi: Rt, yi: qt, zi: Rt, Ai: vt, Bi: function() {
                      return 102;
                    }, Ci: function() {
                      return 36549;
                    }, Di: function() {
                      return 32768;
                    }, Ei: Rt, Fi: st, Gi: Rt, Hi: function() {
                      return 524288;
                    }, Ii: st, Ji: Et, Ki: et, Li: function(A8, g7, I6, a4, r4, t4, B4, o4, e4, Q4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5, B5, o5, e5, Q5) {
                        var C4, c4 = 0;
                        u3 = C4 = u3 - 16 | 0, c4 = A9, A9 = g8, c4 = DA3(c4, 0, g8);
                        A:
                          if ((0 | (t5 |= I7)) == 1 | t5 >>> 0 > 1)
                            n3[9184] = 22, A9 = -1;
                          else if (!I7 & g8 >>> 0 >= 16 | I7) {
                            if (yA3(o5, e5, Q5, C4 + 12 | 0, C4 + 8 | 0, C4 + 4 | 0), (0 | a5) == (0 | c4)) {
                              n3[9184] = 28, A9 = -1;
                              break A;
                            }
                            g8 = 31 & (I7 = n3[C4 + 12 >> 2]), (63 & I7) >>> 0 >= 32 ? (I7 = 1 << g8, g8 = 0) : (I7 = (1 << g8) - 1 & 1 >>> 32 - g8, g8 = 1 << g8), A9 = tI(a5, r5, B5, 32, g8, I7, n3[C4 + 4 >> 2], n3[C4 + 8 >> 2], c4, A9);
                          } else
                            n3[9184] = 28, A9 = -1;
                        return u3 = C4 + 16 | 0, A9;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, o4 |= 0, e4 |= 0, Q4 |= 0);
                    }, Mi: function(A8, g7, I6, a4, r4, B4, e4) {
                      return 0 | function(A9, g8, I7, a5, r5, B5, e5) {
                        var Q4;
                        u3 = Q4 = u3 - 128 | 0, A9 = DA3(A9, 0, 102);
                        A: {
                          if ((0 | a5) == 1 | a5 >>> 0 > 1)
                            n3[9184] = 22;
                          else if (yA3(r5, B5, e5, Q4 + 12 | 0, Q4 + 8 | 0, Q4 + 4 | 0), fI(Q4 + 96 | 0, 32), function(A10, g9, I8, a6, r6) {
                            var B6, n4, e6 = 0;
                            return n4 = Wr(I8, 0, g9, 0), !(B6 = h3) & n4 >>> 0 > 1073741823 | B6 | A10 >>> 0 > 63 || (t3[0 | r6] = 36, t3[r6 + 1 | 0] = 55, t3[r6 + 2 | 0] = 36, t3[r6 + 3 | 0] = o3[A10 + 36484 | 0], (A10 = aI(r6 + 4 | 0, 54, g9, 30)) && (A10 = aI(A10, (g9 = r6 + 58 | 0) - A10 | 0, I8, 30)) && (!(A10 = bg(A10, g9 - A10 | 0, a6)) | A10 >>> 0 >= g9 >>> 0 || (t3[0 | A10] = 0, e6 = r6))), e6;
                          }(n3[Q4 + 12 >> 2], n3[Q4 + 4 >> 2], n3[Q4 + 8 >> 2], Q4 + 96 | 0, Q4 + 32 | 0)) {
                            if (a5 = -1, ut(Q4 + 16 | 0))
                              break A;
                            if (A9 = KA(Q4 + 16 | 0, g8, I7, Q4 + 32 | 0, A9), ft(Q4 + 16 | 0), a5 = 0, A9)
                              break A;
                            n3[9184] = 28;
                          } else
                            n3[9184] = 28;
                          a5 = -1;
                        }
                        return u3 = Q4 + 128 | 0, a5;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, B4 |= 0, e4 |= 0);
                    }, Ni: function(A8, g7, I6, a4) {
                      return 0 | function(A9, g8, I7) {
                        var a5, r4 = 0;
                        return u3 = a5 = u3 - 128 | 0, r4 = -1, (0 | ZI(A9)) == 101 && (ut(a5) || (DA3(a5 + 16 | 0, 0, 102), g8 = KA(a5, g8, I7, A9, a5 + 16 | 0), ft(a5), g8 && (r4 = Kg(a5 + 16 | 0, A9, 102), pI(a5 + 16 | 0, 102)))), u3 = a5 + 128 | 0, r4;
                      }(A8 |= 0, g7 |= 0, I6 |= 0);
                    }, Oi: function(A8, g7, I6, a4) {
                      return 0 | function(A9, g8, I7, a5) {
                        var r4;
                        return u3 = r4 = u3 - 32 | 0, yA3(g8, I7, a5, r4 + 28 | 0, r4 + 20 | 0, r4 + 12 | 0), (0 | ZI(A9)) == 101 && BI(A9, r4 + 24 | 0, r4 + 8 | 0, r4 + 16 | 0) ? (A9 = 1, n3[r4 + 28 >> 2] != n3[r4 + 24 >> 2] | n3[r4 + 12 >> 2] != n3[r4 + 8 >> 2] || (A9 = n3[r4 + 20 >> 2] != n3[r4 + 16 >> 2])) : (n3[9184] = 28, A9 = -1), u3 = r4 + 32 | 0, A9;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0);
                    }, Pi: function(A8, g7, I6) {
                      return 0 | sg(A8 |= 0, g7 |= 0, I6 |= 0, 1);
                    }, Qi: function(A8, g7, I6) {
                      return 0 | sg(A8 |= 0, g7 |= 0, I6 |= 0, 0);
                    }, Ri: function(A8, g7) {
                      return 0 | Xg(A8 |= 0, g7 |= 0, 1);
                    }, Si: function(A8, g7) {
                      return 0 | Xg(A8 |= 0, g7 |= 0, 0);
                    }, Ti: vt, Ui: vt, Vi: function(A8, g7, I6) {
                      A8 |= 0, g7 |= 0;
                      var a4, r4 = 0;
                      if (u3 = a4 = u3 - 320 | 0, r4 = -1, !LA(a4, I6 |= 0)) {
                        for (r4 = 0; t3[A8 + r4 | 0] = o3[g7 + r4 | 0], (0 | (r4 = r4 + 1 | 0)) != 32; )
                          ;
                        t3[A8 + 31 | 0] = 127 & o3[A8 + 31 | 0], AA3(a4 + 160 | 0, A8, a4), mA3(A8, a4 + 160 | 0), r4 = rI(A8, 32) ? -1 : 0;
                      }
                      return u3 = a4 + 320 | 0, 0 | r4;
                    }, Wi: function(A8, g7) {
                      A8 |= 0, g7 |= 0;
                      var I6, a4 = 0;
                      for (u3 = I6 = u3 - 160 | 0; t3[A8 + a4 | 0] = o3[g7 + a4 | 0], (0 | (a4 = a4 + 1 | 0)) != 32; )
                        ;
                      return t3[A8 + 31 | 0] = 127 & o3[A8 + 31 | 0], lA3(I6, A8), mA3(A8, I6), A8 = rI(A8, 32), u3 = I6 + 160 | 0, 0 | (A8 ? -1 : 0);
                    }, Xi: vt, Yi: vt, Zi: kr, _i: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 4294967280 | a5 && (yr(), c3()), HA3(A9 + 16 | 0, A9, g8, I7, a5, r5, t5), 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, $i: Fr, aj: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | function(A9, g8, I7, a5, r5, t5) {
                        return !a5 & I7 >>> 0 >= 16 | a5 ? YA(A9, g8 + 16 | 0, g8, I7 - 16 | 0, a5 - (I7 >>> 0 < 16) | 0, r5, t5) : -1;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0);
                    }, bj: vt, cj: xt, dj: dt, ej: Jt, fj: dt, gj: dt, hj: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5) {
                        var r5 = 0, t4 = 0, B4 = 0, n4 = 0, e4 = 0, Q4 = 0, C4 = 0, c4 = 0, i4 = 0, _4 = 0, s4 = 0, y4 = 0, E4 = 0, p4 = 0, u4 = 0, f4 = 0;
                        if (r5 = 1886610805 ^ (n4 = o3[0 | a5] | o3[a5 + 1 | 0] << 8 | o3[a5 + 2 | 0] << 16 | o3[a5 + 3 | 0] << 24), e4 = 1936682341 ^ (t4 = o3[a5 + 4 | 0] | o3[a5 + 5 | 0] << 8 | o3[a5 + 6 | 0] << 16 | o3[a5 + 7 | 0] << 24), n4 ^= 1852142177, Q4 = 1819895653 ^ t4, t4 = 1852075907 ^ (C4 = o3[a5 + 8 | 0] | o3[a5 + 9 | 0] << 8 | o3[a5 + 10 | 0] << 16 | o3[a5 + 11 | 0] << 24), B4 = 1685025377 ^ (a5 = o3[a5 + 12 | 0] | o3[a5 + 13 | 0] << 8 | o3[a5 + 14 | 0] << 16 | o3[a5 + 15 | 0] << 24), C4 ^= 2037671283, c4 = 1952801890 ^ a5, (0 | (a5 = (g8 + I7 | 0) - (y4 = 7 & I7) | 0)) != (0 | g8)) {
                          for (; i4 = o3[0 | g8] | o3[g8 + 1 | 0] << 8 | o3[g8 + 2 | 0] << 16 | o3[g8 + 3 | 0] << 24, _4 = o3[g8 + 4 | 0] | o3[g8 + 5 | 0] << 8 | o3[g8 + 6 | 0] << 16 | o3[g8 + 7 | 0] << 24, s4 = at(t4, B4, 13), E4 = h3, B4 = B4 + e4 | 0, u4 = at(t4 = r5 + t4 | 0, B4 = t4 >>> 0 < r5 >>> 0 ? B4 + 1 | 0 : B4, 32), p4 = h3, c4 = at(C4 ^= i4, r5 = c4 ^ _4, 16), e4 = 1 + (r5 = r5 + Q4 | 0) | 0, Q4 = r5, C4 = Q4 = (e4 = (r5 = n4 + C4 | 0) >>> 0 < n4 >>> 0 ? e4 : Q4) ^ h3, Q4 = at(n4 = r5 ^ c4, Q4, 21), c4 = h3, s4 = at(t4 ^= s4, B4 ^= E4, 17), f4 = h3, B4 = e4 + B4 | 0, e4 = r5, B4 = at(r5 = r5 + t4 | 0, t4 = e4 >>> 0 > r5 >>> 0 ? B4 + 1 | 0 : B4, 32), e4 = h3, E4 = at(s4 ^= r5, t4 ^= f4, 13), f4 = h3, p4 = 1 + (r5 = C4 + p4 | 0) | 0, C4 = r5, n4 = (r5 = n4 + u4 | 0) >>> 0 < n4 >>> 0 ? p4 : C4, s4 = C4 = r5 + s4 | 0, t4 = t4 + n4 | 0, C4 = at(C4, u4 = r5 >>> 0 > C4 >>> 0 ? t4 + 1 | 0 : t4, 32), p4 = h3, n4 = at(r5 ^= Q4, t4 = n4 ^= c4, 16), t4 = t4 + e4 | 0, n4 = C4 + (e4 = (r5 = r5 + B4 | 0) ^ n4) | 0, B4 = (C4 = (t4 = r5 >>> 0 < B4 >>> 0 ? t4 + 1 | 0 : t4) ^ h3) + p4 | 0, C4 = at(e4, C4, 21) ^ n4, c4 = (e4 = n4 >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4) ^ h3, Q4 = B4 = u4 ^ f4, B4 = at(s4 ^= E4, B4, 17), t4 = t4 + Q4 | 0, s4 = (Q4 = r5 + s4 | 0) >>> 0 < r5 >>> 0 ? t4 + 1 | 0 : t4, t4 = B4 ^ Q4, B4 = s4 ^ h3, r5 = n4 ^ i4, e4 ^= _4, n4 = at(Q4, s4, 32), Q4 = h3, (0 | a5) != (0 | (g8 = g8 + 8 | 0)); )
                            ;
                          g8 = a5;
                        }
                        switch (a5 = I7 << 24, I7 = 0, y4 - 1 | 0) {
                          case 6:
                            a5 |= o3[g8 + 6 | 0] << 16;
                          case 5:
                            a5 |= o3[g8 + 5 | 0] << 8;
                          case 4:
                            a5 |= o3[g8 + 4 | 0];
                          case 3:
                            i4 = (I7 = o3[g8 + 3 | 0]) >>> 8 | 0, I7 <<= 24, a5 |= i4;
                          case 2:
                            I7 |= (i4 = o3[g8 + 2 | 0]) << 16, a5 |= _4 = i4 >>> 16 | 0;
                          case 1:
                            I7 |= (i4 = o3[g8 + 1 | 0]) << 8, a5 |= _4 = i4 >>> 24 | 0;
                          case 0:
                            I7 = o3[0 | g8] | I7;
                        }
                        return i4 = at(t4, B4, 13), _4 = h3, g8 = B4 + e4 | 0, e4 = at(t4 = r5 + t4 | 0, B4 = t4 >>> 0 < r5 >>> 0 ? g8 + 1 | 0 : g8, 32), s4 = h3, c4 = at(C4 ^= I7, g8 = a5 ^ c4, 16), Q4 = 1 + (g8 = g8 + Q4 | 0) | 0, r5 = g8, n4 = (g8 = n4 + C4 | 0) >>> 0 < n4 >>> 0 ? Q4 : r5, Q4 = at(r5 = g8 ^ c4, C4 = Q4 = n4 ^ h3, 21), c4 = h3, _4 = B4 ^= _4, B4 = at(t4 ^= i4, B4, 17), i4 = h3, n4 = n4 + _4 | 0, _4 = g8, t4 = at(g8 = g8 + t4 | 0, n4 = _4 >>> 0 > g8 >>> 0 ? n4 + 1 | 0 : n4, 32), _4 = h3, y4 = at(B4 ^= g8, i4 ^= n4, 13), E4 = h3, C4 = 1 + (g8 = C4 + s4 | 0) | 0, n4 = g8, r5 = (g8 = r5 + e4 | 0) >>> 0 < r5 >>> 0 ? C4 : n4, n4 = g8 + B4 | 0, B4 = r5 + i4 | 0, e4 = at(n4, B4 = g8 >>> 0 > n4 >>> 0 ? B4 + 1 | 0 : B4, 32), C4 = h3, c4 = r5 ^= c4, r5 = at(g8 ^= Q4, r5, 16), Q4 = c4 + _4 | 0, c4 = Q4 = (t4 = (g8 = g8 + t4 | 0) >>> 0 < t4 >>> 0 ? Q4 + 1 | 0 : Q4) ^ h3, Q4 = at(r5 ^= g8, Q4, 21), i4 = h3, _4 = B4 ^= E4, B4 = at(n4 ^= y4, B4, 17), s4 = h3, t4 = t4 + _4 | 0, _4 = g8, t4 = at(g8 = g8 + n4 | 0, n4 = _4 >>> 0 > g8 >>> 0 ? t4 + 1 | 0 : t4, 32), _4 = h3, B4 = at(g8 ^= B4, n4 ^= s4, 13), s4 = h3, E4 = g8, C4 = 1 + (g8 = C4 + c4 | 0) | 0, c4 = g8, a5 = (a5 ^ (r5 = (g8 = r5 + e4 | 0) >>> 0 < r5 >>> 0 ? C4 : c4)) + n4 | 0, e4 = a5 = (I7 = E4 + (e4 = g8 ^ I7) | 0) >>> 0 < e4 >>> 0 ? a5 + 1 | 0 : a5, a5 = at(I7, a5, 32), C4 = h3, Q4 = at(g8 ^= Q4, r5 ^= i4, 16), r5 = r5 + _4 | 0, r5 = (n4 = g8) >>> 0 > (g8 = g8 + (238 ^ t4) | 0) >>> 0 ? r5 + 1 | 0 : r5, n4 = g8 ^ Q4, Q4 = t4 = r5 ^ h3, t4 = at(n4, t4, 21), c4 = h3, i4 = e4 ^= s4, B4 = at(I7 ^= B4, e4, 17), e4 = h3, r5 = r5 + i4 | 0, _4 = g8, i4 = at(g8 = g8 + I7 | 0, I7 = _4 >>> 0 > g8 >>> 0 ? r5 + 1 | 0 : r5, 32), _4 = h3, e4 = at(r5 = g8 ^ B4, B4 = I7 ^ e4, 13), s4 = h3, Q4 = 1 + (g8 = Q4 + C4 | 0) | 0, I7 = g8, a5 = (g8 = a5 + n4 | 0) >>> 0 < a5 >>> 0 ? Q4 : I7, I7 = g8 + r5 | 0, r5 = a5 + B4 | 0, B4 = r5 = g8 >>> 0 > I7 >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), Q4 = h3, t4 = at(g8 ^= t4, a5 ^= c4, 16), a5 = a5 + _4 | 0, a5 = (n4 = g8) >>> 0 > (g8 = g8 + i4 | 0) >>> 0 ? a5 + 1 | 0 : a5, n4 = g8 ^ t4, C4 = t4 = a5 ^ h3, t4 = at(n4, t4, 21), c4 = h3, i4 = B4 ^= s4, B4 = at(I7 ^= e4, B4, 17), e4 = h3, a5 = a5 + i4 | 0, _4 = g8, i4 = at(g8 = g8 + I7 | 0, I7 = _4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), _4 = h3, s4 = at(B4 ^= g8, e4 ^= I7, 13), y4 = h3, a5 = 1 + (g8 = Q4 + C4 | 0) | 0, I7 = g8, r5 = (a5 = (g8 = r5 + n4 | 0) >>> 0 < r5 >>> 0 ? a5 : I7) + e4 | 0, B4 = r5 = g8 >>> 0 > (I7 = g8 + B4 | 0) >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), e4 = h3, t4 = at(g8 ^= t4, a5 ^= c4, 16), a5 = a5 + _4 | 0, Q4 = g8, n4 = (g8 = g8 + i4 | 0) ^ t4, Q4 = t4 = (a5 = Q4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5) ^ h3, t4 = at(n4, t4, 21), C4 = h3, c4 = B4 ^= y4, B4 = at(I7 ^= s4, B4, 17), i4 = h3, a5 = a5 + c4 | 0, c4 = g8, c4 = at(g8 = g8 + I7 | 0, I7 = c4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), _4 = h3, s4 = at(B4 ^= g8, i4 ^= I7, 13), y4 = h3, a5 = 1 + (g8 = e4 + Q4 | 0) | 0, I7 = g8, r5 = (a5 = (g8 = r5 + n4 | 0) >>> 0 < r5 >>> 0 ? a5 : I7) + i4 | 0, B4 = r5 = g8 >>> 0 > (I7 = g8 + B4 | 0) >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), Q4 = h3, t4 = at(g8 ^= t4, a5 ^= C4, 16), a5 = a5 + _4 | 0, e4 = g8, n4 = (g8 = g8 + c4 | 0) ^ t4, C4 = t4 = (a5 = e4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5) ^ h3, c4 = at(n4, t4, 21), i4 = h3, e4 = at(I7 ^= s4, t4 = B4 ^ y4, 17), t4 = 1 + (a5 = a5 + t4 | 0) | 0, B4 = a5, t4 = (a5 = g8 + I7 | 0) >>> 0 < g8 >>> 0 ? t4 : B4, B4 = a5 ^ e4, e4 = _4 = t4 ^ h3, Q4 = 1 + (g8 = Q4 + C4 | 0) | 0, I7 = g8, I7 = (g8 = r5 + n4 | 0) >>> 0 < r5 >>> 0 ? Q4 : I7, yI(A9, (r5 = g8 ^ c4) ^ (a5 = at(a5, t4, 32)) ^ g8 ^ B4, (n4 = I7 ^ i4) ^ (Q4 = h3) ^ I7 ^ e4), C4 = at(t4 = 221 ^ B4, e4, 13), c4 = h3, e4 = 1 + (I7 = I7 + e4 | 0) | 0, B4 = I7, B4 = at(I7 = g8 + t4 | 0, t4 = I7 >>> 0 < t4 >>> 0 ? e4 : B4, 32), e4 = h3, _4 = 1 + (g8 = n4 + Q4 | 0) | 0, Q4 = g8, a5 = (g8 = a5 + r5 | 0) >>> 0 < a5 >>> 0 ? _4 : Q4, r5 = at(r5, n4, 16) ^ g8, Q4 = n4 = a5 ^ h3, n4 = at(r5, n4, 21), i4 = h3, c4 = t4 ^= c4, t4 = at(I7 ^= C4, t4, 17), C4 = h3, a5 = a5 + c4 | 0, c4 = g8, c4 = at(g8 = g8 + I7 | 0, I7 = c4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), _4 = h3, s4 = at(t4 ^= g8, C4 ^= I7, 13), y4 = h3, a5 = 1 + (g8 = e4 + Q4 | 0) | 0, I7 = g8, r5 = (a5 = (g8 = r5 + B4 | 0) >>> 0 < B4 >>> 0 ? a5 : I7) + C4 | 0, t4 = r5 = g8 >>> 0 > (I7 = g8 + t4 | 0) >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), B4 = h3, n4 = at(g8 ^= n4, a5 ^= i4, 16), a5 = a5 + _4 | 0, Q4 = e4 = (a5 = (Q4 = g8) >>> 0 > (g8 = g8 + c4 | 0) >>> 0 ? a5 + 1 | 0 : a5) ^ h3, e4 = at(n4 ^= g8, e4, 21), C4 = h3, c4 = t4 ^= y4, t4 = at(I7 ^= s4, t4, 17), i4 = h3, a5 = a5 + c4 | 0, c4 = g8, c4 = at(g8 = g8 + I7 | 0, I7 = c4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), _4 = h3, s4 = at(t4 ^= g8, i4 ^= I7, 13), y4 = h3, a5 = 1 + (g8 = B4 + Q4 | 0) | 0, I7 = g8, r5 = (a5 = (g8 = r5 + n4 | 0) >>> 0 < r5 >>> 0 ? a5 : I7) + i4 | 0, t4 = r5 = g8 >>> 0 > (I7 = g8 + t4 | 0) >>> 0 ? r5 + 1 | 0 : r5, r5 = at(I7, r5, 32), B4 = h3, e4 = at(g8 ^= e4, a5 ^= C4, 16), a5 = a5 + _4 | 0, Q4 = g8, n4 = (g8 = g8 + c4 | 0) ^ e4, Q4 = e4 = (a5 = Q4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5) ^ h3, e4 = at(n4, e4, 21), C4 = h3, c4 = t4 ^= y4, t4 = at(I7 ^= s4, t4, 17), i4 = h3, a5 = a5 + c4 | 0, c4 = g8, a5 = at(g8 = g8 + I7 | 0, I7 = c4 >>> 0 > g8 >>> 0 ? a5 + 1 | 0 : a5, 32), c4 = h3, i4 = I7 ^= i4, _4 = at(t4 ^= g8, I7, 13), s4 = h3, B4 = 1 + (g8 = B4 + Q4 | 0) | 0, I7 = g8, r5 = (g8 = r5 + n4 | 0) >>> 0 < r5 >>> 0 ? B4 : I7, n4 = at(I7 = g8 ^ e4, B4 = n4 = r5 ^ C4, 16), B4 = B4 + c4 | 0, Q4 = I7, n4 = at((I7 = I7 + a5 | 0) ^ n4, (a5 = Q4 >>> 0 > I7 >>> 0 ? B4 + 1 | 0 : B4) ^ h3, 21), B4 = h3, r5 = r5 + i4 | 0, Q4 = 1 + (a5 = a5 + (r5 = ((Q4 = g8) >>> 0 > (g8 = g8 + t4 | 0) >>> 0 ? r5 + 1 | 0 : r5) ^ s4) | 0) | 0, t4 = a5, I7 = (g8 = I7 + (a5 = g8 ^ _4) | 0) >>> 0 < I7 >>> 0 ? Q4 : t4, a5 = at(a5, r5, 17) ^ g8 ^ n4, r5 = h3 ^ I7 ^ B4, yI(A9 + 8 | 0, at(g8, I7, 32) ^ a5, h3 ^ r5), 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, r4 |= 0);
                    }, ij: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var B4, e4 = 0;
                        if (u3 = B4 = u3 - 112 | 0, g8 | I7) {
                          e4 = o3[r5 + 28 | 0] | o3[r5 + 29 | 0] << 8 | o3[r5 + 30 | 0] << 16 | o3[r5 + 31 | 0] << 24, n3[B4 + 24 >> 2] = o3[r5 + 24 | 0] | o3[r5 + 25 | 0] << 8 | o3[r5 + 26 | 0] << 16 | o3[r5 + 27 | 0] << 24, n3[B4 + 28 >> 2] = e4, e4 = o3[r5 + 20 | 0] | o3[r5 + 21 | 0] << 8 | o3[r5 + 22 | 0] << 16 | o3[r5 + 23 | 0] << 24, n3[B4 + 16 >> 2] = o3[r5 + 16 | 0] | o3[r5 + 17 | 0] << 8 | o3[r5 + 18 | 0] << 16 | o3[r5 + 19 | 0] << 24, n3[B4 + 20 >> 2] = e4, e4 = o3[r5 + 4 | 0] | o3[r5 + 5 | 0] << 8 | o3[r5 + 6 | 0] << 16 | o3[r5 + 7 | 0] << 24, n3[B4 >> 2] = o3[0 | r5] | o3[r5 + 1 | 0] << 8 | o3[r5 + 2 | 0] << 16 | o3[r5 + 3 | 0] << 24, n3[B4 + 4 >> 2] = e4, e4 = o3[r5 + 12 | 0] | o3[r5 + 13 | 0] << 8 | o3[r5 + 14 | 0] << 16 | o3[r5 + 15 | 0] << 24, n3[B4 + 8 >> 2] = o3[r5 + 8 | 0] | o3[r5 + 9 | 0] << 8 | o3[r5 + 10 | 0] << 16 | o3[r5 + 11 | 0] << 24, n3[B4 + 12 >> 2] = e4, r5 = o3[0 | a5] | o3[a5 + 1 | 0] << 8 | o3[a5 + 2 | 0] << 16 | o3[a5 + 3 | 0] << 24, a5 = o3[a5 + 4 | 0] | o3[a5 + 5 | 0] << 8 | o3[a5 + 6 | 0] << 16 | o3[a5 + 7 | 0] << 24, n3[B4 + 104 >> 2] = 0, n3[B4 + 108 >> 2] = 0, n3[B4 + 96 >> 2] = r5, n3[B4 + 100 >> 2] = a5;
                          A: {
                            if (!I7 & g8 >>> 0 >= 64 | I7) {
                              for (; ; ) {
                                for (za(A9, B4 + 96 | 0, B4, 0), r5 = 8, a5 = 1; a5 = o3[0 | (e4 = (B4 + 96 | 0) + r5 | 0)] + a5 | 0, t3[0 | e4] = a5, a5 = a5 >>> 8 | 0, (0 | (r5 = r5 + 1 | 0)) != 16; )
                                  ;
                                if (A9 = A9 - -64 | 0, I7 = I7 - 1 | 0, !(!(I7 = (g8 = g8 + -64 | 0) >>> 0 < 4294967232 ? I7 + 1 | 0 : I7) & g8 >>> 0 > 63 | I7))
                                  break;
                              }
                              if (!(g8 | I7))
                                break A;
                            }
                            for (r5 = 0, za(B4 + 32 | 0, B4 + 96 | 0, B4, 0); t3[A9 + r5 | 0] = o3[(B4 + 32 | 0) + r5 | 0], (0 | g8) != (0 | (r5 = r5 + 1 | 0)); )
                              ;
                          }
                          pI(B4 + 32 | 0, 64), pI(B4, 32);
                        }
                        return u3 = B4 + 112 | 0, 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, jj: function(A8, g7, I6, a4, r4, B4) {
                      return 0 | function(A9, g8, I7, a5, r5, B5) {
                        var e4, Q4 = 0;
                        if (u3 = e4 = u3 - 112 | 0, I7 | a5) {
                          Q4 = o3[B5 + 28 | 0] | o3[B5 + 29 | 0] << 8 | o3[B5 + 30 | 0] << 16 | o3[B5 + 31 | 0] << 24, n3[e4 + 24 >> 2] = o3[B5 + 24 | 0] | o3[B5 + 25 | 0] << 8 | o3[B5 + 26 | 0] << 16 | o3[B5 + 27 | 0] << 24, n3[e4 + 28 >> 2] = Q4, Q4 = o3[B5 + 20 | 0] | o3[B5 + 21 | 0] << 8 | o3[B5 + 22 | 0] << 16 | o3[B5 + 23 | 0] << 24, n3[e4 + 16 >> 2] = o3[B5 + 16 | 0] | o3[B5 + 17 | 0] << 8 | o3[B5 + 18 | 0] << 16 | o3[B5 + 19 | 0] << 24, n3[e4 + 20 >> 2] = Q4, Q4 = o3[B5 + 4 | 0] | o3[B5 + 5 | 0] << 8 | o3[B5 + 6 | 0] << 16 | o3[B5 + 7 | 0] << 24, n3[e4 >> 2] = o3[0 | B5] | o3[B5 + 1 | 0] << 8 | o3[B5 + 2 | 0] << 16 | o3[B5 + 3 | 0] << 24, n3[e4 + 4 >> 2] = Q4, Q4 = o3[B5 + 12 | 0] | o3[B5 + 13 | 0] << 8 | o3[B5 + 14 | 0] << 16 | o3[B5 + 15 | 0] << 24, n3[e4 + 8 >> 2] = o3[B5 + 8 | 0] | o3[B5 + 9 | 0] << 8 | o3[B5 + 10 | 0] << 16 | o3[B5 + 11 | 0] << 24, n3[e4 + 12 >> 2] = Q4, B5 = o3[0 | r5] | o3[r5 + 1 | 0] << 8 | o3[r5 + 2 | 0] << 16 | o3[r5 + 3 | 0] << 24, r5 = o3[r5 + 4 | 0] | o3[r5 + 5 | 0] << 8 | o3[r5 + 6 | 0] << 16 | o3[r5 + 7 | 0] << 24, n3[e4 + 104 >> 2] = 0, n3[e4 + 108 >> 2] = 0, n3[e4 + 96 >> 2] = B5, n3[e4 + 100 >> 2] = r5;
                          A: {
                            if (!a5 & I7 >>> 0 >= 64 | a5) {
                              for (; ; ) {
                                for (B5 = 0, za(e4 + 32 | 0, e4 + 96 | 0, e4, 0); t3[A9 + B5 | 0] = o3[(e4 + 32 | 0) + B5 | 0] ^ o3[g8 + B5 | 0], r5 = 1, (0 | (B5 = B5 + 1 | 0)) != 64; )
                                  ;
                                for (B5 = 8; r5 = o3[0 | (Q4 = (e4 + 96 | 0) + B5 | 0)] + r5 | 0, t3[0 | Q4] = r5, r5 = r5 >>> 8 | 0, (0 | (B5 = B5 + 1 | 0)) != 16; )
                                  ;
                                if (g8 = g8 - -64 | 0, A9 = A9 - -64 | 0, a5 = a5 - 1 | 0, !(!(a5 = (I7 = I7 + -64 | 0) >>> 0 < 4294967232 ? a5 + 1 | 0 : a5) & I7 >>> 0 > 63 | a5))
                                  break;
                              }
                              if (!(I7 | a5))
                                break A;
                            }
                            for (B5 = 0, za(e4 + 32 | 0, e4 + 96 | 0, e4, 0); t3[A9 + B5 | 0] = o3[(e4 + 32 | 0) + B5 | 0] ^ o3[g8 + B5 | 0], (0 | I7) != (0 | (B5 = B5 + 1 | 0)); )
                              ;
                          }
                          pI(e4 + 32 | 0, 64), pI(e4, 32);
                        }
                        return u3 = e4 + 112 | 0, 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, B4 |= 0);
                    }, kj: vt, lj: Lt, mj: Rt, nj: _t, oj: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var B4, e4 = 0;
                        if (u3 = B4 = u3 - 112 | 0, g8 | I7) {
                          e4 = o3[r5 + 28 | 0] | o3[r5 + 29 | 0] << 8 | o3[r5 + 30 | 0] << 16 | o3[r5 + 31 | 0] << 24, n3[B4 + 24 >> 2] = o3[r5 + 24 | 0] | o3[r5 + 25 | 0] << 8 | o3[r5 + 26 | 0] << 16 | o3[r5 + 27 | 0] << 24, n3[B4 + 28 >> 2] = e4, e4 = o3[r5 + 20 | 0] | o3[r5 + 21 | 0] << 8 | o3[r5 + 22 | 0] << 16 | o3[r5 + 23 | 0] << 24, n3[B4 + 16 >> 2] = o3[r5 + 16 | 0] | o3[r5 + 17 | 0] << 8 | o3[r5 + 18 | 0] << 16 | o3[r5 + 19 | 0] << 24, n3[B4 + 20 >> 2] = e4, e4 = o3[r5 + 4 | 0] | o3[r5 + 5 | 0] << 8 | o3[r5 + 6 | 0] << 16 | o3[r5 + 7 | 0] << 24, n3[B4 >> 2] = o3[0 | r5] | o3[r5 + 1 | 0] << 8 | o3[r5 + 2 | 0] << 16 | o3[r5 + 3 | 0] << 24, n3[B4 + 4 >> 2] = e4, e4 = o3[r5 + 12 | 0] | o3[r5 + 13 | 0] << 8 | o3[r5 + 14 | 0] << 16 | o3[r5 + 15 | 0] << 24, n3[B4 + 8 >> 2] = o3[r5 + 8 | 0] | o3[r5 + 9 | 0] << 8 | o3[r5 + 10 | 0] << 16 | o3[r5 + 11 | 0] << 24, n3[B4 + 12 >> 2] = e4, r5 = o3[0 | a5] | o3[a5 + 1 | 0] << 8 | o3[a5 + 2 | 0] << 16 | o3[a5 + 3 | 0] << 24, a5 = o3[a5 + 4 | 0] | o3[a5 + 5 | 0] << 8 | o3[a5 + 6 | 0] << 16 | o3[a5 + 7 | 0] << 24, n3[B4 + 104 >> 2] = 0, n3[B4 + 108 >> 2] = 0, n3[B4 + 96 >> 2] = r5, n3[B4 + 100 >> 2] = a5;
                          A: {
                            if (!I7 & g8 >>> 0 >= 64 | I7) {
                              for (; ; ) {
                                for (Oa(A9, B4 + 96 | 0, B4, 0), r5 = 8, a5 = 1; a5 = o3[0 | (e4 = (B4 + 96 | 0) + r5 | 0)] + a5 | 0, t3[0 | e4] = a5, a5 = a5 >>> 8 | 0, (0 | (r5 = r5 + 1 | 0)) != 16; )
                                  ;
                                if (A9 = A9 - -64 | 0, I7 = I7 - 1 | 0, !(!(I7 = (g8 = g8 + -64 | 0) >>> 0 < 4294967232 ? I7 + 1 | 0 : I7) & g8 >>> 0 > 63 | I7))
                                  break;
                              }
                              if (!(g8 | I7))
                                break A;
                            }
                            for (r5 = 0, Oa(B4 + 32 | 0, B4 + 96 | 0, B4, 0); t3[A9 + r5 | 0] = o3[(B4 + 32 | 0) + r5 | 0], (0 | g8) != (0 | (r5 = r5 + 1 | 0)); )
                              ;
                          }
                          pI(B4 + 32 | 0, 64), pI(B4, 32);
                        }
                        return u3 = B4 + 112 | 0, 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, pj: function(A8, g7, I6, a4, r4, B4) {
                      return 0 | function(A9, g8, I7, a5, r5, B5) {
                        var e4, Q4 = 0;
                        if (u3 = e4 = u3 - 112 | 0, I7 | a5) {
                          Q4 = o3[B5 + 28 | 0] | o3[B5 + 29 | 0] << 8 | o3[B5 + 30 | 0] << 16 | o3[B5 + 31 | 0] << 24, n3[e4 + 24 >> 2] = o3[B5 + 24 | 0] | o3[B5 + 25 | 0] << 8 | o3[B5 + 26 | 0] << 16 | o3[B5 + 27 | 0] << 24, n3[e4 + 28 >> 2] = Q4, Q4 = o3[B5 + 20 | 0] | o3[B5 + 21 | 0] << 8 | o3[B5 + 22 | 0] << 16 | o3[B5 + 23 | 0] << 24, n3[e4 + 16 >> 2] = o3[B5 + 16 | 0] | o3[B5 + 17 | 0] << 8 | o3[B5 + 18 | 0] << 16 | o3[B5 + 19 | 0] << 24, n3[e4 + 20 >> 2] = Q4, Q4 = o3[B5 + 4 | 0] | o3[B5 + 5 | 0] << 8 | o3[B5 + 6 | 0] << 16 | o3[B5 + 7 | 0] << 24, n3[e4 >> 2] = o3[0 | B5] | o3[B5 + 1 | 0] << 8 | o3[B5 + 2 | 0] << 16 | o3[B5 + 3 | 0] << 24, n3[e4 + 4 >> 2] = Q4, Q4 = o3[B5 + 12 | 0] | o3[B5 + 13 | 0] << 8 | o3[B5 + 14 | 0] << 16 | o3[B5 + 15 | 0] << 24, n3[e4 + 8 >> 2] = o3[B5 + 8 | 0] | o3[B5 + 9 | 0] << 8 | o3[B5 + 10 | 0] << 16 | o3[B5 + 11 | 0] << 24, n3[e4 + 12 >> 2] = Q4, B5 = o3[0 | r5] | o3[r5 + 1 | 0] << 8 | o3[r5 + 2 | 0] << 16 | o3[r5 + 3 | 0] << 24, r5 = o3[r5 + 4 | 0] | o3[r5 + 5 | 0] << 8 | o3[r5 + 6 | 0] << 16 | o3[r5 + 7 | 0] << 24, n3[e4 + 104 >> 2] = 0, n3[e4 + 108 >> 2] = 0, n3[e4 + 96 >> 2] = B5, n3[e4 + 100 >> 2] = r5;
                          A: {
                            if (!a5 & I7 >>> 0 >= 64 | a5) {
                              for (; ; ) {
                                for (B5 = 0, Oa(e4 + 32 | 0, e4 + 96 | 0, e4, 0); t3[A9 + B5 | 0] = o3[(e4 + 32 | 0) + B5 | 0] ^ o3[g8 + B5 | 0], r5 = 1, (0 | (B5 = B5 + 1 | 0)) != 64; )
                                  ;
                                for (B5 = 8; r5 = o3[0 | (Q4 = (e4 + 96 | 0) + B5 | 0)] + r5 | 0, t3[0 | Q4] = r5, r5 = r5 >>> 8 | 0, (0 | (B5 = B5 + 1 | 0)) != 16; )
                                  ;
                                if (g8 = g8 - -64 | 0, A9 = A9 - -64 | 0, a5 = a5 - 1 | 0, !(!(a5 = (I7 = I7 + -64 | 0) >>> 0 < 4294967232 ? a5 + 1 | 0 : a5) & I7 >>> 0 > 63 | a5))
                                  break;
                              }
                              if (!(I7 | a5))
                                break A;
                            }
                            for (B5 = 0, Oa(e4 + 32 | 0, e4 + 96 | 0, e4, 0); t3[A9 + B5 | 0] = o3[(e4 + 32 | 0) + B5 | 0] ^ o3[g8 + B5 | 0], (0 | I7) != (0 | (B5 = B5 + 1 | 0)); )
                              ;
                          }
                          pI(e4 + 32 | 0, 64), pI(e4, 32);
                        }
                        return u3 = e4 + 112 | 0, 0;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, B4 |= 0);
                    }, qj: vt, rj: Lt, sj: Rt, tj: _t, uj: vt, vj: xt, wj: Rt, xj: function(A8, g7, I6, a4, r4) {
                      return 0 | function(A9, g8, I7, a5, r5) {
                        var t4;
                        return u3 = t4 = u3 - 32 | 0, K3(t4, a5, r5, 0), A9 = da(A9, g8, I7, a5 + 16 | 0, t4), u3 = t4 + 32 | 0, A9;
                      }(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0);
                    }, yj: function(A8, g7, I6, a4, r4, t4, B4, n4) {
                      return 0 | qI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, t4 |= 0, B4 |= 0, n4 |= 0);
                    }, zj: function(A8, g7, I6, a4, r4, t4) {
                      return 0 | qI(A8 |= 0, g7 |= 0, I6 |= 0, a4 |= 0, r4 |= 0, 0, 0, t4 |= 0);
                    }, Aj: _t, Bj: function() {
                      return 36736;
                    }, Cj: k3, Dj: U3 };
                  }(A6);
                }(SA2);
              }, instantiate: function(A5, g5) {
                return { then: function(g6) {
                  var I4 = new l2.Module(A5);
                  g6({ instance: new l2.Instance(I4) });
                } };
              }, RuntimeError: Error };
              function h2(A5, g5, I4, a2) {
                switch ((I4 = I4 || "i8").charAt(I4.length - 1) === "*" && (I4 = "i32"), I4) {
                  case "i1":
                  case "i8":
                    k2[A5 >> 0] = g5;
                    break;
                  case "i16":
                    b2[A5 >> 1] = g5;
                    break;
                  case "i32":
                    H2[A5 >> 2] = g5;
                    break;
                  case "i64":
                    oA2 = [g5 >>> 0, (nA2 = g5, +Math.abs(nA2) >= 1 ? nA2 > 0 ? (0 | Math.min(+Math.floor(nA2 / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((nA2 - +(~~nA2 >>> 0)) / 4294967296) >>> 0 : 0)], H2[A5 >> 2] = oA2[0], H2[A5 + 4 >> 2] = oA2[1];
                    break;
                  case "float":
                    d2[A5 >> 2] = g5;
                    break;
                  case "double":
                    S2[A5 >> 3] = g5;
                    break;
                  default:
                    gA2("invalid type for setValue: " + I4);
                }
              }
              function w2(A5, g5, I4) {
                switch ((g5 = g5 || "i8").charAt(g5.length - 1) === "*" && (g5 = "i32"), g5) {
                  case "i1":
                  case "i8":
                    return k2[A5 >> 0];
                  case "i16":
                    return b2[A5 >> 1];
                  case "i32":
                  case "i64":
                    return H2[A5 >> 2];
                  case "float":
                    return d2[A5 >> 2];
                  case "double":
                    return S2[A5 >> 3];
                  default:
                    gA2("invalid type for getValue: " + g5);
                }
                return null;
              }
              p2 = [], typeof l2 != "object" && gA2("no native wasm support detected");
              var D2 = false;
              function m2(A5, g5) {
                A5 || gA2("Assertion failed: " + g5);
              }
              var G2, k2, F2, b2, H2, d2, S2, v2 = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
              function U2(A5, g5, I4) {
                for (var a2 = g5 + I4, r3 = g5; A5[r3] && !(r3 >= a2); )
                  ++r3;
                if (r3 - g5 > 16 && A5.subarray && v2)
                  return v2.decode(A5.subarray(g5, r3));
                for (var t3 = ""; g5 < r3; ) {
                  var B3 = A5[g5++];
                  if (128 & B3) {
                    var n3 = 63 & A5[g5++];
                    if ((224 & B3) != 192) {
                      var o3 = 63 & A5[g5++];
                      if ((B3 = (240 & B3) == 224 ? (15 & B3) << 12 | n3 << 6 | o3 : (7 & B3) << 18 | n3 << 12 | o3 << 6 | 63 & A5[g5++]) < 65536)
                        t3 += String.fromCharCode(B3);
                      else {
                        var e3 = B3 - 65536;
                        t3 += String.fromCharCode(55296 | e3 >> 10, 56320 | 1023 & e3);
                      }
                    } else
                      t3 += String.fromCharCode((31 & B3) << 6 | n3);
                  } else
                    t3 += String.fromCharCode(B3);
                }
                return t3;
              }
              function J2(A5, g5) {
                return A5 ? U2(F2, A5, g5) : "";
              }
              function Y2(A5, g5) {
                return A5 % g5 > 0 && (A5 += g5 - A5 % g5), A5;
              }
              function x2(A5) {
                G2 = A5, r2.HEAP8 = k2 = new Int8Array(A5), r2.HEAP16 = b2 = new Int16Array(A5), r2.HEAP32 = H2 = new Int32Array(A5), r2.HEAPU8 = F2 = new Uint8Array(A5), r2.HEAPU16 = new Uint16Array(A5), r2.HEAPU32 = new Uint32Array(A5), r2.HEAPF32 = d2 = new Float32Array(A5), r2.HEAPF64 = S2 = new Float64Array(A5);
              }
              var N3, M2 = r2.INITIAL_MEMORY || 16777216;
              (f2 = r2.wasmMemory ? r2.wasmMemory : new l2.Memory({ initial: M2 / 65536, maximum: 32768 })) && (G2 = f2.buffer), M2 = G2.byteLength, x2(G2);
              var R2 = [], P2 = [], q2 = [], L2 = [];
              function K2() {
                if (r2.preRun)
                  for (typeof r2.preRun == "function" && (r2.preRun = [r2.preRun]); r2.preRun.length; )
                    T2(r2.preRun.shift());
                _A2(R2);
              }
              function X2() {
                _A2(P2);
              }
              function V2() {
                _A2(q2);
              }
              function W2() {
                if (r2.postRun)
                  for (typeof r2.postRun == "function" && (r2.postRun = [r2.postRun]); r2.postRun.length; )
                    Z2(r2.postRun.shift());
                _A2(L2);
              }
              function T2(A5) {
                R2.unshift(A5);
              }
              function Z2(A5) {
                L2.unshift(A5);
              }
              P2.push({ func: function() {
                vA2();
              } });
              var j2 = 0, z2 = null, O2 = null;
              function $2(A5) {
                j2++, r2.monitorRunDependencies && r2.monitorRunDependencies(j2);
              }
              function AA2(A5) {
                if (j2--, r2.monitorRunDependencies && r2.monitorRunDependencies(j2), j2 == 0 && (z2 !== null && (clearInterval(z2), z2 = null), O2)) {
                  var g5 = O2;
                  O2 = null, g5();
                }
              }
              function gA2(A5) {
                throw r2.onAbort && r2.onAbort(A5), u2(A5 += ""), D2 = true, A5 = "abort(" + A5 + "). Build with -s ASSERTIONS=1 for more info.", new l2.RuntimeError(A5);
              }
              function IA2(A5, g5) {
                return String.prototype.startsWith ? A5.startsWith(g5) : A5.indexOf(g5) === 0;
              }
              r2.preloadedImages = {}, r2.preloadedAudios = {};
              var aA2 = "data:application/octet-stream;base64,";
              function rA2(A5) {
                return IA2(A5, aA2);
              }
              var tA2 = "file://";
              function BA2(A5) {
                return IA2(A5, tA2);
              }
              var nA2, oA2, eA2 = "<<< WASM_BINARY_FILE >>>";
              function QA2(A5) {
                try {
                  if (A5 == eA2 && p2)
                    return new Uint8Array(p2);
                  var g5 = HA2(A5);
                  if (g5)
                    return g5;
                  if (i2)
                    return i2(A5);
                  throw "both async and sync fetching of the wasm failed";
                } catch (A6) {
                  gA2(A6);
                }
              }
              function CA2() {
                if (!p2 && (n2 || o2)) {
                  if (typeof fetch == "function" && !BA2(eA2))
                    return fetch(eA2, { credentials: "same-origin" }).then(function(A5) {
                      if (!A5.ok)
                        throw "failed to load wasm binary file at '" + eA2 + "'";
                      return A5.arrayBuffer();
                    }).catch(function() {
                      return QA2(eA2);
                    });
                  if (c2)
                    return new Promise(function(A5, g5) {
                      c2(eA2, function(g6) {
                        A5(new Uint8Array(g6));
                      }, g5);
                    });
                }
                return Promise.resolve().then(function() {
                  return QA2(eA2);
                });
              }
              function cA2() {
                var A5 = { a: SA2 };
                function g5(A6, g6) {
                  var I5 = A6.exports;
                  r2.asm = I5, N3 = r2.asm.h, AA2();
                }
                function I4(A6) {
                  g5(A6.instance);
                }
                function a2(g6) {
                  return CA2().then(function(g7) {
                    return l2.instantiate(g7, A5);
                  }).then(g6, function(A6) {
                    u2("failed to asynchronously prepare wasm: " + A6), gA2(A6);
                  });
                }
                if ($2(), r2.instantiateWasm)
                  try {
                    return r2.instantiateWasm(A5, g5);
                  } catch (A6) {
                    return u2("Module.instantiateWasm callback failed with error: " + A6), false;
                  }
                return p2 || typeof l2.instantiateStreaming != "function" || rA2(eA2) || BA2(eA2) || typeof fetch != "function" ? a2(I4) : fetch(eA2, { credentials: "same-origin" }).then(function(g6) {
                  return l2.instantiateStreaming(g6, A5).then(I4, function(A6) {
                    return u2("wasm streaming compile failed: " + A6), u2("falling back to ArrayBuffer instantiation"), a2(I4);
                  });
                }), {};
              }
              rA2(eA2) || (eA2 = E2(eA2));
              var iA2 = { 1027: function() {
                return r2.getRandomValue();
              }, 1065: function() {
                if (r2.getRandomValue === void 0)
                  try {
                    var A5 = typeof window == "object" ? window : self, g5 = A5.crypto !== void 0 ? A5.crypto : A5.msCrypto, I4 = function() {
                      var A6 = new Uint32Array(1);
                      return g5.getRandomValues(A6), A6[0] >>> 0;
                    };
                    I4(), r2.getRandomValue = I4;
                  } catch (A6) {
                    try {
                      var a2 = __require("crypto"), t3 = function() {
                        var A7 = a2.randomBytes(4);
                        return (A7[0] << 24 | A7[1] << 16 | A7[2] << 8 | A7[3]) >>> 0;
                      };
                      t3(), r2.getRandomValue = t3;
                    } catch (A7) {
                      throw "No secure random number generator found";
                    }
                  }
              } };
              function _A2(A5) {
                for (; A5.length > 0; ) {
                  var g5 = A5.shift();
                  if (typeof g5 != "function") {
                    var I4 = g5.func;
                    typeof I4 == "number" ? g5.arg === void 0 ? N3.get(I4)() : N3.get(I4)(g5.arg) : I4(g5.arg === void 0 ? null : g5.arg);
                  } else
                    g5(r2);
                }
              }
              function sA2(A5, g5, I4, a2) {
                gA2("Assertion failed: " + J2(A5) + ", at: " + [g5 ? J2(g5) : "unknown filename", I4, a2 ? J2(a2) : "unknown function"]);
              }
              function yA2() {
                gA2();
              }
              function EA2(A5, g5, I4) {
                var a2 = mA2(g5, I4);
                return iA2[A5].apply(null, a2);
              }
              function pA2(A5, g5, I4) {
                F2.copyWithin(A5, g5, g5 + I4);
              }
              function uA2() {
                return F2.length;
              }
              function fA2(A5) {
                try {
                  return f2.grow(A5 - G2.byteLength + 65535 >>> 16), x2(f2.buffer), 1;
                } catch (A6) {
                }
              }
              function lA2(A5) {
                A5 >>>= 0;
                var g5 = uA2(), I4 = 2147483648;
                if (A5 > I4)
                  return false;
                for (var a2 = 1; a2 <= 4; a2 *= 2) {
                  var r3 = g5 * (1 + 0.2 / a2);
                  if (r3 = Math.min(r3, A5 + 100663296), fA2(Math.min(I4, Y2(Math.max(16777216, A5, r3), 65536))))
                    return true;
                }
                return false;
              }
              function hA2(A5) {
                return H2[UA() >> 2] = A5, A5;
              }
              function wA2(A5) {
                switch (A5) {
                  case 30:
                    return 16384;
                  case 85:
                    return 131072;
                  case 132:
                  case 133:
                  case 12:
                  case 137:
                  case 138:
                  case 15:
                  case 235:
                  case 16:
                  case 17:
                  case 18:
                  case 19:
                  case 20:
                  case 149:
                  case 13:
                  case 10:
                  case 236:
                  case 153:
                  case 9:
                  case 21:
                  case 22:
                  case 159:
                  case 154:
                  case 14:
                  case 77:
                  case 78:
                  case 139:
                  case 82:
                  case 68:
                  case 67:
                  case 164:
                  case 11:
                  case 29:
                  case 47:
                  case 48:
                  case 95:
                  case 52:
                  case 51:
                  case 46:
                    return 200809;
                  case 27:
                  case 246:
                  case 127:
                  case 128:
                  case 23:
                  case 24:
                  case 160:
                  case 161:
                  case 181:
                  case 182:
                  case 242:
                  case 183:
                  case 184:
                  case 243:
                  case 244:
                  case 245:
                  case 165:
                  case 178:
                  case 179:
                  case 49:
                  case 50:
                  case 168:
                  case 169:
                  case 175:
                  case 170:
                  case 171:
                  case 172:
                  case 97:
                  case 76:
                  case 32:
                  case 173:
                  case 35:
                  case 80:
                  case 81:
                  case 79:
                    return -1;
                  case 176:
                  case 177:
                  case 7:
                  case 155:
                  case 8:
                  case 157:
                  case 125:
                  case 126:
                  case 92:
                  case 93:
                  case 129:
                  case 130:
                  case 131:
                  case 94:
                  case 91:
                    return 1;
                  case 74:
                  case 60:
                  case 69:
                  case 70:
                  case 4:
                    return 1024;
                  case 31:
                  case 42:
                  case 72:
                    return 32;
                  case 87:
                  case 26:
                  case 33:
                    return 2147483647;
                  case 34:
                  case 1:
                    return 47839;
                  case 38:
                  case 36:
                    return 99;
                  case 43:
                  case 37:
                    return 2048;
                  case 0:
                    return 2097152;
                  case 3:
                    return 65536;
                  case 28:
                    return 32768;
                  case 44:
                    return 32767;
                  case 75:
                    return 16384;
                  case 39:
                    return 1e3;
                  case 89:
                    return 700;
                  case 71:
                    return 256;
                  case 40:
                    return 255;
                  case 2:
                    return 100;
                  case 180:
                    return 64;
                  case 25:
                    return 20;
                  case 5:
                    return 16;
                  case 6:
                    return 6;
                  case 73:
                    return 4;
                  case 84:
                    return typeof navigator == "object" && navigator.hardwareConcurrency || 1;
                }
                return hA2(28), -1;
              }
              var DA2 = [];
              function mA2(A5, g5) {
                var I4;
                for (DA2.length = 0, g5 >>= 2; I4 = F2[A5++]; ) {
                  var a2 = I4 < 105;
                  a2 && 1 & g5 && g5++, DA2.push(a2 ? S2[g5++ >> 1] : H2[g5]), ++g5;
                }
                return DA2;
              }
              var GA2 = false;
              function kA2(A5) {
                for (var g5 = [], I4 = 0; I4 < A5.length; I4++) {
                  var a2 = A5[I4];
                  a2 > 255 && (GA2 && m2(false, "Character code " + a2 + " (" + String.fromCharCode(a2) + ")  at offset " + I4 + " not in 0x00-0xFF."), a2 &= 255), g5.push(String.fromCharCode(a2));
                }
                return g5.join("");
              }
              var FA2 = typeof atob == "function" ? atob : function(A5) {
                var g5, I4, a2, r3, t3, B3, n3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", o3 = "", e3 = 0;
                A5 = A5.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                do {
                  g5 = n3.indexOf(A5.charAt(e3++)) << 2 | (r3 = n3.indexOf(A5.charAt(e3++))) >> 4, I4 = (15 & r3) << 4 | (t3 = n3.indexOf(A5.charAt(e3++))) >> 2, a2 = (3 & t3) << 6 | (B3 = n3.indexOf(A5.charAt(e3++))), o3 += String.fromCharCode(g5), t3 !== 64 && (o3 += String.fromCharCode(I4)), B3 !== 64 && (o3 += String.fromCharCode(a2));
                } while (e3 < A5.length);
                return o3;
              };
              function bA2(A5) {
                if (typeof e2 == "boolean" && e2) {
                  var g5;
                  try {
                    g5 = Buffer2.from(A5, "base64");
                  } catch (I5) {
                    g5 = new Buffer2(A5, "base64");
                  }
                  return new Uint8Array(g5.buffer, g5.byteOffset, g5.byteLength);
                }
                try {
                  for (var I4 = FA2(A5), a2 = new Uint8Array(I4.length), r3 = 0; r3 < I4.length; ++r3)
                    a2[r3] = I4.charCodeAt(r3);
                  return a2;
                } catch (A6) {
                  throw new Error("Converting base64 string to bytes failed.");
                }
              }
              function HA2(A5) {
                if (rA2(A5))
                  return bA2(A5.slice(aA2.length));
              }
              var dA2, SA2 = { b: sA2, c: yA2, d: EA2, f: pA2, g: lA2, a: f2, e: wA2 }, vA2 = (cA2(), r2.___wasm_call_ctors = function() {
                return (vA2 = r2.___wasm_call_ctors = r2.asm.i).apply(null, arguments);
              }), UA = (r2._crypto_aead_chacha20poly1305_encrypt_detached = function() {
                return (r2._crypto_aead_chacha20poly1305_encrypt_detached = r2.asm.j).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_encrypt = function() {
                return (r2._crypto_aead_chacha20poly1305_encrypt = r2.asm.k).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = r2.asm.l).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_encrypt = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_encrypt = r2.asm.m).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_decrypt_detached = function() {
                return (r2._crypto_aead_chacha20poly1305_decrypt_detached = r2.asm.n).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_decrypt = function() {
                return (r2._crypto_aead_chacha20poly1305_decrypt = r2.asm.o).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = r2.asm.p).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_decrypt = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_decrypt = r2.asm.q).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_keybytes = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_keybytes = r2.asm.r).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_npubbytes = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_npubbytes = r2.asm.s).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_nsecbytes = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_nsecbytes = r2.asm.t).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_abytes = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_abytes = r2.asm.u).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = r2.asm.v).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_ietf_keygen = function() {
                return (r2._crypto_aead_chacha20poly1305_ietf_keygen = r2.asm.w).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_keybytes = function() {
                return (r2._crypto_aead_chacha20poly1305_keybytes = r2.asm.x).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_npubbytes = function() {
                return (r2._crypto_aead_chacha20poly1305_npubbytes = r2.asm.y).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_nsecbytes = function() {
                return (r2._crypto_aead_chacha20poly1305_nsecbytes = r2.asm.z).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_abytes = function() {
                return (r2._crypto_aead_chacha20poly1305_abytes = r2.asm.A).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_messagebytes_max = function() {
                return (r2._crypto_aead_chacha20poly1305_messagebytes_max = r2.asm.B).apply(null, arguments);
              }, r2._crypto_aead_chacha20poly1305_keygen = function() {
                return (r2._crypto_aead_chacha20poly1305_keygen = r2.asm.C).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = r2.asm.D).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_encrypt = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_encrypt = r2.asm.E).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = r2.asm.F).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_decrypt = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_decrypt = r2.asm.G).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_keybytes = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_keybytes = r2.asm.H).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_npubbytes = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_npubbytes = r2.asm.I).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = r2.asm.J).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_abytes = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_abytes = r2.asm.K).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = r2.asm.L).apply(null, arguments);
              }, r2._crypto_aead_xchacha20poly1305_ietf_keygen = function() {
                return (r2._crypto_aead_xchacha20poly1305_ietf_keygen = r2.asm.M).apply(null, arguments);
              }, r2._crypto_auth_bytes = function() {
                return (r2._crypto_auth_bytes = r2.asm.N).apply(null, arguments);
              }, r2._crypto_auth_keybytes = function() {
                return (r2._crypto_auth_keybytes = r2.asm.O).apply(null, arguments);
              }, r2._crypto_auth_primitive = function() {
                return (r2._crypto_auth_primitive = r2.asm.P).apply(null, arguments);
              }, r2._crypto_auth = function() {
                return (r2._crypto_auth = r2.asm.Q).apply(null, arguments);
              }, r2._crypto_auth_verify = function() {
                return (r2._crypto_auth_verify = r2.asm.R).apply(null, arguments);
              }, r2._crypto_auth_keygen = function() {
                return (r2._crypto_auth_keygen = r2.asm.S).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_bytes = function() {
                return (r2._crypto_auth_hmacsha256_bytes = r2.asm.T).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_keybytes = function() {
                return (r2._crypto_auth_hmacsha256_keybytes = r2.asm.U).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_statebytes = function() {
                return (r2._crypto_auth_hmacsha256_statebytes = r2.asm.V).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_keygen = function() {
                return (r2._crypto_auth_hmacsha256_keygen = r2.asm.W).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_init = function() {
                return (r2._crypto_auth_hmacsha256_init = r2.asm.X).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_update = function() {
                return (r2._crypto_auth_hmacsha256_update = r2.asm.Y).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_final = function() {
                return (r2._crypto_auth_hmacsha256_final = r2.asm.Z).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256 = function() {
                return (r2._crypto_auth_hmacsha256 = r2.asm._).apply(null, arguments);
              }, r2._crypto_auth_hmacsha256_verify = function() {
                return (r2._crypto_auth_hmacsha256_verify = r2.asm.$).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_bytes = function() {
                return (r2._crypto_auth_hmacsha512_bytes = r2.asm.aa).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_keybytes = function() {
                return (r2._crypto_auth_hmacsha512_keybytes = r2.asm.ba).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_statebytes = function() {
                return (r2._crypto_auth_hmacsha512_statebytes = r2.asm.ca).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_keygen = function() {
                return (r2._crypto_auth_hmacsha512_keygen = r2.asm.da).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_init = function() {
                return (r2._crypto_auth_hmacsha512_init = r2.asm.ea).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_update = function() {
                return (r2._crypto_auth_hmacsha512_update = r2.asm.fa).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_final = function() {
                return (r2._crypto_auth_hmacsha512_final = r2.asm.ga).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512 = function() {
                return (r2._crypto_auth_hmacsha512 = r2.asm.ha).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512_verify = function() {
                return (r2._crypto_auth_hmacsha512_verify = r2.asm.ia).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_bytes = function() {
                return (r2._crypto_auth_hmacsha512256_bytes = r2.asm.ja).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_keybytes = function() {
                return (r2._crypto_auth_hmacsha512256_keybytes = r2.asm.ka).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_statebytes = function() {
                return (r2._crypto_auth_hmacsha512256_statebytes = r2.asm.la).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_keygen = function() {
                return (r2._crypto_auth_hmacsha512256_keygen = r2.asm.ma).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_init = function() {
                return (r2._crypto_auth_hmacsha512256_init = r2.asm.na).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_update = function() {
                return (r2._crypto_auth_hmacsha512256_update = r2.asm.oa).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_final = function() {
                return (r2._crypto_auth_hmacsha512256_final = r2.asm.pa).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256 = function() {
                return (r2._crypto_auth_hmacsha512256 = r2.asm.qa).apply(null, arguments);
              }, r2._crypto_auth_hmacsha512256_verify = function() {
                return (r2._crypto_auth_hmacsha512256_verify = r2.asm.ra).apply(null, arguments);
              }, r2._crypto_box_seedbytes = function() {
                return (r2._crypto_box_seedbytes = r2.asm.sa).apply(null, arguments);
              }, r2._crypto_box_publickeybytes = function() {
                return (r2._crypto_box_publickeybytes = r2.asm.ta).apply(null, arguments);
              }, r2._crypto_box_secretkeybytes = function() {
                return (r2._crypto_box_secretkeybytes = r2.asm.ua).apply(null, arguments);
              }, r2._crypto_box_beforenmbytes = function() {
                return (r2._crypto_box_beforenmbytes = r2.asm.va).apply(null, arguments);
              }, r2._crypto_box_noncebytes = function() {
                return (r2._crypto_box_noncebytes = r2.asm.wa).apply(null, arguments);
              }, r2._crypto_box_zerobytes = function() {
                return (r2._crypto_box_zerobytes = r2.asm.xa).apply(null, arguments);
              }, r2._crypto_box_boxzerobytes = function() {
                return (r2._crypto_box_boxzerobytes = r2.asm.ya).apply(null, arguments);
              }, r2._crypto_box_macbytes = function() {
                return (r2._crypto_box_macbytes = r2.asm.za).apply(null, arguments);
              }, r2._crypto_box_messagebytes_max = function() {
                return (r2._crypto_box_messagebytes_max = r2.asm.Aa).apply(null, arguments);
              }, r2._crypto_box_primitive = function() {
                return (r2._crypto_box_primitive = r2.asm.Ba).apply(null, arguments);
              }, r2._crypto_box_seed_keypair = function() {
                return (r2._crypto_box_seed_keypair = r2.asm.Ca).apply(null, arguments);
              }, r2._crypto_box_keypair = function() {
                return (r2._crypto_box_keypair = r2.asm.Da).apply(null, arguments);
              }, r2._crypto_box_beforenm = function() {
                return (r2._crypto_box_beforenm = r2.asm.Ea).apply(null, arguments);
              }, r2._crypto_box_afternm = function() {
                return (r2._crypto_box_afternm = r2.asm.Fa).apply(null, arguments);
              }, r2._crypto_box_open_afternm = function() {
                return (r2._crypto_box_open_afternm = r2.asm.Ga).apply(null, arguments);
              }, r2._crypto_box = function() {
                return (r2._crypto_box = r2.asm.Ha).apply(null, arguments);
              }, r2._crypto_box_open = function() {
                return (r2._crypto_box_open = r2.asm.Ia).apply(null, arguments);
              }, r2._crypto_box_detached_afternm = function() {
                return (r2._crypto_box_detached_afternm = r2.asm.Ja).apply(null, arguments);
              }, r2._crypto_box_detached = function() {
                return (r2._crypto_box_detached = r2.asm.Ka).apply(null, arguments);
              }, r2._crypto_box_easy_afternm = function() {
                return (r2._crypto_box_easy_afternm = r2.asm.La).apply(null, arguments);
              }, r2._crypto_box_easy = function() {
                return (r2._crypto_box_easy = r2.asm.Ma).apply(null, arguments);
              }, r2._crypto_box_open_detached_afternm = function() {
                return (r2._crypto_box_open_detached_afternm = r2.asm.Na).apply(null, arguments);
              }, r2._crypto_box_open_detached = function() {
                return (r2._crypto_box_open_detached = r2.asm.Oa).apply(null, arguments);
              }, r2._crypto_box_open_easy_afternm = function() {
                return (r2._crypto_box_open_easy_afternm = r2.asm.Pa).apply(null, arguments);
              }, r2._crypto_box_open_easy = function() {
                return (r2._crypto_box_open_easy = r2.asm.Qa).apply(null, arguments);
              }, r2._crypto_box_seal = function() {
                return (r2._crypto_box_seal = r2.asm.Ra).apply(null, arguments);
              }, r2._crypto_box_seal_open = function() {
                return (r2._crypto_box_seal_open = r2.asm.Sa).apply(null, arguments);
              }, r2._crypto_box_sealbytes = function() {
                return (r2._crypto_box_sealbytes = r2.asm.Ta).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_seed_keypair = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_seed_keypair = r2.asm.Ua).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_keypair = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_keypair = r2.asm.Va).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_beforenm = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_beforenm = r2.asm.Wa).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_afternm = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_afternm = r2.asm.Xa).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_open_afternm = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_open_afternm = r2.asm.Ya).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305 = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305 = r2.asm.Za).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_open = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_open = r2.asm._a).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_seedbytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_seedbytes = r2.asm.$a).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_publickeybytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_publickeybytes = r2.asm.ab).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = r2.asm.bb).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = r2.asm.cb).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_noncebytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_noncebytes = r2.asm.db).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_zerobytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_zerobytes = r2.asm.eb).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = r2.asm.fb).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_macbytes = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_macbytes = r2.asm.gb).apply(null, arguments);
              }, r2._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = function() {
                return (r2._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = r2.asm.hb).apply(null, arguments);
              }, r2._crypto_core_hchacha20 = function() {
                return (r2._crypto_core_hchacha20 = r2.asm.ib).apply(null, arguments);
              }, r2._crypto_core_hchacha20_outputbytes = function() {
                return (r2._crypto_core_hchacha20_outputbytes = r2.asm.jb).apply(null, arguments);
              }, r2._crypto_core_hchacha20_inputbytes = function() {
                return (r2._crypto_core_hchacha20_inputbytes = r2.asm.kb).apply(null, arguments);
              }, r2._crypto_core_hchacha20_keybytes = function() {
                return (r2._crypto_core_hchacha20_keybytes = r2.asm.lb).apply(null, arguments);
              }, r2._crypto_core_hchacha20_constbytes = function() {
                return (r2._crypto_core_hchacha20_constbytes = r2.asm.mb).apply(null, arguments);
              }, r2._crypto_core_hsalsa20 = function() {
                return (r2._crypto_core_hsalsa20 = r2.asm.nb).apply(null, arguments);
              }, r2._crypto_core_hsalsa20_outputbytes = function() {
                return (r2._crypto_core_hsalsa20_outputbytes = r2.asm.ob).apply(null, arguments);
              }, r2._crypto_core_hsalsa20_inputbytes = function() {
                return (r2._crypto_core_hsalsa20_inputbytes = r2.asm.pb).apply(null, arguments);
              }, r2._crypto_core_hsalsa20_keybytes = function() {
                return (r2._crypto_core_hsalsa20_keybytes = r2.asm.qb).apply(null, arguments);
              }, r2._crypto_core_hsalsa20_constbytes = function() {
                return (r2._crypto_core_hsalsa20_constbytes = r2.asm.rb).apply(null, arguments);
              }, r2._crypto_core_salsa20 = function() {
                return (r2._crypto_core_salsa20 = r2.asm.sb).apply(null, arguments);
              }, r2._crypto_core_salsa20_outputbytes = function() {
                return (r2._crypto_core_salsa20_outputbytes = r2.asm.tb).apply(null, arguments);
              }, r2._crypto_core_salsa20_inputbytes = function() {
                return (r2._crypto_core_salsa20_inputbytes = r2.asm.ub).apply(null, arguments);
              }, r2._crypto_core_salsa20_keybytes = function() {
                return (r2._crypto_core_salsa20_keybytes = r2.asm.vb).apply(null, arguments);
              }, r2._crypto_core_salsa20_constbytes = function() {
                return (r2._crypto_core_salsa20_constbytes = r2.asm.wb).apply(null, arguments);
              }, r2._crypto_core_salsa2012 = function() {
                return (r2._crypto_core_salsa2012 = r2.asm.xb).apply(null, arguments);
              }, r2._crypto_core_salsa2012_outputbytes = function() {
                return (r2._crypto_core_salsa2012_outputbytes = r2.asm.yb).apply(null, arguments);
              }, r2._crypto_core_salsa2012_inputbytes = function() {
                return (r2._crypto_core_salsa2012_inputbytes = r2.asm.zb).apply(null, arguments);
              }, r2._crypto_core_salsa2012_keybytes = function() {
                return (r2._crypto_core_salsa2012_keybytes = r2.asm.Ab).apply(null, arguments);
              }, r2._crypto_core_salsa2012_constbytes = function() {
                return (r2._crypto_core_salsa2012_constbytes = r2.asm.Bb).apply(null, arguments);
              }, r2._crypto_core_salsa208 = function() {
                return (r2._crypto_core_salsa208 = r2.asm.Cb).apply(null, arguments);
              }, r2._crypto_core_salsa208_outputbytes = function() {
                return (r2._crypto_core_salsa208_outputbytes = r2.asm.Db).apply(null, arguments);
              }, r2._crypto_core_salsa208_inputbytes = function() {
                return (r2._crypto_core_salsa208_inputbytes = r2.asm.Eb).apply(null, arguments);
              }, r2._crypto_core_salsa208_keybytes = function() {
                return (r2._crypto_core_salsa208_keybytes = r2.asm.Fb).apply(null, arguments);
              }, r2._crypto_core_salsa208_constbytes = function() {
                return (r2._crypto_core_salsa208_constbytes = r2.asm.Gb).apply(null, arguments);
              }, r2._crypto_generichash_bytes_min = function() {
                return (r2._crypto_generichash_bytes_min = r2.asm.Hb).apply(null, arguments);
              }, r2._crypto_generichash_bytes_max = function() {
                return (r2._crypto_generichash_bytes_max = r2.asm.Ib).apply(null, arguments);
              }, r2._crypto_generichash_bytes = function() {
                return (r2._crypto_generichash_bytes = r2.asm.Jb).apply(null, arguments);
              }, r2._crypto_generichash_keybytes_min = function() {
                return (r2._crypto_generichash_keybytes_min = r2.asm.Kb).apply(null, arguments);
              }, r2._crypto_generichash_keybytes_max = function() {
                return (r2._crypto_generichash_keybytes_max = r2.asm.Lb).apply(null, arguments);
              }, r2._crypto_generichash_keybytes = function() {
                return (r2._crypto_generichash_keybytes = r2.asm.Mb).apply(null, arguments);
              }, r2._crypto_generichash_primitive = function() {
                return (r2._crypto_generichash_primitive = r2.asm.Nb).apply(null, arguments);
              }, r2._crypto_generichash_statebytes = function() {
                return (r2._crypto_generichash_statebytes = r2.asm.Ob).apply(null, arguments);
              }, r2._crypto_generichash = function() {
                return (r2._crypto_generichash = r2.asm.Pb).apply(null, arguments);
              }, r2._crypto_generichash_init = function() {
                return (r2._crypto_generichash_init = r2.asm.Qb).apply(null, arguments);
              }, r2._crypto_generichash_update = function() {
                return (r2._crypto_generichash_update = r2.asm.Rb).apply(null, arguments);
              }, r2._crypto_generichash_final = function() {
                return (r2._crypto_generichash_final = r2.asm.Sb).apply(null, arguments);
              }, r2._crypto_generichash_keygen = function() {
                return (r2._crypto_generichash_keygen = r2.asm.Tb).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_bytes_min = function() {
                return (r2._crypto_generichash_blake2b_bytes_min = r2.asm.Ub).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_bytes_max = function() {
                return (r2._crypto_generichash_blake2b_bytes_max = r2.asm.Vb).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_bytes = function() {
                return (r2._crypto_generichash_blake2b_bytes = r2.asm.Wb).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_keybytes_min = function() {
                return (r2._crypto_generichash_blake2b_keybytes_min = r2.asm.Xb).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_keybytes_max = function() {
                return (r2._crypto_generichash_blake2b_keybytes_max = r2.asm.Yb).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_keybytes = function() {
                return (r2._crypto_generichash_blake2b_keybytes = r2.asm.Zb).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_saltbytes = function() {
                return (r2._crypto_generichash_blake2b_saltbytes = r2.asm._b).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_personalbytes = function() {
                return (r2._crypto_generichash_blake2b_personalbytes = r2.asm.$b).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_statebytes = function() {
                return (r2._crypto_generichash_blake2b_statebytes = r2.asm.ac).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_keygen = function() {
                return (r2._crypto_generichash_blake2b_keygen = r2.asm.bc).apply(null, arguments);
              }, r2._crypto_generichash_blake2b = function() {
                return (r2._crypto_generichash_blake2b = r2.asm.cc).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_salt_personal = function() {
                return (r2._crypto_generichash_blake2b_salt_personal = r2.asm.dc).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_init = function() {
                return (r2._crypto_generichash_blake2b_init = r2.asm.ec).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_init_salt_personal = function() {
                return (r2._crypto_generichash_blake2b_init_salt_personal = r2.asm.fc).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_update = function() {
                return (r2._crypto_generichash_blake2b_update = r2.asm.gc).apply(null, arguments);
              }, r2._crypto_generichash_blake2b_final = function() {
                return (r2._crypto_generichash_blake2b_final = r2.asm.hc).apply(null, arguments);
              }, r2._crypto_hash_bytes = function() {
                return (r2._crypto_hash_bytes = r2.asm.ic).apply(null, arguments);
              }, r2._crypto_hash = function() {
                return (r2._crypto_hash = r2.asm.jc).apply(null, arguments);
              }, r2._crypto_hash_primitive = function() {
                return (r2._crypto_hash_primitive = r2.asm.kc).apply(null, arguments);
              }, r2._crypto_hash_sha256_bytes = function() {
                return (r2._crypto_hash_sha256_bytes = r2.asm.lc).apply(null, arguments);
              }, r2._crypto_hash_sha256_statebytes = function() {
                return (r2._crypto_hash_sha256_statebytes = r2.asm.mc).apply(null, arguments);
              }, r2._crypto_hash_sha256_init = function() {
                return (r2._crypto_hash_sha256_init = r2.asm.nc).apply(null, arguments);
              }, r2._crypto_hash_sha256_update = function() {
                return (r2._crypto_hash_sha256_update = r2.asm.oc).apply(null, arguments);
              }, r2._crypto_hash_sha256_final = function() {
                return (r2._crypto_hash_sha256_final = r2.asm.pc).apply(null, arguments);
              }, r2._crypto_hash_sha256 = function() {
                return (r2._crypto_hash_sha256 = r2.asm.qc).apply(null, arguments);
              }, r2._crypto_hash_sha512_bytes = function() {
                return (r2._crypto_hash_sha512_bytes = r2.asm.rc).apply(null, arguments);
              }, r2._crypto_hash_sha512_statebytes = function() {
                return (r2._crypto_hash_sha512_statebytes = r2.asm.sc).apply(null, arguments);
              }, r2._crypto_hash_sha512_init = function() {
                return (r2._crypto_hash_sha512_init = r2.asm.tc).apply(null, arguments);
              }, r2._crypto_hash_sha512_update = function() {
                return (r2._crypto_hash_sha512_update = r2.asm.uc).apply(null, arguments);
              }, r2._crypto_hash_sha512_final = function() {
                return (r2._crypto_hash_sha512_final = r2.asm.vc).apply(null, arguments);
              }, r2._crypto_hash_sha512 = function() {
                return (r2._crypto_hash_sha512 = r2.asm.wc).apply(null, arguments);
              }, r2._crypto_kdf_blake2b_bytes_min = function() {
                return (r2._crypto_kdf_blake2b_bytes_min = r2.asm.xc).apply(null, arguments);
              }, r2._crypto_kdf_blake2b_bytes_max = function() {
                return (r2._crypto_kdf_blake2b_bytes_max = r2.asm.yc).apply(null, arguments);
              }, r2._crypto_kdf_blake2b_contextbytes = function() {
                return (r2._crypto_kdf_blake2b_contextbytes = r2.asm.zc).apply(null, arguments);
              }, r2._crypto_kdf_blake2b_keybytes = function() {
                return (r2._crypto_kdf_blake2b_keybytes = r2.asm.Ac).apply(null, arguments);
              }, r2._crypto_kdf_blake2b_derive_from_key = function() {
                return (r2._crypto_kdf_blake2b_derive_from_key = r2.asm.Bc).apply(null, arguments);
              }, r2._crypto_kdf_primitive = function() {
                return (r2._crypto_kdf_primitive = r2.asm.Cc).apply(null, arguments);
              }, r2._crypto_kdf_bytes_min = function() {
                return (r2._crypto_kdf_bytes_min = r2.asm.Dc).apply(null, arguments);
              }, r2._crypto_kdf_bytes_max = function() {
                return (r2._crypto_kdf_bytes_max = r2.asm.Ec).apply(null, arguments);
              }, r2._crypto_kdf_contextbytes = function() {
                return (r2._crypto_kdf_contextbytes = r2.asm.Fc).apply(null, arguments);
              }, r2._crypto_kdf_keybytes = function() {
                return (r2._crypto_kdf_keybytes = r2.asm.Gc).apply(null, arguments);
              }, r2._crypto_kdf_derive_from_key = function() {
                return (r2._crypto_kdf_derive_from_key = r2.asm.Hc).apply(null, arguments);
              }, r2._crypto_kdf_keygen = function() {
                return (r2._crypto_kdf_keygen = r2.asm.Ic).apply(null, arguments);
              }, r2._crypto_kx_seed_keypair = function() {
                return (r2._crypto_kx_seed_keypair = r2.asm.Jc).apply(null, arguments);
              }, r2._crypto_kx_keypair = function() {
                return (r2._crypto_kx_keypair = r2.asm.Kc).apply(null, arguments);
              }, r2._crypto_kx_client_session_keys = function() {
                return (r2._crypto_kx_client_session_keys = r2.asm.Lc).apply(null, arguments);
              }, r2._crypto_kx_server_session_keys = function() {
                return (r2._crypto_kx_server_session_keys = r2.asm.Mc).apply(null, arguments);
              }, r2._crypto_kx_publickeybytes = function() {
                return (r2._crypto_kx_publickeybytes = r2.asm.Nc).apply(null, arguments);
              }, r2._crypto_kx_secretkeybytes = function() {
                return (r2._crypto_kx_secretkeybytes = r2.asm.Oc).apply(null, arguments);
              }, r2._crypto_kx_seedbytes = function() {
                return (r2._crypto_kx_seedbytes = r2.asm.Pc).apply(null, arguments);
              }, r2._crypto_kx_sessionkeybytes = function() {
                return (r2._crypto_kx_sessionkeybytes = r2.asm.Qc).apply(null, arguments);
              }, r2._crypto_kx_primitive = function() {
                return (r2._crypto_kx_primitive = r2.asm.Rc).apply(null, arguments);
              }, r2._crypto_onetimeauth_statebytes = function() {
                return (r2._crypto_onetimeauth_statebytes = r2.asm.Sc).apply(null, arguments);
              }, r2._crypto_onetimeauth_bytes = function() {
                return (r2._crypto_onetimeauth_bytes = r2.asm.Tc).apply(null, arguments);
              }, r2._crypto_onetimeauth_keybytes = function() {
                return (r2._crypto_onetimeauth_keybytes = r2.asm.Uc).apply(null, arguments);
              }, r2._crypto_onetimeauth = function() {
                return (r2._crypto_onetimeauth = r2.asm.Vc).apply(null, arguments);
              }, r2._crypto_onetimeauth_verify = function() {
                return (r2._crypto_onetimeauth_verify = r2.asm.Wc).apply(null, arguments);
              }, r2._crypto_onetimeauth_init = function() {
                return (r2._crypto_onetimeauth_init = r2.asm.Xc).apply(null, arguments);
              }, r2._crypto_onetimeauth_update = function() {
                return (r2._crypto_onetimeauth_update = r2.asm.Yc).apply(null, arguments);
              }, r2._crypto_onetimeauth_final = function() {
                return (r2._crypto_onetimeauth_final = r2.asm.Zc).apply(null, arguments);
              }, r2._crypto_onetimeauth_primitive = function() {
                return (r2._crypto_onetimeauth_primitive = r2.asm._c).apply(null, arguments);
              }, r2._crypto_onetimeauth_keygen = function() {
                return (r2._crypto_onetimeauth_keygen = r2.asm.$c).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305 = function() {
                return (r2._crypto_onetimeauth_poly1305 = r2.asm.ad).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_verify = function() {
                return (r2._crypto_onetimeauth_poly1305_verify = r2.asm.bd).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_init = function() {
                return (r2._crypto_onetimeauth_poly1305_init = r2.asm.cd).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_update = function() {
                return (r2._crypto_onetimeauth_poly1305_update = r2.asm.dd).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_final = function() {
                return (r2._crypto_onetimeauth_poly1305_final = r2.asm.ed).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_bytes = function() {
                return (r2._crypto_onetimeauth_poly1305_bytes = r2.asm.fd).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_keybytes = function() {
                return (r2._crypto_onetimeauth_poly1305_keybytes = r2.asm.gd).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_statebytes = function() {
                return (r2._crypto_onetimeauth_poly1305_statebytes = r2.asm.hd).apply(null, arguments);
              }, r2._crypto_onetimeauth_poly1305_keygen = function() {
                return (r2._crypto_onetimeauth_poly1305_keygen = r2.asm.id).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_alg_argon2i13 = function() {
                return (r2._crypto_pwhash_argon2i_alg_argon2i13 = r2.asm.jd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_bytes_min = function() {
                return (r2._crypto_pwhash_argon2i_bytes_min = r2.asm.kd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_bytes_max = function() {
                return (r2._crypto_pwhash_argon2i_bytes_max = r2.asm.ld).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_passwd_min = function() {
                return (r2._crypto_pwhash_argon2i_passwd_min = r2.asm.md).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_passwd_max = function() {
                return (r2._crypto_pwhash_argon2i_passwd_max = r2.asm.nd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_saltbytes = function() {
                return (r2._crypto_pwhash_argon2i_saltbytes = r2.asm.od).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_strbytes = function() {
                return (r2._crypto_pwhash_argon2i_strbytes = r2.asm.pd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_strprefix = function() {
                return (r2._crypto_pwhash_argon2i_strprefix = r2.asm.qd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_opslimit_min = function() {
                return (r2._crypto_pwhash_argon2i_opslimit_min = r2.asm.rd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_opslimit_max = function() {
                return (r2._crypto_pwhash_argon2i_opslimit_max = r2.asm.sd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_memlimit_min = function() {
                return (r2._crypto_pwhash_argon2i_memlimit_min = r2.asm.td).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_memlimit_max = function() {
                return (r2._crypto_pwhash_argon2i_memlimit_max = r2.asm.ud).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_opslimit_interactive = function() {
                return (r2._crypto_pwhash_argon2i_opslimit_interactive = r2.asm.vd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_memlimit_interactive = function() {
                return (r2._crypto_pwhash_argon2i_memlimit_interactive = r2.asm.wd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_opslimit_moderate = function() {
                return (r2._crypto_pwhash_argon2i_opslimit_moderate = r2.asm.xd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_memlimit_moderate = function() {
                return (r2._crypto_pwhash_argon2i_memlimit_moderate = r2.asm.yd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_opslimit_sensitive = function() {
                return (r2._crypto_pwhash_argon2i_opslimit_sensitive = r2.asm.zd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_memlimit_sensitive = function() {
                return (r2._crypto_pwhash_argon2i_memlimit_sensitive = r2.asm.Ad).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i = function() {
                return (r2._crypto_pwhash_argon2i = r2.asm.Bd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_str = function() {
                return (r2._crypto_pwhash_argon2i_str = r2.asm.Cd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_str_verify = function() {
                return (r2._crypto_pwhash_argon2i_str_verify = r2.asm.Dd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2i_str_needs_rehash = function() {
                return (r2._crypto_pwhash_argon2i_str_needs_rehash = r2.asm.Ed).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_str_needs_rehash = function() {
                return (r2._crypto_pwhash_argon2id_str_needs_rehash = r2.asm.Fd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_alg_argon2id13 = function() {
                return (r2._crypto_pwhash_argon2id_alg_argon2id13 = r2.asm.Gd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_bytes_min = function() {
                return (r2._crypto_pwhash_argon2id_bytes_min = r2.asm.Hd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_bytes_max = function() {
                return (r2._crypto_pwhash_argon2id_bytes_max = r2.asm.Id).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_passwd_min = function() {
                return (r2._crypto_pwhash_argon2id_passwd_min = r2.asm.Jd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_passwd_max = function() {
                return (r2._crypto_pwhash_argon2id_passwd_max = r2.asm.Kd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_saltbytes = function() {
                return (r2._crypto_pwhash_argon2id_saltbytes = r2.asm.Ld).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_strbytes = function() {
                return (r2._crypto_pwhash_argon2id_strbytes = r2.asm.Md).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_strprefix = function() {
                return (r2._crypto_pwhash_argon2id_strprefix = r2.asm.Nd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_opslimit_min = function() {
                return (r2._crypto_pwhash_argon2id_opslimit_min = r2.asm.Od).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_opslimit_max = function() {
                return (r2._crypto_pwhash_argon2id_opslimit_max = r2.asm.Pd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_memlimit_min = function() {
                return (r2._crypto_pwhash_argon2id_memlimit_min = r2.asm.Qd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_memlimit_max = function() {
                return (r2._crypto_pwhash_argon2id_memlimit_max = r2.asm.Rd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_opslimit_interactive = function() {
                return (r2._crypto_pwhash_argon2id_opslimit_interactive = r2.asm.Sd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_memlimit_interactive = function() {
                return (r2._crypto_pwhash_argon2id_memlimit_interactive = r2.asm.Td).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_opslimit_moderate = function() {
                return (r2._crypto_pwhash_argon2id_opslimit_moderate = r2.asm.Ud).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_memlimit_moderate = function() {
                return (r2._crypto_pwhash_argon2id_memlimit_moderate = r2.asm.Vd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_opslimit_sensitive = function() {
                return (r2._crypto_pwhash_argon2id_opslimit_sensitive = r2.asm.Wd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_memlimit_sensitive = function() {
                return (r2._crypto_pwhash_argon2id_memlimit_sensitive = r2.asm.Xd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id = function() {
                return (r2._crypto_pwhash_argon2id = r2.asm.Yd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_str = function() {
                return (r2._crypto_pwhash_argon2id_str = r2.asm.Zd).apply(null, arguments);
              }, r2._crypto_pwhash_argon2id_str_verify = function() {
                return (r2._crypto_pwhash_argon2id_str_verify = r2.asm._d).apply(null, arguments);
              }, r2._crypto_pwhash_alg_argon2i13 = function() {
                return (r2._crypto_pwhash_alg_argon2i13 = r2.asm.$d).apply(null, arguments);
              }, r2._crypto_pwhash_alg_argon2id13 = function() {
                return (r2._crypto_pwhash_alg_argon2id13 = r2.asm.ae).apply(null, arguments);
              }, r2._crypto_pwhash_alg_default = function() {
                return (r2._crypto_pwhash_alg_default = r2.asm.be).apply(null, arguments);
              }, r2._crypto_pwhash_bytes_min = function() {
                return (r2._crypto_pwhash_bytes_min = r2.asm.ce).apply(null, arguments);
              }, r2._crypto_pwhash_bytes_max = function() {
                return (r2._crypto_pwhash_bytes_max = r2.asm.de).apply(null, arguments);
              }, r2._crypto_pwhash_passwd_min = function() {
                return (r2._crypto_pwhash_passwd_min = r2.asm.ee).apply(null, arguments);
              }, r2._crypto_pwhash_passwd_max = function() {
                return (r2._crypto_pwhash_passwd_max = r2.asm.fe).apply(null, arguments);
              }, r2._crypto_pwhash_saltbytes = function() {
                return (r2._crypto_pwhash_saltbytes = r2.asm.ge).apply(null, arguments);
              }, r2._crypto_pwhash_strbytes = function() {
                return (r2._crypto_pwhash_strbytes = r2.asm.he).apply(null, arguments);
              }, r2._crypto_pwhash_strprefix = function() {
                return (r2._crypto_pwhash_strprefix = r2.asm.ie).apply(null, arguments);
              }, r2._crypto_pwhash_opslimit_min = function() {
                return (r2._crypto_pwhash_opslimit_min = r2.asm.je).apply(null, arguments);
              }, r2._crypto_pwhash_opslimit_max = function() {
                return (r2._crypto_pwhash_opslimit_max = r2.asm.ke).apply(null, arguments);
              }, r2._crypto_pwhash_memlimit_min = function() {
                return (r2._crypto_pwhash_memlimit_min = r2.asm.le).apply(null, arguments);
              }, r2._crypto_pwhash_memlimit_max = function() {
                return (r2._crypto_pwhash_memlimit_max = r2.asm.me).apply(null, arguments);
              }, r2._crypto_pwhash_opslimit_interactive = function() {
                return (r2._crypto_pwhash_opslimit_interactive = r2.asm.ne).apply(null, arguments);
              }, r2._crypto_pwhash_memlimit_interactive = function() {
                return (r2._crypto_pwhash_memlimit_interactive = r2.asm.oe).apply(null, arguments);
              }, r2._crypto_pwhash_opslimit_moderate = function() {
                return (r2._crypto_pwhash_opslimit_moderate = r2.asm.pe).apply(null, arguments);
              }, r2._crypto_pwhash_memlimit_moderate = function() {
                return (r2._crypto_pwhash_memlimit_moderate = r2.asm.qe).apply(null, arguments);
              }, r2._crypto_pwhash_opslimit_sensitive = function() {
                return (r2._crypto_pwhash_opslimit_sensitive = r2.asm.re).apply(null, arguments);
              }, r2._crypto_pwhash_memlimit_sensitive = function() {
                return (r2._crypto_pwhash_memlimit_sensitive = r2.asm.se).apply(null, arguments);
              }, r2._crypto_pwhash = function() {
                return (r2._crypto_pwhash = r2.asm.te).apply(null, arguments);
              }, r2._crypto_pwhash_str = function() {
                return (r2._crypto_pwhash_str = r2.asm.ue).apply(null, arguments);
              }, r2._crypto_pwhash_str_alg = function() {
                return (r2._crypto_pwhash_str_alg = r2.asm.ve).apply(null, arguments);
              }, r2._crypto_pwhash_str_verify = function() {
                return (r2._crypto_pwhash_str_verify = r2.asm.we).apply(null, arguments);
              }, r2._crypto_pwhash_str_needs_rehash = function() {
                return (r2._crypto_pwhash_str_needs_rehash = r2.asm.xe).apply(null, arguments);
              }, r2._crypto_pwhash_primitive = function() {
                return (r2._crypto_pwhash_primitive = r2.asm.ye).apply(null, arguments);
              }, r2._crypto_scalarmult_primitive = function() {
                return (r2._crypto_scalarmult_primitive = r2.asm.ze).apply(null, arguments);
              }, r2._crypto_scalarmult_base = function() {
                return (r2._crypto_scalarmult_base = r2.asm.Ae).apply(null, arguments);
              }, r2._crypto_scalarmult = function() {
                return (r2._crypto_scalarmult = r2.asm.Be).apply(null, arguments);
              }, r2._crypto_scalarmult_bytes = function() {
                return (r2._crypto_scalarmult_bytes = r2.asm.Ce).apply(null, arguments);
              }, r2._crypto_scalarmult_scalarbytes = function() {
                return (r2._crypto_scalarmult_scalarbytes = r2.asm.De).apply(null, arguments);
              }, r2._crypto_scalarmult_curve25519 = function() {
                return (r2._crypto_scalarmult_curve25519 = r2.asm.Ee).apply(null, arguments);
              }, r2._crypto_scalarmult_curve25519_base = function() {
                return (r2._crypto_scalarmult_curve25519_base = r2.asm.Fe).apply(null, arguments);
              }, r2._crypto_scalarmult_curve25519_bytes = function() {
                return (r2._crypto_scalarmult_curve25519_bytes = r2.asm.Ge).apply(null, arguments);
              }, r2._crypto_scalarmult_curve25519_scalarbytes = function() {
                return (r2._crypto_scalarmult_curve25519_scalarbytes = r2.asm.He).apply(null, arguments);
              }, r2._crypto_secretbox_keybytes = function() {
                return (r2._crypto_secretbox_keybytes = r2.asm.Ie).apply(null, arguments);
              }, r2._crypto_secretbox_noncebytes = function() {
                return (r2._crypto_secretbox_noncebytes = r2.asm.Je).apply(null, arguments);
              }, r2._crypto_secretbox_zerobytes = function() {
                return (r2._crypto_secretbox_zerobytes = r2.asm.Ke).apply(null, arguments);
              }, r2._crypto_secretbox_boxzerobytes = function() {
                return (r2._crypto_secretbox_boxzerobytes = r2.asm.Le).apply(null, arguments);
              }, r2._crypto_secretbox_macbytes = function() {
                return (r2._crypto_secretbox_macbytes = r2.asm.Me).apply(null, arguments);
              }, r2._crypto_secretbox_messagebytes_max = function() {
                return (r2._crypto_secretbox_messagebytes_max = r2.asm.Ne).apply(null, arguments);
              }, r2._crypto_secretbox_primitive = function() {
                return (r2._crypto_secretbox_primitive = r2.asm.Oe).apply(null, arguments);
              }, r2._crypto_secretbox = function() {
                return (r2._crypto_secretbox = r2.asm.Pe).apply(null, arguments);
              }, r2._crypto_secretbox_open = function() {
                return (r2._crypto_secretbox_open = r2.asm.Qe).apply(null, arguments);
              }, r2._crypto_secretbox_keygen = function() {
                return (r2._crypto_secretbox_keygen = r2.asm.Re).apply(null, arguments);
              }, r2._crypto_secretbox_detached = function() {
                return (r2._crypto_secretbox_detached = r2.asm.Se).apply(null, arguments);
              }, r2._crypto_secretbox_easy = function() {
                return (r2._crypto_secretbox_easy = r2.asm.Te).apply(null, arguments);
              }, r2._crypto_secretbox_open_detached = function() {
                return (r2._crypto_secretbox_open_detached = r2.asm.Ue).apply(null, arguments);
              }, r2._crypto_secretbox_open_easy = function() {
                return (r2._crypto_secretbox_open_easy = r2.asm.Ve).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305 = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305 = r2.asm.We).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_open = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_open = r2.asm.Xe).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_keybytes = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_keybytes = r2.asm.Ye).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_noncebytes = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_noncebytes = r2.asm.Ze).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_zerobytes = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_zerobytes = r2.asm._e).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_boxzerobytes = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_boxzerobytes = r2.asm.$e).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_macbytes = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_macbytes = r2.asm.af).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_messagebytes_max = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_messagebytes_max = r2.asm.bf).apply(null, arguments);
              }, r2._crypto_secretbox_xsalsa20poly1305_keygen = function() {
                return (r2._crypto_secretbox_xsalsa20poly1305_keygen = r2.asm.cf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_keygen = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_keygen = r2.asm.df).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_init_push = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_init_push = r2.asm.ef).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_init_pull = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_init_pull = r2.asm.ff).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_rekey = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_rekey = r2.asm.gf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_push = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_push = r2.asm.hf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_pull = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_pull = r2.asm.jf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_statebytes = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_statebytes = r2.asm.kf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_abytes = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_abytes = r2.asm.lf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_headerbytes = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_headerbytes = r2.asm.mf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_keybytes = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_keybytes = r2.asm.nf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_messagebytes_max = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_messagebytes_max = r2.asm.of).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_tag_message = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_tag_message = r2.asm.pf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_tag_push = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_tag_push = r2.asm.qf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_tag_rekey = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_tag_rekey = r2.asm.rf).apply(null, arguments);
              }, r2._crypto_secretstream_xchacha20poly1305_tag_final = function() {
                return (r2._crypto_secretstream_xchacha20poly1305_tag_final = r2.asm.sf).apply(null, arguments);
              }, r2._crypto_shorthash_bytes = function() {
                return (r2._crypto_shorthash_bytes = r2.asm.tf).apply(null, arguments);
              }, r2._crypto_shorthash_keybytes = function() {
                return (r2._crypto_shorthash_keybytes = r2.asm.uf).apply(null, arguments);
              }, r2._crypto_shorthash_primitive = function() {
                return (r2._crypto_shorthash_primitive = r2.asm.vf).apply(null, arguments);
              }, r2._crypto_shorthash = function() {
                return (r2._crypto_shorthash = r2.asm.wf).apply(null, arguments);
              }, r2._crypto_shorthash_keygen = function() {
                return (r2._crypto_shorthash_keygen = r2.asm.xf).apply(null, arguments);
              }, r2._crypto_shorthash_siphash24_bytes = function() {
                return (r2._crypto_shorthash_siphash24_bytes = r2.asm.yf).apply(null, arguments);
              }, r2._crypto_shorthash_siphash24_keybytes = function() {
                return (r2._crypto_shorthash_siphash24_keybytes = r2.asm.zf).apply(null, arguments);
              }, r2._crypto_shorthash_siphash24 = function() {
                return (r2._crypto_shorthash_siphash24 = r2.asm.Af).apply(null, arguments);
              }, r2._crypto_sign_statebytes = function() {
                return (r2._crypto_sign_statebytes = r2.asm.Bf).apply(null, arguments);
              }, r2._crypto_sign_bytes = function() {
                return (r2._crypto_sign_bytes = r2.asm.Cf).apply(null, arguments);
              }, r2._crypto_sign_seedbytes = function() {
                return (r2._crypto_sign_seedbytes = r2.asm.Df).apply(null, arguments);
              }, r2._crypto_sign_publickeybytes = function() {
                return (r2._crypto_sign_publickeybytes = r2.asm.Ef).apply(null, arguments);
              }, r2._crypto_sign_secretkeybytes = function() {
                return (r2._crypto_sign_secretkeybytes = r2.asm.Ff).apply(null, arguments);
              }, r2._crypto_sign_messagebytes_max = function() {
                return (r2._crypto_sign_messagebytes_max = r2.asm.Gf).apply(null, arguments);
              }, r2._crypto_sign_primitive = function() {
                return (r2._crypto_sign_primitive = r2.asm.Hf).apply(null, arguments);
              }, r2._crypto_sign_seed_keypair = function() {
                return (r2._crypto_sign_seed_keypair = r2.asm.If).apply(null, arguments);
              }, r2._crypto_sign_keypair = function() {
                return (r2._crypto_sign_keypair = r2.asm.Jf).apply(null, arguments);
              }, r2._crypto_sign = function() {
                return (r2._crypto_sign = r2.asm.Kf).apply(null, arguments);
              }, r2._crypto_sign_open = function() {
                return (r2._crypto_sign_open = r2.asm.Lf).apply(null, arguments);
              }, r2._crypto_sign_detached = function() {
                return (r2._crypto_sign_detached = r2.asm.Mf).apply(null, arguments);
              }, r2._crypto_sign_verify_detached = function() {
                return (r2._crypto_sign_verify_detached = r2.asm.Nf).apply(null, arguments);
              }, r2._crypto_sign_init = function() {
                return (r2._crypto_sign_init = r2.asm.Of).apply(null, arguments);
              }, r2._crypto_sign_update = function() {
                return (r2._crypto_sign_update = r2.asm.Pf).apply(null, arguments);
              }, r2._crypto_sign_final_create = function() {
                return (r2._crypto_sign_final_create = r2.asm.Qf).apply(null, arguments);
              }, r2._crypto_sign_final_verify = function() {
                return (r2._crypto_sign_final_verify = r2.asm.Rf).apply(null, arguments);
              }, r2._crypto_sign_ed25519ph_statebytes = function() {
                return (r2._crypto_sign_ed25519ph_statebytes = r2.asm.Sf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_bytes = function() {
                return (r2._crypto_sign_ed25519_bytes = r2.asm.Tf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_seedbytes = function() {
                return (r2._crypto_sign_ed25519_seedbytes = r2.asm.Uf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_publickeybytes = function() {
                return (r2._crypto_sign_ed25519_publickeybytes = r2.asm.Vf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_secretkeybytes = function() {
                return (r2._crypto_sign_ed25519_secretkeybytes = r2.asm.Wf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_messagebytes_max = function() {
                return (r2._crypto_sign_ed25519_messagebytes_max = r2.asm.Xf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_sk_to_seed = function() {
                return (r2._crypto_sign_ed25519_sk_to_seed = r2.asm.Yf).apply(null, arguments);
              }, r2._crypto_sign_ed25519_sk_to_pk = function() {
                return (r2._crypto_sign_ed25519_sk_to_pk = r2.asm.Zf).apply(null, arguments);
              }, r2._crypto_sign_ed25519ph_init = function() {
                return (r2._crypto_sign_ed25519ph_init = r2.asm._f).apply(null, arguments);
              }, r2._crypto_sign_ed25519ph_update = function() {
                return (r2._crypto_sign_ed25519ph_update = r2.asm.$f).apply(null, arguments);
              }, r2._crypto_sign_ed25519ph_final_create = function() {
                return (r2._crypto_sign_ed25519ph_final_create = r2.asm.ag).apply(null, arguments);
              }, r2._crypto_sign_ed25519ph_final_verify = function() {
                return (r2._crypto_sign_ed25519ph_final_verify = r2.asm.bg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_seed_keypair = function() {
                return (r2._crypto_sign_ed25519_seed_keypair = r2.asm.cg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_keypair = function() {
                return (r2._crypto_sign_ed25519_keypair = r2.asm.dg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_pk_to_curve25519 = function() {
                return (r2._crypto_sign_ed25519_pk_to_curve25519 = r2.asm.eg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_sk_to_curve25519 = function() {
                return (r2._crypto_sign_ed25519_sk_to_curve25519 = r2.asm.fg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_verify_detached = function() {
                return (r2._crypto_sign_ed25519_verify_detached = r2.asm.gg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_open = function() {
                return (r2._crypto_sign_ed25519_open = r2.asm.hg).apply(null, arguments);
              }, r2._crypto_sign_ed25519_detached = function() {
                return (r2._crypto_sign_ed25519_detached = r2.asm.ig).apply(null, arguments);
              }, r2._crypto_sign_ed25519 = function() {
                return (r2._crypto_sign_ed25519 = r2.asm.jg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_keybytes = function() {
                return (r2._crypto_stream_chacha20_keybytes = r2.asm.kg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_noncebytes = function() {
                return (r2._crypto_stream_chacha20_noncebytes = r2.asm.lg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_messagebytes_max = function() {
                return (r2._crypto_stream_chacha20_messagebytes_max = r2.asm.mg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf_keybytes = function() {
                return (r2._crypto_stream_chacha20_ietf_keybytes = r2.asm.ng).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf_noncebytes = function() {
                return (r2._crypto_stream_chacha20_ietf_noncebytes = r2.asm.og).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf_messagebytes_max = function() {
                return (r2._crypto_stream_chacha20_ietf_messagebytes_max = r2.asm.pg).apply(null, arguments);
              }, r2._crypto_stream_chacha20 = function() {
                return (r2._crypto_stream_chacha20 = r2.asm.qg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_xor_ic = function() {
                return (r2._crypto_stream_chacha20_xor_ic = r2.asm.rg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_xor = function() {
                return (r2._crypto_stream_chacha20_xor = r2.asm.sg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf = function() {
                return (r2._crypto_stream_chacha20_ietf = r2.asm.tg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf_xor_ic = function() {
                return (r2._crypto_stream_chacha20_ietf_xor_ic = r2.asm.ug).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf_xor = function() {
                return (r2._crypto_stream_chacha20_ietf_xor = r2.asm.vg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_ietf_keygen = function() {
                return (r2._crypto_stream_chacha20_ietf_keygen = r2.asm.wg).apply(null, arguments);
              }, r2._crypto_stream_chacha20_keygen = function() {
                return (r2._crypto_stream_chacha20_keygen = r2.asm.xg).apply(null, arguments);
              }, r2._crypto_stream_keybytes = function() {
                return (r2._crypto_stream_keybytes = r2.asm.yg).apply(null, arguments);
              }, r2._crypto_stream_noncebytes = function() {
                return (r2._crypto_stream_noncebytes = r2.asm.zg).apply(null, arguments);
              }, r2._crypto_stream_messagebytes_max = function() {
                return (r2._crypto_stream_messagebytes_max = r2.asm.Ag).apply(null, arguments);
              }, r2._crypto_stream_primitive = function() {
                return (r2._crypto_stream_primitive = r2.asm.Bg).apply(null, arguments);
              }, r2._crypto_stream = function() {
                return (r2._crypto_stream = r2.asm.Cg).apply(null, arguments);
              }, r2._crypto_stream_xor = function() {
                return (r2._crypto_stream_xor = r2.asm.Dg).apply(null, arguments);
              }, r2._crypto_stream_keygen = function() {
                return (r2._crypto_stream_keygen = r2.asm.Eg).apply(null, arguments);
              }, r2._crypto_stream_salsa20_keybytes = function() {
                return (r2._crypto_stream_salsa20_keybytes = r2.asm.Fg).apply(null, arguments);
              }, r2._crypto_stream_salsa20_noncebytes = function() {
                return (r2._crypto_stream_salsa20_noncebytes = r2.asm.Gg).apply(null, arguments);
              }, r2._crypto_stream_salsa20_messagebytes_max = function() {
                return (r2._crypto_stream_salsa20_messagebytes_max = r2.asm.Hg).apply(null, arguments);
              }, r2._crypto_stream_salsa20 = function() {
                return (r2._crypto_stream_salsa20 = r2.asm.Ig).apply(null, arguments);
              }, r2._crypto_stream_salsa20_xor_ic = function() {
                return (r2._crypto_stream_salsa20_xor_ic = r2.asm.Jg).apply(null, arguments);
              }, r2._crypto_stream_salsa20_xor = function() {
                return (r2._crypto_stream_salsa20_xor = r2.asm.Kg).apply(null, arguments);
              }, r2._crypto_stream_salsa20_keygen = function() {
                return (r2._crypto_stream_salsa20_keygen = r2.asm.Lg).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20 = function() {
                return (r2._crypto_stream_xsalsa20 = r2.asm.Mg).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20_xor_ic = function() {
                return (r2._crypto_stream_xsalsa20_xor_ic = r2.asm.Ng).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20_xor = function() {
                return (r2._crypto_stream_xsalsa20_xor = r2.asm.Og).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20_keybytes = function() {
                return (r2._crypto_stream_xsalsa20_keybytes = r2.asm.Pg).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20_noncebytes = function() {
                return (r2._crypto_stream_xsalsa20_noncebytes = r2.asm.Qg).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20_messagebytes_max = function() {
                return (r2._crypto_stream_xsalsa20_messagebytes_max = r2.asm.Rg).apply(null, arguments);
              }, r2._crypto_stream_xsalsa20_keygen = function() {
                return (r2._crypto_stream_xsalsa20_keygen = r2.asm.Sg).apply(null, arguments);
              }, r2._crypto_verify_16_bytes = function() {
                return (r2._crypto_verify_16_bytes = r2.asm.Tg).apply(null, arguments);
              }, r2._crypto_verify_32_bytes = function() {
                return (r2._crypto_verify_32_bytes = r2.asm.Ug).apply(null, arguments);
              }, r2._crypto_verify_64_bytes = function() {
                return (r2._crypto_verify_64_bytes = r2.asm.Vg).apply(null, arguments);
              }, r2._crypto_verify_16 = function() {
                return (r2._crypto_verify_16 = r2.asm.Wg).apply(null, arguments);
              }, r2._crypto_verify_32 = function() {
                return (r2._crypto_verify_32 = r2.asm.Xg).apply(null, arguments);
              }, r2._crypto_verify_64 = function() {
                return (r2._crypto_verify_64 = r2.asm.Yg).apply(null, arguments);
              }, r2._randombytes_implementation_name = function() {
                return (r2._randombytes_implementation_name = r2.asm.Zg).apply(null, arguments);
              }, r2._randombytes_random = function() {
                return (r2._randombytes_random = r2.asm._g).apply(null, arguments);
              }, r2._randombytes_stir = function() {
                return (r2._randombytes_stir = r2.asm.$g).apply(null, arguments);
              }, r2._randombytes_uniform = function() {
                return (r2._randombytes_uniform = r2.asm.ah).apply(null, arguments);
              }, r2._randombytes_buf = function() {
                return (r2._randombytes_buf = r2.asm.bh).apply(null, arguments);
              }, r2._randombytes_buf_deterministic = function() {
                return (r2._randombytes_buf_deterministic = r2.asm.ch).apply(null, arguments);
              }, r2._randombytes_seedbytes = function() {
                return (r2._randombytes_seedbytes = r2.asm.dh).apply(null, arguments);
              }, r2._randombytes_close = function() {
                return (r2._randombytes_close = r2.asm.eh).apply(null, arguments);
              }, r2._randombytes = function() {
                return (r2._randombytes = r2.asm.fh).apply(null, arguments);
              }, r2._sodium_bin2hex = function() {
                return (r2._sodium_bin2hex = r2.asm.gh).apply(null, arguments);
              }, r2._sodium_hex2bin = function() {
                return (r2._sodium_hex2bin = r2.asm.hh).apply(null, arguments);
              }, r2._sodium_base64_encoded_len = function() {
                return (r2._sodium_base64_encoded_len = r2.asm.ih).apply(null, arguments);
              }, r2._sodium_bin2base64 = function() {
                return (r2._sodium_bin2base64 = r2.asm.jh).apply(null, arguments);
              }, r2._sodium_base642bin = function() {
                return (r2._sodium_base642bin = r2.asm.kh).apply(null, arguments);
              }, r2._sodium_init = function() {
                return (r2._sodium_init = r2.asm.lh).apply(null, arguments);
              }, r2._sodium_pad = function() {
                return (r2._sodium_pad = r2.asm.mh).apply(null, arguments);
              }, r2._sodium_unpad = function() {
                return (r2._sodium_unpad = r2.asm.nh).apply(null, arguments);
              }, r2._sodium_version_string = function() {
                return (r2._sodium_version_string = r2.asm.oh).apply(null, arguments);
              }, r2._sodium_library_version_major = function() {
                return (r2._sodium_library_version_major = r2.asm.ph).apply(null, arguments);
              }, r2._sodium_library_version_minor = function() {
                return (r2._sodium_library_version_minor = r2.asm.qh).apply(null, arguments);
              }, r2._sodium_library_minimal = function() {
                return (r2._sodium_library_minimal = r2.asm.rh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_seed_keypair = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_seed_keypair = r2.asm.sh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_keypair = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_keypair = r2.asm.th).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_beforenm = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_beforenm = r2.asm.uh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_detached_afternm = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_detached_afternm = r2.asm.vh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_detached = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_detached = r2.asm.wh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_easy_afternm = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_easy_afternm = r2.asm.xh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_easy = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_easy = r2.asm.yh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = r2.asm.zh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_open_detached = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_open_detached = r2.asm.Ah).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = r2.asm.Bh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_open_easy = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_open_easy = r2.asm.Ch).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_seedbytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_seedbytes = r2.asm.Dh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_publickeybytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_publickeybytes = r2.asm.Eh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes = r2.asm.Fh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes = r2.asm.Gh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_noncebytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_noncebytes = r2.asm.Hh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_macbytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_macbytes = r2.asm.Ih).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_messagebytes_max = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_messagebytes_max = r2.asm.Jh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_seal = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_seal = r2.asm.Kh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_seal_open = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_seal_open = r2.asm.Lh).apply(null, arguments);
              }, r2._crypto_box_curve25519xchacha20poly1305_sealbytes = function() {
                return (r2._crypto_box_curve25519xchacha20poly1305_sealbytes = r2.asm.Mh).apply(null, arguments);
              }, r2._crypto_core_ed25519_is_valid_point = function() {
                return (r2._crypto_core_ed25519_is_valid_point = r2.asm.Nh).apply(null, arguments);
              }, r2._crypto_core_ed25519_add = function() {
                return (r2._crypto_core_ed25519_add = r2.asm.Oh).apply(null, arguments);
              }, r2._crypto_core_ed25519_sub = function() {
                return (r2._crypto_core_ed25519_sub = r2.asm.Ph).apply(null, arguments);
              }, r2._crypto_core_ed25519_from_uniform = function() {
                return (r2._crypto_core_ed25519_from_uniform = r2.asm.Qh).apply(null, arguments);
              }, r2._crypto_core_ed25519_from_hash = function() {
                return (r2._crypto_core_ed25519_from_hash = r2.asm.Rh).apply(null, arguments);
              }, r2._crypto_core_ed25519_random = function() {
                return (r2._crypto_core_ed25519_random = r2.asm.Sh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_random = function() {
                return (r2._crypto_core_ed25519_scalar_random = r2.asm.Th).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_invert = function() {
                return (r2._crypto_core_ed25519_scalar_invert = r2.asm.Uh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_negate = function() {
                return (r2._crypto_core_ed25519_scalar_negate = r2.asm.Vh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_complement = function() {
                return (r2._crypto_core_ed25519_scalar_complement = r2.asm.Wh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_add = function() {
                return (r2._crypto_core_ed25519_scalar_add = r2.asm.Xh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_reduce = function() {
                return (r2._crypto_core_ed25519_scalar_reduce = r2.asm.Yh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_sub = function() {
                return (r2._crypto_core_ed25519_scalar_sub = r2.asm.Zh).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalar_mul = function() {
                return (r2._crypto_core_ed25519_scalar_mul = r2.asm._h).apply(null, arguments);
              }, r2._crypto_core_ed25519_bytes = function() {
                return (r2._crypto_core_ed25519_bytes = r2.asm.$h).apply(null, arguments);
              }, r2._crypto_core_ed25519_nonreducedscalarbytes = function() {
                return (r2._crypto_core_ed25519_nonreducedscalarbytes = r2.asm.ai).apply(null, arguments);
              }, r2._crypto_core_ed25519_uniformbytes = function() {
                return (r2._crypto_core_ed25519_uniformbytes = r2.asm.bi).apply(null, arguments);
              }, r2._crypto_core_ed25519_hashbytes = function() {
                return (r2._crypto_core_ed25519_hashbytes = r2.asm.ci).apply(null, arguments);
              }, r2._crypto_core_ed25519_scalarbytes = function() {
                return (r2._crypto_core_ed25519_scalarbytes = r2.asm.di).apply(null, arguments);
              }, r2._crypto_core_ristretto255_is_valid_point = function() {
                return (r2._crypto_core_ristretto255_is_valid_point = r2.asm.ei).apply(null, arguments);
              }, r2._crypto_core_ristretto255_add = function() {
                return (r2._crypto_core_ristretto255_add = r2.asm.fi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_sub = function() {
                return (r2._crypto_core_ristretto255_sub = r2.asm.gi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_from_hash = function() {
                return (r2._crypto_core_ristretto255_from_hash = r2.asm.hi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_random = function() {
                return (r2._crypto_core_ristretto255_random = r2.asm.ii).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_random = function() {
                return (r2._crypto_core_ristretto255_scalar_random = r2.asm.ji).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_invert = function() {
                return (r2._crypto_core_ristretto255_scalar_invert = r2.asm.ki).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_negate = function() {
                return (r2._crypto_core_ristretto255_scalar_negate = r2.asm.li).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_complement = function() {
                return (r2._crypto_core_ristretto255_scalar_complement = r2.asm.mi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_add = function() {
                return (r2._crypto_core_ristretto255_scalar_add = r2.asm.ni).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_sub = function() {
                return (r2._crypto_core_ristretto255_scalar_sub = r2.asm.oi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_mul = function() {
                return (r2._crypto_core_ristretto255_scalar_mul = r2.asm.pi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalar_reduce = function() {
                return (r2._crypto_core_ristretto255_scalar_reduce = r2.asm.qi).apply(null, arguments);
              }, r2._crypto_core_ristretto255_bytes = function() {
                return (r2._crypto_core_ristretto255_bytes = r2.asm.ri).apply(null, arguments);
              }, r2._crypto_core_ristretto255_nonreducedscalarbytes = function() {
                return (r2._crypto_core_ristretto255_nonreducedscalarbytes = r2.asm.si).apply(null, arguments);
              }, r2._crypto_core_ristretto255_hashbytes = function() {
                return (r2._crypto_core_ristretto255_hashbytes = r2.asm.ti).apply(null, arguments);
              }, r2._crypto_core_ristretto255_scalarbytes = function() {
                return (r2._crypto_core_ristretto255_scalarbytes = r2.asm.ui).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_ll = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_ll = r2.asm.vi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_bytes_min = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_bytes_min = r2.asm.wi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_bytes_max = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_bytes_max = r2.asm.xi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_passwd_min = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_passwd_min = r2.asm.yi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_passwd_max = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_passwd_max = r2.asm.zi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_saltbytes = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_saltbytes = r2.asm.Ai).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_strbytes = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_strbytes = r2.asm.Bi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_strprefix = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_strprefix = r2.asm.Ci).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_opslimit_min = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_opslimit_min = r2.asm.Di).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_opslimit_max = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_opslimit_max = r2.asm.Ei).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_memlimit_min = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_memlimit_min = r2.asm.Fi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_memlimit_max = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_memlimit_max = r2.asm.Gi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = r2.asm.Hi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = r2.asm.Ii).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = r2.asm.Ji).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = r2.asm.Ki).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256 = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256 = r2.asm.Li).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_str = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_str = r2.asm.Mi).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_str_verify = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_str_verify = r2.asm.Ni).apply(null, arguments);
              }, r2._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = function() {
                return (r2._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = r2.asm.Oi).apply(null, arguments);
              }, r2._crypto_scalarmult_ed25519 = function() {
                return (r2._crypto_scalarmult_ed25519 = r2.asm.Pi).apply(null, arguments);
              }, r2._crypto_scalarmult_ed25519_noclamp = function() {
                return (r2._crypto_scalarmult_ed25519_noclamp = r2.asm.Qi).apply(null, arguments);
              }, r2._crypto_scalarmult_ed25519_base = function() {
                return (r2._crypto_scalarmult_ed25519_base = r2.asm.Ri).apply(null, arguments);
              }, r2._crypto_scalarmult_ed25519_base_noclamp = function() {
                return (r2._crypto_scalarmult_ed25519_base_noclamp = r2.asm.Si).apply(null, arguments);
              }, r2._crypto_scalarmult_ed25519_bytes = function() {
                return (r2._crypto_scalarmult_ed25519_bytes = r2.asm.Ti).apply(null, arguments);
              }, r2._crypto_scalarmult_ed25519_scalarbytes = function() {
                return (r2._crypto_scalarmult_ed25519_scalarbytes = r2.asm.Ui).apply(null, arguments);
              }, r2._crypto_scalarmult_ristretto255 = function() {
                return (r2._crypto_scalarmult_ristretto255 = r2.asm.Vi).apply(null, arguments);
              }, r2._crypto_scalarmult_ristretto255_base = function() {
                return (r2._crypto_scalarmult_ristretto255_base = r2.asm.Wi).apply(null, arguments);
              }, r2._crypto_scalarmult_ristretto255_bytes = function() {
                return (r2._crypto_scalarmult_ristretto255_bytes = r2.asm.Xi).apply(null, arguments);
              }, r2._crypto_scalarmult_ristretto255_scalarbytes = function() {
                return (r2._crypto_scalarmult_ristretto255_scalarbytes = r2.asm.Yi).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_detached = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_detached = r2.asm.Zi).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_easy = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_easy = r2.asm._i).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_open_detached = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_open_detached = r2.asm.$i).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_open_easy = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_open_easy = r2.asm.aj).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_keybytes = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_keybytes = r2.asm.bj).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_noncebytes = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_noncebytes = r2.asm.cj).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_macbytes = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_macbytes = r2.asm.dj).apply(null, arguments);
              }, r2._crypto_secretbox_xchacha20poly1305_messagebytes_max = function() {
                return (r2._crypto_secretbox_xchacha20poly1305_messagebytes_max = r2.asm.ej).apply(null, arguments);
              }, r2._crypto_shorthash_siphashx24_bytes = function() {
                return (r2._crypto_shorthash_siphashx24_bytes = r2.asm.fj).apply(null, arguments);
              }, r2._crypto_shorthash_siphashx24_keybytes = function() {
                return (r2._crypto_shorthash_siphashx24_keybytes = r2.asm.gj).apply(null, arguments);
              }, r2._crypto_shorthash_siphashx24 = function() {
                return (r2._crypto_shorthash_siphashx24 = r2.asm.hj).apply(null, arguments);
              }, r2._crypto_stream_salsa2012 = function() {
                return (r2._crypto_stream_salsa2012 = r2.asm.ij).apply(null, arguments);
              }, r2._crypto_stream_salsa2012_xor = function() {
                return (r2._crypto_stream_salsa2012_xor = r2.asm.jj).apply(null, arguments);
              }, r2._crypto_stream_salsa2012_keybytes = function() {
                return (r2._crypto_stream_salsa2012_keybytes = r2.asm.kj).apply(null, arguments);
              }, r2._crypto_stream_salsa2012_noncebytes = function() {
                return (r2._crypto_stream_salsa2012_noncebytes = r2.asm.lj).apply(null, arguments);
              }, r2._crypto_stream_salsa2012_messagebytes_max = function() {
                return (r2._crypto_stream_salsa2012_messagebytes_max = r2.asm.mj).apply(null, arguments);
              }, r2._crypto_stream_salsa2012_keygen = function() {
                return (r2._crypto_stream_salsa2012_keygen = r2.asm.nj).apply(null, arguments);
              }, r2._crypto_stream_salsa208 = function() {
                return (r2._crypto_stream_salsa208 = r2.asm.oj).apply(null, arguments);
              }, r2._crypto_stream_salsa208_xor = function() {
                return (r2._crypto_stream_salsa208_xor = r2.asm.pj).apply(null, arguments);
              }, r2._crypto_stream_salsa208_keybytes = function() {
                return (r2._crypto_stream_salsa208_keybytes = r2.asm.qj).apply(null, arguments);
              }, r2._crypto_stream_salsa208_noncebytes = function() {
                return (r2._crypto_stream_salsa208_noncebytes = r2.asm.rj).apply(null, arguments);
              }, r2._crypto_stream_salsa208_messagebytes_max = function() {
                return (r2._crypto_stream_salsa208_messagebytes_max = r2.asm.sj).apply(null, arguments);
              }, r2._crypto_stream_salsa208_keygen = function() {
                return (r2._crypto_stream_salsa208_keygen = r2.asm.tj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20_keybytes = function() {
                return (r2._crypto_stream_xchacha20_keybytes = r2.asm.uj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20_noncebytes = function() {
                return (r2._crypto_stream_xchacha20_noncebytes = r2.asm.vj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20_messagebytes_max = function() {
                return (r2._crypto_stream_xchacha20_messagebytes_max = r2.asm.wj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20 = function() {
                return (r2._crypto_stream_xchacha20 = r2.asm.xj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20_xor_ic = function() {
                return (r2._crypto_stream_xchacha20_xor_ic = r2.asm.yj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20_xor = function() {
                return (r2._crypto_stream_xchacha20_xor = r2.asm.zj).apply(null, arguments);
              }, r2._crypto_stream_xchacha20_keygen = function() {
                return (r2._crypto_stream_xchacha20_keygen = r2.asm.Aj).apply(null, arguments);
              }, r2.___errno_location = function() {
                return (UA = r2.___errno_location = r2.asm.Bj).apply(null, arguments);
              });
              function JA(A5) {
                function g5() {
                  dA2 || (dA2 = true, r2.calledRun = true, D2 || (X2(), V2(), r2.onRuntimeInitialized && r2.onRuntimeInitialized(), W2()));
                }
                A5 = A5 || B2, j2 > 0 || (K2(), j2 > 0 || (r2.setStatus ? (r2.setStatus("Running..."), setTimeout(function() {
                  setTimeout(function() {
                    r2.setStatus("");
                  }, 1), g5();
                }, 1)) : g5()));
              }
              if (r2._malloc = function() {
                return (r2._malloc = r2.asm.Cj).apply(null, arguments);
              }, r2._free = function() {
                return (r2._free = r2.asm.Dj).apply(null, arguments);
              }, r2.setValue = h2, r2.getValue = w2, r2.UTF8ToString = J2, O2 = function A5() {
                dA2 || JA(), dA2 || (O2 = A5);
              }, r2.run = JA, r2.preInit)
                for (typeof r2.preInit == "function" && (r2.preInit = [r2.preInit]); r2.preInit.length > 0; )
                  r2.preInit.pop()();
              JA();
            });
          };
          var I2, r = r !== void 0 ? r : {}, t = {};
          for (I2 in r)
            r.hasOwnProperty(I2) && (t[I2] = r[I2]);
          var B = [], n = false, o = false, e = false, Q = false;
          n = typeof window == "object", o = typeof importScripts == "function", e = typeof process == "object" && typeof process.versions == "object" && typeof process.versions.node == "string", Q = !n && !e && !o;
          var C, c, i, _, s, y = "";
          function E(A4) {
            return r.locateFile ? r.locateFile(A4, y) : y + A4;
          }
          e ? (y = o ? require_path_browserify().dirname(y) + "/" : __dirname + "/", C = function(A4, g4) {
            var I3 = FA(A4);
            return I3 ? g4 ? I3 : I3.toString() : (_ || (_ = require_fs()), s || (s = require_path_browserify()), A4 = s.normalize(A4), _.readFileSync(A4, g4 ? null : "utf8"));
          }, i = function(A4) {
            var g4 = C(A4, true);
            return g4.buffer || (g4 = new Uint8Array(g4)), D(g4.buffer), g4;
          }, process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), B = process.argv.slice(2), typeof module != "undefined" && (module.exports = r), r.inspect = function() {
            return "[Emscripten Module object]";
          }) : Q ? (typeof read != "undefined" && (C = function(A4) {
            var g4 = FA(A4);
            return g4 ? mA(g4) : read(A4);
          }), i = function(A4) {
            var g4;
            return (g4 = FA(A4)) ? g4 : typeof readbuffer == "function" ? new Uint8Array(readbuffer(A4)) : (D(typeof (g4 = read(A4, "binary")) == "object"), g4);
          }, typeof scriptArgs != "undefined" ? B = scriptArgs : arguments !== void 0 && (B = arguments), typeof print != "undefined" && (typeof console == "undefined" && (console = {}), console.log = print, console.warn = console.error = typeof printErr != "undefined" ? printErr : print)) : (n || o) && (o ? y = self.location.href : typeof document != "undefined" && document.currentScript && (y = document.currentScript.src), y = y.indexOf("blob:") !== 0 ? y.substr(0, y.lastIndexOf("/") + 1) : "", C = function(A4) {
            try {
              var g4 = new XMLHttpRequest();
              return g4.open("GET", A4, false), g4.send(null), g4.responseText;
            } catch (g5) {
              var I3 = FA(A4);
              if (I3)
                return mA(I3);
              throw g5;
            }
          }, o && (i = function(A4) {
            try {
              var g4 = new XMLHttpRequest();
              return g4.open("GET", A4, false), g4.responseType = "arraybuffer", g4.send(null), new Uint8Array(g4.response);
            } catch (g5) {
              var I3 = FA(A4);
              if (I3)
                return I3;
              throw g5;
            }
          }), c = function(A4, g4, I3) {
            var a2 = new XMLHttpRequest();
            a2.open("GET", A4, true), a2.responseType = "arraybuffer", a2.onload = function() {
              if (a2.status == 200 || a2.status == 0 && a2.response)
                g4(a2.response);
              else {
                var r2 = FA(A4);
                r2 ? g4(r2.buffer) : I3();
              }
            }, a2.onerror = I3, a2.send(null);
          }), r.print;
          var p, u, f = r.printErr || void 0;
          for (I2 in t)
            t.hasOwnProperty(I2) && (r[I2] = t[I2]);
          function l(A4, g4, I3, a2) {
            switch ((I3 = I3 || "i8").charAt(I3.length - 1) === "*" && (I3 = "i32"), I3) {
              case "i1":
              case "i8":
                G[A4 >> 0] = g4;
                break;
              case "i16":
                F[A4 >> 1] = g4;
                break;
              case "i32":
                b[A4 >> 2] = g4;
                break;
              case "i64":
                BA = [g4 >>> 0, (tA = g4, +Math.abs(tA) >= 1 ? tA > 0 ? (0 | Math.min(+Math.floor(tA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((tA - +(~~tA >>> 0)) / 4294967296) >>> 0 : 0)], b[A4 >> 2] = BA[0], b[A4 + 4 >> 2] = BA[1];
                break;
              case "float":
                H[A4 >> 2] = g4;
                break;
              case "double":
                d[A4 >> 3] = g4;
                break;
              default:
                $("invalid type for setValue: " + I3);
            }
          }
          function h(A4, g4, I3) {
            switch ((g4 = g4 || "i8").charAt(g4.length - 1) === "*" && (g4 = "i32"), g4) {
              case "i1":
              case "i8":
                return G[A4 >> 0];
              case "i16":
                return F[A4 >> 1];
              case "i32":
              case "i64":
                return b[A4 >> 2];
              case "float":
                return H[A4 >> 2];
              case "double":
                return d[A4 >> 3];
              default:
                $("invalid type for getValue: " + g4);
            }
            return null;
          }
          t = null, r.arguments && (B = r.arguments), r.thisProgram && r.thisProgram, r.quit && r.quit, r.wasmBinary && (p = r.wasmBinary), r.noExitRuntime && r.noExitRuntime, typeof WebAssembly != "object" && $("no native wasm support detected");
          var w = false;
          function D(A4, g4) {
            A4 || $("Assertion failed: " + g4);
          }
          var m, G, k, F, b, H, d, S = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : void 0;
          function v(A4, g4, I3) {
            for (var a2 = g4 + I3, r2 = g4; A4[r2] && !(r2 >= a2); )
              ++r2;
            if (r2 - g4 > 16 && A4.subarray && S)
              return S.decode(A4.subarray(g4, r2));
            for (var t2 = ""; g4 < r2; ) {
              var B2 = A4[g4++];
              if (128 & B2) {
                var n2 = 63 & A4[g4++];
                if ((224 & B2) != 192) {
                  var o2 = 63 & A4[g4++];
                  if ((B2 = (240 & B2) == 224 ? (15 & B2) << 12 | n2 << 6 | o2 : (7 & B2) << 18 | n2 << 12 | o2 << 6 | 63 & A4[g4++]) < 65536)
                    t2 += String.fromCharCode(B2);
                  else {
                    var e2 = B2 - 65536;
                    t2 += String.fromCharCode(55296 | e2 >> 10, 56320 | 1023 & e2);
                  }
                } else
                  t2 += String.fromCharCode((31 & B2) << 6 | n2);
              } else
                t2 += String.fromCharCode(B2);
            }
            return t2;
          }
          function U(A4, g4) {
            return A4 ? v(k, A4, g4) : "";
          }
          function J(A4, g4) {
            return A4 % g4 > 0 && (A4 += g4 - A4 % g4), A4;
          }
          function Y(A4) {
            m = A4, r.HEAP8 = G = new Int8Array(A4), r.HEAP16 = F = new Int16Array(A4), r.HEAP32 = b = new Int32Array(A4), r.HEAPU8 = k = new Uint8Array(A4), r.HEAPU16 = new Uint16Array(A4), r.HEAPU32 = new Uint32Array(A4), r.HEAPF32 = H = new Float32Array(A4), r.HEAPF64 = d = new Float64Array(A4);
          }
          r.INITIAL_MEMORY;
          var x, N2 = [], M = [], R = [], P = [];
          function q() {
            if (r.preRun)
              for (typeof r.preRun == "function" && (r.preRun = [r.preRun]); r.preRun.length; )
                V(r.preRun.shift());
            cA(N2);
          }
          function L() {
            cA(M);
          }
          function K() {
            cA(R);
          }
          function X() {
            if (r.postRun)
              for (typeof r.postRun == "function" && (r.postRun = [r.postRun]); r.postRun.length; )
                W(r.postRun.shift());
            cA(P);
          }
          function V(A4) {
            N2.unshift(A4);
          }
          function W(A4) {
            P.unshift(A4);
          }
          M.push({ func: function() {
            dA();
          } });
          var T = 0, Z = null, j = null;
          function z(A4) {
            T++, r.monitorRunDependencies && r.monitorRunDependencies(T);
          }
          function O(A4) {
            if (T--, r.monitorRunDependencies && r.monitorRunDependencies(T), T == 0 && (Z !== null && (clearInterval(Z), Z = null), j)) {
              var g4 = j;
              j = null, g4();
            }
          }
          function $(A4) {
            throw r.onAbort && r.onAbort(A4), f(A4 += ""), w = true, A4 = "abort(" + A4 + "). Build with -s ASSERTIONS=1 for more info.", new WebAssembly.RuntimeError(A4);
          }
          function AA(A4, g4) {
            return String.prototype.startsWith ? A4.startsWith(g4) : A4.indexOf(g4) === 0;
          }
          r.preloadedImages = {}, r.preloadedAudios = {};
          var gA = "data:application/octet-stream;base64,";
          function IA(A4) {
            return AA(A4, gA);
          }
          var aA = "file://";
          function rA(A4) {
            return AA(A4, aA);
          }
          var tA, BA, nA = "data:application/octet-stream;base64,";
          function oA(A4) {
            try {
              if (A4 == nA && p)
                return new Uint8Array(p);
              var g4 = FA(A4);
              if (g4)
                return g4;
              if (i)
                return i(A4);
              throw "both async and sync fetching of the wasm failed";
            } catch (A5) {
              $(A5);
            }
          }
          function eA() {
            if (!p && (n || o)) {
              if (typeof fetch == "function" && !rA(nA))
                return fetch(nA, { credentials: "same-origin" }).then(function(A4) {
                  if (!A4.ok)
                    throw "failed to load wasm binary file at '" + nA + "'";
                  return A4.arrayBuffer();
                }).catch(function() {
                  return oA(nA);
                });
              if (c)
                return new Promise(function(A4, g4) {
                  c(nA, function(g5) {
                    A4(new Uint8Array(g5));
                  }, g4);
                });
            }
            return Promise.resolve().then(function() {
              return oA(nA);
            });
          }
          function QA() {
            var A4 = { a: HA };
            function g4(A5, g5) {
              var I4 = A5.exports;
              r.asm = I4, Y((u = r.asm.g).buffer), x = r.asm.h, O();
            }
            function I3(A5) {
              g4(A5.instance);
            }
            function a2(g5) {
              return eA().then(function(g6) {
                return WebAssembly.instantiate(g6, A4);
              }).then(g5, function(A5) {
                f("failed to asynchronously prepare wasm: " + A5), $(A5);
              });
            }
            if (z(), r.instantiateWasm)
              try {
                return r.instantiateWasm(A4, g4);
              } catch (A5) {
                return f("Module.instantiateWasm callback failed with error: " + A5), false;
              }
            return p || typeof WebAssembly.instantiateStreaming != "function" || IA(nA) || rA(nA) || typeof fetch != "function" ? a2(I3) : fetch(nA, { credentials: "same-origin" }).then(function(g5) {
              return WebAssembly.instantiateStreaming(g5, A4).then(I3, function(A5) {
                return f("wasm streaming compile failed: " + A5), f("falling back to ArrayBuffer instantiation"), a2(I3);
              });
            }), {};
          }
          IA(nA) || (nA = E(nA));
          var CA = { 1027: function() {
            return r.getRandomValue();
          }, 1065: function() {
            if (r.getRandomValue === void 0)
              try {
                var A4 = typeof window == "object" ? window : self, g4 = A4.crypto !== void 0 ? A4.crypto : A4.msCrypto, I3 = function() {
                  var A5 = new Uint32Array(1);
                  return g4.getRandomValues(A5), A5[0] >>> 0;
                };
                I3(), r.getRandomValue = I3;
              } catch (A5) {
                try {
                  var a2 = __require("crypto"), t2 = function() {
                    var A6 = a2.randomBytes(4);
                    return (A6[0] << 24 | A6[1] << 16 | A6[2] << 8 | A6[3]) >>> 0;
                  };
                  t2(), r.getRandomValue = t2;
                } catch (A6) {
                  throw "No secure random number generator found";
                }
              }
          } };
          function cA(A4) {
            for (; A4.length > 0; ) {
              var g4 = A4.shift();
              if (typeof g4 != "function") {
                var I3 = g4.func;
                typeof I3 == "number" ? g4.arg === void 0 ? x.get(I3)() : x.get(I3)(g4.arg) : I3(g4.arg === void 0 ? null : g4.arg);
              } else
                g4(r);
            }
          }
          function iA(A4, g4, I3, a2) {
            $("Assertion failed: " + U(A4) + ", at: " + [g4 ? U(g4) : "unknown filename", I3, a2 ? U(a2) : "unknown function"]);
          }
          function _A() {
            $();
          }
          function sA(A4, g4, I3) {
            var a2 = wA(g4, I3);
            return CA[A4].apply(null, a2);
          }
          function yA(A4, g4, I3) {
            k.copyWithin(A4, g4, g4 + I3);
          }
          function EA() {
            return k.length;
          }
          function pA(A4) {
            try {
              return u.grow(A4 - m.byteLength + 65535 >>> 16), Y(u.buffer), 1;
            } catch (A5) {
            }
          }
          function uA(A4) {
            A4 >>>= 0;
            var g4 = EA(), I3 = 2147483648;
            if (A4 > I3)
              return false;
            for (var a2 = 1; a2 <= 4; a2 *= 2) {
              var r2 = g4 * (1 + 0.2 / a2);
              if (r2 = Math.min(r2, A4 + 100663296), pA(Math.min(I3, J(Math.max(16777216, A4, r2), 65536))))
                return true;
            }
            return false;
          }
          function fA(A4) {
            return b[SA() >> 2] = A4, A4;
          }
          function lA(A4) {
            switch (A4) {
              case 30:
                return 16384;
              case 85:
                return 131072;
              case 132:
              case 133:
              case 12:
              case 137:
              case 138:
              case 15:
              case 235:
              case 16:
              case 17:
              case 18:
              case 19:
              case 20:
              case 149:
              case 13:
              case 10:
              case 236:
              case 153:
              case 9:
              case 21:
              case 22:
              case 159:
              case 154:
              case 14:
              case 77:
              case 78:
              case 139:
              case 82:
              case 68:
              case 67:
              case 164:
              case 11:
              case 29:
              case 47:
              case 48:
              case 95:
              case 52:
              case 51:
              case 46:
                return 200809;
              case 27:
              case 246:
              case 127:
              case 128:
              case 23:
              case 24:
              case 160:
              case 161:
              case 181:
              case 182:
              case 242:
              case 183:
              case 184:
              case 243:
              case 244:
              case 245:
              case 165:
              case 178:
              case 179:
              case 49:
              case 50:
              case 168:
              case 169:
              case 175:
              case 170:
              case 171:
              case 172:
              case 97:
              case 76:
              case 32:
              case 173:
              case 35:
              case 80:
              case 81:
              case 79:
                return -1;
              case 176:
              case 177:
              case 7:
              case 155:
              case 8:
              case 157:
              case 125:
              case 126:
              case 92:
              case 93:
              case 129:
              case 130:
              case 131:
              case 94:
              case 91:
                return 1;
              case 74:
              case 60:
              case 69:
              case 70:
              case 4:
                return 1024;
              case 31:
              case 42:
              case 72:
                return 32;
              case 87:
              case 26:
              case 33:
                return 2147483647;
              case 34:
              case 1:
                return 47839;
              case 38:
              case 36:
                return 99;
              case 43:
              case 37:
                return 2048;
              case 0:
                return 2097152;
              case 3:
                return 65536;
              case 28:
                return 32768;
              case 44:
                return 32767;
              case 75:
                return 16384;
              case 39:
                return 1e3;
              case 89:
                return 700;
              case 71:
                return 256;
              case 40:
                return 255;
              case 2:
                return 100;
              case 180:
                return 64;
              case 25:
                return 20;
              case 5:
                return 16;
              case 6:
                return 6;
              case 73:
                return 4;
              case 84:
                return typeof navigator == "object" && navigator.hardwareConcurrency || 1;
            }
            return fA(28), -1;
          }
          var hA = [];
          function wA(A4, g4) {
            var I3;
            for (hA.length = 0, g4 >>= 2; I3 = k[A4++]; ) {
              var a2 = I3 < 105;
              a2 && 1 & g4 && g4++, hA.push(a2 ? d[g4++ >> 1] : b[g4]), ++g4;
            }
            return hA;
          }
          var DA = false;
          function mA(A4) {
            for (var g4 = [], I3 = 0; I3 < A4.length; I3++) {
              var a2 = A4[I3];
              a2 > 255 && (DA && D(false, "Character code " + a2 + " (" + String.fromCharCode(a2) + ")  at offset " + I3 + " not in 0x00-0xFF."), a2 &= 255), g4.push(String.fromCharCode(a2));
            }
            return g4.join("");
          }
          var GA = typeof atob == "function" ? atob : function(A4) {
            var g4, I3, a2, r2, t2, B2, n2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", o2 = "", e2 = 0;
            A4 = A4.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            do {
              g4 = n2.indexOf(A4.charAt(e2++)) << 2 | (r2 = n2.indexOf(A4.charAt(e2++))) >> 4, I3 = (15 & r2) << 4 | (t2 = n2.indexOf(A4.charAt(e2++))) >> 2, a2 = (3 & t2) << 6 | (B2 = n2.indexOf(A4.charAt(e2++))), o2 += String.fromCharCode(g4), t2 !== 64 && (o2 += String.fromCharCode(I3)), B2 !== 64 && (o2 += String.fromCharCode(a2));
            } while (e2 < A4.length);
            return o2;
          };
          function kA(A4) {
            if (typeof e == "boolean" && e) {
              var g4;
              try {
                g4 = Buffer2.from(A4, "base64");
              } catch (I4) {
                g4 = new Buffer2(A4, "base64");
              }
              return new Uint8Array(g4.buffer, g4.byteOffset, g4.byteLength);
            }
            try {
              for (var I3 = GA(A4), a2 = new Uint8Array(I3.length), r2 = 0; r2 < I3.length; ++r2)
                a2[r2] = I3.charCodeAt(r2);
              return a2;
            } catch (A5) {
              throw new Error("Converting base64 string to bytes failed.");
            }
          }
          function FA(A4) {
            if (IA(A4))
              return kA(A4.slice(gA.length));
          }
          var bA, HA = { a: iA, b: _A, c: sA, e: yA, f: uA, d: lA }, dA = (QA(), r.___wasm_call_ctors = function() {
            return (dA = r.___wasm_call_ctors = r.asm.i).apply(null, arguments);
          }), SA = (r._crypto_aead_chacha20poly1305_encrypt_detached = function() {
            return (r._crypto_aead_chacha20poly1305_encrypt_detached = r.asm.j).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_encrypt = function() {
            return (r._crypto_aead_chacha20poly1305_encrypt = r.asm.k).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_encrypt_detached = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_encrypt_detached = r.asm.l).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_encrypt = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_encrypt = r.asm.m).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_decrypt_detached = function() {
            return (r._crypto_aead_chacha20poly1305_decrypt_detached = r.asm.n).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_decrypt = function() {
            return (r._crypto_aead_chacha20poly1305_decrypt = r.asm.o).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_decrypt_detached = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_decrypt_detached = r.asm.p).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_decrypt = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_decrypt = r.asm.q).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_keybytes = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_keybytes = r.asm.r).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_npubbytes = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_npubbytes = r.asm.s).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_nsecbytes = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_nsecbytes = r.asm.t).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_abytes = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_abytes = r.asm.u).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_messagebytes_max = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_messagebytes_max = r.asm.v).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_ietf_keygen = function() {
            return (r._crypto_aead_chacha20poly1305_ietf_keygen = r.asm.w).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_keybytes = function() {
            return (r._crypto_aead_chacha20poly1305_keybytes = r.asm.x).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_npubbytes = function() {
            return (r._crypto_aead_chacha20poly1305_npubbytes = r.asm.y).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_nsecbytes = function() {
            return (r._crypto_aead_chacha20poly1305_nsecbytes = r.asm.z).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_abytes = function() {
            return (r._crypto_aead_chacha20poly1305_abytes = r.asm.A).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_messagebytes_max = function() {
            return (r._crypto_aead_chacha20poly1305_messagebytes_max = r.asm.B).apply(null, arguments);
          }, r._crypto_aead_chacha20poly1305_keygen = function() {
            return (r._crypto_aead_chacha20poly1305_keygen = r.asm.C).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = r.asm.D).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_encrypt = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_encrypt = r.asm.E).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = r.asm.F).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_decrypt = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_decrypt = r.asm.G).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_keybytes = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_keybytes = r.asm.H).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_npubbytes = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_npubbytes = r.asm.I).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_nsecbytes = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_nsecbytes = r.asm.J).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_abytes = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_abytes = r.asm.K).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = r.asm.L).apply(null, arguments);
          }, r._crypto_aead_xchacha20poly1305_ietf_keygen = function() {
            return (r._crypto_aead_xchacha20poly1305_ietf_keygen = r.asm.M).apply(null, arguments);
          }, r._crypto_auth_bytes = function() {
            return (r._crypto_auth_bytes = r.asm.N).apply(null, arguments);
          }, r._crypto_auth_keybytes = function() {
            return (r._crypto_auth_keybytes = r.asm.O).apply(null, arguments);
          }, r._crypto_auth_primitive = function() {
            return (r._crypto_auth_primitive = r.asm.P).apply(null, arguments);
          }, r._crypto_auth = function() {
            return (r._crypto_auth = r.asm.Q).apply(null, arguments);
          }, r._crypto_auth_verify = function() {
            return (r._crypto_auth_verify = r.asm.R).apply(null, arguments);
          }, r._crypto_auth_keygen = function() {
            return (r._crypto_auth_keygen = r.asm.S).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_bytes = function() {
            return (r._crypto_auth_hmacsha256_bytes = r.asm.T).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_keybytes = function() {
            return (r._crypto_auth_hmacsha256_keybytes = r.asm.U).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_statebytes = function() {
            return (r._crypto_auth_hmacsha256_statebytes = r.asm.V).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_keygen = function() {
            return (r._crypto_auth_hmacsha256_keygen = r.asm.W).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_init = function() {
            return (r._crypto_auth_hmacsha256_init = r.asm.X).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_update = function() {
            return (r._crypto_auth_hmacsha256_update = r.asm.Y).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_final = function() {
            return (r._crypto_auth_hmacsha256_final = r.asm.Z).apply(null, arguments);
          }, r._crypto_auth_hmacsha256 = function() {
            return (r._crypto_auth_hmacsha256 = r.asm._).apply(null, arguments);
          }, r._crypto_auth_hmacsha256_verify = function() {
            return (r._crypto_auth_hmacsha256_verify = r.asm.$).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_bytes = function() {
            return (r._crypto_auth_hmacsha512_bytes = r.asm.aa).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_keybytes = function() {
            return (r._crypto_auth_hmacsha512_keybytes = r.asm.ba).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_statebytes = function() {
            return (r._crypto_auth_hmacsha512_statebytes = r.asm.ca).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_keygen = function() {
            return (r._crypto_auth_hmacsha512_keygen = r.asm.da).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_init = function() {
            return (r._crypto_auth_hmacsha512_init = r.asm.ea).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_update = function() {
            return (r._crypto_auth_hmacsha512_update = r.asm.fa).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_final = function() {
            return (r._crypto_auth_hmacsha512_final = r.asm.ga).apply(null, arguments);
          }, r._crypto_auth_hmacsha512 = function() {
            return (r._crypto_auth_hmacsha512 = r.asm.ha).apply(null, arguments);
          }, r._crypto_auth_hmacsha512_verify = function() {
            return (r._crypto_auth_hmacsha512_verify = r.asm.ia).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_bytes = function() {
            return (r._crypto_auth_hmacsha512256_bytes = r.asm.ja).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_keybytes = function() {
            return (r._crypto_auth_hmacsha512256_keybytes = r.asm.ka).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_statebytes = function() {
            return (r._crypto_auth_hmacsha512256_statebytes = r.asm.la).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_keygen = function() {
            return (r._crypto_auth_hmacsha512256_keygen = r.asm.ma).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_init = function() {
            return (r._crypto_auth_hmacsha512256_init = r.asm.na).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_update = function() {
            return (r._crypto_auth_hmacsha512256_update = r.asm.oa).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_final = function() {
            return (r._crypto_auth_hmacsha512256_final = r.asm.pa).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256 = function() {
            return (r._crypto_auth_hmacsha512256 = r.asm.qa).apply(null, arguments);
          }, r._crypto_auth_hmacsha512256_verify = function() {
            return (r._crypto_auth_hmacsha512256_verify = r.asm.ra).apply(null, arguments);
          }, r._crypto_box_seedbytes = function() {
            return (r._crypto_box_seedbytes = r.asm.sa).apply(null, arguments);
          }, r._crypto_box_publickeybytes = function() {
            return (r._crypto_box_publickeybytes = r.asm.ta).apply(null, arguments);
          }, r._crypto_box_secretkeybytes = function() {
            return (r._crypto_box_secretkeybytes = r.asm.ua).apply(null, arguments);
          }, r._crypto_box_beforenmbytes = function() {
            return (r._crypto_box_beforenmbytes = r.asm.va).apply(null, arguments);
          }, r._crypto_box_noncebytes = function() {
            return (r._crypto_box_noncebytes = r.asm.wa).apply(null, arguments);
          }, r._crypto_box_zerobytes = function() {
            return (r._crypto_box_zerobytes = r.asm.xa).apply(null, arguments);
          }, r._crypto_box_boxzerobytes = function() {
            return (r._crypto_box_boxzerobytes = r.asm.ya).apply(null, arguments);
          }, r._crypto_box_macbytes = function() {
            return (r._crypto_box_macbytes = r.asm.za).apply(null, arguments);
          }, r._crypto_box_messagebytes_max = function() {
            return (r._crypto_box_messagebytes_max = r.asm.Aa).apply(null, arguments);
          }, r._crypto_box_primitive = function() {
            return (r._crypto_box_primitive = r.asm.Ba).apply(null, arguments);
          }, r._crypto_box_seed_keypair = function() {
            return (r._crypto_box_seed_keypair = r.asm.Ca).apply(null, arguments);
          }, r._crypto_box_keypair = function() {
            return (r._crypto_box_keypair = r.asm.Da).apply(null, arguments);
          }, r._crypto_box_beforenm = function() {
            return (r._crypto_box_beforenm = r.asm.Ea).apply(null, arguments);
          }, r._crypto_box_afternm = function() {
            return (r._crypto_box_afternm = r.asm.Fa).apply(null, arguments);
          }, r._crypto_box_open_afternm = function() {
            return (r._crypto_box_open_afternm = r.asm.Ga).apply(null, arguments);
          }, r._crypto_box = function() {
            return (r._crypto_box = r.asm.Ha).apply(null, arguments);
          }, r._crypto_box_open = function() {
            return (r._crypto_box_open = r.asm.Ia).apply(null, arguments);
          }, r._crypto_box_detached_afternm = function() {
            return (r._crypto_box_detached_afternm = r.asm.Ja).apply(null, arguments);
          }, r._crypto_box_detached = function() {
            return (r._crypto_box_detached = r.asm.Ka).apply(null, arguments);
          }, r._crypto_box_easy_afternm = function() {
            return (r._crypto_box_easy_afternm = r.asm.La).apply(null, arguments);
          }, r._crypto_box_easy = function() {
            return (r._crypto_box_easy = r.asm.Ma).apply(null, arguments);
          }, r._crypto_box_open_detached_afternm = function() {
            return (r._crypto_box_open_detached_afternm = r.asm.Na).apply(null, arguments);
          }, r._crypto_box_open_detached = function() {
            return (r._crypto_box_open_detached = r.asm.Oa).apply(null, arguments);
          }, r._crypto_box_open_easy_afternm = function() {
            return (r._crypto_box_open_easy_afternm = r.asm.Pa).apply(null, arguments);
          }, r._crypto_box_open_easy = function() {
            return (r._crypto_box_open_easy = r.asm.Qa).apply(null, arguments);
          }, r._crypto_box_seal = function() {
            return (r._crypto_box_seal = r.asm.Ra).apply(null, arguments);
          }, r._crypto_box_seal_open = function() {
            return (r._crypto_box_seal_open = r.asm.Sa).apply(null, arguments);
          }, r._crypto_box_sealbytes = function() {
            return (r._crypto_box_sealbytes = r.asm.Ta).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_seed_keypair = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_seed_keypair = r.asm.Ua).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_keypair = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_keypair = r.asm.Va).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_beforenm = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_beforenm = r.asm.Wa).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_afternm = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_afternm = r.asm.Xa).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_open_afternm = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_open_afternm = r.asm.Ya).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305 = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305 = r.asm.Za).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_open = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_open = r.asm._a).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_seedbytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_seedbytes = r.asm.$a).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_publickeybytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_publickeybytes = r.asm.ab).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = r.asm.bb).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = r.asm.cb).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_noncebytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_noncebytes = r.asm.db).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_zerobytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_zerobytes = r.asm.eb).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = r.asm.fb).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_macbytes = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_macbytes = r.asm.gb).apply(null, arguments);
          }, r._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = function() {
            return (r._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = r.asm.hb).apply(null, arguments);
          }, r._crypto_core_hchacha20 = function() {
            return (r._crypto_core_hchacha20 = r.asm.ib).apply(null, arguments);
          }, r._crypto_core_hchacha20_outputbytes = function() {
            return (r._crypto_core_hchacha20_outputbytes = r.asm.jb).apply(null, arguments);
          }, r._crypto_core_hchacha20_inputbytes = function() {
            return (r._crypto_core_hchacha20_inputbytes = r.asm.kb).apply(null, arguments);
          }, r._crypto_core_hchacha20_keybytes = function() {
            return (r._crypto_core_hchacha20_keybytes = r.asm.lb).apply(null, arguments);
          }, r._crypto_core_hchacha20_constbytes = function() {
            return (r._crypto_core_hchacha20_constbytes = r.asm.mb).apply(null, arguments);
          }, r._crypto_core_hsalsa20 = function() {
            return (r._crypto_core_hsalsa20 = r.asm.nb).apply(null, arguments);
          }, r._crypto_core_hsalsa20_outputbytes = function() {
            return (r._crypto_core_hsalsa20_outputbytes = r.asm.ob).apply(null, arguments);
          }, r._crypto_core_hsalsa20_inputbytes = function() {
            return (r._crypto_core_hsalsa20_inputbytes = r.asm.pb).apply(null, arguments);
          }, r._crypto_core_hsalsa20_keybytes = function() {
            return (r._crypto_core_hsalsa20_keybytes = r.asm.qb).apply(null, arguments);
          }, r._crypto_core_hsalsa20_constbytes = function() {
            return (r._crypto_core_hsalsa20_constbytes = r.asm.rb).apply(null, arguments);
          }, r._crypto_core_salsa20 = function() {
            return (r._crypto_core_salsa20 = r.asm.sb).apply(null, arguments);
          }, r._crypto_core_salsa20_outputbytes = function() {
            return (r._crypto_core_salsa20_outputbytes = r.asm.tb).apply(null, arguments);
          }, r._crypto_core_salsa20_inputbytes = function() {
            return (r._crypto_core_salsa20_inputbytes = r.asm.ub).apply(null, arguments);
          }, r._crypto_core_salsa20_keybytes = function() {
            return (r._crypto_core_salsa20_keybytes = r.asm.vb).apply(null, arguments);
          }, r._crypto_core_salsa20_constbytes = function() {
            return (r._crypto_core_salsa20_constbytes = r.asm.wb).apply(null, arguments);
          }, r._crypto_core_salsa2012 = function() {
            return (r._crypto_core_salsa2012 = r.asm.xb).apply(null, arguments);
          }, r._crypto_core_salsa2012_outputbytes = function() {
            return (r._crypto_core_salsa2012_outputbytes = r.asm.yb).apply(null, arguments);
          }, r._crypto_core_salsa2012_inputbytes = function() {
            return (r._crypto_core_salsa2012_inputbytes = r.asm.zb).apply(null, arguments);
          }, r._crypto_core_salsa2012_keybytes = function() {
            return (r._crypto_core_salsa2012_keybytes = r.asm.Ab).apply(null, arguments);
          }, r._crypto_core_salsa2012_constbytes = function() {
            return (r._crypto_core_salsa2012_constbytes = r.asm.Bb).apply(null, arguments);
          }, r._crypto_core_salsa208 = function() {
            return (r._crypto_core_salsa208 = r.asm.Cb).apply(null, arguments);
          }, r._crypto_core_salsa208_outputbytes = function() {
            return (r._crypto_core_salsa208_outputbytes = r.asm.Db).apply(null, arguments);
          }, r._crypto_core_salsa208_inputbytes = function() {
            return (r._crypto_core_salsa208_inputbytes = r.asm.Eb).apply(null, arguments);
          }, r._crypto_core_salsa208_keybytes = function() {
            return (r._crypto_core_salsa208_keybytes = r.asm.Fb).apply(null, arguments);
          }, r._crypto_core_salsa208_constbytes = function() {
            return (r._crypto_core_salsa208_constbytes = r.asm.Gb).apply(null, arguments);
          }, r._crypto_generichash_bytes_min = function() {
            return (r._crypto_generichash_bytes_min = r.asm.Hb).apply(null, arguments);
          }, r._crypto_generichash_bytes_max = function() {
            return (r._crypto_generichash_bytes_max = r.asm.Ib).apply(null, arguments);
          }, r._crypto_generichash_bytes = function() {
            return (r._crypto_generichash_bytes = r.asm.Jb).apply(null, arguments);
          }, r._crypto_generichash_keybytes_min = function() {
            return (r._crypto_generichash_keybytes_min = r.asm.Kb).apply(null, arguments);
          }, r._crypto_generichash_keybytes_max = function() {
            return (r._crypto_generichash_keybytes_max = r.asm.Lb).apply(null, arguments);
          }, r._crypto_generichash_keybytes = function() {
            return (r._crypto_generichash_keybytes = r.asm.Mb).apply(null, arguments);
          }, r._crypto_generichash_primitive = function() {
            return (r._crypto_generichash_primitive = r.asm.Nb).apply(null, arguments);
          }, r._crypto_generichash_statebytes = function() {
            return (r._crypto_generichash_statebytes = r.asm.Ob).apply(null, arguments);
          }, r._crypto_generichash = function() {
            return (r._crypto_generichash = r.asm.Pb).apply(null, arguments);
          }, r._crypto_generichash_init = function() {
            return (r._crypto_generichash_init = r.asm.Qb).apply(null, arguments);
          }, r._crypto_generichash_update = function() {
            return (r._crypto_generichash_update = r.asm.Rb).apply(null, arguments);
          }, r._crypto_generichash_final = function() {
            return (r._crypto_generichash_final = r.asm.Sb).apply(null, arguments);
          }, r._crypto_generichash_keygen = function() {
            return (r._crypto_generichash_keygen = r.asm.Tb).apply(null, arguments);
          }, r._crypto_generichash_blake2b_bytes_min = function() {
            return (r._crypto_generichash_blake2b_bytes_min = r.asm.Ub).apply(null, arguments);
          }, r._crypto_generichash_blake2b_bytes_max = function() {
            return (r._crypto_generichash_blake2b_bytes_max = r.asm.Vb).apply(null, arguments);
          }, r._crypto_generichash_blake2b_bytes = function() {
            return (r._crypto_generichash_blake2b_bytes = r.asm.Wb).apply(null, arguments);
          }, r._crypto_generichash_blake2b_keybytes_min = function() {
            return (r._crypto_generichash_blake2b_keybytes_min = r.asm.Xb).apply(null, arguments);
          }, r._crypto_generichash_blake2b_keybytes_max = function() {
            return (r._crypto_generichash_blake2b_keybytes_max = r.asm.Yb).apply(null, arguments);
          }, r._crypto_generichash_blake2b_keybytes = function() {
            return (r._crypto_generichash_blake2b_keybytes = r.asm.Zb).apply(null, arguments);
          }, r._crypto_generichash_blake2b_saltbytes = function() {
            return (r._crypto_generichash_blake2b_saltbytes = r.asm._b).apply(null, arguments);
          }, r._crypto_generichash_blake2b_personalbytes = function() {
            return (r._crypto_generichash_blake2b_personalbytes = r.asm.$b).apply(null, arguments);
          }, r._crypto_generichash_blake2b_statebytes = function() {
            return (r._crypto_generichash_blake2b_statebytes = r.asm.ac).apply(null, arguments);
          }, r._crypto_generichash_blake2b_keygen = function() {
            return (r._crypto_generichash_blake2b_keygen = r.asm.bc).apply(null, arguments);
          }, r._crypto_generichash_blake2b = function() {
            return (r._crypto_generichash_blake2b = r.asm.cc).apply(null, arguments);
          }, r._crypto_generichash_blake2b_salt_personal = function() {
            return (r._crypto_generichash_blake2b_salt_personal = r.asm.dc).apply(null, arguments);
          }, r._crypto_generichash_blake2b_init = function() {
            return (r._crypto_generichash_blake2b_init = r.asm.ec).apply(null, arguments);
          }, r._crypto_generichash_blake2b_init_salt_personal = function() {
            return (r._crypto_generichash_blake2b_init_salt_personal = r.asm.fc).apply(null, arguments);
          }, r._crypto_generichash_blake2b_update = function() {
            return (r._crypto_generichash_blake2b_update = r.asm.gc).apply(null, arguments);
          }, r._crypto_generichash_blake2b_final = function() {
            return (r._crypto_generichash_blake2b_final = r.asm.hc).apply(null, arguments);
          }, r._crypto_hash_bytes = function() {
            return (r._crypto_hash_bytes = r.asm.ic).apply(null, arguments);
          }, r._crypto_hash = function() {
            return (r._crypto_hash = r.asm.jc).apply(null, arguments);
          }, r._crypto_hash_primitive = function() {
            return (r._crypto_hash_primitive = r.asm.kc).apply(null, arguments);
          }, r._crypto_hash_sha256_bytes = function() {
            return (r._crypto_hash_sha256_bytes = r.asm.lc).apply(null, arguments);
          }, r._crypto_hash_sha256_statebytes = function() {
            return (r._crypto_hash_sha256_statebytes = r.asm.mc).apply(null, arguments);
          }, r._crypto_hash_sha256_init = function() {
            return (r._crypto_hash_sha256_init = r.asm.nc).apply(null, arguments);
          }, r._crypto_hash_sha256_update = function() {
            return (r._crypto_hash_sha256_update = r.asm.oc).apply(null, arguments);
          }, r._crypto_hash_sha256_final = function() {
            return (r._crypto_hash_sha256_final = r.asm.pc).apply(null, arguments);
          }, r._crypto_hash_sha256 = function() {
            return (r._crypto_hash_sha256 = r.asm.qc).apply(null, arguments);
          }, r._crypto_hash_sha512_bytes = function() {
            return (r._crypto_hash_sha512_bytes = r.asm.rc).apply(null, arguments);
          }, r._crypto_hash_sha512_statebytes = function() {
            return (r._crypto_hash_sha512_statebytes = r.asm.sc).apply(null, arguments);
          }, r._crypto_hash_sha512_init = function() {
            return (r._crypto_hash_sha512_init = r.asm.tc).apply(null, arguments);
          }, r._crypto_hash_sha512_update = function() {
            return (r._crypto_hash_sha512_update = r.asm.uc).apply(null, arguments);
          }, r._crypto_hash_sha512_final = function() {
            return (r._crypto_hash_sha512_final = r.asm.vc).apply(null, arguments);
          }, r._crypto_hash_sha512 = function() {
            return (r._crypto_hash_sha512 = r.asm.wc).apply(null, arguments);
          }, r._crypto_kdf_blake2b_bytes_min = function() {
            return (r._crypto_kdf_blake2b_bytes_min = r.asm.xc).apply(null, arguments);
          }, r._crypto_kdf_blake2b_bytes_max = function() {
            return (r._crypto_kdf_blake2b_bytes_max = r.asm.yc).apply(null, arguments);
          }, r._crypto_kdf_blake2b_contextbytes = function() {
            return (r._crypto_kdf_blake2b_contextbytes = r.asm.zc).apply(null, arguments);
          }, r._crypto_kdf_blake2b_keybytes = function() {
            return (r._crypto_kdf_blake2b_keybytes = r.asm.Ac).apply(null, arguments);
          }, r._crypto_kdf_blake2b_derive_from_key = function() {
            return (r._crypto_kdf_blake2b_derive_from_key = r.asm.Bc).apply(null, arguments);
          }, r._crypto_kdf_primitive = function() {
            return (r._crypto_kdf_primitive = r.asm.Cc).apply(null, arguments);
          }, r._crypto_kdf_bytes_min = function() {
            return (r._crypto_kdf_bytes_min = r.asm.Dc).apply(null, arguments);
          }, r._crypto_kdf_bytes_max = function() {
            return (r._crypto_kdf_bytes_max = r.asm.Ec).apply(null, arguments);
          }, r._crypto_kdf_contextbytes = function() {
            return (r._crypto_kdf_contextbytes = r.asm.Fc).apply(null, arguments);
          }, r._crypto_kdf_keybytes = function() {
            return (r._crypto_kdf_keybytes = r.asm.Gc).apply(null, arguments);
          }, r._crypto_kdf_derive_from_key = function() {
            return (r._crypto_kdf_derive_from_key = r.asm.Hc).apply(null, arguments);
          }, r._crypto_kdf_keygen = function() {
            return (r._crypto_kdf_keygen = r.asm.Ic).apply(null, arguments);
          }, r._crypto_kx_seed_keypair = function() {
            return (r._crypto_kx_seed_keypair = r.asm.Jc).apply(null, arguments);
          }, r._crypto_kx_keypair = function() {
            return (r._crypto_kx_keypair = r.asm.Kc).apply(null, arguments);
          }, r._crypto_kx_client_session_keys = function() {
            return (r._crypto_kx_client_session_keys = r.asm.Lc).apply(null, arguments);
          }, r._crypto_kx_server_session_keys = function() {
            return (r._crypto_kx_server_session_keys = r.asm.Mc).apply(null, arguments);
          }, r._crypto_kx_publickeybytes = function() {
            return (r._crypto_kx_publickeybytes = r.asm.Nc).apply(null, arguments);
          }, r._crypto_kx_secretkeybytes = function() {
            return (r._crypto_kx_secretkeybytes = r.asm.Oc).apply(null, arguments);
          }, r._crypto_kx_seedbytes = function() {
            return (r._crypto_kx_seedbytes = r.asm.Pc).apply(null, arguments);
          }, r._crypto_kx_sessionkeybytes = function() {
            return (r._crypto_kx_sessionkeybytes = r.asm.Qc).apply(null, arguments);
          }, r._crypto_kx_primitive = function() {
            return (r._crypto_kx_primitive = r.asm.Rc).apply(null, arguments);
          }, r._crypto_onetimeauth_statebytes = function() {
            return (r._crypto_onetimeauth_statebytes = r.asm.Sc).apply(null, arguments);
          }, r._crypto_onetimeauth_bytes = function() {
            return (r._crypto_onetimeauth_bytes = r.asm.Tc).apply(null, arguments);
          }, r._crypto_onetimeauth_keybytes = function() {
            return (r._crypto_onetimeauth_keybytes = r.asm.Uc).apply(null, arguments);
          }, r._crypto_onetimeauth = function() {
            return (r._crypto_onetimeauth = r.asm.Vc).apply(null, arguments);
          }, r._crypto_onetimeauth_verify = function() {
            return (r._crypto_onetimeauth_verify = r.asm.Wc).apply(null, arguments);
          }, r._crypto_onetimeauth_init = function() {
            return (r._crypto_onetimeauth_init = r.asm.Xc).apply(null, arguments);
          }, r._crypto_onetimeauth_update = function() {
            return (r._crypto_onetimeauth_update = r.asm.Yc).apply(null, arguments);
          }, r._crypto_onetimeauth_final = function() {
            return (r._crypto_onetimeauth_final = r.asm.Zc).apply(null, arguments);
          }, r._crypto_onetimeauth_primitive = function() {
            return (r._crypto_onetimeauth_primitive = r.asm._c).apply(null, arguments);
          }, r._crypto_onetimeauth_keygen = function() {
            return (r._crypto_onetimeauth_keygen = r.asm.$c).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305 = function() {
            return (r._crypto_onetimeauth_poly1305 = r.asm.ad).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_verify = function() {
            return (r._crypto_onetimeauth_poly1305_verify = r.asm.bd).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_init = function() {
            return (r._crypto_onetimeauth_poly1305_init = r.asm.cd).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_update = function() {
            return (r._crypto_onetimeauth_poly1305_update = r.asm.dd).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_final = function() {
            return (r._crypto_onetimeauth_poly1305_final = r.asm.ed).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_bytes = function() {
            return (r._crypto_onetimeauth_poly1305_bytes = r.asm.fd).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_keybytes = function() {
            return (r._crypto_onetimeauth_poly1305_keybytes = r.asm.gd).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_statebytes = function() {
            return (r._crypto_onetimeauth_poly1305_statebytes = r.asm.hd).apply(null, arguments);
          }, r._crypto_onetimeauth_poly1305_keygen = function() {
            return (r._crypto_onetimeauth_poly1305_keygen = r.asm.id).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_alg_argon2i13 = function() {
            return (r._crypto_pwhash_argon2i_alg_argon2i13 = r.asm.jd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_bytes_min = function() {
            return (r._crypto_pwhash_argon2i_bytes_min = r.asm.kd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_bytes_max = function() {
            return (r._crypto_pwhash_argon2i_bytes_max = r.asm.ld).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_passwd_min = function() {
            return (r._crypto_pwhash_argon2i_passwd_min = r.asm.md).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_passwd_max = function() {
            return (r._crypto_pwhash_argon2i_passwd_max = r.asm.nd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_saltbytes = function() {
            return (r._crypto_pwhash_argon2i_saltbytes = r.asm.od).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_strbytes = function() {
            return (r._crypto_pwhash_argon2i_strbytes = r.asm.pd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_strprefix = function() {
            return (r._crypto_pwhash_argon2i_strprefix = r.asm.qd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_opslimit_min = function() {
            return (r._crypto_pwhash_argon2i_opslimit_min = r.asm.rd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_opslimit_max = function() {
            return (r._crypto_pwhash_argon2i_opslimit_max = r.asm.sd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_memlimit_min = function() {
            return (r._crypto_pwhash_argon2i_memlimit_min = r.asm.td).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_memlimit_max = function() {
            return (r._crypto_pwhash_argon2i_memlimit_max = r.asm.ud).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_opslimit_interactive = function() {
            return (r._crypto_pwhash_argon2i_opslimit_interactive = r.asm.vd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_memlimit_interactive = function() {
            return (r._crypto_pwhash_argon2i_memlimit_interactive = r.asm.wd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_opslimit_moderate = function() {
            return (r._crypto_pwhash_argon2i_opslimit_moderate = r.asm.xd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_memlimit_moderate = function() {
            return (r._crypto_pwhash_argon2i_memlimit_moderate = r.asm.yd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_opslimit_sensitive = function() {
            return (r._crypto_pwhash_argon2i_opslimit_sensitive = r.asm.zd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_memlimit_sensitive = function() {
            return (r._crypto_pwhash_argon2i_memlimit_sensitive = r.asm.Ad).apply(null, arguments);
          }, r._crypto_pwhash_argon2i = function() {
            return (r._crypto_pwhash_argon2i = r.asm.Bd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_str = function() {
            return (r._crypto_pwhash_argon2i_str = r.asm.Cd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_str_verify = function() {
            return (r._crypto_pwhash_argon2i_str_verify = r.asm.Dd).apply(null, arguments);
          }, r._crypto_pwhash_argon2i_str_needs_rehash = function() {
            return (r._crypto_pwhash_argon2i_str_needs_rehash = r.asm.Ed).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_str_needs_rehash = function() {
            return (r._crypto_pwhash_argon2id_str_needs_rehash = r.asm.Fd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_alg_argon2id13 = function() {
            return (r._crypto_pwhash_argon2id_alg_argon2id13 = r.asm.Gd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_bytes_min = function() {
            return (r._crypto_pwhash_argon2id_bytes_min = r.asm.Hd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_bytes_max = function() {
            return (r._crypto_pwhash_argon2id_bytes_max = r.asm.Id).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_passwd_min = function() {
            return (r._crypto_pwhash_argon2id_passwd_min = r.asm.Jd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_passwd_max = function() {
            return (r._crypto_pwhash_argon2id_passwd_max = r.asm.Kd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_saltbytes = function() {
            return (r._crypto_pwhash_argon2id_saltbytes = r.asm.Ld).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_strbytes = function() {
            return (r._crypto_pwhash_argon2id_strbytes = r.asm.Md).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_strprefix = function() {
            return (r._crypto_pwhash_argon2id_strprefix = r.asm.Nd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_opslimit_min = function() {
            return (r._crypto_pwhash_argon2id_opslimit_min = r.asm.Od).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_opslimit_max = function() {
            return (r._crypto_pwhash_argon2id_opslimit_max = r.asm.Pd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_memlimit_min = function() {
            return (r._crypto_pwhash_argon2id_memlimit_min = r.asm.Qd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_memlimit_max = function() {
            return (r._crypto_pwhash_argon2id_memlimit_max = r.asm.Rd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_opslimit_interactive = function() {
            return (r._crypto_pwhash_argon2id_opslimit_interactive = r.asm.Sd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_memlimit_interactive = function() {
            return (r._crypto_pwhash_argon2id_memlimit_interactive = r.asm.Td).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_opslimit_moderate = function() {
            return (r._crypto_pwhash_argon2id_opslimit_moderate = r.asm.Ud).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_memlimit_moderate = function() {
            return (r._crypto_pwhash_argon2id_memlimit_moderate = r.asm.Vd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_opslimit_sensitive = function() {
            return (r._crypto_pwhash_argon2id_opslimit_sensitive = r.asm.Wd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_memlimit_sensitive = function() {
            return (r._crypto_pwhash_argon2id_memlimit_sensitive = r.asm.Xd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id = function() {
            return (r._crypto_pwhash_argon2id = r.asm.Yd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_str = function() {
            return (r._crypto_pwhash_argon2id_str = r.asm.Zd).apply(null, arguments);
          }, r._crypto_pwhash_argon2id_str_verify = function() {
            return (r._crypto_pwhash_argon2id_str_verify = r.asm._d).apply(null, arguments);
          }, r._crypto_pwhash_alg_argon2i13 = function() {
            return (r._crypto_pwhash_alg_argon2i13 = r.asm.$d).apply(null, arguments);
          }, r._crypto_pwhash_alg_argon2id13 = function() {
            return (r._crypto_pwhash_alg_argon2id13 = r.asm.ae).apply(null, arguments);
          }, r._crypto_pwhash_alg_default = function() {
            return (r._crypto_pwhash_alg_default = r.asm.be).apply(null, arguments);
          }, r._crypto_pwhash_bytes_min = function() {
            return (r._crypto_pwhash_bytes_min = r.asm.ce).apply(null, arguments);
          }, r._crypto_pwhash_bytes_max = function() {
            return (r._crypto_pwhash_bytes_max = r.asm.de).apply(null, arguments);
          }, r._crypto_pwhash_passwd_min = function() {
            return (r._crypto_pwhash_passwd_min = r.asm.ee).apply(null, arguments);
          }, r._crypto_pwhash_passwd_max = function() {
            return (r._crypto_pwhash_passwd_max = r.asm.fe).apply(null, arguments);
          }, r._crypto_pwhash_saltbytes = function() {
            return (r._crypto_pwhash_saltbytes = r.asm.ge).apply(null, arguments);
          }, r._crypto_pwhash_strbytes = function() {
            return (r._crypto_pwhash_strbytes = r.asm.he).apply(null, arguments);
          }, r._crypto_pwhash_strprefix = function() {
            return (r._crypto_pwhash_strprefix = r.asm.ie).apply(null, arguments);
          }, r._crypto_pwhash_opslimit_min = function() {
            return (r._crypto_pwhash_opslimit_min = r.asm.je).apply(null, arguments);
          }, r._crypto_pwhash_opslimit_max = function() {
            return (r._crypto_pwhash_opslimit_max = r.asm.ke).apply(null, arguments);
          }, r._crypto_pwhash_memlimit_min = function() {
            return (r._crypto_pwhash_memlimit_min = r.asm.le).apply(null, arguments);
          }, r._crypto_pwhash_memlimit_max = function() {
            return (r._crypto_pwhash_memlimit_max = r.asm.me).apply(null, arguments);
          }, r._crypto_pwhash_opslimit_interactive = function() {
            return (r._crypto_pwhash_opslimit_interactive = r.asm.ne).apply(null, arguments);
          }, r._crypto_pwhash_memlimit_interactive = function() {
            return (r._crypto_pwhash_memlimit_interactive = r.asm.oe).apply(null, arguments);
          }, r._crypto_pwhash_opslimit_moderate = function() {
            return (r._crypto_pwhash_opslimit_moderate = r.asm.pe).apply(null, arguments);
          }, r._crypto_pwhash_memlimit_moderate = function() {
            return (r._crypto_pwhash_memlimit_moderate = r.asm.qe).apply(null, arguments);
          }, r._crypto_pwhash_opslimit_sensitive = function() {
            return (r._crypto_pwhash_opslimit_sensitive = r.asm.re).apply(null, arguments);
          }, r._crypto_pwhash_memlimit_sensitive = function() {
            return (r._crypto_pwhash_memlimit_sensitive = r.asm.se).apply(null, arguments);
          }, r._crypto_pwhash = function() {
            return (r._crypto_pwhash = r.asm.te).apply(null, arguments);
          }, r._crypto_pwhash_str = function() {
            return (r._crypto_pwhash_str = r.asm.ue).apply(null, arguments);
          }, r._crypto_pwhash_str_alg = function() {
            return (r._crypto_pwhash_str_alg = r.asm.ve).apply(null, arguments);
          }, r._crypto_pwhash_str_verify = function() {
            return (r._crypto_pwhash_str_verify = r.asm.we).apply(null, arguments);
          }, r._crypto_pwhash_str_needs_rehash = function() {
            return (r._crypto_pwhash_str_needs_rehash = r.asm.xe).apply(null, arguments);
          }, r._crypto_pwhash_primitive = function() {
            return (r._crypto_pwhash_primitive = r.asm.ye).apply(null, arguments);
          }, r._crypto_scalarmult_primitive = function() {
            return (r._crypto_scalarmult_primitive = r.asm.ze).apply(null, arguments);
          }, r._crypto_scalarmult_base = function() {
            return (r._crypto_scalarmult_base = r.asm.Ae).apply(null, arguments);
          }, r._crypto_scalarmult = function() {
            return (r._crypto_scalarmult = r.asm.Be).apply(null, arguments);
          }, r._crypto_scalarmult_bytes = function() {
            return (r._crypto_scalarmult_bytes = r.asm.Ce).apply(null, arguments);
          }, r._crypto_scalarmult_scalarbytes = function() {
            return (r._crypto_scalarmult_scalarbytes = r.asm.De).apply(null, arguments);
          }, r._crypto_scalarmult_curve25519 = function() {
            return (r._crypto_scalarmult_curve25519 = r.asm.Ee).apply(null, arguments);
          }, r._crypto_scalarmult_curve25519_base = function() {
            return (r._crypto_scalarmult_curve25519_base = r.asm.Fe).apply(null, arguments);
          }, r._crypto_scalarmult_curve25519_bytes = function() {
            return (r._crypto_scalarmult_curve25519_bytes = r.asm.Ge).apply(null, arguments);
          }, r._crypto_scalarmult_curve25519_scalarbytes = function() {
            return (r._crypto_scalarmult_curve25519_scalarbytes = r.asm.He).apply(null, arguments);
          }, r._crypto_secretbox_keybytes = function() {
            return (r._crypto_secretbox_keybytes = r.asm.Ie).apply(null, arguments);
          }, r._crypto_secretbox_noncebytes = function() {
            return (r._crypto_secretbox_noncebytes = r.asm.Je).apply(null, arguments);
          }, r._crypto_secretbox_zerobytes = function() {
            return (r._crypto_secretbox_zerobytes = r.asm.Ke).apply(null, arguments);
          }, r._crypto_secretbox_boxzerobytes = function() {
            return (r._crypto_secretbox_boxzerobytes = r.asm.Le).apply(null, arguments);
          }, r._crypto_secretbox_macbytes = function() {
            return (r._crypto_secretbox_macbytes = r.asm.Me).apply(null, arguments);
          }, r._crypto_secretbox_messagebytes_max = function() {
            return (r._crypto_secretbox_messagebytes_max = r.asm.Ne).apply(null, arguments);
          }, r._crypto_secretbox_primitive = function() {
            return (r._crypto_secretbox_primitive = r.asm.Oe).apply(null, arguments);
          }, r._crypto_secretbox = function() {
            return (r._crypto_secretbox = r.asm.Pe).apply(null, arguments);
          }, r._crypto_secretbox_open = function() {
            return (r._crypto_secretbox_open = r.asm.Qe).apply(null, arguments);
          }, r._crypto_secretbox_keygen = function() {
            return (r._crypto_secretbox_keygen = r.asm.Re).apply(null, arguments);
          }, r._crypto_secretbox_detached = function() {
            return (r._crypto_secretbox_detached = r.asm.Se).apply(null, arguments);
          }, r._crypto_secretbox_easy = function() {
            return (r._crypto_secretbox_easy = r.asm.Te).apply(null, arguments);
          }, r._crypto_secretbox_open_detached = function() {
            return (r._crypto_secretbox_open_detached = r.asm.Ue).apply(null, arguments);
          }, r._crypto_secretbox_open_easy = function() {
            return (r._crypto_secretbox_open_easy = r.asm.Ve).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305 = function() {
            return (r._crypto_secretbox_xsalsa20poly1305 = r.asm.We).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_open = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_open = r.asm.Xe).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_keybytes = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_keybytes = r.asm.Ye).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_noncebytes = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_noncebytes = r.asm.Ze).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_zerobytes = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_zerobytes = r.asm._e).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_boxzerobytes = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_boxzerobytes = r.asm.$e).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_macbytes = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_macbytes = r.asm.af).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_messagebytes_max = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_messagebytes_max = r.asm.bf).apply(null, arguments);
          }, r._crypto_secretbox_xsalsa20poly1305_keygen = function() {
            return (r._crypto_secretbox_xsalsa20poly1305_keygen = r.asm.cf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_keygen = function() {
            return (r._crypto_secretstream_xchacha20poly1305_keygen = r.asm.df).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_init_push = function() {
            return (r._crypto_secretstream_xchacha20poly1305_init_push = r.asm.ef).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_init_pull = function() {
            return (r._crypto_secretstream_xchacha20poly1305_init_pull = r.asm.ff).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_rekey = function() {
            return (r._crypto_secretstream_xchacha20poly1305_rekey = r.asm.gf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_push = function() {
            return (r._crypto_secretstream_xchacha20poly1305_push = r.asm.hf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_pull = function() {
            return (r._crypto_secretstream_xchacha20poly1305_pull = r.asm.jf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_statebytes = function() {
            return (r._crypto_secretstream_xchacha20poly1305_statebytes = r.asm.kf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_abytes = function() {
            return (r._crypto_secretstream_xchacha20poly1305_abytes = r.asm.lf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_headerbytes = function() {
            return (r._crypto_secretstream_xchacha20poly1305_headerbytes = r.asm.mf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_keybytes = function() {
            return (r._crypto_secretstream_xchacha20poly1305_keybytes = r.asm.nf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_messagebytes_max = function() {
            return (r._crypto_secretstream_xchacha20poly1305_messagebytes_max = r.asm.of).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_tag_message = function() {
            return (r._crypto_secretstream_xchacha20poly1305_tag_message = r.asm.pf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_tag_push = function() {
            return (r._crypto_secretstream_xchacha20poly1305_tag_push = r.asm.qf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_tag_rekey = function() {
            return (r._crypto_secretstream_xchacha20poly1305_tag_rekey = r.asm.rf).apply(null, arguments);
          }, r._crypto_secretstream_xchacha20poly1305_tag_final = function() {
            return (r._crypto_secretstream_xchacha20poly1305_tag_final = r.asm.sf).apply(null, arguments);
          }, r._crypto_shorthash_bytes = function() {
            return (r._crypto_shorthash_bytes = r.asm.tf).apply(null, arguments);
          }, r._crypto_shorthash_keybytes = function() {
            return (r._crypto_shorthash_keybytes = r.asm.uf).apply(null, arguments);
          }, r._crypto_shorthash_primitive = function() {
            return (r._crypto_shorthash_primitive = r.asm.vf).apply(null, arguments);
          }, r._crypto_shorthash = function() {
            return (r._crypto_shorthash = r.asm.wf).apply(null, arguments);
          }, r._crypto_shorthash_keygen = function() {
            return (r._crypto_shorthash_keygen = r.asm.xf).apply(null, arguments);
          }, r._crypto_shorthash_siphash24_bytes = function() {
            return (r._crypto_shorthash_siphash24_bytes = r.asm.yf).apply(null, arguments);
          }, r._crypto_shorthash_siphash24_keybytes = function() {
            return (r._crypto_shorthash_siphash24_keybytes = r.asm.zf).apply(null, arguments);
          }, r._crypto_shorthash_siphash24 = function() {
            return (r._crypto_shorthash_siphash24 = r.asm.Af).apply(null, arguments);
          }, r._crypto_sign_statebytes = function() {
            return (r._crypto_sign_statebytes = r.asm.Bf).apply(null, arguments);
          }, r._crypto_sign_bytes = function() {
            return (r._crypto_sign_bytes = r.asm.Cf).apply(null, arguments);
          }, r._crypto_sign_seedbytes = function() {
            return (r._crypto_sign_seedbytes = r.asm.Df).apply(null, arguments);
          }, r._crypto_sign_publickeybytes = function() {
            return (r._crypto_sign_publickeybytes = r.asm.Ef).apply(null, arguments);
          }, r._crypto_sign_secretkeybytes = function() {
            return (r._crypto_sign_secretkeybytes = r.asm.Ff).apply(null, arguments);
          }, r._crypto_sign_messagebytes_max = function() {
            return (r._crypto_sign_messagebytes_max = r.asm.Gf).apply(null, arguments);
          }, r._crypto_sign_primitive = function() {
            return (r._crypto_sign_primitive = r.asm.Hf).apply(null, arguments);
          }, r._crypto_sign_seed_keypair = function() {
            return (r._crypto_sign_seed_keypair = r.asm.If).apply(null, arguments);
          }, r._crypto_sign_keypair = function() {
            return (r._crypto_sign_keypair = r.asm.Jf).apply(null, arguments);
          }, r._crypto_sign = function() {
            return (r._crypto_sign = r.asm.Kf).apply(null, arguments);
          }, r._crypto_sign_open = function() {
            return (r._crypto_sign_open = r.asm.Lf).apply(null, arguments);
          }, r._crypto_sign_detached = function() {
            return (r._crypto_sign_detached = r.asm.Mf).apply(null, arguments);
          }, r._crypto_sign_verify_detached = function() {
            return (r._crypto_sign_verify_detached = r.asm.Nf).apply(null, arguments);
          }, r._crypto_sign_init = function() {
            return (r._crypto_sign_init = r.asm.Of).apply(null, arguments);
          }, r._crypto_sign_update = function() {
            return (r._crypto_sign_update = r.asm.Pf).apply(null, arguments);
          }, r._crypto_sign_final_create = function() {
            return (r._crypto_sign_final_create = r.asm.Qf).apply(null, arguments);
          }, r._crypto_sign_final_verify = function() {
            return (r._crypto_sign_final_verify = r.asm.Rf).apply(null, arguments);
          }, r._crypto_sign_ed25519ph_statebytes = function() {
            return (r._crypto_sign_ed25519ph_statebytes = r.asm.Sf).apply(null, arguments);
          }, r._crypto_sign_ed25519_bytes = function() {
            return (r._crypto_sign_ed25519_bytes = r.asm.Tf).apply(null, arguments);
          }, r._crypto_sign_ed25519_seedbytes = function() {
            return (r._crypto_sign_ed25519_seedbytes = r.asm.Uf).apply(null, arguments);
          }, r._crypto_sign_ed25519_publickeybytes = function() {
            return (r._crypto_sign_ed25519_publickeybytes = r.asm.Vf).apply(null, arguments);
          }, r._crypto_sign_ed25519_secretkeybytes = function() {
            return (r._crypto_sign_ed25519_secretkeybytes = r.asm.Wf).apply(null, arguments);
          }, r._crypto_sign_ed25519_messagebytes_max = function() {
            return (r._crypto_sign_ed25519_messagebytes_max = r.asm.Xf).apply(null, arguments);
          }, r._crypto_sign_ed25519_sk_to_seed = function() {
            return (r._crypto_sign_ed25519_sk_to_seed = r.asm.Yf).apply(null, arguments);
          }, r._crypto_sign_ed25519_sk_to_pk = function() {
            return (r._crypto_sign_ed25519_sk_to_pk = r.asm.Zf).apply(null, arguments);
          }, r._crypto_sign_ed25519ph_init = function() {
            return (r._crypto_sign_ed25519ph_init = r.asm._f).apply(null, arguments);
          }, r._crypto_sign_ed25519ph_update = function() {
            return (r._crypto_sign_ed25519ph_update = r.asm.$f).apply(null, arguments);
          }, r._crypto_sign_ed25519ph_final_create = function() {
            return (r._crypto_sign_ed25519ph_final_create = r.asm.ag).apply(null, arguments);
          }, r._crypto_sign_ed25519ph_final_verify = function() {
            return (r._crypto_sign_ed25519ph_final_verify = r.asm.bg).apply(null, arguments);
          }, r._crypto_sign_ed25519_seed_keypair = function() {
            return (r._crypto_sign_ed25519_seed_keypair = r.asm.cg).apply(null, arguments);
          }, r._crypto_sign_ed25519_keypair = function() {
            return (r._crypto_sign_ed25519_keypair = r.asm.dg).apply(null, arguments);
          }, r._crypto_sign_ed25519_pk_to_curve25519 = function() {
            return (r._crypto_sign_ed25519_pk_to_curve25519 = r.asm.eg).apply(null, arguments);
          }, r._crypto_sign_ed25519_sk_to_curve25519 = function() {
            return (r._crypto_sign_ed25519_sk_to_curve25519 = r.asm.fg).apply(null, arguments);
          }, r._crypto_sign_ed25519_verify_detached = function() {
            return (r._crypto_sign_ed25519_verify_detached = r.asm.gg).apply(null, arguments);
          }, r._crypto_sign_ed25519_open = function() {
            return (r._crypto_sign_ed25519_open = r.asm.hg).apply(null, arguments);
          }, r._crypto_sign_ed25519_detached = function() {
            return (r._crypto_sign_ed25519_detached = r.asm.ig).apply(null, arguments);
          }, r._crypto_sign_ed25519 = function() {
            return (r._crypto_sign_ed25519 = r.asm.jg).apply(null, arguments);
          }, r._crypto_stream_chacha20_keybytes = function() {
            return (r._crypto_stream_chacha20_keybytes = r.asm.kg).apply(null, arguments);
          }, r._crypto_stream_chacha20_noncebytes = function() {
            return (r._crypto_stream_chacha20_noncebytes = r.asm.lg).apply(null, arguments);
          }, r._crypto_stream_chacha20_messagebytes_max = function() {
            return (r._crypto_stream_chacha20_messagebytes_max = r.asm.mg).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf_keybytes = function() {
            return (r._crypto_stream_chacha20_ietf_keybytes = r.asm.ng).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf_noncebytes = function() {
            return (r._crypto_stream_chacha20_ietf_noncebytes = r.asm.og).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf_messagebytes_max = function() {
            return (r._crypto_stream_chacha20_ietf_messagebytes_max = r.asm.pg).apply(null, arguments);
          }, r._crypto_stream_chacha20 = function() {
            return (r._crypto_stream_chacha20 = r.asm.qg).apply(null, arguments);
          }, r._crypto_stream_chacha20_xor_ic = function() {
            return (r._crypto_stream_chacha20_xor_ic = r.asm.rg).apply(null, arguments);
          }, r._crypto_stream_chacha20_xor = function() {
            return (r._crypto_stream_chacha20_xor = r.asm.sg).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf = function() {
            return (r._crypto_stream_chacha20_ietf = r.asm.tg).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf_xor_ic = function() {
            return (r._crypto_stream_chacha20_ietf_xor_ic = r.asm.ug).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf_xor = function() {
            return (r._crypto_stream_chacha20_ietf_xor = r.asm.vg).apply(null, arguments);
          }, r._crypto_stream_chacha20_ietf_keygen = function() {
            return (r._crypto_stream_chacha20_ietf_keygen = r.asm.wg).apply(null, arguments);
          }, r._crypto_stream_chacha20_keygen = function() {
            return (r._crypto_stream_chacha20_keygen = r.asm.xg).apply(null, arguments);
          }, r._crypto_stream_keybytes = function() {
            return (r._crypto_stream_keybytes = r.asm.yg).apply(null, arguments);
          }, r._crypto_stream_noncebytes = function() {
            return (r._crypto_stream_noncebytes = r.asm.zg).apply(null, arguments);
          }, r._crypto_stream_messagebytes_max = function() {
            return (r._crypto_stream_messagebytes_max = r.asm.Ag).apply(null, arguments);
          }, r._crypto_stream_primitive = function() {
            return (r._crypto_stream_primitive = r.asm.Bg).apply(null, arguments);
          }, r._crypto_stream = function() {
            return (r._crypto_stream = r.asm.Cg).apply(null, arguments);
          }, r._crypto_stream_xor = function() {
            return (r._crypto_stream_xor = r.asm.Dg).apply(null, arguments);
          }, r._crypto_stream_keygen = function() {
            return (r._crypto_stream_keygen = r.asm.Eg).apply(null, arguments);
          }, r._crypto_stream_salsa20_keybytes = function() {
            return (r._crypto_stream_salsa20_keybytes = r.asm.Fg).apply(null, arguments);
          }, r._crypto_stream_salsa20_noncebytes = function() {
            return (r._crypto_stream_salsa20_noncebytes = r.asm.Gg).apply(null, arguments);
          }, r._crypto_stream_salsa20_messagebytes_max = function() {
            return (r._crypto_stream_salsa20_messagebytes_max = r.asm.Hg).apply(null, arguments);
          }, r._crypto_stream_salsa20 = function() {
            return (r._crypto_stream_salsa20 = r.asm.Ig).apply(null, arguments);
          }, r._crypto_stream_salsa20_xor_ic = function() {
            return (r._crypto_stream_salsa20_xor_ic = r.asm.Jg).apply(null, arguments);
          }, r._crypto_stream_salsa20_xor = function() {
            return (r._crypto_stream_salsa20_xor = r.asm.Kg).apply(null, arguments);
          }, r._crypto_stream_salsa20_keygen = function() {
            return (r._crypto_stream_salsa20_keygen = r.asm.Lg).apply(null, arguments);
          }, r._crypto_stream_xsalsa20 = function() {
            return (r._crypto_stream_xsalsa20 = r.asm.Mg).apply(null, arguments);
          }, r._crypto_stream_xsalsa20_xor_ic = function() {
            return (r._crypto_stream_xsalsa20_xor_ic = r.asm.Ng).apply(null, arguments);
          }, r._crypto_stream_xsalsa20_xor = function() {
            return (r._crypto_stream_xsalsa20_xor = r.asm.Og).apply(null, arguments);
          }, r._crypto_stream_xsalsa20_keybytes = function() {
            return (r._crypto_stream_xsalsa20_keybytes = r.asm.Pg).apply(null, arguments);
          }, r._crypto_stream_xsalsa20_noncebytes = function() {
            return (r._crypto_stream_xsalsa20_noncebytes = r.asm.Qg).apply(null, arguments);
          }, r._crypto_stream_xsalsa20_messagebytes_max = function() {
            return (r._crypto_stream_xsalsa20_messagebytes_max = r.asm.Rg).apply(null, arguments);
          }, r._crypto_stream_xsalsa20_keygen = function() {
            return (r._crypto_stream_xsalsa20_keygen = r.asm.Sg).apply(null, arguments);
          }, r._crypto_verify_16_bytes = function() {
            return (r._crypto_verify_16_bytes = r.asm.Tg).apply(null, arguments);
          }, r._crypto_verify_32_bytes = function() {
            return (r._crypto_verify_32_bytes = r.asm.Ug).apply(null, arguments);
          }, r._crypto_verify_64_bytes = function() {
            return (r._crypto_verify_64_bytes = r.asm.Vg).apply(null, arguments);
          }, r._crypto_verify_16 = function() {
            return (r._crypto_verify_16 = r.asm.Wg).apply(null, arguments);
          }, r._crypto_verify_32 = function() {
            return (r._crypto_verify_32 = r.asm.Xg).apply(null, arguments);
          }, r._crypto_verify_64 = function() {
            return (r._crypto_verify_64 = r.asm.Yg).apply(null, arguments);
          }, r._randombytes_implementation_name = function() {
            return (r._randombytes_implementation_name = r.asm.Zg).apply(null, arguments);
          }, r._randombytes_random = function() {
            return (r._randombytes_random = r.asm._g).apply(null, arguments);
          }, r._randombytes_stir = function() {
            return (r._randombytes_stir = r.asm.$g).apply(null, arguments);
          }, r._randombytes_uniform = function() {
            return (r._randombytes_uniform = r.asm.ah).apply(null, arguments);
          }, r._randombytes_buf = function() {
            return (r._randombytes_buf = r.asm.bh).apply(null, arguments);
          }, r._randombytes_buf_deterministic = function() {
            return (r._randombytes_buf_deterministic = r.asm.ch).apply(null, arguments);
          }, r._randombytes_seedbytes = function() {
            return (r._randombytes_seedbytes = r.asm.dh).apply(null, arguments);
          }, r._randombytes_close = function() {
            return (r._randombytes_close = r.asm.eh).apply(null, arguments);
          }, r._randombytes = function() {
            return (r._randombytes = r.asm.fh).apply(null, arguments);
          }, r._sodium_bin2hex = function() {
            return (r._sodium_bin2hex = r.asm.gh).apply(null, arguments);
          }, r._sodium_hex2bin = function() {
            return (r._sodium_hex2bin = r.asm.hh).apply(null, arguments);
          }, r._sodium_base64_encoded_len = function() {
            return (r._sodium_base64_encoded_len = r.asm.ih).apply(null, arguments);
          }, r._sodium_bin2base64 = function() {
            return (r._sodium_bin2base64 = r.asm.jh).apply(null, arguments);
          }, r._sodium_base642bin = function() {
            return (r._sodium_base642bin = r.asm.kh).apply(null, arguments);
          }, r._sodium_init = function() {
            return (r._sodium_init = r.asm.lh).apply(null, arguments);
          }, r._sodium_pad = function() {
            return (r._sodium_pad = r.asm.mh).apply(null, arguments);
          }, r._sodium_unpad = function() {
            return (r._sodium_unpad = r.asm.nh).apply(null, arguments);
          }, r._sodium_version_string = function() {
            return (r._sodium_version_string = r.asm.oh).apply(null, arguments);
          }, r._sodium_library_version_major = function() {
            return (r._sodium_library_version_major = r.asm.ph).apply(null, arguments);
          }, r._sodium_library_version_minor = function() {
            return (r._sodium_library_version_minor = r.asm.qh).apply(null, arguments);
          }, r._sodium_library_minimal = function() {
            return (r._sodium_library_minimal = r.asm.rh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_seed_keypair = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_seed_keypair = r.asm.sh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_keypair = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_keypair = r.asm.th).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_beforenm = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_beforenm = r.asm.uh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_detached_afternm = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_detached_afternm = r.asm.vh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_detached = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_detached = r.asm.wh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_easy_afternm = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_easy_afternm = r.asm.xh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_easy = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_easy = r.asm.yh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = r.asm.zh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_open_detached = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_open_detached = r.asm.Ah).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = r.asm.Bh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_open_easy = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_open_easy = r.asm.Ch).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_seedbytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_seedbytes = r.asm.Dh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_publickeybytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_publickeybytes = r.asm.Eh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_secretkeybytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_secretkeybytes = r.asm.Fh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_beforenmbytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_beforenmbytes = r.asm.Gh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_noncebytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_noncebytes = r.asm.Hh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_macbytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_macbytes = r.asm.Ih).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_messagebytes_max = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_messagebytes_max = r.asm.Jh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_seal = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_seal = r.asm.Kh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_seal_open = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_seal_open = r.asm.Lh).apply(null, arguments);
          }, r._crypto_box_curve25519xchacha20poly1305_sealbytes = function() {
            return (r._crypto_box_curve25519xchacha20poly1305_sealbytes = r.asm.Mh).apply(null, arguments);
          }, r._crypto_core_ed25519_is_valid_point = function() {
            return (r._crypto_core_ed25519_is_valid_point = r.asm.Nh).apply(null, arguments);
          }, r._crypto_core_ed25519_add = function() {
            return (r._crypto_core_ed25519_add = r.asm.Oh).apply(null, arguments);
          }, r._crypto_core_ed25519_sub = function() {
            return (r._crypto_core_ed25519_sub = r.asm.Ph).apply(null, arguments);
          }, r._crypto_core_ed25519_from_uniform = function() {
            return (r._crypto_core_ed25519_from_uniform = r.asm.Qh).apply(null, arguments);
          }, r._crypto_core_ed25519_from_hash = function() {
            return (r._crypto_core_ed25519_from_hash = r.asm.Rh).apply(null, arguments);
          }, r._crypto_core_ed25519_random = function() {
            return (r._crypto_core_ed25519_random = r.asm.Sh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_random = function() {
            return (r._crypto_core_ed25519_scalar_random = r.asm.Th).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_invert = function() {
            return (r._crypto_core_ed25519_scalar_invert = r.asm.Uh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_negate = function() {
            return (r._crypto_core_ed25519_scalar_negate = r.asm.Vh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_complement = function() {
            return (r._crypto_core_ed25519_scalar_complement = r.asm.Wh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_add = function() {
            return (r._crypto_core_ed25519_scalar_add = r.asm.Xh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_reduce = function() {
            return (r._crypto_core_ed25519_scalar_reduce = r.asm.Yh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_sub = function() {
            return (r._crypto_core_ed25519_scalar_sub = r.asm.Zh).apply(null, arguments);
          }, r._crypto_core_ed25519_scalar_mul = function() {
            return (r._crypto_core_ed25519_scalar_mul = r.asm._h).apply(null, arguments);
          }, r._crypto_core_ed25519_bytes = function() {
            return (r._crypto_core_ed25519_bytes = r.asm.$h).apply(null, arguments);
          }, r._crypto_core_ed25519_nonreducedscalarbytes = function() {
            return (r._crypto_core_ed25519_nonreducedscalarbytes = r.asm.ai).apply(null, arguments);
          }, r._crypto_core_ed25519_uniformbytes = function() {
            return (r._crypto_core_ed25519_uniformbytes = r.asm.bi).apply(null, arguments);
          }, r._crypto_core_ed25519_hashbytes = function() {
            return (r._crypto_core_ed25519_hashbytes = r.asm.ci).apply(null, arguments);
          }, r._crypto_core_ed25519_scalarbytes = function() {
            return (r._crypto_core_ed25519_scalarbytes = r.asm.di).apply(null, arguments);
          }, r._crypto_core_ristretto255_is_valid_point = function() {
            return (r._crypto_core_ristretto255_is_valid_point = r.asm.ei).apply(null, arguments);
          }, r._crypto_core_ristretto255_add = function() {
            return (r._crypto_core_ristretto255_add = r.asm.fi).apply(null, arguments);
          }, r._crypto_core_ristretto255_sub = function() {
            return (r._crypto_core_ristretto255_sub = r.asm.gi).apply(null, arguments);
          }, r._crypto_core_ristretto255_from_hash = function() {
            return (r._crypto_core_ristretto255_from_hash = r.asm.hi).apply(null, arguments);
          }, r._crypto_core_ristretto255_random = function() {
            return (r._crypto_core_ristretto255_random = r.asm.ii).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_random = function() {
            return (r._crypto_core_ristretto255_scalar_random = r.asm.ji).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_invert = function() {
            return (r._crypto_core_ristretto255_scalar_invert = r.asm.ki).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_negate = function() {
            return (r._crypto_core_ristretto255_scalar_negate = r.asm.li).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_complement = function() {
            return (r._crypto_core_ristretto255_scalar_complement = r.asm.mi).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_add = function() {
            return (r._crypto_core_ristretto255_scalar_add = r.asm.ni).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_sub = function() {
            return (r._crypto_core_ristretto255_scalar_sub = r.asm.oi).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_mul = function() {
            return (r._crypto_core_ristretto255_scalar_mul = r.asm.pi).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalar_reduce = function() {
            return (r._crypto_core_ristretto255_scalar_reduce = r.asm.qi).apply(null, arguments);
          }, r._crypto_core_ristretto255_bytes = function() {
            return (r._crypto_core_ristretto255_bytes = r.asm.ri).apply(null, arguments);
          }, r._crypto_core_ristretto255_nonreducedscalarbytes = function() {
            return (r._crypto_core_ristretto255_nonreducedscalarbytes = r.asm.si).apply(null, arguments);
          }, r._crypto_core_ristretto255_hashbytes = function() {
            return (r._crypto_core_ristretto255_hashbytes = r.asm.ti).apply(null, arguments);
          }, r._crypto_core_ristretto255_scalarbytes = function() {
            return (r._crypto_core_ristretto255_scalarbytes = r.asm.ui).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_ll = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_ll = r.asm.vi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_bytes_min = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_bytes_min = r.asm.wi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_bytes_max = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_bytes_max = r.asm.xi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_passwd_min = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_passwd_min = r.asm.yi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_passwd_max = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_passwd_max = r.asm.zi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_saltbytes = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_saltbytes = r.asm.Ai).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_strbytes = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_strbytes = r.asm.Bi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_strprefix = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_strprefix = r.asm.Ci).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_opslimit_min = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_opslimit_min = r.asm.Di).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_opslimit_max = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_opslimit_max = r.asm.Ei).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_memlimit_min = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_memlimit_min = r.asm.Fi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_memlimit_max = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_memlimit_max = r.asm.Gi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = r.asm.Hi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = r.asm.Ii).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = r.asm.Ji).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = r.asm.Ki).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256 = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256 = r.asm.Li).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_str = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_str = r.asm.Mi).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_str_verify = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_str_verify = r.asm.Ni).apply(null, arguments);
          }, r._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = function() {
            return (r._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = r.asm.Oi).apply(null, arguments);
          }, r._crypto_scalarmult_ed25519 = function() {
            return (r._crypto_scalarmult_ed25519 = r.asm.Pi).apply(null, arguments);
          }, r._crypto_scalarmult_ed25519_noclamp = function() {
            return (r._crypto_scalarmult_ed25519_noclamp = r.asm.Qi).apply(null, arguments);
          }, r._crypto_scalarmult_ed25519_base = function() {
            return (r._crypto_scalarmult_ed25519_base = r.asm.Ri).apply(null, arguments);
          }, r._crypto_scalarmult_ed25519_base_noclamp = function() {
            return (r._crypto_scalarmult_ed25519_base_noclamp = r.asm.Si).apply(null, arguments);
          }, r._crypto_scalarmult_ed25519_bytes = function() {
            return (r._crypto_scalarmult_ed25519_bytes = r.asm.Ti).apply(null, arguments);
          }, r._crypto_scalarmult_ed25519_scalarbytes = function() {
            return (r._crypto_scalarmult_ed25519_scalarbytes = r.asm.Ui).apply(null, arguments);
          }, r._crypto_scalarmult_ristretto255 = function() {
            return (r._crypto_scalarmult_ristretto255 = r.asm.Vi).apply(null, arguments);
          }, r._crypto_scalarmult_ristretto255_base = function() {
            return (r._crypto_scalarmult_ristretto255_base = r.asm.Wi).apply(null, arguments);
          }, r._crypto_scalarmult_ristretto255_bytes = function() {
            return (r._crypto_scalarmult_ristretto255_bytes = r.asm.Xi).apply(null, arguments);
          }, r._crypto_scalarmult_ristretto255_scalarbytes = function() {
            return (r._crypto_scalarmult_ristretto255_scalarbytes = r.asm.Yi).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_detached = function() {
            return (r._crypto_secretbox_xchacha20poly1305_detached = r.asm.Zi).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_easy = function() {
            return (r._crypto_secretbox_xchacha20poly1305_easy = r.asm._i).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_open_detached = function() {
            return (r._crypto_secretbox_xchacha20poly1305_open_detached = r.asm.$i).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_open_easy = function() {
            return (r._crypto_secretbox_xchacha20poly1305_open_easy = r.asm.aj).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_keybytes = function() {
            return (r._crypto_secretbox_xchacha20poly1305_keybytes = r.asm.bj).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_noncebytes = function() {
            return (r._crypto_secretbox_xchacha20poly1305_noncebytes = r.asm.cj).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_macbytes = function() {
            return (r._crypto_secretbox_xchacha20poly1305_macbytes = r.asm.dj).apply(null, arguments);
          }, r._crypto_secretbox_xchacha20poly1305_messagebytes_max = function() {
            return (r._crypto_secretbox_xchacha20poly1305_messagebytes_max = r.asm.ej).apply(null, arguments);
          }, r._crypto_shorthash_siphashx24_bytes = function() {
            return (r._crypto_shorthash_siphashx24_bytes = r.asm.fj).apply(null, arguments);
          }, r._crypto_shorthash_siphashx24_keybytes = function() {
            return (r._crypto_shorthash_siphashx24_keybytes = r.asm.gj).apply(null, arguments);
          }, r._crypto_shorthash_siphashx24 = function() {
            return (r._crypto_shorthash_siphashx24 = r.asm.hj).apply(null, arguments);
          }, r._crypto_stream_salsa2012 = function() {
            return (r._crypto_stream_salsa2012 = r.asm.ij).apply(null, arguments);
          }, r._crypto_stream_salsa2012_xor = function() {
            return (r._crypto_stream_salsa2012_xor = r.asm.jj).apply(null, arguments);
          }, r._crypto_stream_salsa2012_keybytes = function() {
            return (r._crypto_stream_salsa2012_keybytes = r.asm.kj).apply(null, arguments);
          }, r._crypto_stream_salsa2012_noncebytes = function() {
            return (r._crypto_stream_salsa2012_noncebytes = r.asm.lj).apply(null, arguments);
          }, r._crypto_stream_salsa2012_messagebytes_max = function() {
            return (r._crypto_stream_salsa2012_messagebytes_max = r.asm.mj).apply(null, arguments);
          }, r._crypto_stream_salsa2012_keygen = function() {
            return (r._crypto_stream_salsa2012_keygen = r.asm.nj).apply(null, arguments);
          }, r._crypto_stream_salsa208 = function() {
            return (r._crypto_stream_salsa208 = r.asm.oj).apply(null, arguments);
          }, r._crypto_stream_salsa208_xor = function() {
            return (r._crypto_stream_salsa208_xor = r.asm.pj).apply(null, arguments);
          }, r._crypto_stream_salsa208_keybytes = function() {
            return (r._crypto_stream_salsa208_keybytes = r.asm.qj).apply(null, arguments);
          }, r._crypto_stream_salsa208_noncebytes = function() {
            return (r._crypto_stream_salsa208_noncebytes = r.asm.rj).apply(null, arguments);
          }, r._crypto_stream_salsa208_messagebytes_max = function() {
            return (r._crypto_stream_salsa208_messagebytes_max = r.asm.sj).apply(null, arguments);
          }, r._crypto_stream_salsa208_keygen = function() {
            return (r._crypto_stream_salsa208_keygen = r.asm.tj).apply(null, arguments);
          }, r._crypto_stream_xchacha20_keybytes = function() {
            return (r._crypto_stream_xchacha20_keybytes = r.asm.uj).apply(null, arguments);
          }, r._crypto_stream_xchacha20_noncebytes = function() {
            return (r._crypto_stream_xchacha20_noncebytes = r.asm.vj).apply(null, arguments);
          }, r._crypto_stream_xchacha20_messagebytes_max = function() {
            return (r._crypto_stream_xchacha20_messagebytes_max = r.asm.wj).apply(null, arguments);
          }, r._crypto_stream_xchacha20 = function() {
            return (r._crypto_stream_xchacha20 = r.asm.xj).apply(null, arguments);
          }, r._crypto_stream_xchacha20_xor_ic = function() {
            return (r._crypto_stream_xchacha20_xor_ic = r.asm.yj).apply(null, arguments);
          }, r._crypto_stream_xchacha20_xor = function() {
            return (r._crypto_stream_xchacha20_xor = r.asm.zj).apply(null, arguments);
          }, r._crypto_stream_xchacha20_keygen = function() {
            return (r._crypto_stream_xchacha20_keygen = r.asm.Aj).apply(null, arguments);
          }, r.___errno_location = function() {
            return (SA = r.___errno_location = r.asm.Bj).apply(null, arguments);
          });
          function vA(A4) {
            function g4() {
              bA || (bA = true, r.calledRun = true, w || (L(), K(), r.onRuntimeInitialized && r.onRuntimeInitialized(), X()));
            }
            A4 = A4 || B, T > 0 || (q(), T > 0 || (r.setStatus ? (r.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                r.setStatus("");
              }, 1), g4();
            }, 1)) : g4()));
          }
          if (r._malloc = function() {
            return (r._malloc = r.asm.Cj).apply(null, arguments);
          }, r._free = function() {
            return (r._free = r.asm.Dj).apply(null, arguments);
          }, r.setValue = l, r.getValue = h, r.UTF8ToString = U, j = function A4() {
            bA || vA(), bA || (j = A4);
          }, r.run = vA, r.preInit)
            for (typeof r.preInit == "function" && (r.preInit = [r.preInit]); r.preInit.length > 0; )
              r.preInit.pop()();
          vA();
        }).catch(function() {
          return a.useBackupModule();
        }), g2;
      }
      typeof define == "function" && define.amd ? define(["exports"], g) : typeof exports == "object" && typeof exports.nodeName != "string" ? g(exports) : A.libsodium = g(A.libsodium_mod || (A.commonJsStrict = {}));
    }(exports);
  }
});

// node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js
var require_libsodium_wrappers = __commonJS({
  "node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js"(exports) {
    init_shim();
    !function(e) {
      function r(e2, r2) {
        "use strict";
        var t2, a = r2.ready.then(function() {
          function a2() {
            if (t2._sodium_init() !== 0)
              throw new Error("libsodium was not correctly initialized.");
            for (var r3 = ["crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"], a3 = [E, x, k, S, T, w, Y, B, A, K, M, I, N2, L, U, O, C, R, P, G, X, D, F, V, H, q, j, z, W, J, Q, Z, $, ee, re, te, ae, _e, se, ne, ce, oe, he, pe, ye, ie, le, ue, de, ve, ge, be, fe, me, Ee, xe, ke, Se, Te, we, Ye, Be, Ae, Ke, Me, Ie, Ne, Le, Ue, Oe, Ce, Re, Pe, Ge, Xe, De, Fe, Ve, He, qe, je, ze, We, Je, Qe, Ze, $e, er, rr, tr, ar, _r, sr, nr, cr, or, hr, pr, yr, ir, lr, ur, dr, vr, gr, br, fr, mr, Er, xr, kr, Sr, Tr, wr, Yr, Br, Ar, Kr, Mr, Ir, Nr, Lr, Ur, Or, Cr, Rr, Pr, Gr, Xr, Dr, Fr, Vr, Hr, qr, jr, zr, Wr, Jr, Qr, Zr, $r, et, rt, tt, at, _t, st, nt, ct, ot, ht, pt, yt, it], _3 = 0; _3 < a3.length; _3++)
              typeof t2["_" + r3[_3]] == "function" && (e2[r3[_3]] = a3[_3]);
            var s3 = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
            for (_3 = 0; _3 < s3.length; _3++)
              typeof (c3 = t2["_" + s3[_3].toLowerCase()]) == "function" && (e2[s3[_3]] = c3());
            var n3 = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
            for (_3 = 0; _3 < n3.length; _3++) {
              var c3;
              typeof (c3 = t2["_" + n3[_3].toLowerCase()]) == "function" && (e2[n3[_3]] = t2.UTF8ToString(c3()));
            }
          }
          t2 = r2;
          try {
            a2();
            var _2 = new Uint8Array([98, 97, 108, 108, 115]), s2 = e2.randombytes_buf(e2.crypto_secretbox_NONCEBYTES), n2 = e2.randombytes_buf(e2.crypto_secretbox_KEYBYTES), c2 = e2.crypto_secretbox_easy(_2, s2, n2), o2 = e2.crypto_secretbox_open_easy(c2, s2, n2);
            if (e2.memcmp(_2, o2))
              return;
          } catch (e3) {
            if (t2.useBackupModule == null)
              throw new Error("Both wasm and asm failed to load" + e3);
          }
          t2.useBackupModule(), a2();
        });
        function _(e3) {
          if (typeof TextEncoder == "function")
            return new TextEncoder().encode(e3);
          e3 = unescape(encodeURIComponent(e3));
          for (var r3 = new Uint8Array(e3.length), t3 = 0, a2 = e3.length; t3 < a2; t3++)
            r3[t3] = e3.charCodeAt(t3);
          return r3;
        }
        function s(e3) {
          if (typeof TextDecoder == "function")
            return new TextDecoder("utf-8", { fatal: true }).decode(e3);
          var r3 = 8192, t3 = Math.ceil(e3.length / r3);
          if (t3 <= 1)
            try {
              return decodeURIComponent(escape(String.fromCharCode.apply(null, e3)));
            } catch (e4) {
              throw new TypeError("The encoded data was not valid.");
            }
          for (var a2 = "", _2 = 0, n2 = 0; n2 < t3; n2++) {
            var c2 = Array.prototype.slice.call(e3, n2 * r3 + _2, (n2 + 1) * r3 + _2);
            if (c2.length != 0) {
              var o2, h2 = c2.length, p2 = 0;
              do {
                var y2 = c2[--h2];
                y2 >= 240 ? (p2 = 4, o2 = true) : y2 >= 224 ? (p2 = 3, o2 = true) : y2 >= 192 ? (p2 = 2, o2 = true) : y2 < 128 && (p2 = 1, o2 = true);
              } while (!o2);
              for (var i2 = p2 - (c2.length - h2), l2 = 0; l2 < i2; l2++)
                _2--, c2.pop();
              a2 += s(c2);
            }
          }
          return a2;
        }
        function n(e3) {
          e3 = m(null, e3, "input");
          for (var r3, t3, a2, _2 = "", s2 = 0; s2 < e3.length; s2++)
            a2 = 87 + (t3 = 15 & e3[s2]) + (t3 - 10 >> 8 & -39) << 8 | 87 + (r3 = e3[s2] >>> 4) + (r3 - 10 >> 8 & -39), _2 += String.fromCharCode(255 & a2) + String.fromCharCode(a2 >>> 8);
          return _2;
        }
        var c = { ORIGINAL: 1, ORIGINAL_NO_PADDING: 3, URLSAFE: 5, URLSAFE_NO_PADDING: 7 };
        function o(e3) {
          if (e3 == null)
            return c.URLSAFE_NO_PADDING;
          if (e3 !== c.ORIGINAL && e3 !== c.ORIGINAL_NO_PADDING && e3 !== c.URLSAFE && e3 != c.URLSAFE_NO_PADDING)
            throw new Error("unsupported base64 variant");
          return e3;
        }
        function h(e3, r3) {
          r3 = o(r3), e3 = m(_2, e3, "input");
          var a2, _2 = [], n2 = 0 | Math.floor(e3.length / 3), c2 = e3.length - 3 * n2, h2 = 4 * n2 + (c2 !== 0 ? (2 & r3) == 0 ? 4 : 2 + (c2 >>> 1) : 0), p2 = new l(h2 + 1), y2 = u(e3);
          return _2.push(y2), _2.push(p2.address), t2._sodium_bin2base64(p2.address, p2.length, y2, e3.length, r3) === 0 && g(_2, "conversion failed"), p2.length = h2, a2 = s(p2.to_Uint8Array()), v(_2), a2;
        }
        function p(e3, r3) {
          var t3 = r3 || "uint8array";
          if (!y(t3))
            throw new Error(t3 + " output format is not available");
          if (e3 instanceof l) {
            if (t3 === "uint8array")
              return e3.to_Uint8Array();
            if (t3 === "text")
              return s(e3.to_Uint8Array());
            if (t3 === "hex")
              return n(e3.to_Uint8Array());
            if (t3 === "base64")
              return h(e3.to_Uint8Array(), c.URLSAFE_NO_PADDING);
            throw new Error('What is output format "' + t3 + '"?');
          }
          if (typeof e3 == "object") {
            for (var a2 = Object.keys(e3), _2 = {}, o2 = 0; o2 < a2.length; o2++)
              _2[a2[o2]] = p(e3[a2[o2]], t3);
            return _2;
          }
          if (typeof e3 == "string")
            return e3;
          throw new TypeError("Cannot format output");
        }
        function y(e3) {
          for (var r3 = ["uint8array", "text", "hex", "base64"], t3 = 0; t3 < r3.length; t3++)
            if (r3[t3] === e3)
              return true;
          return false;
        }
        function i(e3) {
          if (e3) {
            if (typeof e3 != "string")
              throw new TypeError("When defined, the output format must be a string");
            if (!y(e3))
              throw new Error(e3 + " is not a supported output format");
          }
        }
        function l(e3) {
          this.length = e3, this.address = d(e3);
        }
        function u(e3) {
          var r3 = d(e3.length);
          return t2.HEAPU8.set(e3, r3), r3;
        }
        function d(e3) {
          var r3 = t2._malloc(e3);
          if (r3 === 0)
            throw { message: "_malloc() failed", length: e3 };
          return r3;
        }
        function v(e3) {
          if (e3)
            for (var r3 = 0; r3 < e3.length; r3++)
              a2 = e3[r3], t2._free(a2);
          var a2;
        }
        function g(e3, r3) {
          throw v(e3), new Error(r3);
        }
        function b(e3, r3) {
          throw v(e3), new TypeError(r3);
        }
        function f(e3, r3, t3) {
          r3 == null && b(e3, t3 + " cannot be null or undefined");
        }
        function m(e3, r3, t3) {
          return f(e3, r3, t3), r3 instanceof Uint8Array ? r3 : typeof r3 == "string" ? _(r3) : void b(e3, "unsupported input type for " + t3);
        }
        function E(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = null;
          e3 != null && (o2 = u(e3 = m(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = m(c2, r3, "ciphertext");
          var h2, y2 = t2._crypto_aead_chacha20poly1305_abytes(), d2 = r3.length;
          d2 < y2 && b(c2, "ciphertext is too short"), h2 = u(r3), c2.push(h2);
          var f2 = null, E2 = 0;
          a2 != null && (f2 = u(a2 = m(c2, a2, "additional_data")), E2 = a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var x2, k2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== k2 && b(c2, "invalid public_nonce length"), x2 = u(_2), c2.push(x2), s2 = m(c2, s2, "key");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          s2.length !== T2 && b(c2, "invalid key length"), S2 = u(s2), c2.push(S2);
          var w2 = new l(d2 - t2._crypto_aead_chacha20poly1305_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), t2._crypto_aead_chacha20poly1305_decrypt(Y2, null, o2, h2, d2, 0, f2, E2, 0, x2, S2) === 0) {
            var B2 = p(w2, n2);
            return v(c2), B2;
          }
          g(c2, "ciphertext cannot be decrypted using that key");
        }
        function x(e3, r3, a2, _2, s2, n2, c2) {
          var o2 = [];
          i(c2);
          var h2 = null;
          e3 != null && (h2 = u(e3 = m(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var y2 = u(r3 = m(o2, r3, "ciphertext")), d2 = r3.length;
          o2.push(y2), a2 = m(o2, a2, "mac");
          var f2, E2 = 0 | t2._crypto_box_macbytes();
          a2.length !== E2 && b(o2, "invalid mac length"), f2 = u(a2), o2.push(f2);
          var x2 = null, k2 = 0;
          _2 != null && (x2 = u(_2 = m(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), s2 = m(o2, s2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          s2.length !== T2 && b(o2, "invalid public_nonce length"), S2 = u(s2), o2.push(S2), n2 = m(o2, n2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== Y2 && b(o2, "invalid key length"), w2 = u(n2), o2.push(w2);
          var B2 = new l(0 | d2), A2 = B2.address;
          if (o2.push(A2), t2._crypto_aead_chacha20poly1305_decrypt_detached(A2, h2, y2, d2, 0, f2, x2, k2, 0, S2, w2) === 0) {
            var K2 = p(B2, c2);
            return v(o2), K2;
          }
          g(o2, "ciphertext cannot be decrypted using that key");
        }
        function k(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var y2 = null, d2 = 0;
          r3 != null && (y2 = u(r3 = m(c2, r3, "additional_data")), d2 = r3.length, c2.push(y2));
          var f2 = null;
          a2 != null && (f2 = u(a2 = m(c2, a2, "secret_nonce")), a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var E2, x2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== x2 && b(c2, "invalid public_nonce length"), E2 = u(_2), c2.push(E2), s2 = m(c2, s2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          s2.length !== S2 && b(c2, "invalid key length"), k2 = u(s2), c2.push(k2);
          var T2 = new l(h2 + t2._crypto_aead_chacha20poly1305_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), t2._crypto_aead_chacha20poly1305_encrypt(w2, null, o2, h2, 0, y2, d2, 0, f2, E2, k2) === 0) {
            var Y2 = p(T2, n2);
            return v(c2), Y2;
          }
          g(c2, "invalid usage");
        }
        function S(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var y2 = null, d2 = 0;
          r3 != null && (y2 = u(r3 = m(c2, r3, "additional_data")), d2 = r3.length, c2.push(y2));
          var f2 = null;
          a2 != null && (f2 = u(a2 = m(c2, a2, "secret_nonce")), a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var E2, x2 = 0 | t2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== x2 && b(c2, "invalid public_nonce length"), E2 = u(_2), c2.push(E2), s2 = m(c2, s2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_keybytes();
          s2.length !== S2 && b(c2, "invalid key length"), k2 = u(s2), c2.push(k2);
          var T2 = new l(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new l(0 | t2._crypto_aead_chacha20poly1305_abytes()), B2 = Y2.address;
          if (c2.push(B2), t2._crypto_aead_chacha20poly1305_encrypt_detached(w2, B2, null, o2, h2, 0, y2, d2, 0, f2, E2, k2) === 0) {
            var A2 = p({ ciphertext: T2, mac: Y2 }, n2);
            return v(c2), A2;
          }
          g(c2, "invalid usage");
        }
        function T(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = null;
          e3 != null && (o2 = u(e3 = m(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = m(c2, r3, "ciphertext");
          var h2, y2 = t2._crypto_aead_chacha20poly1305_ietf_abytes(), d2 = r3.length;
          d2 < y2 && b(c2, "ciphertext is too short"), h2 = u(r3), c2.push(h2);
          var f2 = null, E2 = 0;
          a2 != null && (f2 = u(a2 = m(c2, a2, "additional_data")), E2 = a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var x2, k2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && b(c2, "invalid public_nonce length"), x2 = u(_2), c2.push(x2), s2 = m(c2, s2, "key");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          s2.length !== T2 && b(c2, "invalid key length"), S2 = u(s2), c2.push(S2);
          var w2 = new l(d2 - t2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), t2._crypto_aead_chacha20poly1305_ietf_decrypt(Y2, null, o2, h2, d2, 0, f2, E2, 0, x2, S2) === 0) {
            var B2 = p(w2, n2);
            return v(c2), B2;
          }
          g(c2, "ciphertext cannot be decrypted using that key");
        }
        function w(e3, r3, a2, _2, s2, n2, c2) {
          var o2 = [];
          i(c2);
          var h2 = null;
          e3 != null && (h2 = u(e3 = m(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var y2 = u(r3 = m(o2, r3, "ciphertext")), d2 = r3.length;
          o2.push(y2), a2 = m(o2, a2, "mac");
          var f2, E2 = 0 | t2._crypto_box_macbytes();
          a2.length !== E2 && b(o2, "invalid mac length"), f2 = u(a2), o2.push(f2);
          var x2 = null, k2 = 0;
          _2 != null && (x2 = u(_2 = m(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), s2 = m(o2, s2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          s2.length !== T2 && b(o2, "invalid public_nonce length"), S2 = u(s2), o2.push(S2), n2 = m(o2, n2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== Y2 && b(o2, "invalid key length"), w2 = u(n2), o2.push(w2);
          var B2 = new l(0 | d2), A2 = B2.address;
          if (o2.push(A2), t2._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A2, h2, y2, d2, 0, f2, x2, k2, 0, S2, w2) === 0) {
            var K2 = p(B2, c2);
            return v(o2), K2;
          }
          g(o2, "ciphertext cannot be decrypted using that key");
        }
        function Y(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var y2 = null, d2 = 0;
          r3 != null && (y2 = u(r3 = m(c2, r3, "additional_data")), d2 = r3.length, c2.push(y2));
          var f2 = null;
          a2 != null && (f2 = u(a2 = m(c2, a2, "secret_nonce")), a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var E2, x2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && b(c2, "invalid public_nonce length"), E2 = u(_2), c2.push(E2), s2 = m(c2, s2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          s2.length !== S2 && b(c2, "invalid key length"), k2 = u(s2), c2.push(k2);
          var T2 = new l(h2 + t2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), t2._crypto_aead_chacha20poly1305_ietf_encrypt(w2, null, o2, h2, 0, y2, d2, 0, f2, E2, k2) === 0) {
            var Y2 = p(T2, n2);
            return v(c2), Y2;
          }
          g(c2, "invalid usage");
        }
        function B(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var y2 = null, d2 = 0;
          r3 != null && (y2 = u(r3 = m(c2, r3, "additional_data")), d2 = r3.length, c2.push(y2));
          var f2 = null;
          a2 != null && (f2 = u(a2 = m(c2, a2, "secret_nonce")), a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var E2, x2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && b(c2, "invalid public_nonce length"), E2 = u(_2), c2.push(E2), s2 = m(c2, s2, "key");
          var k2, S2 = 0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes();
          s2.length !== S2 && b(c2, "invalid key length"), k2 = u(s2), c2.push(k2);
          var T2 = new l(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new l(0 | t2._crypto_aead_chacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), t2._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w2, B2, null, o2, h2, 0, y2, d2, 0, f2, E2, k2) === 0) {
            var A2 = p({ ciphertext: T2, mac: Y2 }, n2);
            return v(c2), A2;
          }
          g(c2, "invalid usage");
        }
        function A(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_aead_chacha20poly1305_ietf_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_chacha20poly1305_ietf_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function K(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_aead_chacha20poly1305_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_chacha20poly1305_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function M(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = null;
          e3 != null && (o2 = u(e3 = m(c2, e3, "secret_nonce")), e3.length, c2.push(o2)), r3 = m(c2, r3, "ciphertext");
          var h2, y2 = t2._crypto_aead_xchacha20poly1305_ietf_abytes(), d2 = r3.length;
          d2 < y2 && b(c2, "ciphertext is too short"), h2 = u(r3), c2.push(h2);
          var f2 = null, E2 = 0;
          a2 != null && (f2 = u(a2 = m(c2, a2, "additional_data")), E2 = a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var x2, k2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && b(c2, "invalid public_nonce length"), x2 = u(_2), c2.push(x2), s2 = m(c2, s2, "key");
          var S2, T2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s2.length !== T2 && b(c2, "invalid key length"), S2 = u(s2), c2.push(S2);
          var w2 = new l(d2 - t2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), t2._crypto_aead_xchacha20poly1305_ietf_decrypt(Y2, null, o2, h2, d2, 0, f2, E2, 0, x2, S2) === 0) {
            var B2 = p(w2, n2);
            return v(c2), B2;
          }
          g(c2, "ciphertext cannot be decrypted using that key");
        }
        function I(e3, r3, a2, _2, s2, n2, c2) {
          var o2 = [];
          i(c2);
          var h2 = null;
          e3 != null && (h2 = u(e3 = m(o2, e3, "secret_nonce")), e3.length, o2.push(h2));
          var y2 = u(r3 = m(o2, r3, "ciphertext")), d2 = r3.length;
          o2.push(y2), a2 = m(o2, a2, "mac");
          var f2, E2 = 0 | t2._crypto_box_macbytes();
          a2.length !== E2 && b(o2, "invalid mac length"), f2 = u(a2), o2.push(f2);
          var x2 = null, k2 = 0;
          _2 != null && (x2 = u(_2 = m(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), s2 = m(o2, s2, "public_nonce");
          var S2, T2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          s2.length !== T2 && b(o2, "invalid public_nonce length"), S2 = u(s2), o2.push(S2), n2 = m(o2, n2, "key");
          var w2, Y2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== Y2 && b(o2, "invalid key length"), w2 = u(n2), o2.push(w2);
          var B2 = new l(0 | d2), A2 = B2.address;
          if (o2.push(A2), t2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A2, h2, y2, d2, 0, f2, x2, k2, 0, S2, w2) === 0) {
            var K2 = p(B2, c2);
            return v(o2), K2;
          }
          g(o2, "ciphertext cannot be decrypted using that key");
        }
        function N2(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var y2 = null, d2 = 0;
          r3 != null && (y2 = u(r3 = m(c2, r3, "additional_data")), d2 = r3.length, c2.push(y2));
          var f2 = null;
          a2 != null && (f2 = u(a2 = m(c2, a2, "secret_nonce")), a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var E2, x2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && b(c2, "invalid public_nonce length"), E2 = u(_2), c2.push(E2), s2 = m(c2, s2, "key");
          var k2, S2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s2.length !== S2 && b(c2, "invalid key length"), k2 = u(s2), c2.push(k2);
          var T2 = new l(h2 + t2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), t2._crypto_aead_xchacha20poly1305_ietf_encrypt(w2, null, o2, h2, 0, y2, d2, 0, f2, E2, k2) === 0) {
            var Y2 = p(T2, n2);
            return v(c2), Y2;
          }
          g(c2, "invalid usage");
        }
        function L(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "message")), h2 = e3.length;
          c2.push(o2);
          var y2 = null, d2 = 0;
          r3 != null && (y2 = u(r3 = m(c2, r3, "additional_data")), d2 = r3.length, c2.push(y2));
          var f2 = null;
          a2 != null && (f2 = u(a2 = m(c2, a2, "secret_nonce")), a2.length, c2.push(f2)), _2 = m(c2, _2, "public_nonce");
          var E2, x2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && b(c2, "invalid public_nonce length"), E2 = u(_2), c2.push(E2), s2 = m(c2, s2, "key");
          var k2, S2 = 0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s2.length !== S2 && b(c2, "invalid key length"), k2 = u(s2), c2.push(k2);
          var T2 = new l(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new l(0 | t2._crypto_aead_xchacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), t2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w2, B2, null, o2, h2, 0, y2, d2, 0, f2, E2, k2) === 0) {
            var A2 = p({ ciphertext: T2, mac: Y2 }, n2);
            return v(c2), A2;
          }
          g(c2, "invalid usage");
        }
        function U(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_aead_xchacha20poly1305_ietf_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_aead_xchacha20poly1305_ietf_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function O(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_auth_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_auth_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_auth(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function C(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_auth_hmacsha256_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_auth_hmacsha256_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_auth_hmacsha256(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function R(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_auth_hmacsha256_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_auth_hmacsha256_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function P(e3, r3, a2) {
          var _2 = [];
          e3 = m(_2, e3, "tag");
          var s2, n2 = 0 | t2._crypto_auth_hmacsha256_bytes();
          e3.length !== n2 && b(_2, "invalid tag length"), s2 = u(e3), _2.push(s2);
          var c2 = u(r3 = m(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = m(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_auth_hmacsha256_keybytes();
          a2.length !== p2 && b(_2, "invalid key length"), h2 = u(a2), _2.push(h2);
          var y2 = (0 | t2._crypto_auth_hmacsha256_verify(s2, c2, o2, 0, h2)) == 0;
          return v(_2), y2;
        }
        function G(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_auth_hmacsha512_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_auth_hmacsha512_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_auth_hmacsha512(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function X(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_auth_hmacsha512_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_auth_hmacsha512_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function D(e3, r3, a2) {
          var _2 = [];
          e3 = m(_2, e3, "tag");
          var s2, n2 = 0 | t2._crypto_auth_hmacsha512_bytes();
          e3.length !== n2 && b(_2, "invalid tag length"), s2 = u(e3), _2.push(s2);
          var c2 = u(r3 = m(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = m(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_auth_hmacsha512_keybytes();
          a2.length !== p2 && b(_2, "invalid key length"), h2 = u(a2), _2.push(h2);
          var y2 = (0 | t2._crypto_auth_hmacsha512_verify(s2, c2, o2, 0, h2)) == 0;
          return v(_2), y2;
        }
        function F(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_auth_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_auth_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function V(e3, r3, a2) {
          var _2 = [];
          e3 = m(_2, e3, "tag");
          var s2, n2 = 0 | t2._crypto_auth_bytes();
          e3.length !== n2 && b(_2, "invalid tag length"), s2 = u(e3), _2.push(s2);
          var c2 = u(r3 = m(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = m(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_auth_keybytes();
          a2.length !== p2 && b(_2, "invalid key length"), h2 = u(a2), _2.push(h2);
          var y2 = (0 | t2._crypto_auth_verify(s2, c2, o2, 0, h2)) == 0;
          return v(_2), y2;
        }
        function H(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "publicKey");
          var s2, n2 = 0 | t2._crypto_box_publickeybytes();
          e3.length !== n2 && b(_2, "invalid publicKey length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_box_secretkeybytes();
          r3.length !== o2 && b(_2, "invalid privateKey length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_box_beforenmbytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_box_beforenm(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function q(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var s2 = new l(0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), n2 = s2.address;
          r3.push(n2), t2._crypto_box_curve25519xchacha20poly1305_keypair(_2, n2);
          var c2 = p({ publicKey: a2, privateKey: s2, keyType: "curve25519" }, e3);
          return v(r3), c2;
        }
        function j(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "publicKey");
          var c2, o2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          r3.length !== o2 && b(_2, "invalid publicKey length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(n2 + t2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), y2 = h2.address;
          _2.push(y2), t2._crypto_box_curve25519xchacha20poly1305_seal(y2, s2, n2, 0, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function z(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), e3 = m(s2, e3, "ciphertext");
          var n2, c2 = t2._crypto_box_curve25519xchacha20poly1305_sealbytes(), o2 = e3.length;
          o2 < c2 && b(s2, "ciphertext is too short"), n2 = u(e3), s2.push(n2), r3 = m(s2, r3, "publicKey");
          var h2, y2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          r3.length !== y2 && b(s2, "invalid publicKey length"), h2 = u(r3), s2.push(h2), a2 = m(s2, a2, "secretKey");
          var d2, g2 = 0 | t2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          a2.length !== g2 && b(s2, "invalid secretKey length"), d2 = u(a2), s2.push(d2);
          var f2 = new l(o2 - t2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), E2 = f2.address;
          s2.push(E2), t2._crypto_box_curve25519xchacha20poly1305_seal_open(E2, n2, o2, 0, h2, d2);
          var x2 = p(f2, _2);
          return v(s2), x2;
        }
        function W(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2);
          var c2 = u(e3 = m(n2, e3, "message")), o2 = e3.length;
          n2.push(c2), r3 = m(n2, r3, "nonce");
          var h2, y2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== y2 && b(n2, "invalid nonce length"), h2 = u(r3), n2.push(h2), a2 = m(n2, a2, "publicKey");
          var d2, f2 = 0 | t2._crypto_box_publickeybytes();
          a2.length !== f2 && b(n2, "invalid publicKey length"), d2 = u(a2), n2.push(d2), _2 = m(n2, _2, "privateKey");
          var E2, x2 = 0 | t2._crypto_box_secretkeybytes();
          _2.length !== x2 && b(n2, "invalid privateKey length"), E2 = u(_2), n2.push(E2);
          var k2 = new l(0 | o2), S2 = k2.address;
          n2.push(S2);
          var T2 = new l(0 | t2._crypto_box_macbytes()), w2 = T2.address;
          if (n2.push(w2), (0 | t2._crypto_box_detached(S2, w2, c2, o2, 0, h2, d2, E2)) == 0) {
            var Y2 = p({ ciphertext: k2, mac: T2 }, s2);
            return v(n2), Y2;
          }
          g(n2, "invalid usage");
        }
        function J(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2);
          var c2 = u(e3 = m(n2, e3, "message")), o2 = e3.length;
          n2.push(c2), r3 = m(n2, r3, "nonce");
          var h2, y2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== y2 && b(n2, "invalid nonce length"), h2 = u(r3), n2.push(h2), a2 = m(n2, a2, "publicKey");
          var d2, f2 = 0 | t2._crypto_box_publickeybytes();
          a2.length !== f2 && b(n2, "invalid publicKey length"), d2 = u(a2), n2.push(d2), _2 = m(n2, _2, "privateKey");
          var E2, x2 = 0 | t2._crypto_box_secretkeybytes();
          _2.length !== x2 && b(n2, "invalid privateKey length"), E2 = u(_2), n2.push(E2);
          var k2 = new l(o2 + t2._crypto_box_macbytes() | 0), S2 = k2.address;
          if (n2.push(S2), (0 | t2._crypto_box_easy(S2, c2, o2, 0, h2, d2, E2)) == 0) {
            var T2 = p(k2, s2);
            return v(n2), T2;
          }
          g(n2, "invalid usage");
        }
        function Q(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "message")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "sharedKey");
          var y2, d2 = 0 | t2._crypto_box_beforenmbytes();
          a2.length !== d2 && b(s2, "invalid sharedKey length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(c2 + t2._crypto_box_macbytes() | 0), E2 = f2.address;
          if (s2.push(E2), (0 | t2._crypto_box_easy_afternm(E2, n2, c2, 0, o2, y2)) == 0) {
            var x2 = p(f2, _2);
            return v(s2), x2;
          }
          g(s2, "invalid usage");
        }
        function Z(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_box_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var s2 = new l(0 | t2._crypto_box_secretkeybytes()), n2 = s2.address;
          if (r3.push(n2), (0 | t2._crypto_box_keypair(_2, n2)) == 0) {
            var c2 = { publicKey: p(a2, e3), privateKey: p(s2, e3), keyType: "x25519" };
            return v(r3), c2;
          }
          g(r3, "internal error");
        }
        function $(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2);
          var o2 = u(e3 = m(c2, e3, "ciphertext")), h2 = e3.length;
          c2.push(o2), r3 = m(c2, r3, "mac");
          var y2, d2 = 0 | t2._crypto_box_macbytes();
          r3.length !== d2 && b(c2, "invalid mac length"), y2 = u(r3), c2.push(y2), a2 = m(c2, a2, "nonce");
          var f2, E2 = 0 | t2._crypto_box_noncebytes();
          a2.length !== E2 && b(c2, "invalid nonce length"), f2 = u(a2), c2.push(f2), _2 = m(c2, _2, "publicKey");
          var x2, k2 = 0 | t2._crypto_box_publickeybytes();
          _2.length !== k2 && b(c2, "invalid publicKey length"), x2 = u(_2), c2.push(x2), s2 = m(c2, s2, "privateKey");
          var S2, T2 = 0 | t2._crypto_box_secretkeybytes();
          s2.length !== T2 && b(c2, "invalid privateKey length"), S2 = u(s2), c2.push(S2);
          var w2 = new l(0 | h2), Y2 = w2.address;
          if (c2.push(Y2), (0 | t2._crypto_box_open_detached(Y2, o2, y2, h2, 0, f2, x2, S2)) == 0) {
            var B2 = p(w2, n2);
            return v(c2), B2;
          }
          g(c2, "incorrect key pair for the given ciphertext");
        }
        function ee(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2), e3 = m(n2, e3, "ciphertext");
          var c2, o2 = t2._crypto_box_macbytes(), h2 = e3.length;
          h2 < o2 && b(n2, "ciphertext is too short"), c2 = u(e3), n2.push(c2), r3 = m(n2, r3, "nonce");
          var y2, d2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== d2 && b(n2, "invalid nonce length"), y2 = u(r3), n2.push(y2), a2 = m(n2, a2, "publicKey");
          var f2, E2 = 0 | t2._crypto_box_publickeybytes();
          a2.length !== E2 && b(n2, "invalid publicKey length"), f2 = u(a2), n2.push(f2), _2 = m(n2, _2, "privateKey");
          var x2, k2 = 0 | t2._crypto_box_secretkeybytes();
          _2.length !== k2 && b(n2, "invalid privateKey length"), x2 = u(_2), n2.push(x2);
          var S2 = new l(h2 - t2._crypto_box_macbytes() | 0), T2 = S2.address;
          if (n2.push(T2), (0 | t2._crypto_box_open_easy(T2, c2, h2, 0, y2, f2, x2)) == 0) {
            var w2 = p(S2, s2);
            return v(n2), w2;
          }
          g(n2, "incorrect key pair for the given ciphertext");
        }
        function re(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "ciphertext")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_box_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "sharedKey");
          var y2, d2 = 0 | t2._crypto_box_beforenmbytes();
          a2.length !== d2 && b(s2, "invalid sharedKey length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(c2 - t2._crypto_box_macbytes() | 0), E2 = f2.address;
          if (s2.push(E2), (0 | t2._crypto_box_open_easy_afternm(E2, n2, c2, 0, o2, y2)) == 0) {
            var x2 = p(f2, _2);
            return v(s2), x2;
          }
          g(s2, "incorrect secret key for the given ciphertext");
        }
        function te(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "publicKey");
          var c2, o2 = 0 | t2._crypto_box_publickeybytes();
          r3.length !== o2 && b(_2, "invalid publicKey length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(n2 + t2._crypto_box_sealbytes() | 0), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_box_seal(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function ae(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), e3 = m(s2, e3, "ciphertext");
          var n2, c2 = t2._crypto_box_sealbytes(), o2 = e3.length;
          o2 < c2 && b(s2, "ciphertext is too short"), n2 = u(e3), s2.push(n2), r3 = m(s2, r3, "publicKey");
          var h2, y2 = 0 | t2._crypto_box_publickeybytes();
          r3.length !== y2 && b(s2, "invalid publicKey length"), h2 = u(r3), s2.push(h2), a2 = m(s2, a2, "privateKey");
          var d2, f2 = 0 | t2._crypto_box_secretkeybytes();
          a2.length !== f2 && b(s2, "invalid privateKey length"), d2 = u(a2), s2.push(d2);
          var E2 = new l(o2 - t2._crypto_box_sealbytes() | 0), x2 = E2.address;
          if (s2.push(x2), (0 | t2._crypto_box_seal_open(x2, n2, o2, 0, h2, d2)) == 0) {
            var k2 = p(E2, _2);
            return v(s2), k2;
          }
          g(s2, "incorrect key pair for the given ciphertext");
        }
        function _e(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "seed");
          var _2, s2 = 0 | t2._crypto_box_seedbytes();
          e3.length !== s2 && b(a2, "invalid seed length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_box_publickeybytes()), c2 = n2.address;
          a2.push(c2);
          var o2 = new l(0 | t2._crypto_box_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), (0 | t2._crypto_box_seed_keypair(c2, h2, _2)) == 0) {
            var y2 = { publicKey: p(n2, r3), privateKey: p(o2, r3), keyType: "x25519" };
            return v(a2), y2;
          }
          g(a2, "invalid usage");
        }
        function se(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "p");
          var s2, n2 = 0 | t2._crypto_core_ed25519_bytes();
          e3.length !== n2 && b(_2, "invalid p length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ed25519_bytes();
          r3.length !== o2 && b(_2, "invalid q length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ed25519_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_core_ed25519_add(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "input is an invalid element");
        }
        function ne(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = u(e3 = m(a2, e3, "r"));
          e3.length, a2.push(_2);
          var s2 = new l(0 | t2._crypto_core_ed25519_bytes()), n2 = s2.address;
          if (a2.push(n2), (0 | t2._crypto_core_ed25519_from_hash(n2, _2)) == 0) {
            var c2 = p(s2, r3);
            return v(a2), c2;
          }
          g(a2, "invalid usage");
        }
        function ce(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = u(e3 = m(a2, e3, "r"));
          e3.length, a2.push(_2);
          var s2 = new l(0 | t2._crypto_core_ed25519_bytes()), n2 = s2.address;
          if (a2.push(n2), (0 | t2._crypto_core_ed25519_from_uniform(n2, _2)) == 0) {
            var c2 = p(s2, r3);
            return v(a2), c2;
          }
          g(a2, "invalid usage");
        }
        function oe(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "repr");
          var _2, s2 = 0 | t2._crypto_core_ed25519_bytes();
          e3.length !== s2 && b(a2, "invalid repr length"), _2 = u(e3), a2.push(_2);
          var n2 = (0 | t2._crypto_core_ed25519_is_valid_point(_2)) == 1;
          return v(a2), n2;
        }
        function he(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_core_ed25519_bytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ed25519_random(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function pe(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "x");
          var s2, n2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && b(_2, "invalid x length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          r3.length !== o2 && b(_2, "invalid y length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), y2 = h2.address;
          _2.push(y2), t2._crypto_core_ed25519_scalar_add(y2, s2, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function ye(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "s");
          var _2, s2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && b(a2, "invalid s length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = n2.address;
          a2.push(c2), t2._crypto_core_ed25519_scalar_complement(c2, _2);
          var o2 = p(n2, r3);
          return v(a2), o2;
        }
        function ie(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "s");
          var _2, s2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && b(a2, "invalid s length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_core_ed25519_scalar_invert(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid reciprocate");
        }
        function le(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "x");
          var s2, n2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && b(_2, "invalid x length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          r3.length !== o2 && b(_2, "invalid y length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), y2 = h2.address;
          _2.push(y2), t2._crypto_core_ed25519_scalar_mul(y2, s2, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function ue(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "s");
          var _2, s2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && b(a2, "invalid s length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = n2.address;
          a2.push(c2), t2._crypto_core_ed25519_scalar_negate(c2, _2);
          var o2 = p(n2, r3);
          return v(a2), o2;
        }
        function de(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ed25519_scalar_random(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function ve(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "sample");
          var _2, s2 = 0 | t2._crypto_core_ed25519_nonreducedscalarbytes();
          e3.length !== s2 && b(a2, "invalid sample length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), c2 = n2.address;
          a2.push(c2), t2._crypto_core_ed25519_scalar_reduce(c2, _2);
          var o2 = p(n2, r3);
          return v(a2), o2;
        }
        function ge(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "x");
          var s2, n2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && b(_2, "invalid x length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ed25519_scalarbytes();
          r3.length !== o2 && b(_2, "invalid y length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ed25519_scalarbytes()), y2 = h2.address;
          _2.push(y2), t2._crypto_core_ed25519_scalar_sub(y2, s2, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function be(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "p");
          var s2, n2 = 0 | t2._crypto_core_ed25519_bytes();
          e3.length !== n2 && b(_2, "invalid p length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ed25519_bytes();
          r3.length !== o2 && b(_2, "invalid q length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ed25519_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_core_ed25519_sub(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "input is an invalid element");
        }
        function fe(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "p");
          var s2, n2 = 0 | t2._crypto_core_ristretto255_bytes();
          e3.length !== n2 && b(_2, "invalid p length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_bytes();
          r3.length !== o2 && b(_2, "invalid q length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ristretto255_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_core_ristretto255_add(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "input is an invalid element");
        }
        function me(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = u(e3 = m(a2, e3, "r"));
          e3.length, a2.push(_2);
          var s2 = new l(0 | t2._crypto_core_ristretto255_bytes()), n2 = s2.address;
          if (a2.push(n2), (0 | t2._crypto_core_ristretto255_from_hash(n2, _2)) == 0) {
            var c2 = p(s2, r3);
            return v(a2), c2;
          }
          g(a2, "invalid usage");
        }
        function Ee(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "repr");
          var _2, s2 = 0 | t2._crypto_core_ristretto255_bytes();
          e3.length !== s2 && b(a2, "invalid repr length"), _2 = u(e3), a2.push(_2);
          var n2 = (0 | t2._crypto_core_ristretto255_is_valid_point(_2)) == 1;
          return v(a2), n2;
        }
        function xe(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_core_ristretto255_bytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ristretto255_random(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function ke(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "x");
          var s2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && b(_2, "invalid x length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          r3.length !== o2 && b(_2, "invalid y length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), y2 = h2.address;
          _2.push(y2), t2._crypto_core_ristretto255_scalar_add(y2, s2, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function Se(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "s");
          var _2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && b(a2, "invalid s length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = n2.address;
          a2.push(c2), t2._crypto_core_ristretto255_scalar_complement(c2, _2);
          var o2 = p(n2, r3);
          return v(a2), o2;
        }
        function Te(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "s");
          var _2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && b(a2, "invalid s length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_core_ristretto255_scalar_invert(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid reciprocate");
        }
        function we(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "x");
          var s2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && b(_2, "invalid x length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          r3.length !== o2 && b(_2, "invalid y length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), y2 = h2.address;
          _2.push(y2), t2._crypto_core_ristretto255_scalar_mul(y2, s2, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function Ye(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "s");
          var _2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && b(a2, "invalid s length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = n2.address;
          a2.push(c2), t2._crypto_core_ristretto255_scalar_negate(c2, _2);
          var o2 = p(n2, r3);
          return v(a2), o2;
        }
        function Be(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_core_ristretto255_scalar_random(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function Ae(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "sample");
          var _2, s2 = 0 | t2._crypto_core_ristretto255_nonreducedscalarbytes();
          e3.length !== s2 && b(a2, "invalid sample length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), c2 = n2.address;
          a2.push(c2), t2._crypto_core_ristretto255_scalar_reduce(c2, _2);
          var o2 = p(n2, r3);
          return v(a2), o2;
        }
        function Ke(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "x");
          var s2, n2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && b(_2, "invalid x length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "y");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          r3.length !== o2 && b(_2, "invalid y length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ristretto255_scalarbytes()), y2 = h2.address;
          _2.push(y2), t2._crypto_core_ristretto255_scalar_sub(y2, s2, c2);
          var d2 = p(h2, a2);
          return v(_2), d2;
        }
        function Me(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "p");
          var s2, n2 = 0 | t2._crypto_core_ristretto255_bytes();
          e3.length !== n2 && b(_2, "invalid p length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "q");
          var c2, o2 = 0 | t2._crypto_core_ristretto255_bytes();
          r3.length !== o2 && b(_2, "invalid q length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_core_ristretto255_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_core_ristretto255_sub(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "input is an invalid element");
        }
        function Ie(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), f(s2, e3, "hash_length"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(s2, "hash_length must be an unsigned integer");
          var n2 = u(r3 = m(s2, r3, "message")), c2 = r3.length;
          s2.push(n2);
          var o2 = null, h2 = 0;
          a2 != null && (o2 = u(a2 = m(s2, a2, "key")), h2 = a2.length, s2.push(o2));
          var y2 = new l(e3 |= 0), d2 = y2.address;
          if (s2.push(d2), (0 | t2._crypto_generichash(d2, e3, n2, c2, 0, o2, h2)) == 0) {
            var E2 = p(y2, _2);
            return v(s2), E2;
          }
          g(s2, "invalid usage");
        }
        function Ne(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2), f(n2, e3, "subkey_len"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(n2, "subkey_len must be an unsigned integer");
          var c2 = null, o2 = 0;
          r3 != null && (c2 = u(r3 = m(n2, r3, "key")), o2 = r3.length, n2.push(c2)), a2 = m(n2, a2, "id");
          var h2, y2 = 0 | t2._crypto_generichash_blake2b_saltbytes();
          a2.length !== y2 && b(n2, "invalid id length"), h2 = u(a2), n2.push(h2), _2 = m(n2, _2, "ctx");
          var d2, E2 = 0 | t2._crypto_generichash_blake2b_personalbytes();
          _2.length !== E2 && b(n2, "invalid ctx length"), d2 = u(_2), n2.push(d2);
          var x2 = new l(0 | e3), k2 = x2.address;
          if (n2.push(k2), (0 | t2._crypto_generichash_blake2b_salt_personal(k2, e3, null, 0, 0, c2, o2, h2, d2)) == 0) {
            var S2 = p(x2, s2);
            return v(n2), S2;
          }
          g(n2, "invalid usage");
        }
        function Le(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address"), f(_2, r3, "hash_length"), (typeof r3 != "number" || (0 | r3) !== r3 || r3 < 0) && b(_2, "hash_length must be an unsigned integer");
          var s2 = new l(r3 |= 0), n2 = s2.address;
          if (_2.push(n2), (0 | t2._crypto_generichash_final(e3, n2, r3)) == 0) {
            var c2 = (t2._free(e3), p(s2, a2));
            return v(_2), c2;
          }
          g(_2, "invalid usage");
        }
        function Ue(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = null, n2 = 0;
          e3 != null && (s2 = u(e3 = m(_2, e3, "key")), n2 = e3.length, _2.push(s2)), f(_2, r3, "hash_length"), (typeof r3 != "number" || (0 | r3) !== r3 || r3 < 0) && b(_2, "hash_length must be an unsigned integer");
          var c2 = new l(357).address;
          if ((0 | t2._crypto_generichash_init(c2, s2, n2, r3)) == 0) {
            var o2 = c2;
            return v(_2), o2;
          }
          g(_2, "invalid usage");
        }
        function Oe(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_generichash_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_generichash_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function Ce(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address");
          var s2 = u(r3 = m(_2, r3, "message_chunk")), n2 = r3.length;
          _2.push(s2), (0 | t2._crypto_generichash_update(e3, s2, n2)) != 0 && g(_2, "invalid usage"), v(_2);
        }
        function Re(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = u(e3 = m(a2, e3, "message")), s2 = e3.length;
          a2.push(_2);
          var n2 = new l(0 | t2._crypto_hash_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_hash(c2, _2, s2, 0)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid usage");
        }
        function Pe(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = u(e3 = m(a2, e3, "message")), s2 = e3.length;
          a2.push(_2);
          var n2 = new l(0 | t2._crypto_hash_sha256_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_hash_sha256(c2, _2, s2, 0)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid usage");
        }
        function Ge(e3, r3) {
          var a2 = [];
          i(r3), f(a2, e3, "state_address");
          var _2 = new l(0 | t2._crypto_hash_sha256_bytes()), s2 = _2.address;
          if (a2.push(s2), (0 | t2._crypto_hash_sha256_final(e3, s2)) == 0) {
            var n2 = (t2._free(e3), p(_2, r3));
            return v(a2), n2;
          }
          g(a2, "invalid usage");
        }
        function Xe(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(104).address;
          if ((0 | t2._crypto_hash_sha256_init(a2)) == 0) {
            var _2 = a2;
            return v(r3), _2;
          }
          g(r3, "invalid usage");
        }
        function De(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address");
          var s2 = u(r3 = m(_2, r3, "message_chunk")), n2 = r3.length;
          _2.push(s2), (0 | t2._crypto_hash_sha256_update(e3, s2, n2)) != 0 && g(_2, "invalid usage"), v(_2);
        }
        function Fe(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = u(e3 = m(a2, e3, "message")), s2 = e3.length;
          a2.push(_2);
          var n2 = new l(0 | t2._crypto_hash_sha512_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_hash_sha512(c2, _2, s2, 0)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid usage");
        }
        function Ve(e3, r3) {
          var a2 = [];
          i(r3), f(a2, e3, "state_address");
          var _2 = new l(0 | t2._crypto_hash_sha512_bytes()), s2 = _2.address;
          if (a2.push(s2), (0 | t2._crypto_hash_sha512_final(e3, s2)) == 0) {
            var n2 = (t2._free(e3), p(_2, r3));
            return v(a2), n2;
          }
          g(a2, "invalid usage");
        }
        function He(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(208).address;
          if ((0 | t2._crypto_hash_sha512_init(a2)) == 0) {
            var _2 = a2;
            return v(r3), _2;
          }
          g(r3, "invalid usage");
        }
        function qe(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address");
          var s2 = u(r3 = m(_2, r3, "message_chunk")), n2 = r3.length;
          _2.push(s2), (0 | t2._crypto_hash_sha512_update(e3, s2, n2)) != 0 && g(_2, "invalid usage"), v(_2);
        }
        function je(e3, r3, a2, s2, n2) {
          var c2 = [];
          i(n2), f(c2, e3, "subkey_len"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(c2, "subkey_len must be an unsigned integer"), f(c2, r3, "subkey_id"), (typeof r3 != "number" || (0 | r3) !== r3 || r3 < 0) && b(c2, "subkey_id must be an unsigned integer"), typeof a2 != "string" && b(c2, "ctx must be a string"), a2 = _(a2 + "\0"), h2 != null && a2.length - 1 !== h2 && b(c2, "invalid ctx length");
          var o2 = u(a2), h2 = a2.length - 1;
          c2.push(o2), s2 = m(c2, s2, "key");
          var y2, d2 = 0 | t2._crypto_kdf_keybytes();
          s2.length !== d2 && b(c2, "invalid key length"), y2 = u(s2), c2.push(y2);
          var g2 = new l(0 | e3), E2 = g2.address;
          c2.push(E2), t2._crypto_kdf_derive_from_key(E2, e3, r3, r3 >>> 24 >>> 8, o2, y2);
          var x2 = p(g2, n2);
          return v(c2), x2;
        }
        function ze(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_kdf_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_kdf_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function We(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), e3 = m(s2, e3, "clientPublicKey");
          var n2, c2 = 0 | t2._crypto_kx_publickeybytes();
          e3.length !== c2 && b(s2, "invalid clientPublicKey length"), n2 = u(e3), s2.push(n2), r3 = m(s2, r3, "clientSecretKey");
          var o2, h2 = 0 | t2._crypto_kx_secretkeybytes();
          r3.length !== h2 && b(s2, "invalid clientSecretKey length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "serverPublicKey");
          var y2, d2 = 0 | t2._crypto_kx_publickeybytes();
          a2.length !== d2 && b(s2, "invalid serverPublicKey length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(0 | t2._crypto_kx_sessionkeybytes()), E2 = f2.address;
          s2.push(E2);
          var x2 = new l(0 | t2._crypto_kx_sessionkeybytes()), k2 = x2.address;
          if (s2.push(k2), (0 | t2._crypto_kx_client_session_keys(E2, k2, n2, o2, y2)) == 0) {
            var S2 = p({ sharedRx: f2, sharedTx: x2 }, _2);
            return v(s2), S2;
          }
          g(s2, "invalid usage");
        }
        function Je(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_kx_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var s2 = new l(0 | t2._crypto_kx_secretkeybytes()), n2 = s2.address;
          if (r3.push(n2), (0 | t2._crypto_kx_keypair(_2, n2)) == 0) {
            var c2 = { publicKey: p(a2, e3), privateKey: p(s2, e3), keyType: "x25519" };
            return v(r3), c2;
          }
          g(r3, "internal error");
        }
        function Qe(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "seed");
          var _2, s2 = 0 | t2._crypto_kx_seedbytes();
          e3.length !== s2 && b(a2, "invalid seed length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_kx_publickeybytes()), c2 = n2.address;
          a2.push(c2);
          var o2 = new l(0 | t2._crypto_kx_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), (0 | t2._crypto_kx_seed_keypair(c2, h2, _2)) == 0) {
            var y2 = { publicKey: p(n2, r3), privateKey: p(o2, r3), keyType: "x25519" };
            return v(a2), y2;
          }
          g(a2, "internal error");
        }
        function Ze(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), e3 = m(s2, e3, "serverPublicKey");
          var n2, c2 = 0 | t2._crypto_kx_publickeybytes();
          e3.length !== c2 && b(s2, "invalid serverPublicKey length"), n2 = u(e3), s2.push(n2), r3 = m(s2, r3, "serverSecretKey");
          var o2, h2 = 0 | t2._crypto_kx_secretkeybytes();
          r3.length !== h2 && b(s2, "invalid serverSecretKey length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "clientPublicKey");
          var y2, d2 = 0 | t2._crypto_kx_publickeybytes();
          a2.length !== d2 && b(s2, "invalid clientPublicKey length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(0 | t2._crypto_kx_sessionkeybytes()), E2 = f2.address;
          s2.push(E2);
          var x2 = new l(0 | t2._crypto_kx_sessionkeybytes()), k2 = x2.address;
          if (s2.push(k2), (0 | t2._crypto_kx_server_session_keys(E2, k2, n2, o2, y2)) == 0) {
            var S2 = p({ sharedRx: f2, sharedTx: x2 }, _2);
            return v(s2), S2;
          }
          g(s2, "invalid usage");
        }
        function $e(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_onetimeauth_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_onetimeauth_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_onetimeauth(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function er(e3, r3) {
          var a2 = [];
          i(r3), f(a2, e3, "state_address");
          var _2 = new l(0 | t2._crypto_onetimeauth_bytes()), s2 = _2.address;
          if (a2.push(s2), (0 | t2._crypto_onetimeauth_final(e3, s2)) == 0) {
            var n2 = (t2._free(e3), p(_2, r3));
            return v(a2), n2;
          }
          g(a2, "invalid usage");
        }
        function rr(e3, r3) {
          var a2 = [];
          i(r3);
          var _2 = null;
          e3 != null && (_2 = u(e3 = m(a2, e3, "key")), e3.length, a2.push(_2));
          var s2 = new l(144).address;
          if ((0 | t2._crypto_onetimeauth_init(s2, _2)) == 0) {
            var n2 = s2;
            return v(a2), n2;
          }
          g(a2, "invalid usage");
        }
        function tr(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_onetimeauth_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_onetimeauth_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function ar(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address");
          var s2 = u(r3 = m(_2, r3, "message_chunk")), n2 = r3.length;
          _2.push(s2), (0 | t2._crypto_onetimeauth_update(e3, s2, n2)) != 0 && g(_2, "invalid usage"), v(_2);
        }
        function _r(e3, r3, a2) {
          var _2 = [];
          e3 = m(_2, e3, "hash");
          var s2, n2 = 0 | t2._crypto_onetimeauth_bytes();
          e3.length !== n2 && b(_2, "invalid hash length"), s2 = u(e3), _2.push(s2);
          var c2 = u(r3 = m(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = m(_2, a2, "key");
          var h2, p2 = 0 | t2._crypto_onetimeauth_keybytes();
          a2.length !== p2 && b(_2, "invalid key length"), h2 = u(a2), _2.push(h2);
          var y2 = (0 | t2._crypto_onetimeauth_verify(s2, c2, o2, 0, h2)) == 0;
          return v(_2), y2;
        }
        function sr(e3, r3, a2, _2, s2, n2, c2) {
          var o2 = [];
          i(c2), f(o2, e3, "keyLength"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(o2, "keyLength must be an unsigned integer");
          var h2 = u(r3 = m(o2, r3, "password")), y2 = r3.length;
          o2.push(h2), a2 = m(o2, a2, "salt");
          var d2, E2 = 0 | t2._crypto_pwhash_saltbytes();
          a2.length !== E2 && b(o2, "invalid salt length"), d2 = u(a2), o2.push(d2), f(o2, _2, "opsLimit"), (typeof _2 != "number" || (0 | _2) !== _2 || _2 < 0) && b(o2, "opsLimit must be an unsigned integer"), f(o2, s2, "memLimit"), (typeof s2 != "number" || (0 | s2) !== s2 || s2 < 0) && b(o2, "memLimit must be an unsigned integer"), f(o2, n2, "algorithm"), (typeof n2 != "number" || (0 | n2) !== n2 || n2 < 0) && b(o2, "algorithm must be an unsigned integer");
          var x2 = new l(0 | e3), k2 = x2.address;
          if (o2.push(k2), (0 | t2._crypto_pwhash(k2, e3, 0, h2, y2, 0, d2, _2, 0, s2, n2)) == 0) {
            var S2 = p(x2, c2);
            return v(o2), S2;
          }
          g(o2, "invalid usage");
        }
        function nr(e3, r3, a2, _2, s2, n2) {
          var c2 = [];
          i(n2), f(c2, e3, "keyLength"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(c2, "keyLength must be an unsigned integer");
          var o2 = u(r3 = m(c2, r3, "password")), h2 = r3.length;
          c2.push(o2), a2 = m(c2, a2, "salt");
          var y2, d2 = 0 | t2._crypto_pwhash_scryptsalsa208sha256_saltbytes();
          a2.length !== d2 && b(c2, "invalid salt length"), y2 = u(a2), c2.push(y2), f(c2, _2, "opsLimit"), (typeof _2 != "number" || (0 | _2) !== _2 || _2 < 0) && b(c2, "opsLimit must be an unsigned integer"), f(c2, s2, "memLimit"), (typeof s2 != "number" || (0 | s2) !== s2 || s2 < 0) && b(c2, "memLimit must be an unsigned integer");
          var E2 = new l(0 | e3), x2 = E2.address;
          if (c2.push(x2), (0 | t2._crypto_pwhash_scryptsalsa208sha256(x2, e3, 0, o2, h2, 0, y2, _2, 0, s2)) == 0) {
            var k2 = p(E2, n2);
            return v(c2), k2;
          }
          g(c2, "invalid usage");
        }
        function cr(e3, r3, a2, _2, s2, n2, c2) {
          var o2 = [];
          i(c2);
          var h2 = u(e3 = m(o2, e3, "password")), y2 = e3.length;
          o2.push(h2);
          var d2 = u(r3 = m(o2, r3, "salt")), E2 = r3.length;
          o2.push(d2), f(o2, a2, "opsLimit"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(o2, "opsLimit must be an unsigned integer"), f(o2, _2, "r"), (typeof _2 != "number" || (0 | _2) !== _2 || _2 < 0) && b(o2, "r must be an unsigned integer"), f(o2, s2, "p"), (typeof s2 != "number" || (0 | s2) !== s2 || s2 < 0) && b(o2, "p must be an unsigned integer"), f(o2, n2, "keyLength"), (typeof n2 != "number" || (0 | n2) !== n2 || n2 < 0) && b(o2, "keyLength must be an unsigned integer");
          var x2 = new l(0 | n2), k2 = x2.address;
          if (o2.push(k2), (0 | t2._crypto_pwhash_scryptsalsa208sha256_ll(h2, y2, d2, E2, a2, 0, _2, s2, k2, n2)) == 0) {
            var S2 = p(x2, c2);
            return v(o2), S2;
          }
          g(o2, "invalid usage");
        }
        function or(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "password")), c2 = e3.length;
          s2.push(n2), f(s2, r3, "opsLimit"), (typeof r3 != "number" || (0 | r3) !== r3 || r3 < 0) && b(s2, "opsLimit must be an unsigned integer"), f(s2, a2, "memLimit"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(s2, "memLimit must be an unsigned integer");
          var o2 = new l(0 | t2._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;
          if (s2.push(o2), (0 | t2._crypto_pwhash_scryptsalsa208sha256_str(o2, n2, c2, 0, r3, 0, a2)) == 0) {
            var h2 = t2.UTF8ToString(o2);
            return v(s2), h2;
          }
          g(s2, "invalid usage");
        }
        function hr(e3, r3, a2) {
          var s2 = [];
          i(a2), typeof e3 != "string" && b(s2, "hashed_password must be a string"), e3 = _(e3 + "\0"), c2 != null && e3.length - 1 !== c2 && b(s2, "invalid hashed_password length");
          var n2 = u(e3), c2 = e3.length - 1;
          s2.push(n2);
          var o2 = u(r3 = m(s2, r3, "password")), h2 = r3.length;
          s2.push(o2);
          var p2 = (0 | t2._crypto_pwhash_scryptsalsa208sha256_str_verify(n2, o2, h2, 0)) == 0;
          return v(s2), p2;
        }
        function pr(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "password")), c2 = e3.length;
          s2.push(n2), f(s2, r3, "opsLimit"), (typeof r3 != "number" || (0 | r3) !== r3 || r3 < 0) && b(s2, "opsLimit must be an unsigned integer"), f(s2, a2, "memLimit"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(s2, "memLimit must be an unsigned integer");
          var o2 = new l(0 | t2._crypto_pwhash_strbytes()).address;
          if (s2.push(o2), (0 | t2._crypto_pwhash_str(o2, n2, c2, 0, r3, 0, a2)) == 0) {
            var h2 = t2.UTF8ToString(o2);
            return v(s2), h2;
          }
          g(s2, "invalid usage");
        }
        function yr(e3, r3, a2, s2) {
          var n2 = [];
          i(s2), typeof e3 != "string" && b(n2, "hashed_password must be a string"), e3 = _(e3 + "\0"), o2 != null && e3.length - 1 !== o2 && b(n2, "invalid hashed_password length");
          var c2 = u(e3), o2 = e3.length - 1;
          n2.push(c2), f(n2, r3, "opsLimit"), (typeof r3 != "number" || (0 | r3) !== r3 || r3 < 0) && b(n2, "opsLimit must be an unsigned integer"), f(n2, a2, "memLimit"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(n2, "memLimit must be an unsigned integer");
          var h2 = (0 | t2._crypto_pwhash_str_needs_rehash(c2, r3, 0, a2)) != 0;
          return v(n2), h2;
        }
        function ir(e3, r3, a2) {
          var s2 = [];
          i(a2), typeof e3 != "string" && b(s2, "hashed_password must be a string"), e3 = _(e3 + "\0"), c2 != null && e3.length - 1 !== c2 && b(s2, "invalid hashed_password length");
          var n2 = u(e3), c2 = e3.length - 1;
          s2.push(n2);
          var o2 = u(r3 = m(s2, r3, "password")), h2 = r3.length;
          s2.push(o2);
          var p2 = (0 | t2._crypto_pwhash_str_verify(n2, o2, h2, 0)) == 0;
          return v(s2), p2;
        }
        function lr(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "privateKey");
          var s2, n2 = 0 | t2._crypto_scalarmult_scalarbytes();
          e3.length !== n2 && b(_2, "invalid privateKey length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "publicKey");
          var c2, o2 = 0 | t2._crypto_scalarmult_bytes();
          r3.length !== o2 && b(_2, "invalid publicKey length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_scalarmult_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_scalarmult(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "weak public key");
        }
        function ur(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "privateKey");
          var _2, s2 = 0 | t2._crypto_scalarmult_scalarbytes();
          e3.length !== s2 && b(a2, "invalid privateKey length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_scalarmult_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_scalarmult_base(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "unknown error");
        }
        function dr(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "n");
          var s2, n2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== n2 && b(_2, "invalid n length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "p");
          var c2, o2 = 0 | t2._crypto_scalarmult_ed25519_bytes();
          r3.length !== o2 && b(_2, "invalid p length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_scalarmult_ed25519_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_scalarmult_ed25519(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid point or scalar is 0");
        }
        function vr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "scalar");
          var _2, s2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== s2 && b(a2, "invalid scalar length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_scalarmult_ed25519_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_scalarmult_ed25519_base(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "scalar is 0");
        }
        function gr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "scalar");
          var _2, s2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== s2 && b(a2, "invalid scalar length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_scalarmult_ed25519_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_scalarmult_ed25519_base_noclamp(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "scalar is 0");
        }
        function br(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "n");
          var s2, n2 = 0 | t2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== n2 && b(_2, "invalid n length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "p");
          var c2, o2 = 0 | t2._crypto_scalarmult_ed25519_bytes();
          r3.length !== o2 && b(_2, "invalid p length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_scalarmult_ed25519_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_scalarmult_ed25519_noclamp(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid point or scalar is 0");
        }
        function fr(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "scalar");
          var s2, n2 = 0 | t2._crypto_scalarmult_ristretto255_scalarbytes();
          e3.length !== n2 && b(_2, "invalid scalar length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "element");
          var c2, o2 = 0 | t2._crypto_scalarmult_ristretto255_bytes();
          r3.length !== o2 && b(_2, "invalid element length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_scalarmult_ristretto255_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_scalarmult_ristretto255(y2, s2, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "result is identity element");
        }
        function mr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "scalar");
          var _2, s2 = 0 | t2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && b(a2, "invalid scalar length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_core_ristretto255_bytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_scalarmult_ristretto255_base(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "scalar is 0");
        }
        function Er(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "message")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_secretbox_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "key");
          var y2, d2 = 0 | t2._crypto_secretbox_keybytes();
          a2.length !== d2 && b(s2, "invalid key length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(0 | c2), E2 = f2.address;
          s2.push(E2);
          var x2 = new l(0 | t2._crypto_secretbox_macbytes()), k2 = x2.address;
          if (s2.push(k2), (0 | t2._crypto_secretbox_detached(E2, k2, n2, c2, 0, o2, y2)) == 0) {
            var S2 = p({ mac: x2, cipher: f2 }, _2);
            return v(s2), S2;
          }
          g(s2, "invalid usage");
        }
        function xr(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "message")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_secretbox_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "key");
          var y2, d2 = 0 | t2._crypto_secretbox_keybytes();
          a2.length !== d2 && b(s2, "invalid key length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(c2 + t2._crypto_secretbox_macbytes() | 0), E2 = f2.address;
          if (s2.push(E2), (0 | t2._crypto_secretbox_easy(E2, n2, c2, 0, o2, y2)) == 0) {
            var x2 = p(f2, _2);
            return v(s2), x2;
          }
          g(s2, "invalid usage");
        }
        function kr(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_secretbox_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_secretbox_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function Sr(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2);
          var c2 = u(e3 = m(n2, e3, "ciphertext")), o2 = e3.length;
          n2.push(c2), r3 = m(n2, r3, "mac");
          var h2, y2 = 0 | t2._crypto_secretbox_macbytes();
          r3.length !== y2 && b(n2, "invalid mac length"), h2 = u(r3), n2.push(h2), a2 = m(n2, a2, "nonce");
          var d2, f2 = 0 | t2._crypto_secretbox_noncebytes();
          a2.length !== f2 && b(n2, "invalid nonce length"), d2 = u(a2), n2.push(d2), _2 = m(n2, _2, "key");
          var E2, x2 = 0 | t2._crypto_secretbox_keybytes();
          _2.length !== x2 && b(n2, "invalid key length"), E2 = u(_2), n2.push(E2);
          var k2 = new l(0 | o2), S2 = k2.address;
          if (n2.push(S2), (0 | t2._crypto_secretbox_open_detached(S2, c2, h2, o2, 0, d2, E2)) == 0) {
            var T2 = p(k2, s2);
            return v(n2), T2;
          }
          g(n2, "wrong secret key for the given ciphertext");
        }
        function Tr(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), e3 = m(s2, e3, "ciphertext");
          var n2, c2 = t2._crypto_secretbox_macbytes(), o2 = e3.length;
          o2 < c2 && b(s2, "ciphertext is too short"), n2 = u(e3), s2.push(n2), r3 = m(s2, r3, "nonce");
          var h2, y2 = 0 | t2._crypto_secretbox_noncebytes();
          r3.length !== y2 && b(s2, "invalid nonce length"), h2 = u(r3), s2.push(h2), a2 = m(s2, a2, "key");
          var d2, f2 = 0 | t2._crypto_secretbox_keybytes();
          a2.length !== f2 && b(s2, "invalid key length"), d2 = u(a2), s2.push(d2);
          var E2 = new l(o2 - t2._crypto_secretbox_macbytes() | 0), x2 = E2.address;
          if (s2.push(x2), (0 | t2._crypto_secretbox_open_easy(x2, n2, o2, 0, h2, d2)) == 0) {
            var k2 = p(E2, _2);
            return v(s2), k2;
          }
          g(s2, "wrong secret key for the given ciphertext");
        }
        function wr(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "header");
          var s2, n2 = 0 | t2._crypto_secretstream_xchacha20poly1305_headerbytes();
          e3.length !== n2 && b(_2, "invalid header length"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_secretstream_xchacha20poly1305_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(52).address;
          if ((0 | t2._crypto_secretstream_xchacha20poly1305_init_pull(h2, s2, c2)) == 0) {
            var p2 = h2;
            return v(_2), p2;
          }
          g(_2, "invalid usage");
        }
        function Yr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "key");
          var _2, s2 = 0 | t2._crypto_secretstream_xchacha20poly1305_keybytes();
          e3.length !== s2 && b(a2, "invalid key length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(52).address, c2 = new l(0 | t2._crypto_secretstream_xchacha20poly1305_headerbytes()), o2 = c2.address;
          if (a2.push(o2), (0 | t2._crypto_secretstream_xchacha20poly1305_init_push(n2, o2, _2)) == 0) {
            var h2 = { state: n2, header: p(c2, r3) };
            return v(a2), h2;
          }
          g(a2, "invalid usage");
        }
        function Br(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_secretstream_xchacha20poly1305_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_secretstream_xchacha20poly1305_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function Ar(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), f(s2, e3, "state_address"), r3 = m(s2, r3, "cipher");
          var n2, c2 = t2._crypto_secretstream_xchacha20poly1305_abytes(), o2 = r3.length;
          o2 < c2 && b(s2, "cipher is too short"), n2 = u(r3), s2.push(n2);
          var h2 = null, y2 = 0;
          a2 != null && (h2 = u(a2 = m(s2, a2, "ad")), y2 = a2.length, s2.push(h2));
          var g2 = new l(o2 - t2._crypto_secretstream_xchacha20poly1305_abytes() | 0), E2 = g2.address;
          s2.push(E2);
          var x2, k2 = (x2 = d(1), s2.push(x2), (k2 = t2._crypto_secretstream_xchacha20poly1305_pull(e3, E2, 0, x2, n2, o2, 0, h2, y2) === 0 && { tag: t2.HEAPU8[x2], message: g2 }) && { message: p(k2.message, _2), tag: k2.tag });
          return v(s2), k2;
        }
        function Kr(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2), f(n2, e3, "state_address");
          var c2 = u(r3 = m(n2, r3, "message_chunk")), o2 = r3.length;
          n2.push(c2);
          var h2 = null, y2 = 0;
          a2 != null && (h2 = u(a2 = m(n2, a2, "ad")), y2 = a2.length, n2.push(h2)), f(n2, _2, "tag"), (typeof _2 != "number" || (0 | _2) !== _2 || _2 < 0) && b(n2, "tag must be an unsigned integer");
          var d2 = new l(o2 + t2._crypto_secretstream_xchacha20poly1305_abytes() | 0), E2 = d2.address;
          if (n2.push(E2), (0 | t2._crypto_secretstream_xchacha20poly1305_push(e3, E2, 0, c2, o2, 0, h2, y2, 0, _2)) == 0) {
            var x2 = p(d2, s2);
            return v(n2), x2;
          }
          g(n2, "invalid usage");
        }
        function Mr(e3, r3) {
          var a2 = [];
          return i(r3), f(a2, e3, "state_address"), t2._crypto_secretstream_xchacha20poly1305_rekey(e3), v(a2), true;
        }
        function Ir(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_shorthash_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_shorthash_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_shorthash(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function Nr(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_shorthash_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_shorthash_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function Lr(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "key");
          var c2, o2 = 0 | t2._crypto_shorthash_siphashx24_keybytes();
          r3.length !== o2 && b(_2, "invalid key length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_shorthash_siphashx24_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_shorthash_siphashx24(y2, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function Ur(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_sign_secretkeybytes();
          r3.length !== o2 && b(_2, "invalid privateKey length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(e3.length + t2._crypto_sign_bytes() | 0), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_sign(y2, null, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function Or(e3, r3, a2) {
          var _2 = [];
          i(a2);
          var s2 = u(e3 = m(_2, e3, "message")), n2 = e3.length;
          _2.push(s2), r3 = m(_2, r3, "privateKey");
          var c2, o2 = 0 | t2._crypto_sign_secretkeybytes();
          r3.length !== o2 && b(_2, "invalid privateKey length"), c2 = u(r3), _2.push(c2);
          var h2 = new l(0 | t2._crypto_sign_bytes()), y2 = h2.address;
          if (_2.push(y2), (0 | t2._crypto_sign_detached(y2, null, s2, n2, 0, c2)) == 0) {
            var d2 = p(h2, a2);
            return v(_2), d2;
          }
          g(_2, "invalid usage");
        }
        function Cr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "edPk");
          var _2, s2 = 0 | t2._crypto_sign_publickeybytes();
          e3.length !== s2 && b(a2, "invalid edPk length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_scalarmult_scalarbytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_sign_ed25519_pk_to_curve25519(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid key");
        }
        function Rr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "edSk");
          var _2, s2 = 0 | t2._crypto_sign_secretkeybytes();
          e3.length !== s2 && b(a2, "invalid edSk length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_scalarmult_scalarbytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_sign_ed25519_sk_to_curve25519(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid key");
        }
        function Pr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "privateKey");
          var _2, s2 = 0 | t2._crypto_sign_secretkeybytes();
          e3.length !== s2 && b(a2, "invalid privateKey length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_sign_publickeybytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_sign_ed25519_sk_to_pk(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid key");
        }
        function Gr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "privateKey");
          var _2, s2 = 0 | t2._crypto_sign_secretkeybytes();
          e3.length !== s2 && b(a2, "invalid privateKey length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_sign_seedbytes()), c2 = n2.address;
          if (a2.push(c2), (0 | t2._crypto_sign_ed25519_sk_to_seed(c2, _2)) == 0) {
            var o2 = p(n2, r3);
            return v(a2), o2;
          }
          g(a2, "invalid key");
        }
        function Xr(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address"), r3 = m(_2, r3, "privateKey");
          var s2, n2 = 0 | t2._crypto_sign_secretkeybytes();
          r3.length !== n2 && b(_2, "invalid privateKey length"), s2 = u(r3), _2.push(s2);
          var c2 = new l(0 | t2._crypto_sign_bytes()), o2 = c2.address;
          if (_2.push(o2), (0 | t2._crypto_sign_final_create(e3, o2, null, s2)) == 0) {
            var h2 = (t2._free(e3), p(c2, a2));
            return v(_2), h2;
          }
          g(_2, "invalid usage");
        }
        function Dr(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), f(s2, e3, "state_address"), r3 = m(s2, r3, "signature");
          var n2, c2 = 0 | t2._crypto_sign_bytes();
          r3.length !== c2 && b(s2, "invalid signature length"), n2 = u(r3), s2.push(n2), a2 = m(s2, a2, "publicKey");
          var o2, h2 = 0 | t2._crypto_sign_publickeybytes();
          a2.length !== h2 && b(s2, "invalid publicKey length"), o2 = u(a2), s2.push(o2);
          var p2 = (0 | t2._crypto_sign_final_verify(e3, n2, o2)) == 0;
          return v(s2), p2;
        }
        function Fr(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(208).address;
          if ((0 | t2._crypto_sign_init(a2)) == 0) {
            var _2 = a2;
            return v(r3), _2;
          }
          g(r3, "internal error");
        }
        function Vr(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_sign_publickeybytes()), _2 = a2.address;
          r3.push(_2);
          var s2 = new l(0 | t2._crypto_sign_secretkeybytes()), n2 = s2.address;
          if (r3.push(n2), (0 | t2._crypto_sign_keypair(_2, n2)) == 0) {
            var c2 = { publicKey: p(a2, e3), privateKey: p(s2, e3), keyType: "ed25519" };
            return v(r3), c2;
          }
          g(r3, "internal error");
        }
        function Hr(e3, r3, a2) {
          var _2 = [];
          i(a2), e3 = m(_2, e3, "signedMessage");
          var s2, n2 = t2._crypto_sign_bytes(), c2 = e3.length;
          c2 < n2 && b(_2, "signedMessage is too short"), s2 = u(e3), _2.push(s2), r3 = m(_2, r3, "publicKey");
          var o2, h2 = 0 | t2._crypto_sign_publickeybytes();
          r3.length !== h2 && b(_2, "invalid publicKey length"), o2 = u(r3), _2.push(o2);
          var y2 = new l(c2 - t2._crypto_sign_bytes() | 0), d2 = y2.address;
          if (_2.push(d2), (0 | t2._crypto_sign_open(d2, null, s2, c2, 0, o2)) == 0) {
            var f2 = p(y2, a2);
            return v(_2), f2;
          }
          g(_2, "incorrect signature for the given public key");
        }
        function qr(e3, r3) {
          var a2 = [];
          i(r3), e3 = m(a2, e3, "seed");
          var _2, s2 = 0 | t2._crypto_sign_seedbytes();
          e3.length !== s2 && b(a2, "invalid seed length"), _2 = u(e3), a2.push(_2);
          var n2 = new l(0 | t2._crypto_sign_publickeybytes()), c2 = n2.address;
          a2.push(c2);
          var o2 = new l(0 | t2._crypto_sign_secretkeybytes()), h2 = o2.address;
          if (a2.push(h2), (0 | t2._crypto_sign_seed_keypair(c2, h2, _2)) == 0) {
            var y2 = { publicKey: p(n2, r3), privateKey: p(o2, r3), keyType: "ed25519" };
            return v(a2), y2;
          }
          g(a2, "invalid usage");
        }
        function jr(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "state_address");
          var s2 = u(r3 = m(_2, r3, "message_chunk")), n2 = r3.length;
          _2.push(s2), (0 | t2._crypto_sign_update(e3, s2, n2)) != 0 && g(_2, "invalid usage"), v(_2);
        }
        function zr(e3, r3, a2) {
          var _2 = [];
          e3 = m(_2, e3, "signature");
          var s2, n2 = 0 | t2._crypto_sign_bytes();
          e3.length !== n2 && b(_2, "invalid signature length"), s2 = u(e3), _2.push(s2);
          var c2 = u(r3 = m(_2, r3, "message")), o2 = r3.length;
          _2.push(c2), a2 = m(_2, a2, "publicKey");
          var h2, p2 = 0 | t2._crypto_sign_publickeybytes();
          a2.length !== p2 && b(_2, "invalid publicKey length"), h2 = u(a2), _2.push(h2);
          var y2 = (0 | t2._crypto_sign_verify_detached(s2, c2, o2, 0, h2)) == 0;
          return v(_2), y2;
        }
        function Wr(e3, r3, a2, _2) {
          var s2 = [];
          i(_2), f(s2, e3, "outLength"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(s2, "outLength must be an unsigned integer"), r3 = m(s2, r3, "key");
          var n2, c2 = 0 | t2._crypto_stream_chacha20_keybytes();
          r3.length !== c2 && b(s2, "invalid key length"), n2 = u(r3), s2.push(n2), a2 = m(s2, a2, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_chacha20_noncebytes();
          a2.length !== h2 && b(s2, "invalid nonce length"), o2 = u(a2), s2.push(o2);
          var y2 = new l(0 | e3), d2 = y2.address;
          s2.push(d2), t2._crypto_stream_chacha20(d2, e3, 0, o2, n2);
          var g2 = p(y2, _2);
          return v(s2), g2;
        }
        function Jr(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "input_message")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_chacha20_ietf_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "key");
          var y2, d2 = 0 | t2._crypto_stream_chacha20_ietf_keybytes();
          a2.length !== d2 && b(s2, "invalid key length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(0 | c2), E2 = f2.address;
          if (s2.push(E2), t2._crypto_stream_chacha20_ietf_xor(E2, n2, c2, 0, o2, y2) === 0) {
            var x2 = p(f2, _2);
            return v(s2), x2;
          }
          g(s2, "invalid usage");
        }
        function Qr(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2);
          var c2 = u(e3 = m(n2, e3, "input_message")), o2 = e3.length;
          n2.push(c2), r3 = m(n2, r3, "nonce");
          var h2, y2 = 0 | t2._crypto_stream_chacha20_ietf_noncebytes();
          r3.length !== y2 && b(n2, "invalid nonce length"), h2 = u(r3), n2.push(h2), f(n2, a2, "nonce_increment"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(n2, "nonce_increment must be an unsigned integer"), _2 = m(n2, _2, "key");
          var d2, E2 = 0 | t2._crypto_stream_chacha20_ietf_keybytes();
          _2.length !== E2 && b(n2, "invalid key length"), d2 = u(_2), n2.push(d2);
          var x2 = new l(0 | o2), k2 = x2.address;
          if (n2.push(k2), t2._crypto_stream_chacha20_ietf_xor_ic(k2, c2, o2, 0, h2, a2, d2) === 0) {
            var S2 = p(x2, s2);
            return v(n2), S2;
          }
          g(n2, "invalid usage");
        }
        function Zr(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_stream_chacha20_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_stream_chacha20_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function $r(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "input_message")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_chacha20_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "key");
          var y2, d2 = 0 | t2._crypto_stream_chacha20_keybytes();
          a2.length !== d2 && b(s2, "invalid key length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(0 | c2), E2 = f2.address;
          if (s2.push(E2), t2._crypto_stream_chacha20_xor(E2, n2, c2, 0, o2, y2) === 0) {
            var x2 = p(f2, _2);
            return v(s2), x2;
          }
          g(s2, "invalid usage");
        }
        function et(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2);
          var c2 = u(e3 = m(n2, e3, "input_message")), o2 = e3.length;
          n2.push(c2), r3 = m(n2, r3, "nonce");
          var h2, y2 = 0 | t2._crypto_stream_chacha20_noncebytes();
          r3.length !== y2 && b(n2, "invalid nonce length"), h2 = u(r3), n2.push(h2), f(n2, a2, "nonce_increment"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(n2, "nonce_increment must be an unsigned integer"), _2 = m(n2, _2, "key");
          var d2, E2 = 0 | t2._crypto_stream_chacha20_keybytes();
          _2.length !== E2 && b(n2, "invalid key length"), d2 = u(_2), n2.push(d2);
          var x2 = new l(0 | o2), k2 = x2.address;
          if (n2.push(k2), t2._crypto_stream_chacha20_xor_ic(k2, c2, o2, 0, h2, a2, 0, d2) === 0) {
            var S2 = p(x2, s2);
            return v(n2), S2;
          }
          g(n2, "invalid usage");
        }
        function rt(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_stream_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_stream_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function tt(e3) {
          var r3 = [];
          i(e3);
          var a2 = new l(0 | t2._crypto_stream_xchacha20_keybytes()), _2 = a2.address;
          r3.push(_2), t2._crypto_stream_xchacha20_keygen(_2);
          var s2 = p(a2, e3);
          return v(r3), s2;
        }
        function at(e3, r3, a2, _2) {
          var s2 = [];
          i(_2);
          var n2 = u(e3 = m(s2, e3, "input_message")), c2 = e3.length;
          s2.push(n2), r3 = m(s2, r3, "nonce");
          var o2, h2 = 0 | t2._crypto_stream_xchacha20_noncebytes();
          r3.length !== h2 && b(s2, "invalid nonce length"), o2 = u(r3), s2.push(o2), a2 = m(s2, a2, "key");
          var y2, d2 = 0 | t2._crypto_stream_xchacha20_keybytes();
          a2.length !== d2 && b(s2, "invalid key length"), y2 = u(a2), s2.push(y2);
          var f2 = new l(0 | c2), E2 = f2.address;
          if (s2.push(E2), t2._crypto_stream_xchacha20_xor(E2, n2, c2, 0, o2, y2) === 0) {
            var x2 = p(f2, _2);
            return v(s2), x2;
          }
          g(s2, "invalid usage");
        }
        function _t(e3, r3, a2, _2, s2) {
          var n2 = [];
          i(s2);
          var c2 = u(e3 = m(n2, e3, "input_message")), o2 = e3.length;
          n2.push(c2), r3 = m(n2, r3, "nonce");
          var h2, y2 = 0 | t2._crypto_stream_xchacha20_noncebytes();
          r3.length !== y2 && b(n2, "invalid nonce length"), h2 = u(r3), n2.push(h2), f(n2, a2, "nonce_increment"), (typeof a2 != "number" || (0 | a2) !== a2 || a2 < 0) && b(n2, "nonce_increment must be an unsigned integer"), _2 = m(n2, _2, "key");
          var d2, E2 = 0 | t2._crypto_stream_xchacha20_keybytes();
          _2.length !== E2 && b(n2, "invalid key length"), d2 = u(_2), n2.push(d2);
          var x2 = new l(0 | o2), k2 = x2.address;
          if (n2.push(k2), t2._crypto_stream_xchacha20_xor_ic(k2, c2, o2, 0, h2, a2, 0, d2) === 0) {
            var S2 = p(x2, s2);
            return v(n2), S2;
          }
          g(n2, "invalid usage");
        }
        function st(e3, r3) {
          var a2 = [];
          i(r3), f(a2, e3, "length"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(a2, "length must be an unsigned integer");
          var _2 = new l(0 | e3), s2 = _2.address;
          a2.push(s2), t2._randombytes_buf(s2, e3);
          var n2 = p(_2, r3);
          return v(a2), n2;
        }
        function nt(e3, r3, a2) {
          var _2 = [];
          i(a2), f(_2, e3, "length"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(_2, "length must be an unsigned integer"), r3 = m(_2, r3, "seed");
          var s2, n2 = 0 | t2._randombytes_seedbytes();
          r3.length !== n2 && b(_2, "invalid seed length"), s2 = u(r3), _2.push(s2);
          var c2 = new l(0 | e3), o2 = c2.address;
          _2.push(o2), t2._randombytes_buf_deterministic(o2, e3, s2);
          var h2 = p(c2, a2);
          return v(_2), h2;
        }
        function ct(e3) {
          i(e3), t2._randombytes_close();
        }
        function ot(e3) {
          i(e3);
          var r3 = t2._randombytes_random() >>> 0;
          return v([]), r3;
        }
        function ht(e3, r3) {
          var a2 = [];
          i(r3);
          for (var _2 = t2._malloc(24), s2 = 0; s2 < 6; s2++)
            t2.setValue(_2 + 4 * s2, t2.Runtime.addFunction(e3[["implementation_name", "random", "stir", "uniform", "buf", "close"][s2]]), "i32");
          (0 | t2._randombytes_set_implementation(_2)) != 0 && g(a2, "unsupported implementation"), v(a2);
        }
        function pt(e3) {
          i(e3), t2._randombytes_stir();
        }
        function yt(e3, r3) {
          var a2 = [];
          i(r3), f(a2, e3, "upper_bound"), (typeof e3 != "number" || (0 | e3) !== e3 || e3 < 0) && b(a2, "upper_bound must be an unsigned integer");
          var _2 = t2._randombytes_uniform(e3) >>> 0;
          return v(a2), _2;
        }
        function it() {
          var e3 = t2._sodium_version_string(), r3 = t2.UTF8ToString(e3);
          return v([]), r3;
        }
        return l.prototype.to_Uint8Array = function() {
          var e3 = new Uint8Array(this.length);
          return e3.set(t2.HEAPU8.subarray(this.address, this.address + this.length)), e3;
        }, e2.add = function(e3, r3) {
          if (!(e3 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can added");
          var t3 = e3.length, a2 = 0, _2 = 0;
          if (r3.length != e3.length)
            throw new TypeError("Arguments must have the same length");
          for (_2 = 0; _2 < t3; _2++)
            a2 >>= 8, a2 += e3[_2] + r3[_2], e3[_2] = 255 & a2;
        }, e2.base64_variants = c, e2.compare = function(e3, r3) {
          if (!(e3 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be compared");
          if (e3.length !== r3.length)
            throw new TypeError("Only instances of identical length can be compared");
          for (var t3 = 0, a2 = 1, _2 = e3.length; _2-- > 0; )
            t3 |= r3[_2] - e3[_2] >> 8 & a2, a2 &= (r3[_2] ^ e3[_2]) - 1 >> 8;
          return t3 + t3 + a2 - 1;
        }, e2.from_base64 = function(e3, r3) {
          r3 = o(r3);
          var a2, _2 = [], s2 = new l(3 * (e3 = m(_2, e3, "input")).length / 4), n2 = u(e3), c2 = d(4), h2 = d(4);
          return _2.push(n2), _2.push(s2.address), _2.push(s2.result_bin_len_p), _2.push(s2.b64_end_p), t2._sodium_base642bin(s2.address, s2.length, n2, e3.length, 0, c2, h2, r3) !== 0 && g(_2, "invalid input"), t2.getValue(h2, "i32") - n2 !== e3.length && g(_2, "incomplete input"), s2.length = t2.getValue(c2, "i32"), a2 = s2.to_Uint8Array(), v(_2), a2;
        }, e2.from_hex = function(e3) {
          var r3, a2 = [], _2 = new l((e3 = m(a2, e3, "input")).length / 2), s2 = u(e3), n2 = d(4);
          return a2.push(s2), a2.push(_2.address), a2.push(_2.hex_end_p), t2._sodium_hex2bin(_2.address, _2.length, s2, e3.length, 0, 0, n2) !== 0 && g(a2, "invalid input"), t2.getValue(n2, "i32") - s2 !== e3.length && g(a2, "incomplete input"), r3 = _2.to_Uint8Array(), v(a2), r3;
        }, e2.from_string = _, e2.increment = function(e3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be incremented");
          for (var r3 = 256, t3 = 0, a2 = e3.length; t3 < a2; t3++)
            r3 >>= 8, r3 += e3[t3], e3[t3] = 255 & r3;
        }, e2.is_zero = function(e3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be checked");
          for (var r3 = 0, t3 = 0, a2 = e3.length; t3 < a2; t3++)
            r3 |= e3[t3];
          return r3 === 0;
        }, e2.libsodium = r2, e2.memcmp = function(e3, r3) {
          if (!(e3 instanceof Uint8Array && r3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be compared");
          if (e3.length !== r3.length)
            throw new TypeError("Only instances of identical length can be compared");
          for (var t3 = 0, a2 = 0, _2 = e3.length; a2 < _2; a2++)
            t3 |= e3[a2] ^ r3[a2];
          return t3 === 0;
        }, e2.memzero = function(e3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("Only Uint8Array instances can be wiped");
          for (var r3 = 0, t3 = e3.length; r3 < t3; r3++)
            e3[r3] = 0;
        }, e2.output_formats = function() {
          return ["uint8array", "text", "hex", "base64"];
        }, e2.pad = function(e3, r3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("buffer must be a Uint8Array");
          if ((r3 |= 0) <= 0)
            throw new Error("block size must be > 0");
          var a2, _2 = [], s2 = d(4), n2 = 1, c2 = 0, o2 = 0 | e3.length, h2 = new l(o2 + r3);
          _2.push(s2), _2.push(h2.address);
          for (var p2 = h2.address, y2 = h2.address + o2 + r3; p2 < y2; p2++)
            t2.HEAPU8[p2] = e3[c2], c2 += n2 = 1 & ~((65535 & ((o2 -= n2) >>> 48 | o2 >>> 32 | o2 >>> 16 | o2)) - 1 >> 16);
          return t2._sodium_pad(s2, h2.address, e3.length, r3, h2.length) !== 0 && g(_2, "internal error"), h2.length = t2.getValue(s2, "i32"), a2 = h2.to_Uint8Array(), v(_2), a2;
        }, e2.unpad = function(e3, r3) {
          if (!(e3 instanceof Uint8Array))
            throw new TypeError("buffer must be a Uint8Array");
          if ((r3 |= 0) <= 0)
            throw new Error("block size must be > 0");
          var a2 = [], _2 = u(e3), s2 = d(4);
          return a2.push(_2), a2.push(s2), t2._sodium_unpad(s2, _2, e3.length, r3) !== 0 && g(a2, "unsupported/invalid padding"), e3 = (e3 = new Uint8Array(e3)).subarray(0, t2.getValue(s2, "i32")), v(a2), e3;
        }, e2.ready = a, e2.symbols = function() {
          return Object.keys(e2).sort();
        }, e2.to_base64 = h, e2.to_hex = n, e2.to_string = s, e2;
      }
      var t = typeof e.sodium == "object" && typeof e.sodium.onload == "function" ? e.sodium.onload : null;
      typeof define == "function" && define.amd ? define(["exports", "libsodium-sumo"], r) : typeof exports == "object" && typeof exports.nodeName != "string" ? r(exports, require_libsodium_sumo()) : e.sodium = r(e.commonJsStrict = {}, e.libsodium), t && e.sodium.ready.then(function() {
        t(e.sodium);
      });
    }(exports);
  }
});

// node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS({
  "node_modules/inherits/inherits_browser.js"(exports, module) {
    init_shim();
    if (typeof Object.create === "function") {
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  }
});

// node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  "node_modules/safe-buffer/index.js"(exports, module) {
    init_shim();
    var buffer = require_buffer();
    var Buffer3 = buffer.Buffer;
    function copyProps(src, dst) {
      for (var key2 in src) {
        dst[key2] = src[key2];
      }
    }
    if (Buffer3.from && Buffer3.alloc && Buffer3.allocUnsafe && Buffer3.allocUnsafeSlow) {
      module.exports = buffer;
    } else {
      copyProps(buffer, exports);
      exports.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer3(arg, encodingOrOffset, length);
    }
    SafeBuffer.prototype = Object.create(Buffer3.prototype);
    copyProps(Buffer3, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer3(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer3(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer3(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node_modules/events/events.js
var require_events = __commonJS({
  "node_modules/events/events.js"(exports, module) {
    "use strict";
    init_shim();
    var R = typeof Reflect === "object" ? Reflect : null;
    var ReflectApply = R && typeof R.apply === "function" ? R.apply : function ReflectApply2(target, receiver, args) {
      return Function.prototype.apply.call(target, receiver, args);
    };
    var ReflectOwnKeys;
    if (R && typeof R.ownKeys === "function") {
      ReflectOwnKeys = R.ownKeys;
    } else if (Object.getOwnPropertySymbols) {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
      };
    } else {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target);
      };
    }
    function ProcessEmitWarning(warning) {
      if (console && console.warn)
        console.warn(warning);
    }
    var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value) {
      return value !== value;
    };
    function EventEmitter() {
      EventEmitter.init.call(this);
    }
    module.exports = EventEmitter;
    module.exports.once = once;
    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = void 0;
    EventEmitter.prototype._eventsCount = 0;
    EventEmitter.prototype._maxListeners = void 0;
    var defaultMaxListeners = 10;
    function checkListener(listener) {
      if (typeof listener !== "function") {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
    }
    Object.defineProperty(EventEmitter, "defaultMaxListeners", {
      enumerable: true,
      get: function() {
        return defaultMaxListeners;
      },
      set: function(arg) {
        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
        }
        defaultMaxListeners = arg;
      }
    });
    EventEmitter.init = function() {
      if (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) {
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
      }
      this._maxListeners = this._maxListeners || void 0;
    };
    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
      if (typeof n !== "number" || n < 0 || NumberIsNaN(n)) {
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
      }
      this._maxListeners = n;
      return this;
    };
    function _getMaxListeners(that) {
      if (that._maxListeners === void 0)
        return EventEmitter.defaultMaxListeners;
      return that._maxListeners;
    }
    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
      return _getMaxListeners(this);
    };
    EventEmitter.prototype.emit = function emit(type) {
      var args = [];
      for (var i = 1; i < arguments.length; i++)
        args.push(arguments[i]);
      var doError = type === "error";
      var events = this._events;
      if (events !== void 0)
        doError = doError && events.error === void 0;
      else if (!doError)
        return false;
      if (doError) {
        var er;
        if (args.length > 0)
          er = args[0];
        if (er instanceof Error) {
          throw er;
        }
        var err = new Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
        err.context = er;
        throw err;
      }
      var handler = events[type];
      if (handler === void 0)
        return false;
      if (typeof handler === "function") {
        ReflectApply(handler, this, args);
      } else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for (var i = 0; i < len; ++i)
          ReflectApply(listeners[i], this, args);
      }
      return true;
    };
    function _addListener(target, type, listener, prepend) {
      var m;
      var events;
      var existing;
      checkListener(listener);
      events = target._events;
      if (events === void 0) {
        events = target._events = /* @__PURE__ */ Object.create(null);
        target._eventsCount = 0;
      } else {
        if (events.newListener !== void 0) {
          target.emit("newListener", type, listener.listener ? listener.listener : listener);
          events = target._events;
        }
        existing = events[type];
      }
      if (existing === void 0) {
        existing = events[type] = listener;
        ++target._eventsCount;
      } else {
        if (typeof existing === "function") {
          existing = events[type] = prepend ? [listener, existing] : [existing, listener];
        } else if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        }
        m = _getMaxListeners(target);
        if (m > 0 && existing.length > m && !existing.warned) {
          existing.warned = true;
          var w = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          w.name = "MaxListenersExceededWarning";
          w.emitter = target;
          w.type = type;
          w.count = existing.length;
          ProcessEmitWarning(w);
        }
      }
      return target;
    }
    EventEmitter.prototype.addListener = function addListener(type, listener) {
      return _addListener(this, type, listener, false);
    };
    EventEmitter.prototype.on = EventEmitter.prototype.addListener;
    EventEmitter.prototype.prependListener = function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };
    function onceWrapper() {
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0)
          return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
      }
    }
    function _onceWrap(target, type, listener) {
      var state = { fired: false, wrapFn: void 0, target, type, listener };
      var wrapped = onceWrapper.bind(state);
      wrapped.listener = listener;
      state.wrapFn = wrapped;
      return wrapped;
    }
    EventEmitter.prototype.once = function once2(type, listener) {
      checkListener(listener);
      this.on(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter.prototype.removeListener = function removeListener(type, listener) {
      var list, events, position, i, originalListener;
      checkListener(listener);
      events = this._events;
      if (events === void 0)
        return this;
      list = events[type];
      if (list === void 0)
        return this;
      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = /* @__PURE__ */ Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit("removeListener", type, list.listener || listener);
        }
      } else if (typeof list !== "function") {
        position = -1;
        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }
        if (position < 0)
          return this;
        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }
        if (list.length === 1)
          events[type] = list[0];
        if (events.removeListener !== void 0)
          this.emit("removeListener", type, originalListener || listener);
      }
      return this;
    };
    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
    EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
      var listeners, events, i;
      events = this._events;
      if (events === void 0)
        return this;
      if (events.removeListener === void 0) {
        if (arguments.length === 0) {
          this._events = /* @__PURE__ */ Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== void 0) {
          if (--this._eventsCount === 0)
            this._events = /* @__PURE__ */ Object.create(null);
          else
            delete events[type];
        }
        return this;
      }
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key2;
        for (i = 0; i < keys.length; ++i) {
          key2 = keys[i];
          if (key2 === "removeListener")
            continue;
          this.removeAllListeners(key2);
        }
        this.removeAllListeners("removeListener");
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
        return this;
      }
      listeners = events[type];
      if (typeof listeners === "function") {
        this.removeListener(type, listeners);
      } else if (listeners !== void 0) {
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }
      return this;
    };
    function _listeners(target, type, unwrap) {
      var events = target._events;
      if (events === void 0)
        return [];
      var evlistener = events[type];
      if (evlistener === void 0)
        return [];
      if (typeof evlistener === "function")
        return unwrap ? [evlistener.listener || evlistener] : [evlistener];
      return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
    }
    EventEmitter.prototype.listeners = function listeners(type) {
      return _listeners(this, type, true);
    };
    EventEmitter.prototype.rawListeners = function rawListeners(type) {
      return _listeners(this, type, false);
    };
    EventEmitter.listenerCount = function(emitter, type) {
      if (typeof emitter.listenerCount === "function") {
        return emitter.listenerCount(type);
      } else {
        return listenerCount.call(emitter, type);
      }
    };
    EventEmitter.prototype.listenerCount = listenerCount;
    function listenerCount(type) {
      var events = this._events;
      if (events !== void 0) {
        var evlistener = events[type];
        if (typeof evlistener === "function") {
          return 1;
        } else if (evlistener !== void 0) {
          return evlistener.length;
        }
      }
      return 0;
    }
    EventEmitter.prototype.eventNames = function eventNames() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };
    function arrayClone(arr, n) {
      var copy = new Array(n);
      for (var i = 0; i < n; ++i)
        copy[i] = arr[i];
      return copy;
    }
    function spliceOne(list, index) {
      for (; index + 1 < list.length; index++)
        list[index] = list[index + 1];
      list.pop();
    }
    function unwrapListeners(arr) {
      var ret = new Array(arr.length);
      for (var i = 0; i < ret.length; ++i) {
        ret[i] = arr[i].listener || arr[i];
      }
      return ret;
    }
    function once(emitter, name) {
      return new Promise(function(resolve, reject) {
        function errorListener(err) {
          emitter.removeListener(name, resolver);
          reject(err);
        }
        function resolver() {
          if (typeof emitter.removeListener === "function") {
            emitter.removeListener("error", errorListener);
          }
          resolve([].slice.call(arguments));
        }
        ;
        eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
        if (name !== "error") {
          addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
        }
      });
    }
    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
      if (typeof emitter.on === "function") {
        eventTargetAgnosticAddListener(emitter, "error", handler, flags);
      }
    }
    function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
      if (typeof emitter.on === "function") {
        if (flags.once) {
          emitter.once(name, listener);
        } else {
          emitter.on(name, listener);
        }
      } else if (typeof emitter.addEventListener === "function") {
        emitter.addEventListener(name, function wrapListener(arg) {
          if (flags.once) {
            emitter.removeEventListener(name, wrapListener);
          }
          listener(arg);
        });
      } else {
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
      }
    }
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js
var require_stream_browser = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js"(exports, module) {
    init_shim();
    module.exports = require_events().EventEmitter;
  }
});

// (disabled):node_modules/util/util.js
var require_util = __commonJS({
  "(disabled):node_modules/util/util.js"() {
    init_shim();
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js
var require_buffer_list = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js"(exports, module) {
    "use strict";
    init_shim();
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key2) {
            _defineProperty(target, key2, source[key2]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key2) {
            Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var _require = require_buffer();
    var Buffer3 = _require.Buffer;
    var _require2 = require_util();
    var inspect4 = _require2.inspect;
    var custom = inspect4 && inspect4.custom || "inspect";
    function copyBuffer(src, target, offset) {
      Buffer3.prototype.copy.call(src, target, offset);
    }
    module.exports = /* @__PURE__ */ function() {
      function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      _createClass(BufferList, [{
        key: "push",
        value: function push(v) {
          var entry = {
            data: v,
            next: null
          };
          if (this.length > 0)
            this.tail.next = entry;
          else
            this.head = entry;
          this.tail = entry;
          ++this.length;
        }
      }, {
        key: "unshift",
        value: function unshift(v) {
          var entry = {
            data: v,
            next: this.head
          };
          if (this.length === 0)
            this.tail = entry;
          this.head = entry;
          ++this.length;
        }
      }, {
        key: "shift",
        value: function shift() {
          if (this.length === 0)
            return;
          var ret = this.head.data;
          if (this.length === 1)
            this.head = this.tail = null;
          else
            this.head = this.head.next;
          --this.length;
          return ret;
        }
      }, {
        key: "clear",
        value: function clear() {
          this.head = this.tail = null;
          this.length = 0;
        }
      }, {
        key: "join",
        value: function join(s) {
          if (this.length === 0)
            return "";
          var p = this.head;
          var ret = "" + p.data;
          while (p = p.next) {
            ret += s + p.data;
          }
          return ret;
        }
      }, {
        key: "concat",
        value: function concat2(n) {
          if (this.length === 0)
            return Buffer3.alloc(0);
          var ret = Buffer3.allocUnsafe(n >>> 0);
          var p = this.head;
          var i = 0;
          while (p) {
            copyBuffer(p.data, ret, i);
            i += p.data.length;
            p = p.next;
          }
          return ret;
        }
      }, {
        key: "consume",
        value: function consume(n, hasStrings) {
          var ret;
          if (n < this.head.data.length) {
            ret = this.head.data.slice(0, n);
            this.head.data = this.head.data.slice(n);
          } else if (n === this.head.data.length) {
            ret = this.shift();
          } else {
            ret = hasStrings ? this._getString(n) : this._getBuffer(n);
          }
          return ret;
        }
      }, {
        key: "first",
        value: function first() {
          return this.head.data;
        }
      }, {
        key: "_getString",
        value: function _getString(n) {
          var p = this.head;
          var c = 1;
          var ret = p.data;
          n -= ret.length;
          while (p = p.next) {
            var str = p.data;
            var nb = n > str.length ? str.length : n;
            if (nb === str.length)
              ret += str;
            else
              ret += str.slice(0, n);
            n -= nb;
            if (n === 0) {
              if (nb === str.length) {
                ++c;
                if (p.next)
                  this.head = p.next;
                else
                  this.head = this.tail = null;
              } else {
                this.head = p;
                p.data = str.slice(nb);
              }
              break;
            }
            ++c;
          }
          this.length -= c;
          return ret;
        }
      }, {
        key: "_getBuffer",
        value: function _getBuffer(n) {
          var ret = Buffer3.allocUnsafe(n);
          var p = this.head;
          var c = 1;
          p.data.copy(ret);
          n -= p.data.length;
          while (p = p.next) {
            var buf = p.data;
            var nb = n > buf.length ? buf.length : n;
            buf.copy(ret, ret.length - n, 0, nb);
            n -= nb;
            if (n === 0) {
              if (nb === buf.length) {
                ++c;
                if (p.next)
                  this.head = p.next;
                else
                  this.head = this.tail = null;
              } else {
                this.head = p;
                p.data = buf.slice(nb);
              }
              break;
            }
            ++c;
          }
          this.length -= c;
          return ret;
        }
      }, {
        key: custom,
        value: function value(_, options) {
          return inspect4(this, _objectSpread({}, options, {
            depth: 0,
            customInspect: false
          }));
        }
      }]);
      return BufferList;
    }();
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js
var require_destroy = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js"(exports, module) {
    "use strict";
    init_shim();
    function destroy(err, cb) {
      var _this = this;
      var readableDestroyed = this._readableState && this._readableState.destroyed;
      var writableDestroyed = this._writableState && this._writableState.destroyed;
      if (readableDestroyed || writableDestroyed) {
        if (cb) {
          cb(err);
        } else if (err) {
          if (!this._writableState) {
            process.nextTick(emitErrorNT, this, err);
          } else if (!this._writableState.errorEmitted) {
            this._writableState.errorEmitted = true;
            process.nextTick(emitErrorNT, this, err);
          }
        }
        return this;
      }
      if (this._readableState) {
        this._readableState.destroyed = true;
      }
      if (this._writableState) {
        this._writableState.destroyed = true;
      }
      this._destroy(err || null, function(err2) {
        if (!cb && err2) {
          if (!_this._writableState) {
            process.nextTick(emitErrorAndCloseNT, _this, err2);
          } else if (!_this._writableState.errorEmitted) {
            _this._writableState.errorEmitted = true;
            process.nextTick(emitErrorAndCloseNT, _this, err2);
          } else {
            process.nextTick(emitCloseNT, _this);
          }
        } else if (cb) {
          process.nextTick(emitCloseNT, _this);
          cb(err2);
        } else {
          process.nextTick(emitCloseNT, _this);
        }
      });
      return this;
    }
    function emitErrorAndCloseNT(self2, err) {
      emitErrorNT(self2, err);
      emitCloseNT(self2);
    }
    function emitCloseNT(self2) {
      if (self2._writableState && !self2._writableState.emitClose)
        return;
      if (self2._readableState && !self2._readableState.emitClose)
        return;
      self2.emit("close");
    }
    function undestroy() {
      if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
      }
      if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
      }
    }
    function emitErrorNT(self2, err) {
      self2.emit("error", err);
    }
    function errorOrDestroy(stream, err) {
      var rState = stream._readableState;
      var wState = stream._writableState;
      if (rState && rState.autoDestroy || wState && wState.autoDestroy)
        stream.destroy(err);
      else
        stream.emit("error", err);
    }
    module.exports = {
      destroy,
      undestroy,
      errorOrDestroy
    };
  }
});

// node_modules/hash-base/node_modules/readable-stream/errors-browser.js
var require_errors_browser = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/errors-browser.js"(exports, module) {
    "use strict";
    init_shim();
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var codes = {};
    function createErrorType(code, message, Base) {
      if (!Base) {
        Base = Error;
      }
      function getMessage(arg1, arg2, arg3) {
        if (typeof message === "string") {
          return message;
        } else {
          return message(arg1, arg2, arg3);
        }
      }
      var NodeError = /* @__PURE__ */ function(_Base) {
        _inheritsLoose(NodeError2, _Base);
        function NodeError2(arg1, arg2, arg3) {
          return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
        }
        return NodeError2;
      }(Base);
      NodeError.prototype.name = Base.name;
      NodeError.prototype.code = code;
      codes[code] = NodeError;
    }
    function oneOf(expected, thing) {
      if (Array.isArray(expected)) {
        var len = expected.length;
        expected = expected.map(function(i) {
          return String(i);
        });
        if (len > 2) {
          return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1];
        } else if (len === 2) {
          return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
        } else {
          return "of ".concat(thing, " ").concat(expected[0]);
        }
      } else {
        return "of ".concat(thing, " ").concat(String(expected));
      }
    }
    function startsWith(str, search, pos) {
      return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
    }
    function endsWith(str, search, this_len) {
      if (this_len === void 0 || this_len > str.length) {
        this_len = str.length;
      }
      return str.substring(this_len - search.length, this_len) === search;
    }
    function includes(str, search, start) {
      if (typeof start !== "number") {
        start = 0;
      }
      if (start + search.length > str.length) {
        return false;
      } else {
        return str.indexOf(search, start) !== -1;
      }
    }
    createErrorType("ERR_INVALID_OPT_VALUE", function(name, value) {
      return 'The value "' + value + '" is invalid for option "' + name + '"';
    }, TypeError);
    createErrorType("ERR_INVALID_ARG_TYPE", function(name, expected, actual) {
      var determiner;
      if (typeof expected === "string" && startsWith(expected, "not ")) {
        determiner = "must not be";
        expected = expected.replace(/^not /, "");
      } else {
        determiner = "must be";
      }
      var msg;
      if (endsWith(name, " argument")) {
        msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
      } else {
        var type = includes(name, ".") ? "property" : "argument";
        msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
      }
      msg += ". Received type ".concat(typeof actual);
      return msg;
    }, TypeError);
    createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function(name) {
      return "The " + name + " method is not implemented";
    });
    createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    createErrorType("ERR_STREAM_DESTROYED", function(name) {
      return "Cannot call " + name + " after a stream was destroyed";
    });
    createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
    createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    createErrorType("ERR_UNKNOWN_ENCODING", function(arg) {
      return "Unknown encoding: " + arg;
    }, TypeError);
    createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    module.exports.codes = codes;
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js
var require_state = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js"(exports, module) {
    "use strict";
    init_shim();
    var ERR_INVALID_OPT_VALUE = require_errors_browser().codes.ERR_INVALID_OPT_VALUE;
    function highWaterMarkFrom(options, isDuplex, duplexKey) {
      return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
    }
    function getHighWaterMark(state, options, duplexKey, isDuplex) {
      var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
      if (hwm != null) {
        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
          var name = isDuplex ? duplexKey : "highWaterMark";
          throw new ERR_INVALID_OPT_VALUE(name, hwm);
        }
        return Math.floor(hwm);
      }
      return state.objectMode ? 16 : 16 * 1024;
    }
    module.exports = {
      getHighWaterMark
    };
  }
});

// node_modules/util-deprecate/browser.js
var require_browser2 = __commonJS({
  "node_modules/util-deprecate/browser.js"(exports, module) {
    init_shim();
    module.exports = deprecate;
    function deprecate(fn, msg) {
      if (config("noDeprecation")) {
        return fn;
      }
      var warned = false;
      function deprecated() {
        if (!warned) {
          if (config("throwDeprecation")) {
            throw new Error(msg);
          } else if (config("traceDeprecation")) {
            console.trace(msg);
          } else {
            console.warn(msg);
          }
          warned = true;
        }
        return fn.apply(this, arguments);
      }
      return deprecated;
    }
    function config(name) {
      try {
        if (!window.localStorage)
          return false;
      } catch (_) {
        return false;
      }
      var val = window.localStorage[name];
      if (val == null)
        return false;
      return String(val).toLowerCase() === "true";
    }
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js
var require_stream_writable = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Writable;
    function CorkedRequest(state) {
      var _this = this;
      this.next = null;
      this.entry = null;
      this.finish = function() {
        onCorkedFinish(_this, state);
      };
    }
    var Duplex;
    Writable.WritableState = WritableState;
    var internalUtil = {
      deprecate: require_browser2()
    };
    var Stream = require_stream_browser();
    var Buffer3 = require_buffer().Buffer;
    var OurUint8Array = window.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer3.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer3.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var destroyImpl = require_destroy();
    var _require = require_state();
    var getHighWaterMark = _require.getHighWaterMark;
    var _require$codes = require_errors_browser().codes;
    var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
    var ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE;
    var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
    var ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES;
    var ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END;
    var ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
    var errorOrDestroy = destroyImpl.errorOrDestroy;
    require_inherits_browser()(Writable, Stream);
    function nop() {
    }
    function WritableState(options, stream, isDuplex) {
      Duplex = Duplex || require_stream_duplex();
      options = options || {};
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof Duplex;
      this.objectMode = !!options.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options.writableObjectMode;
      this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex);
      this.finalCalled = false;
      this.needDrain = false;
      this.ending = false;
      this.ended = false;
      this.finished = false;
      this.destroyed = false;
      var noDecode = options.decodeStrings === false;
      this.decodeStrings = !noDecode;
      this.defaultEncoding = options.defaultEncoding || "utf8";
      this.length = 0;
      this.writing = false;
      this.corked = 0;
      this.sync = true;
      this.bufferProcessing = false;
      this.onwrite = function(er) {
        onwrite(stream, er);
      };
      this.writecb = null;
      this.writelen = 0;
      this.bufferedRequest = null;
      this.lastBufferedRequest = null;
      this.pendingcb = 0;
      this.prefinished = false;
      this.errorEmitted = false;
      this.emitClose = options.emitClose !== false;
      this.autoDestroy = !!options.autoDestroy;
      this.bufferedRequestCount = 0;
      this.corkedRequestsFree = new CorkedRequest(this);
    }
    WritableState.prototype.getBuffer = function getBuffer() {
      var current = this.bufferedRequest;
      var out = [];
      while (current) {
        out.push(current);
        current = current.next;
      }
      return out;
    };
    (function() {
      try {
        Object.defineProperty(WritableState.prototype, "buffer", {
          get: internalUtil.deprecate(function writableStateBufferGetter() {
            return this.getBuffer();
          }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
        });
      } catch (_) {
      }
    })();
    var realHasInstance;
    if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
      realHasInstance = Function.prototype[Symbol.hasInstance];
      Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function value(object) {
          if (realHasInstance.call(this, object))
            return true;
          if (this !== Writable)
            return false;
          return object && object._writableState instanceof WritableState;
        }
      });
    } else {
      realHasInstance = function realHasInstance2(object) {
        return object instanceof this;
      };
    }
    function Writable(options) {
      Duplex = Duplex || require_stream_duplex();
      var isDuplex = this instanceof Duplex;
      if (!isDuplex && !realHasInstance.call(Writable, this))
        return new Writable(options);
      this._writableState = new WritableState(options, this, isDuplex);
      this.writable = true;
      if (options) {
        if (typeof options.write === "function")
          this._write = options.write;
        if (typeof options.writev === "function")
          this._writev = options.writev;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
        if (typeof options.final === "function")
          this._final = options.final;
      }
      Stream.call(this);
    }
    Writable.prototype.pipe = function() {
      errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
    };
    function writeAfterEnd(stream, cb) {
      var er = new ERR_STREAM_WRITE_AFTER_END();
      errorOrDestroy(stream, er);
      process.nextTick(cb, er);
    }
    function validChunk(stream, state, chunk, cb) {
      var er;
      if (chunk === null) {
        er = new ERR_STREAM_NULL_VALUES();
      } else if (typeof chunk !== "string" && !state.objectMode) {
        er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk);
      }
      if (er) {
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
        return false;
      }
      return true;
    }
    Writable.prototype.write = function(chunk, encoding, cb) {
      var state = this._writableState;
      var ret = false;
      var isBuf = !state.objectMode && _isUint8Array(chunk);
      if (isBuf && !Buffer3.isBuffer(chunk)) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (isBuf)
        encoding = "buffer";
      else if (!encoding)
        encoding = state.defaultEncoding;
      if (typeof cb !== "function")
        cb = nop;
      if (state.ending)
        writeAfterEnd(this, cb);
      else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
      }
      return ret;
    };
    Writable.prototype.cork = function() {
      this._writableState.corked++;
    };
    Writable.prototype.uncork = function() {
      var state = this._writableState;
      if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest)
          clearBuffer(this, state);
      }
    };
    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
      if (typeof encoding === "string")
        encoding = encoding.toLowerCase();
      if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
        throw new ERR_UNKNOWN_ENCODING(encoding);
      this._writableState.defaultEncoding = encoding;
      return this;
    };
    Object.defineProperty(Writable.prototype, "writableBuffer", {
      enumerable: false,
      get: function get() {
        return this._writableState && this._writableState.getBuffer();
      }
    });
    function decodeChunk(state, chunk, encoding) {
      if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
        chunk = Buffer3.from(chunk, encoding);
      }
      return chunk;
    }
    Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    });
    function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
      if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
          isBuf = true;
          encoding = "buffer";
          chunk = newChunk;
        }
      }
      var len = state.objectMode ? 1 : chunk.length;
      state.length += len;
      var ret = state.length < state.highWaterMark;
      if (!ret)
        state.needDrain = true;
      if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
          chunk,
          encoding,
          isBuf,
          callback: cb,
          next: null
        };
        if (last) {
          last.next = state.lastBufferedRequest;
        } else {
          state.bufferedRequest = state.lastBufferedRequest;
        }
        state.bufferedRequestCount += 1;
      } else {
        doWrite(stream, state, false, len, chunk, encoding, cb);
      }
      return ret;
    }
    function doWrite(stream, state, writev, len, chunk, encoding, cb) {
      state.writelen = len;
      state.writecb = cb;
      state.writing = true;
      state.sync = true;
      if (state.destroyed)
        state.onwrite(new ERR_STREAM_DESTROYED("write"));
      else if (writev)
        stream._writev(chunk, state.onwrite);
      else
        stream._write(chunk, encoding, state.onwrite);
      state.sync = false;
    }
    function onwriteError(stream, state, sync, er, cb) {
      --state.pendingcb;
      if (sync) {
        process.nextTick(cb, er);
        process.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
      } else {
        cb(er);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
        finishMaybe(stream, state);
      }
    }
    function onwriteStateUpdate(state) {
      state.writing = false;
      state.writecb = null;
      state.length -= state.writelen;
      state.writelen = 0;
    }
    function onwrite(stream, er) {
      var state = stream._writableState;
      var sync = state.sync;
      var cb = state.writecb;
      if (typeof cb !== "function")
        throw new ERR_MULTIPLE_CALLBACK();
      onwriteStateUpdate(state);
      if (er)
        onwriteError(stream, state, sync, er, cb);
      else {
        var finished = needFinish(state) || stream.destroyed;
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
          clearBuffer(stream, state);
        }
        if (sync) {
          process.nextTick(afterWrite, stream, state, finished, cb);
        } else {
          afterWrite(stream, state, finished, cb);
        }
      }
    }
    function afterWrite(stream, state, finished, cb) {
      if (!finished)
        onwriteDrain(stream, state);
      state.pendingcb--;
      cb();
      finishMaybe(stream, state);
    }
    function onwriteDrain(stream, state) {
      if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit("drain");
      }
    }
    function clearBuffer(stream, state) {
      state.bufferProcessing = true;
      var entry = state.bufferedRequest;
      if (stream._writev && entry && entry.next) {
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while (entry) {
          buffer[count] = entry;
          if (!entry.isBuf)
            allBuffers = false;
          entry = entry.next;
          count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, "", holder.finish);
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
          state.corkedRequestsFree = holder.next;
          holder.next = null;
        } else {
          state.corkedRequestsFree = new CorkedRequest(state);
        }
        state.bufferedRequestCount = 0;
      } else {
        while (entry) {
          var chunk = entry.chunk;
          var encoding = entry.encoding;
          var cb = entry.callback;
          var len = state.objectMode ? 1 : chunk.length;
          doWrite(stream, state, false, len, chunk, encoding, cb);
          entry = entry.next;
          state.bufferedRequestCount--;
          if (state.writing) {
            break;
          }
        }
        if (entry === null)
          state.lastBufferedRequest = null;
      }
      state.bufferedRequest = entry;
      state.bufferProcessing = false;
    }
    Writable.prototype._write = function(chunk, encoding, cb) {
      cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
    };
    Writable.prototype._writev = null;
    Writable.prototype.end = function(chunk, encoding, cb) {
      var state = this._writableState;
      if (typeof chunk === "function") {
        cb = chunk;
        chunk = null;
        encoding = null;
      } else if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (chunk !== null && chunk !== void 0)
        this.write(chunk, encoding);
      if (state.corked) {
        state.corked = 1;
        this.uncork();
      }
      if (!state.ending)
        endWritable(this, state, cb);
      return this;
    };
    Object.defineProperty(Writable.prototype, "writableLength", {
      enumerable: false,
      get: function get() {
        return this._writableState.length;
      }
    });
    function needFinish(state) {
      return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
    }
    function callFinal(stream, state) {
      stream._final(function(err) {
        state.pendingcb--;
        if (err) {
          errorOrDestroy(stream, err);
        }
        state.prefinished = true;
        stream.emit("prefinish");
        finishMaybe(stream, state);
      });
    }
    function prefinish(stream, state) {
      if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === "function" && !state.destroyed) {
          state.pendingcb++;
          state.finalCalled = true;
          process.nextTick(callFinal, stream, state);
        } else {
          state.prefinished = true;
          stream.emit("prefinish");
        }
      }
    }
    function finishMaybe(stream, state) {
      var need = needFinish(state);
      if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
          state.finished = true;
          stream.emit("finish");
          if (state.autoDestroy) {
            var rState = stream._readableState;
            if (!rState || rState.autoDestroy && rState.endEmitted) {
              stream.destroy();
            }
          }
        }
      }
      return need;
    }
    function endWritable(stream, state, cb) {
      state.ending = true;
      finishMaybe(stream, state);
      if (cb) {
        if (state.finished)
          process.nextTick(cb);
        else
          stream.once("finish", cb);
      }
      state.ended = true;
      stream.writable = false;
    }
    function onCorkedFinish(corkReq, state, err) {
      var entry = corkReq.entry;
      corkReq.entry = null;
      while (entry) {
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
      }
      state.corkedRequestsFree.next = corkReq;
    }
    Object.defineProperty(Writable.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._writableState === void 0) {
          return false;
        }
        return this._writableState.destroyed;
      },
      set: function set(value) {
        if (!this._writableState) {
          return;
        }
        this._writableState.destroyed = value;
      }
    });
    Writable.prototype.destroy = destroyImpl.destroy;
    Writable.prototype._undestroy = destroyImpl.undestroy;
    Writable.prototype._destroy = function(err, cb) {
      cb(err);
    };
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js
var require_stream_duplex = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js"(exports, module) {
    "use strict";
    init_shim();
    var objectKeys = Object.keys || function(obj) {
      var keys2 = [];
      for (var key2 in obj) {
        keys2.push(key2);
      }
      return keys2;
    };
    module.exports = Duplex;
    var Readable = require_stream_readable();
    var Writable = require_stream_writable();
    require_inherits_browser()(Duplex, Readable);
    {
      keys = objectKeys(Writable.prototype);
      for (v = 0; v < keys.length; v++) {
        method = keys[v];
        if (!Duplex.prototype[method])
          Duplex.prototype[method] = Writable.prototype[method];
      }
    }
    var keys;
    var method;
    var v;
    function Duplex(options) {
      if (!(this instanceof Duplex))
        return new Duplex(options);
      Readable.call(this, options);
      Writable.call(this, options);
      this.allowHalfOpen = true;
      if (options) {
        if (options.readable === false)
          this.readable = false;
        if (options.writable === false)
          this.writable = false;
        if (options.allowHalfOpen === false) {
          this.allowHalfOpen = false;
          this.once("end", onend);
        }
      }
    }
    Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    });
    Object.defineProperty(Duplex.prototype, "writableBuffer", {
      enumerable: false,
      get: function get() {
        return this._writableState && this._writableState.getBuffer();
      }
    });
    Object.defineProperty(Duplex.prototype, "writableLength", {
      enumerable: false,
      get: function get() {
        return this._writableState.length;
      }
    });
    function onend() {
      if (this._writableState.ended)
        return;
      process.nextTick(onEndNT, this);
    }
    function onEndNT(self2) {
      self2.end();
    }
    Object.defineProperty(Duplex.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return false;
        }
        return this._readableState.destroyed && this._writableState.destroyed;
      },
      set: function set(value) {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return;
        }
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
      }
    });
  }
});

// node_modules/string_decoder/lib/string_decoder.js
var require_string_decoder = __commonJS({
  "node_modules/string_decoder/lib/string_decoder.js"(exports) {
    "use strict";
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var isEncoding = Buffer3.isEncoding || function(encoding) {
      encoding = "" + encoding;
      switch (encoding && encoding.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function _normalizeEncoding(enc) {
      if (!enc)
        return "utf8";
      var retried;
      while (true) {
        switch (enc) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return enc;
          default:
            if (retried)
              return;
            enc = ("" + enc).toLowerCase();
            retried = true;
        }
      }
    }
    function normalizeEncoding(enc) {
      var nenc = _normalizeEncoding(enc);
      if (typeof nenc !== "string" && (Buffer3.isEncoding === isEncoding || !isEncoding(enc)))
        throw new Error("Unknown encoding: " + enc);
      return nenc || enc;
    }
    exports.StringDecoder = StringDecoder;
    function StringDecoder(encoding) {
      this.encoding = normalizeEncoding(encoding);
      var nb;
      switch (this.encoding) {
        case "utf16le":
          this.text = utf16Text;
          this.end = utf16End;
          nb = 4;
          break;
        case "utf8":
          this.fillLast = utf8FillLast;
          nb = 4;
          break;
        case "base64":
          this.text = base64Text;
          this.end = base64End;
          nb = 3;
          break;
        default:
          this.write = simpleWrite;
          this.end = simpleEnd;
          return;
      }
      this.lastNeed = 0;
      this.lastTotal = 0;
      this.lastChar = Buffer3.allocUnsafe(nb);
    }
    StringDecoder.prototype.write = function(buf) {
      if (buf.length === 0)
        return "";
      var r;
      var i;
      if (this.lastNeed) {
        r = this.fillLast(buf);
        if (r === void 0)
          return "";
        i = this.lastNeed;
        this.lastNeed = 0;
      } else {
        i = 0;
      }
      if (i < buf.length)
        return r ? r + this.text(buf, i) : this.text(buf, i);
      return r || "";
    };
    StringDecoder.prototype.end = utf8End;
    StringDecoder.prototype.text = utf8Text;
    StringDecoder.prototype.fillLast = function(buf) {
      if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
      }
      buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
      this.lastNeed -= buf.length;
    };
    function utf8CheckByte(byte) {
      if (byte <= 127)
        return 0;
      else if (byte >> 5 === 6)
        return 2;
      else if (byte >> 4 === 14)
        return 3;
      else if (byte >> 3 === 30)
        return 4;
      return byte >> 6 === 2 ? -1 : -2;
    }
    function utf8CheckIncomplete(self2, buf, i) {
      var j = buf.length - 1;
      if (j < i)
        return 0;
      var nb = utf8CheckByte(buf[j]);
      if (nb >= 0) {
        if (nb > 0)
          self2.lastNeed = nb - 1;
        return nb;
      }
      if (--j < i || nb === -2)
        return 0;
      nb = utf8CheckByte(buf[j]);
      if (nb >= 0) {
        if (nb > 0)
          self2.lastNeed = nb - 2;
        return nb;
      }
      if (--j < i || nb === -2)
        return 0;
      nb = utf8CheckByte(buf[j]);
      if (nb >= 0) {
        if (nb > 0) {
          if (nb === 2)
            nb = 0;
          else
            self2.lastNeed = nb - 3;
        }
        return nb;
      }
      return 0;
    }
    function utf8CheckExtraBytes(self2, buf, p) {
      if ((buf[0] & 192) !== 128) {
        self2.lastNeed = 0;
        return "\uFFFD";
      }
      if (self2.lastNeed > 1 && buf.length > 1) {
        if ((buf[1] & 192) !== 128) {
          self2.lastNeed = 1;
          return "\uFFFD";
        }
        if (self2.lastNeed > 2 && buf.length > 2) {
          if ((buf[2] & 192) !== 128) {
            self2.lastNeed = 2;
            return "\uFFFD";
          }
        }
      }
    }
    function utf8FillLast(buf) {
      var p = this.lastTotal - this.lastNeed;
      var r = utf8CheckExtraBytes(this, buf, p);
      if (r !== void 0)
        return r;
      if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, p, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
      }
      buf.copy(this.lastChar, p, 0, buf.length);
      this.lastNeed -= buf.length;
    }
    function utf8Text(buf, i) {
      var total = utf8CheckIncomplete(this, buf, i);
      if (!this.lastNeed)
        return buf.toString("utf8", i);
      this.lastTotal = total;
      var end = buf.length - (total - this.lastNeed);
      buf.copy(this.lastChar, 0, end);
      return buf.toString("utf8", i, end);
    }
    function utf8End(buf) {
      var r = buf && buf.length ? this.write(buf) : "";
      if (this.lastNeed)
        return r + "\uFFFD";
      return r;
    }
    function utf16Text(buf, i) {
      if ((buf.length - i) % 2 === 0) {
        var r = buf.toString("utf16le", i);
        if (r) {
          var c = r.charCodeAt(r.length - 1);
          if (c >= 55296 && c <= 56319) {
            this.lastNeed = 2;
            this.lastTotal = 4;
            this.lastChar[0] = buf[buf.length - 2];
            this.lastChar[1] = buf[buf.length - 1];
            return r.slice(0, -1);
          }
        }
        return r;
      }
      this.lastNeed = 1;
      this.lastTotal = 2;
      this.lastChar[0] = buf[buf.length - 1];
      return buf.toString("utf16le", i, buf.length - 1);
    }
    function utf16End(buf) {
      var r = buf && buf.length ? this.write(buf) : "";
      if (this.lastNeed) {
        var end = this.lastTotal - this.lastNeed;
        return r + this.lastChar.toString("utf16le", 0, end);
      }
      return r;
    }
    function base64Text(buf, i) {
      var n = (buf.length - i) % 3;
      if (n === 0)
        return buf.toString("base64", i);
      this.lastNeed = 3 - n;
      this.lastTotal = 3;
      if (n === 1) {
        this.lastChar[0] = buf[buf.length - 1];
      } else {
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
      }
      return buf.toString("base64", i, buf.length - n);
    }
    function base64End(buf) {
      var r = buf && buf.length ? this.write(buf) : "";
      if (this.lastNeed)
        return r + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
      return r;
    }
    function simpleWrite(buf) {
      return buf.toString(this.encoding);
    }
    function simpleEnd(buf) {
      return buf && buf.length ? this.write(buf) : "";
    }
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js
var require_end_of_stream = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"(exports, module) {
    "use strict";
    init_shim();
    var ERR_STREAM_PREMATURE_CLOSE = require_errors_browser().codes.ERR_STREAM_PREMATURE_CLOSE;
    function once(callback) {
      var called = false;
      return function() {
        if (called)
          return;
        called = true;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        callback.apply(this, args);
      };
    }
    function noop() {
    }
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    function eos(stream, opts, callback) {
      if (typeof opts === "function")
        return eos(stream, null, opts);
      if (!opts)
        opts = {};
      callback = once(callback || noop);
      var readable = opts.readable || opts.readable !== false && stream.readable;
      var writable = opts.writable || opts.writable !== false && stream.writable;
      var onlegacyfinish = function onlegacyfinish2() {
        if (!stream.writable)
          onfinish();
      };
      var writableEnded = stream._writableState && stream._writableState.finished;
      var onfinish = function onfinish2() {
        writable = false;
        writableEnded = true;
        if (!readable)
          callback.call(stream);
      };
      var readableEnded = stream._readableState && stream._readableState.endEmitted;
      var onend = function onend2() {
        readable = false;
        readableEnded = true;
        if (!writable)
          callback.call(stream);
      };
      var onerror = function onerror2(err) {
        callback.call(stream, err);
      };
      var onclose = function onclose2() {
        var err;
        if (readable && !readableEnded) {
          if (!stream._readableState || !stream._readableState.ended)
            err = new ERR_STREAM_PREMATURE_CLOSE();
          return callback.call(stream, err);
        }
        if (writable && !writableEnded) {
          if (!stream._writableState || !stream._writableState.ended)
            err = new ERR_STREAM_PREMATURE_CLOSE();
          return callback.call(stream, err);
        }
      };
      var onrequest = function onrequest2() {
        stream.req.on("finish", onfinish);
      };
      if (isRequest(stream)) {
        stream.on("complete", onfinish);
        stream.on("abort", onclose);
        if (stream.req)
          onrequest();
        else
          stream.on("request", onrequest);
      } else if (writable && !stream._writableState) {
        stream.on("end", onlegacyfinish);
        stream.on("close", onlegacyfinish);
      }
      stream.on("end", onend);
      stream.on("finish", onfinish);
      if (opts.error !== false)
        stream.on("error", onerror);
      stream.on("close", onclose);
      return function() {
        stream.removeListener("complete", onfinish);
        stream.removeListener("abort", onclose);
        stream.removeListener("request", onrequest);
        if (stream.req)
          stream.req.removeListener("finish", onfinish);
        stream.removeListener("end", onlegacyfinish);
        stream.removeListener("close", onlegacyfinish);
        stream.removeListener("finish", onfinish);
        stream.removeListener("end", onend);
        stream.removeListener("error", onerror);
        stream.removeListener("close", onclose);
      };
    }
    module.exports = eos;
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js
var require_async_iterator = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js"(exports, module) {
    "use strict";
    init_shim();
    var _Object$setPrototypeO;
    function _defineProperty(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    var finished = require_end_of_stream();
    var kLastResolve = Symbol("lastResolve");
    var kLastReject = Symbol("lastReject");
    var kError = Symbol("error");
    var kEnded = Symbol("ended");
    var kLastPromise = Symbol("lastPromise");
    var kHandlePromise = Symbol("handlePromise");
    var kStream = Symbol("stream");
    function createIterResult(value, done) {
      return {
        value,
        done
      };
    }
    function readAndResolve(iter) {
      var resolve = iter[kLastResolve];
      if (resolve !== null) {
        var data = iter[kStream].read();
        if (data !== null) {
          iter[kLastPromise] = null;
          iter[kLastResolve] = null;
          iter[kLastReject] = null;
          resolve(createIterResult(data, false));
        }
      }
    }
    function onReadable(iter) {
      process.nextTick(readAndResolve, iter);
    }
    function wrapForNext(lastPromise, iter) {
      return function(resolve, reject) {
        lastPromise.then(function() {
          if (iter[kEnded]) {
            resolve(createIterResult(void 0, true));
            return;
          }
          iter[kHandlePromise](resolve, reject);
        }, reject);
      };
    }
    var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
    });
    var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
      get stream() {
        return this[kStream];
      },
      next: function next() {
        var _this = this;
        var error = this[kError];
        if (error !== null) {
          return Promise.reject(error);
        }
        if (this[kEnded]) {
          return Promise.resolve(createIterResult(void 0, true));
        }
        if (this[kStream].destroyed) {
          return new Promise(function(resolve, reject) {
            process.nextTick(function() {
              if (_this[kError]) {
                reject(_this[kError]);
              } else {
                resolve(createIterResult(void 0, true));
              }
            });
          });
        }
        var lastPromise = this[kLastPromise];
        var promise;
        if (lastPromise) {
          promise = new Promise(wrapForNext(lastPromise, this));
        } else {
          var data = this[kStream].read();
          if (data !== null) {
            return Promise.resolve(createIterResult(data, false));
          }
          promise = new Promise(this[kHandlePromise]);
        }
        this[kLastPromise] = promise;
        return promise;
      }
    }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
      return this;
    }), _defineProperty(_Object$setPrototypeO, "return", function _return() {
      var _this2 = this;
      return new Promise(function(resolve, reject) {
        _this2[kStream].destroy(null, function(err) {
          if (err) {
            reject(err);
            return;
          }
          resolve(createIterResult(void 0, true));
        });
      });
    }), _Object$setPrototypeO), AsyncIteratorPrototype);
    var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator2(stream) {
      var _Object$create;
      var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
        value: stream,
        writable: true
      }), _defineProperty(_Object$create, kLastResolve, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kLastReject, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kError, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kEnded, {
        value: stream._readableState.endEmitted,
        writable: true
      }), _defineProperty(_Object$create, kHandlePromise, {
        value: function value(resolve, reject) {
          var data = iterator[kStream].read();
          if (data) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(data, false));
          } else {
            iterator[kLastResolve] = resolve;
            iterator[kLastReject] = reject;
          }
        },
        writable: true
      }), _Object$create));
      iterator[kLastPromise] = null;
      finished(stream, function(err) {
        if (err && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var reject = iterator[kLastReject];
          if (reject !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            reject(err);
          }
          iterator[kError] = err;
          return;
        }
        var resolve = iterator[kLastResolve];
        if (resolve !== null) {
          iterator[kLastPromise] = null;
          iterator[kLastResolve] = null;
          iterator[kLastReject] = null;
          resolve(createIterResult(void 0, true));
        }
        iterator[kEnded] = true;
      });
      stream.on("readable", onReadable.bind(null, iterator));
      return iterator;
    };
    module.exports = createReadableStreamAsyncIterator;
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js
var require_from_browser = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js"(exports, module) {
    init_shim();
    module.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js
var require_stream_readable = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Readable;
    var Duplex;
    Readable.ReadableState = ReadableState;
    var EE = require_events().EventEmitter;
    var EElistenerCount = function EElistenerCount2(emitter, type) {
      return emitter.listeners(type).length;
    };
    var Stream = require_stream_browser();
    var Buffer3 = require_buffer().Buffer;
    var OurUint8Array = window.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer3.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer3.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var debugUtil = require_util();
    var debug;
    if (debugUtil && debugUtil.debuglog) {
      debug = debugUtil.debuglog("stream");
    } else {
      debug = function debug2() {
      };
    }
    var BufferList = require_buffer_list();
    var destroyImpl = require_destroy();
    var _require = require_state();
    var getHighWaterMark = _require.getHighWaterMark;
    var _require$codes = require_errors_browser().codes;
    var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
    var ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
    var StringDecoder;
    var createReadableStreamAsyncIterator;
    var from;
    require_inherits_browser()(Readable, Stream);
    var errorOrDestroy = destroyImpl.errorOrDestroy;
    var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
    function prependListener(emitter, event, fn) {
      if (typeof emitter.prependListener === "function")
        return emitter.prependListener(event, fn);
      if (!emitter._events || !emitter._events[event])
        emitter.on(event, fn);
      else if (Array.isArray(emitter._events[event]))
        emitter._events[event].unshift(fn);
      else
        emitter._events[event] = [fn, emitter._events[event]];
    }
    function ReadableState(options, stream, isDuplex) {
      Duplex = Duplex || require_stream_duplex();
      options = options || {};
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof Duplex;
      this.objectMode = !!options.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options.readableObjectMode;
      this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex);
      this.buffer = new BufferList();
      this.length = 0;
      this.pipes = null;
      this.pipesCount = 0;
      this.flowing = null;
      this.ended = false;
      this.endEmitted = false;
      this.reading = false;
      this.sync = true;
      this.needReadable = false;
      this.emittedReadable = false;
      this.readableListening = false;
      this.resumeScheduled = false;
      this.paused = true;
      this.emitClose = options.emitClose !== false;
      this.autoDestroy = !!options.autoDestroy;
      this.destroyed = false;
      this.defaultEncoding = options.defaultEncoding || "utf8";
      this.awaitDrain = 0;
      this.readingMore = false;
      this.decoder = null;
      this.encoding = null;
      if (options.encoding) {
        if (!StringDecoder)
          StringDecoder = require_string_decoder().StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
      }
    }
    function Readable(options) {
      Duplex = Duplex || require_stream_duplex();
      if (!(this instanceof Readable))
        return new Readable(options);
      var isDuplex = this instanceof Duplex;
      this._readableState = new ReadableState(options, this, isDuplex);
      this.readable = true;
      if (options) {
        if (typeof options.read === "function")
          this._read = options.read;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
      }
      Stream.call(this);
    }
    Object.defineProperty(Readable.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._readableState === void 0) {
          return false;
        }
        return this._readableState.destroyed;
      },
      set: function set(value) {
        if (!this._readableState) {
          return;
        }
        this._readableState.destroyed = value;
      }
    });
    Readable.prototype.destroy = destroyImpl.destroy;
    Readable.prototype._undestroy = destroyImpl.undestroy;
    Readable.prototype._destroy = function(err, cb) {
      cb(err);
    };
    Readable.prototype.push = function(chunk, encoding) {
      var state = this._readableState;
      var skipChunkCheck;
      if (!state.objectMode) {
        if (typeof chunk === "string") {
          encoding = encoding || state.defaultEncoding;
          if (encoding !== state.encoding) {
            chunk = Buffer3.from(chunk, encoding);
            encoding = "";
          }
          skipChunkCheck = true;
        }
      } else {
        skipChunkCheck = true;
      }
      return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
    };
    Readable.prototype.unshift = function(chunk) {
      return readableAddChunk(this, chunk, null, true, false);
    };
    function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
      debug("readableAddChunk", chunk);
      var state = stream._readableState;
      if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
      } else {
        var er;
        if (!skipChunkCheck)
          er = chunkInvalid(state, chunk);
        if (er) {
          errorOrDestroy(stream, er);
        } else if (state.objectMode || chunk && chunk.length > 0) {
          if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer3.prototype) {
            chunk = _uint8ArrayToBuffer(chunk);
          }
          if (addToFront) {
            if (state.endEmitted)
              errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
            else
              addChunk(stream, state, chunk, true);
          } else if (state.ended) {
            errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
          } else if (state.destroyed) {
            return false;
          } else {
            state.reading = false;
            if (state.decoder && !encoding) {
              chunk = state.decoder.write(chunk);
              if (state.objectMode || chunk.length !== 0)
                addChunk(stream, state, chunk, false);
              else
                maybeReadMore(stream, state);
            } else {
              addChunk(stream, state, chunk, false);
            }
          }
        } else if (!addToFront) {
          state.reading = false;
          maybeReadMore(stream, state);
        }
      }
      return !state.ended && (state.length < state.highWaterMark || state.length === 0);
    }
    function addChunk(stream, state, chunk, addToFront) {
      if (state.flowing && state.length === 0 && !state.sync) {
        state.awaitDrain = 0;
        stream.emit("data", chunk);
      } else {
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);
        if (state.needReadable)
          emitReadable(stream);
      }
      maybeReadMore(stream, state);
    }
    function chunkInvalid(state, chunk) {
      var er;
      if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
        er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
      }
      return er;
    }
    Readable.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Readable.prototype.setEncoding = function(enc) {
      if (!StringDecoder)
        StringDecoder = require_string_decoder().StringDecoder;
      var decoder = new StringDecoder(enc);
      this._readableState.decoder = decoder;
      this._readableState.encoding = this._readableState.decoder.encoding;
      var p = this._readableState.buffer.head;
      var content = "";
      while (p !== null) {
        content += decoder.write(p.data);
        p = p.next;
      }
      this._readableState.buffer.clear();
      if (content !== "")
        this._readableState.buffer.push(content);
      this._readableState.length = content.length;
      return this;
    };
    var MAX_HWM = 1073741824;
    function computeNewHighWaterMark(n) {
      if (n >= MAX_HWM) {
        n = MAX_HWM;
      } else {
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
      }
      return n;
    }
    function howMuchToRead(n, state) {
      if (n <= 0 || state.length === 0 && state.ended)
        return 0;
      if (state.objectMode)
        return 1;
      if (n !== n) {
        if (state.flowing && state.length)
          return state.buffer.head.data.length;
        else
          return state.length;
      }
      if (n > state.highWaterMark)
        state.highWaterMark = computeNewHighWaterMark(n);
      if (n <= state.length)
        return n;
      if (!state.ended) {
        state.needReadable = true;
        return 0;
      }
      return state.length;
    }
    Readable.prototype.read = function(n) {
      debug("read", n);
      n = parseInt(n, 10);
      var state = this._readableState;
      var nOrig = n;
      if (n !== 0)
        state.emittedReadable = false;
      if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug("read: emitReadable", state.length, state.ended);
        if (state.length === 0 && state.ended)
          endReadable(this);
        else
          emitReadable(this);
        return null;
      }
      n = howMuchToRead(n, state);
      if (n === 0 && state.ended) {
        if (state.length === 0)
          endReadable(this);
        return null;
      }
      var doRead = state.needReadable;
      debug("need readable", doRead);
      if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug("length less than watermark", doRead);
      }
      if (state.ended || state.reading) {
        doRead = false;
        debug("reading or ended", doRead);
      } else if (doRead) {
        debug("do read");
        state.reading = true;
        state.sync = true;
        if (state.length === 0)
          state.needReadable = true;
        this._read(state.highWaterMark);
        state.sync = false;
        if (!state.reading)
          n = howMuchToRead(nOrig, state);
      }
      var ret;
      if (n > 0)
        ret = fromList(n, state);
      else
        ret = null;
      if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
      } else {
        state.length -= n;
        state.awaitDrain = 0;
      }
      if (state.length === 0) {
        if (!state.ended)
          state.needReadable = true;
        if (nOrig !== n && state.ended)
          endReadable(this);
      }
      if (ret !== null)
        this.emit("data", ret);
      return ret;
    };
    function onEofChunk(stream, state) {
      debug("onEofChunk");
      if (state.ended)
        return;
      if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
          state.buffer.push(chunk);
          state.length += state.objectMode ? 1 : chunk.length;
        }
      }
      state.ended = true;
      if (state.sync) {
        emitReadable(stream);
      } else {
        state.needReadable = false;
        if (!state.emittedReadable) {
          state.emittedReadable = true;
          emitReadable_(stream);
        }
      }
    }
    function emitReadable(stream) {
      var state = stream._readableState;
      debug("emitReadable", state.needReadable, state.emittedReadable);
      state.needReadable = false;
      if (!state.emittedReadable) {
        debug("emitReadable", state.flowing);
        state.emittedReadable = true;
        process.nextTick(emitReadable_, stream);
      }
    }
    function emitReadable_(stream) {
      var state = stream._readableState;
      debug("emitReadable_", state.destroyed, state.length, state.ended);
      if (!state.destroyed && (state.length || state.ended)) {
        stream.emit("readable");
        state.emittedReadable = false;
      }
      state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
      flow(stream);
    }
    function maybeReadMore(stream, state) {
      if (!state.readingMore) {
        state.readingMore = true;
        process.nextTick(maybeReadMore_, stream, state);
      }
    }
    function maybeReadMore_(stream, state) {
      while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
        var len = state.length;
        debug("maybeReadMore read 0");
        stream.read(0);
        if (len === state.length)
          break;
      }
      state.readingMore = false;
    }
    Readable.prototype._read = function(n) {
      errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
    };
    Readable.prototype.pipe = function(dest, pipeOpts) {
      var src = this;
      var state = this._readableState;
      switch (state.pipesCount) {
        case 0:
          state.pipes = dest;
          break;
        case 1:
          state.pipes = [state.pipes, dest];
          break;
        default:
          state.pipes.push(dest);
          break;
      }
      state.pipesCount += 1;
      debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
      var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
      var endFn = doEnd ? onend : unpipe;
      if (state.endEmitted)
        process.nextTick(endFn);
      else
        src.once("end", endFn);
      dest.on("unpipe", onunpipe);
      function onunpipe(readable, unpipeInfo) {
        debug("onunpipe");
        if (readable === src) {
          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
            unpipeInfo.hasUnpiped = true;
            cleanup();
          }
        }
      }
      function onend() {
        debug("onend");
        dest.end();
      }
      var ondrain = pipeOnDrain(src);
      dest.on("drain", ondrain);
      var cleanedUp = false;
      function cleanup() {
        debug("cleanup");
        dest.removeListener("close", onclose);
        dest.removeListener("finish", onfinish);
        dest.removeListener("drain", ondrain);
        dest.removeListener("error", onerror);
        dest.removeListener("unpipe", onunpipe);
        src.removeListener("end", onend);
        src.removeListener("end", unpipe);
        src.removeListener("data", ondata);
        cleanedUp = true;
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
          ondrain();
      }
      src.on("data", ondata);
      function ondata(chunk) {
        debug("ondata");
        var ret = dest.write(chunk);
        debug("dest.write", ret);
        if (ret === false) {
          if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
            debug("false write response, pause", state.awaitDrain);
            state.awaitDrain++;
          }
          src.pause();
        }
      }
      function onerror(er) {
        debug("onerror", er);
        unpipe();
        dest.removeListener("error", onerror);
        if (EElistenerCount(dest, "error") === 0)
          errorOrDestroy(dest, er);
      }
      prependListener(dest, "error", onerror);
      function onclose() {
        dest.removeListener("finish", onfinish);
        unpipe();
      }
      dest.once("close", onclose);
      function onfinish() {
        debug("onfinish");
        dest.removeListener("close", onclose);
        unpipe();
      }
      dest.once("finish", onfinish);
      function unpipe() {
        debug("unpipe");
        src.unpipe(dest);
      }
      dest.emit("pipe", src);
      if (!state.flowing) {
        debug("pipe resume");
        src.resume();
      }
      return dest;
    };
    function pipeOnDrain(src) {
      return function pipeOnDrainFunctionResult() {
        var state = src._readableState;
        debug("pipeOnDrain", state.awaitDrain);
        if (state.awaitDrain)
          state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, "data")) {
          state.flowing = true;
          flow(src);
        }
      };
    }
    Readable.prototype.unpipe = function(dest) {
      var state = this._readableState;
      var unpipeInfo = {
        hasUnpiped: false
      };
      if (state.pipesCount === 0)
        return this;
      if (state.pipesCount === 1) {
        if (dest && dest !== state.pipes)
          return this;
        if (!dest)
          dest = state.pipes;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest)
          dest.emit("unpipe", this, unpipeInfo);
        return this;
      }
      if (!dest) {
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for (var i = 0; i < len; i++) {
          dests[i].emit("unpipe", this, {
            hasUnpiped: false
          });
        }
        return this;
      }
      var index = indexOf(state.pipes, dest);
      if (index === -1)
        return this;
      state.pipes.splice(index, 1);
      state.pipesCount -= 1;
      if (state.pipesCount === 1)
        state.pipes = state.pipes[0];
      dest.emit("unpipe", this, unpipeInfo);
      return this;
    };
    Readable.prototype.on = function(ev, fn) {
      var res = Stream.prototype.on.call(this, ev, fn);
      var state = this._readableState;
      if (ev === "data") {
        state.readableListening = this.listenerCount("readable") > 0;
        if (state.flowing !== false)
          this.resume();
      } else if (ev === "readable") {
        if (!state.endEmitted && !state.readableListening) {
          state.readableListening = state.needReadable = true;
          state.flowing = false;
          state.emittedReadable = false;
          debug("on readable", state.length, state.reading);
          if (state.length) {
            emitReadable(this);
          } else if (!state.reading) {
            process.nextTick(nReadingNextTick, this);
          }
        }
      }
      return res;
    };
    Readable.prototype.addListener = Readable.prototype.on;
    Readable.prototype.removeListener = function(ev, fn) {
      var res = Stream.prototype.removeListener.call(this, ev, fn);
      if (ev === "readable") {
        process.nextTick(updateReadableListening, this);
      }
      return res;
    };
    Readable.prototype.removeAllListeners = function(ev) {
      var res = Stream.prototype.removeAllListeners.apply(this, arguments);
      if (ev === "readable" || ev === void 0) {
        process.nextTick(updateReadableListening, this);
      }
      return res;
    };
    function updateReadableListening(self2) {
      var state = self2._readableState;
      state.readableListening = self2.listenerCount("readable") > 0;
      if (state.resumeScheduled && !state.paused) {
        state.flowing = true;
      } else if (self2.listenerCount("data") > 0) {
        self2.resume();
      }
    }
    function nReadingNextTick(self2) {
      debug("readable nexttick read 0");
      self2.read(0);
    }
    Readable.prototype.resume = function() {
      var state = this._readableState;
      if (!state.flowing) {
        debug("resume");
        state.flowing = !state.readableListening;
        resume(this, state);
      }
      state.paused = false;
      return this;
    };
    function resume(stream, state) {
      if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process.nextTick(resume_, stream, state);
      }
    }
    function resume_(stream, state) {
      debug("resume", state.reading);
      if (!state.reading) {
        stream.read(0);
      }
      state.resumeScheduled = false;
      stream.emit("resume");
      flow(stream);
      if (state.flowing && !state.reading)
        stream.read(0);
    }
    Readable.prototype.pause = function() {
      debug("call pause flowing=%j", this._readableState.flowing);
      if (this._readableState.flowing !== false) {
        debug("pause");
        this._readableState.flowing = false;
        this.emit("pause");
      }
      this._readableState.paused = true;
      return this;
    };
    function flow(stream) {
      var state = stream._readableState;
      debug("flow", state.flowing);
      while (state.flowing && stream.read() !== null) {
        ;
      }
    }
    Readable.prototype.wrap = function(stream) {
      var _this = this;
      var state = this._readableState;
      var paused = false;
      stream.on("end", function() {
        debug("wrapped end");
        if (state.decoder && !state.ended) {
          var chunk = state.decoder.end();
          if (chunk && chunk.length)
            _this.push(chunk);
        }
        _this.push(null);
      });
      stream.on("data", function(chunk) {
        debug("wrapped data");
        if (state.decoder)
          chunk = state.decoder.write(chunk);
        if (state.objectMode && (chunk === null || chunk === void 0))
          return;
        else if (!state.objectMode && (!chunk || !chunk.length))
          return;
        var ret = _this.push(chunk);
        if (!ret) {
          paused = true;
          stream.pause();
        }
      });
      for (var i in stream) {
        if (this[i] === void 0 && typeof stream[i] === "function") {
          this[i] = function methodWrap(method) {
            return function methodWrapReturnFunction() {
              return stream[method].apply(stream, arguments);
            };
          }(i);
        }
      }
      for (var n = 0; n < kProxyEvents.length; n++) {
        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
      }
      this._read = function(n2) {
        debug("wrapped _read", n2);
        if (paused) {
          paused = false;
          stream.resume();
        }
      };
      return this;
    };
    if (typeof Symbol === "function") {
      Readable.prototype[Symbol.asyncIterator] = function() {
        if (createReadableStreamAsyncIterator === void 0) {
          createReadableStreamAsyncIterator = require_async_iterator();
        }
        return createReadableStreamAsyncIterator(this);
      };
    }
    Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._readableState.highWaterMark;
      }
    });
    Object.defineProperty(Readable.prototype, "readableBuffer", {
      enumerable: false,
      get: function get() {
        return this._readableState && this._readableState.buffer;
      }
    });
    Object.defineProperty(Readable.prototype, "readableFlowing", {
      enumerable: false,
      get: function get() {
        return this._readableState.flowing;
      },
      set: function set(state) {
        if (this._readableState) {
          this._readableState.flowing = state;
        }
      }
    });
    Readable._fromList = fromList;
    Object.defineProperty(Readable.prototype, "readableLength", {
      enumerable: false,
      get: function get() {
        return this._readableState.length;
      }
    });
    function fromList(n, state) {
      if (state.length === 0)
        return null;
      var ret;
      if (state.objectMode)
        ret = state.buffer.shift();
      else if (!n || n >= state.length) {
        if (state.decoder)
          ret = state.buffer.join("");
        else if (state.buffer.length === 1)
          ret = state.buffer.first();
        else
          ret = state.buffer.concat(state.length);
        state.buffer.clear();
      } else {
        ret = state.buffer.consume(n, state.decoder);
      }
      return ret;
    }
    function endReadable(stream) {
      var state = stream._readableState;
      debug("endReadable", state.endEmitted);
      if (!state.endEmitted) {
        state.ended = true;
        process.nextTick(endReadableNT, state, stream);
      }
    }
    function endReadableNT(state, stream) {
      debug("endReadableNT", state.endEmitted, state.length);
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit("end");
        if (state.autoDestroy) {
          var wState = stream._writableState;
          if (!wState || wState.autoDestroy && wState.finished) {
            stream.destroy();
          }
        }
      }
    }
    if (typeof Symbol === "function") {
      Readable.from = function(iterable, opts) {
        if (from === void 0) {
          from = require_from_browser();
        }
        return from(Readable, iterable, opts);
      };
    }
    function indexOf(xs, x) {
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x)
          return i;
      }
      return -1;
    }
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js
var require_stream_transform = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Transform;
    var _require$codes = require_errors_browser().codes;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
    var ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING;
    var ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
    var Duplex = require_stream_duplex();
    require_inherits_browser()(Transform, Duplex);
    function afterTransform(er, data) {
      var ts = this._transformState;
      ts.transforming = false;
      var cb = ts.writecb;
      if (cb === null) {
        return this.emit("error", new ERR_MULTIPLE_CALLBACK());
      }
      ts.writechunk = null;
      ts.writecb = null;
      if (data != null)
        this.push(data);
      cb(er);
      var rs = this._readableState;
      rs.reading = false;
      if (rs.needReadable || rs.length < rs.highWaterMark) {
        this._read(rs.highWaterMark);
      }
    }
    function Transform(options) {
      if (!(this instanceof Transform))
        return new Transform(options);
      Duplex.call(this, options);
      this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      };
      this._readableState.needReadable = true;
      this._readableState.sync = false;
      if (options) {
        if (typeof options.transform === "function")
          this._transform = options.transform;
        if (typeof options.flush === "function")
          this._flush = options.flush;
      }
      this.on("prefinish", prefinish);
    }
    function prefinish() {
      var _this = this;
      if (typeof this._flush === "function" && !this._readableState.destroyed) {
        this._flush(function(er, data) {
          done(_this, er, data);
        });
      } else {
        done(this, null, null);
      }
    }
    Transform.prototype.push = function(chunk, encoding) {
      this._transformState.needTransform = false;
      return Duplex.prototype.push.call(this, chunk, encoding);
    };
    Transform.prototype._transform = function(chunk, encoding, cb) {
      cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
    };
    Transform.prototype._write = function(chunk, encoding, cb) {
      var ts = this._transformState;
      ts.writecb = cb;
      ts.writechunk = chunk;
      ts.writeencoding = encoding;
      if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
          this._read(rs.highWaterMark);
      }
    };
    Transform.prototype._read = function(n) {
      var ts = this._transformState;
      if (ts.writechunk !== null && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
      } else {
        ts.needTransform = true;
      }
    };
    Transform.prototype._destroy = function(err, cb) {
      Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
      });
    };
    function done(stream, er, data) {
      if (er)
        return stream.emit("error", er);
      if (data != null)
        stream.push(data);
      if (stream._writableState.length)
        throw new ERR_TRANSFORM_WITH_LENGTH_0();
      if (stream._transformState.transforming)
        throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
      return stream.push(null);
    }
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js
var require_stream_passthrough = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = PassThrough;
    var Transform = require_stream_transform();
    require_inherits_browser()(PassThrough, Transform);
    function PassThrough(options) {
      if (!(this instanceof PassThrough))
        return new PassThrough(options);
      Transform.call(this, options);
    }
    PassThrough.prototype._transform = function(chunk, encoding, cb) {
      cb(null, chunk);
    };
  }
});

// node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js
var require_pipeline = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js"(exports, module) {
    "use strict";
    init_shim();
    var eos;
    function once(callback) {
      var called = false;
      return function() {
        if (called)
          return;
        called = true;
        callback.apply(void 0, arguments);
      };
    }
    var _require$codes = require_errors_browser().codes;
    var ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
    var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
    function noop(err) {
      if (err)
        throw err;
    }
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    function destroyer(stream, reading, writing, callback) {
      callback = once(callback);
      var closed = false;
      stream.on("close", function() {
        closed = true;
      });
      if (eos === void 0)
        eos = require_end_of_stream();
      eos(stream, {
        readable: reading,
        writable: writing
      }, function(err) {
        if (err)
          return callback(err);
        closed = true;
        callback();
      });
      var destroyed = false;
      return function(err) {
        if (closed)
          return;
        if (destroyed)
          return;
        destroyed = true;
        if (isRequest(stream))
          return stream.abort();
        if (typeof stream.destroy === "function")
          return stream.destroy();
        callback(err || new ERR_STREAM_DESTROYED("pipe"));
      };
    }
    function call(fn) {
      fn();
    }
    function pipe(from, to) {
      return from.pipe(to);
    }
    function popCallback(streams) {
      if (!streams.length)
        return noop;
      if (typeof streams[streams.length - 1] !== "function")
        return noop;
      return streams.pop();
    }
    function pipeline() {
      for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
        streams[_key] = arguments[_key];
      }
      var callback = popCallback(streams);
      if (Array.isArray(streams[0]))
        streams = streams[0];
      if (streams.length < 2) {
        throw new ERR_MISSING_ARGS("streams");
      }
      var error;
      var destroys = streams.map(function(stream, i) {
        var reading = i < streams.length - 1;
        var writing = i > 0;
        return destroyer(stream, reading, writing, function(err) {
          if (!error)
            error = err;
          if (err)
            destroys.forEach(call);
          if (reading)
            return;
          destroys.forEach(call);
          callback(error);
        });
      });
      return streams.reduce(pipe);
    }
    module.exports = pipeline;
  }
});

// node_modules/hash-base/node_modules/readable-stream/readable-browser.js
var require_readable_browser = __commonJS({
  "node_modules/hash-base/node_modules/readable-stream/readable-browser.js"(exports, module) {
    init_shim();
    exports = module.exports = require_stream_readable();
    exports.Stream = exports;
    exports.Readable = exports;
    exports.Writable = require_stream_writable();
    exports.Duplex = require_stream_duplex();
    exports.Transform = require_stream_transform();
    exports.PassThrough = require_stream_passthrough();
    exports.finished = require_end_of_stream();
    exports.pipeline = require_pipeline();
  }
});

// node_modules/hash-base/index.js
var require_hash_base = __commonJS({
  "node_modules/hash-base/index.js"(exports, module) {
    "use strict";
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var Transform = require_readable_browser().Transform;
    var inherits = require_inherits_browser();
    function throwIfNotStringOrBuffer(val, prefix2) {
      if (!Buffer3.isBuffer(val) && typeof val !== "string") {
        throw new TypeError(prefix2 + " must be a string or a buffer");
      }
    }
    function HashBase(blockSize) {
      Transform.call(this);
      this._block = Buffer3.allocUnsafe(blockSize);
      this._blockSize = blockSize;
      this._blockOffset = 0;
      this._length = [0, 0, 0, 0];
      this._finalized = false;
    }
    inherits(HashBase, Transform);
    HashBase.prototype._transform = function(chunk, encoding, callback) {
      var error = null;
      try {
        this.update(chunk, encoding);
      } catch (err) {
        error = err;
      }
      callback(error);
    };
    HashBase.prototype._flush = function(callback) {
      var error = null;
      try {
        this.push(this.digest());
      } catch (err) {
        error = err;
      }
      callback(error);
    };
    HashBase.prototype.update = function(data, encoding) {
      throwIfNotStringOrBuffer(data, "Data");
      if (this._finalized)
        throw new Error("Digest already called");
      if (!Buffer3.isBuffer(data))
        data = Buffer3.from(data, encoding);
      var block = this._block;
      var offset = 0;
      while (this._blockOffset + data.length - offset >= this._blockSize) {
        for (var i = this._blockOffset; i < this._blockSize; )
          block[i++] = data[offset++];
        this._update();
        this._blockOffset = 0;
      }
      while (offset < data.length)
        block[this._blockOffset++] = data[offset++];
      for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
        this._length[j] += carry;
        carry = this._length[j] / 4294967296 | 0;
        if (carry > 0)
          this._length[j] -= 4294967296 * carry;
      }
      return this;
    };
    HashBase.prototype._update = function() {
      throw new Error("_update is not implemented");
    };
    HashBase.prototype.digest = function(encoding) {
      if (this._finalized)
        throw new Error("Digest already called");
      this._finalized = true;
      var digest = this._digest();
      if (encoding !== void 0)
        digest = digest.toString(encoding);
      this._block.fill(0);
      this._blockOffset = 0;
      for (var i = 0; i < 4; ++i)
        this._length[i] = 0;
      return digest;
    };
    HashBase.prototype._digest = function() {
      throw new Error("_digest is not implemented");
    };
    module.exports = HashBase;
  }
});

// node_modules/md5.js/index.js
var require_md5 = __commonJS({
  "node_modules/md5.js/index.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var HashBase = require_hash_base();
    var Buffer3 = require_safe_buffer().Buffer;
    var ARRAY16 = new Array(16);
    function MD5() {
      HashBase.call(this, 64);
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
    }
    inherits(MD5, HashBase);
    MD5.prototype._update = function() {
      var M = ARRAY16;
      for (var i = 0; i < 16; ++i)
        M[i] = this._block.readInt32LE(i * 4);
      var a = this._a;
      var b = this._b;
      var c = this._c;
      var d = this._d;
      a = fnF(a, b, c, d, M[0], 3614090360, 7);
      d = fnF(d, a, b, c, M[1], 3905402710, 12);
      c = fnF(c, d, a, b, M[2], 606105819, 17);
      b = fnF(b, c, d, a, M[3], 3250441966, 22);
      a = fnF(a, b, c, d, M[4], 4118548399, 7);
      d = fnF(d, a, b, c, M[5], 1200080426, 12);
      c = fnF(c, d, a, b, M[6], 2821735955, 17);
      b = fnF(b, c, d, a, M[7], 4249261313, 22);
      a = fnF(a, b, c, d, M[8], 1770035416, 7);
      d = fnF(d, a, b, c, M[9], 2336552879, 12);
      c = fnF(c, d, a, b, M[10], 4294925233, 17);
      b = fnF(b, c, d, a, M[11], 2304563134, 22);
      a = fnF(a, b, c, d, M[12], 1804603682, 7);
      d = fnF(d, a, b, c, M[13], 4254626195, 12);
      c = fnF(c, d, a, b, M[14], 2792965006, 17);
      b = fnF(b, c, d, a, M[15], 1236535329, 22);
      a = fnG(a, b, c, d, M[1], 4129170786, 5);
      d = fnG(d, a, b, c, M[6], 3225465664, 9);
      c = fnG(c, d, a, b, M[11], 643717713, 14);
      b = fnG(b, c, d, a, M[0], 3921069994, 20);
      a = fnG(a, b, c, d, M[5], 3593408605, 5);
      d = fnG(d, a, b, c, M[10], 38016083, 9);
      c = fnG(c, d, a, b, M[15], 3634488961, 14);
      b = fnG(b, c, d, a, M[4], 3889429448, 20);
      a = fnG(a, b, c, d, M[9], 568446438, 5);
      d = fnG(d, a, b, c, M[14], 3275163606, 9);
      c = fnG(c, d, a, b, M[3], 4107603335, 14);
      b = fnG(b, c, d, a, M[8], 1163531501, 20);
      a = fnG(a, b, c, d, M[13], 2850285829, 5);
      d = fnG(d, a, b, c, M[2], 4243563512, 9);
      c = fnG(c, d, a, b, M[7], 1735328473, 14);
      b = fnG(b, c, d, a, M[12], 2368359562, 20);
      a = fnH(a, b, c, d, M[5], 4294588738, 4);
      d = fnH(d, a, b, c, M[8], 2272392833, 11);
      c = fnH(c, d, a, b, M[11], 1839030562, 16);
      b = fnH(b, c, d, a, M[14], 4259657740, 23);
      a = fnH(a, b, c, d, M[1], 2763975236, 4);
      d = fnH(d, a, b, c, M[4], 1272893353, 11);
      c = fnH(c, d, a, b, M[7], 4139469664, 16);
      b = fnH(b, c, d, a, M[10], 3200236656, 23);
      a = fnH(a, b, c, d, M[13], 681279174, 4);
      d = fnH(d, a, b, c, M[0], 3936430074, 11);
      c = fnH(c, d, a, b, M[3], 3572445317, 16);
      b = fnH(b, c, d, a, M[6], 76029189, 23);
      a = fnH(a, b, c, d, M[9], 3654602809, 4);
      d = fnH(d, a, b, c, M[12], 3873151461, 11);
      c = fnH(c, d, a, b, M[15], 530742520, 16);
      b = fnH(b, c, d, a, M[2], 3299628645, 23);
      a = fnI(a, b, c, d, M[0], 4096336452, 6);
      d = fnI(d, a, b, c, M[7], 1126891415, 10);
      c = fnI(c, d, a, b, M[14], 2878612391, 15);
      b = fnI(b, c, d, a, M[5], 4237533241, 21);
      a = fnI(a, b, c, d, M[12], 1700485571, 6);
      d = fnI(d, a, b, c, M[3], 2399980690, 10);
      c = fnI(c, d, a, b, M[10], 4293915773, 15);
      b = fnI(b, c, d, a, M[1], 2240044497, 21);
      a = fnI(a, b, c, d, M[8], 1873313359, 6);
      d = fnI(d, a, b, c, M[15], 4264355552, 10);
      c = fnI(c, d, a, b, M[6], 2734768916, 15);
      b = fnI(b, c, d, a, M[13], 1309151649, 21);
      a = fnI(a, b, c, d, M[4], 4149444226, 6);
      d = fnI(d, a, b, c, M[11], 3174756917, 10);
      c = fnI(c, d, a, b, M[2], 718787259, 15);
      b = fnI(b, c, d, a, M[9], 3951481745, 21);
      this._a = this._a + a | 0;
      this._b = this._b + b | 0;
      this._c = this._c + c | 0;
      this._d = this._d + d | 0;
    };
    MD5.prototype._digest = function() {
      this._block[this._blockOffset++] = 128;
      if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
      }
      this._block.fill(0, this._blockOffset, 56);
      this._block.writeUInt32LE(this._length[0], 56);
      this._block.writeUInt32LE(this._length[1], 60);
      this._update();
      var buffer = Buffer3.allocUnsafe(16);
      buffer.writeInt32LE(this._a, 0);
      buffer.writeInt32LE(this._b, 4);
      buffer.writeInt32LE(this._c, 8);
      buffer.writeInt32LE(this._d, 12);
      return buffer;
    };
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }
    function fnF(a, b, c, d, m, k, s) {
      return rotl(a + (b & c | ~b & d) + m + k | 0, s) + b | 0;
    }
    function fnG(a, b, c, d, m, k, s) {
      return rotl(a + (b & d | c & ~d) + m + k | 0, s) + b | 0;
    }
    function fnH(a, b, c, d, m, k, s) {
      return rotl(a + (b ^ c ^ d) + m + k | 0, s) + b | 0;
    }
    function fnI(a, b, c, d, m, k, s) {
      return rotl(a + (c ^ (b | ~d)) + m + k | 0, s) + b | 0;
    }
    module.exports = MD5;
  }
});

// node_modules/ripemd160/index.js
var require_ripemd160 = __commonJS({
  "node_modules/ripemd160/index.js"(exports, module) {
    "use strict";
    init_shim();
    var Buffer3 = require_buffer().Buffer;
    var inherits = require_inherits_browser();
    var HashBase = require_hash_base();
    var ARRAY16 = new Array(16);
    var zl = [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      7,
      4,
      13,
      1,
      10,
      6,
      15,
      3,
      12,
      0,
      9,
      5,
      2,
      14,
      11,
      8,
      3,
      10,
      14,
      4,
      9,
      15,
      8,
      1,
      2,
      7,
      0,
      6,
      13,
      11,
      5,
      12,
      1,
      9,
      11,
      10,
      0,
      8,
      12,
      4,
      13,
      3,
      7,
      15,
      14,
      5,
      6,
      2,
      4,
      0,
      5,
      9,
      7,
      12,
      2,
      10,
      14,
      1,
      3,
      8,
      11,
      6,
      15,
      13
    ];
    var zr = [
      5,
      14,
      7,
      0,
      9,
      2,
      11,
      4,
      13,
      6,
      15,
      8,
      1,
      10,
      3,
      12,
      6,
      11,
      3,
      7,
      0,
      13,
      5,
      10,
      14,
      15,
      8,
      12,
      4,
      9,
      1,
      2,
      15,
      5,
      1,
      3,
      7,
      14,
      6,
      9,
      11,
      8,
      12,
      2,
      10,
      0,
      4,
      13,
      8,
      6,
      4,
      1,
      3,
      11,
      15,
      0,
      5,
      12,
      2,
      13,
      9,
      7,
      10,
      14,
      12,
      15,
      10,
      4,
      1,
      5,
      8,
      7,
      6,
      2,
      13,
      14,
      0,
      3,
      9,
      11
    ];
    var sl = [
      11,
      14,
      15,
      12,
      5,
      8,
      7,
      9,
      11,
      13,
      14,
      15,
      6,
      7,
      9,
      8,
      7,
      6,
      8,
      13,
      11,
      9,
      7,
      15,
      7,
      12,
      15,
      9,
      11,
      7,
      13,
      12,
      11,
      13,
      6,
      7,
      14,
      9,
      13,
      15,
      14,
      8,
      13,
      6,
      5,
      12,
      7,
      5,
      11,
      12,
      14,
      15,
      14,
      15,
      9,
      8,
      9,
      14,
      5,
      6,
      8,
      6,
      5,
      12,
      9,
      15,
      5,
      11,
      6,
      8,
      13,
      12,
      5,
      12,
      13,
      14,
      11,
      8,
      5,
      6
    ];
    var sr = [
      8,
      9,
      9,
      11,
      13,
      15,
      15,
      5,
      7,
      7,
      8,
      11,
      14,
      14,
      12,
      6,
      9,
      13,
      15,
      7,
      12,
      8,
      9,
      11,
      7,
      7,
      12,
      7,
      6,
      15,
      13,
      11,
      9,
      7,
      15,
      11,
      8,
      6,
      6,
      14,
      12,
      13,
      5,
      14,
      13,
      13,
      7,
      5,
      15,
      5,
      8,
      11,
      14,
      14,
      6,
      14,
      6,
      9,
      12,
      9,
      12,
      5,
      15,
      8,
      8,
      5,
      12,
      9,
      12,
      5,
      14,
      6,
      8,
      13,
      6,
      5,
      15,
      13,
      11,
      11
    ];
    var hl = [0, 1518500249, 1859775393, 2400959708, 2840853838];
    var hr = [1352829926, 1548603684, 1836072691, 2053994217, 0];
    function RIPEMD160() {
      HashBase.call(this, 64);
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
    }
    inherits(RIPEMD160, HashBase);
    RIPEMD160.prototype._update = function() {
      var words2 = ARRAY16;
      for (var j = 0; j < 16; ++j)
        words2[j] = this._block.readInt32LE(j * 4);
      var al = this._a | 0;
      var bl = this._b | 0;
      var cl = this._c | 0;
      var dl = this._d | 0;
      var el = this._e | 0;
      var ar = this._a | 0;
      var br = this._b | 0;
      var cr = this._c | 0;
      var dr = this._d | 0;
      var er = this._e | 0;
      for (var i = 0; i < 80; i += 1) {
        var tl;
        var tr;
        if (i < 16) {
          tl = fn1(al, bl, cl, dl, el, words2[zl[i]], hl[0], sl[i]);
          tr = fn5(ar, br, cr, dr, er, words2[zr[i]], hr[0], sr[i]);
        } else if (i < 32) {
          tl = fn2(al, bl, cl, dl, el, words2[zl[i]], hl[1], sl[i]);
          tr = fn4(ar, br, cr, dr, er, words2[zr[i]], hr[1], sr[i]);
        } else if (i < 48) {
          tl = fn3(al, bl, cl, dl, el, words2[zl[i]], hl[2], sl[i]);
          tr = fn3(ar, br, cr, dr, er, words2[zr[i]], hr[2], sr[i]);
        } else if (i < 64) {
          tl = fn4(al, bl, cl, dl, el, words2[zl[i]], hl[3], sl[i]);
          tr = fn2(ar, br, cr, dr, er, words2[zr[i]], hr[3], sr[i]);
        } else {
          tl = fn5(al, bl, cl, dl, el, words2[zl[i]], hl[4], sl[i]);
          tr = fn1(ar, br, cr, dr, er, words2[zr[i]], hr[4], sr[i]);
        }
        al = el;
        el = dl;
        dl = rotl(cl, 10);
        cl = bl;
        bl = tl;
        ar = er;
        er = dr;
        dr = rotl(cr, 10);
        cr = br;
        br = tr;
      }
      var t = this._b + cl + dr | 0;
      this._b = this._c + dl + er | 0;
      this._c = this._d + el + ar | 0;
      this._d = this._e + al + br | 0;
      this._e = this._a + bl + cr | 0;
      this._a = t;
    };
    RIPEMD160.prototype._digest = function() {
      this._block[this._blockOffset++] = 128;
      if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
      }
      this._block.fill(0, this._blockOffset, 56);
      this._block.writeUInt32LE(this._length[0], 56);
      this._block.writeUInt32LE(this._length[1], 60);
      this._update();
      var buffer = Buffer3.alloc ? Buffer3.alloc(20) : new Buffer3(20);
      buffer.writeInt32LE(this._a, 0);
      buffer.writeInt32LE(this._b, 4);
      buffer.writeInt32LE(this._c, 8);
      buffer.writeInt32LE(this._d, 12);
      buffer.writeInt32LE(this._e, 16);
      return buffer;
    };
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }
    function fn1(a, b, c, d, e, m, k, s) {
      return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;
    }
    function fn2(a, b, c, d, e, m, k, s) {
      return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;
    }
    function fn3(a, b, c, d, e, m, k, s) {
      return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;
    }
    function fn4(a, b, c, d, e, m, k, s) {
      return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;
    }
    function fn5(a, b, c, d, e, m, k, s) {
      return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;
    }
    module.exports = RIPEMD160;
  }
});

// node_modules/sha.js/hash.js
var require_hash = __commonJS({
  "node_modules/sha.js/hash.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    function Hash(blockSize, finalSize) {
      this._block = Buffer3.alloc(blockSize);
      this._finalSize = finalSize;
      this._blockSize = blockSize;
      this._len = 0;
    }
    Hash.prototype.update = function(data, enc) {
      if (typeof data === "string") {
        enc = enc || "utf8";
        data = Buffer3.from(data, enc);
      }
      var block = this._block;
      var blockSize = this._blockSize;
      var length = data.length;
      var accum = this._len;
      for (var offset = 0; offset < length; ) {
        var assigned = accum % blockSize;
        var remainder = Math.min(length - offset, blockSize - assigned);
        for (var i = 0; i < remainder; i++) {
          block[assigned + i] = data[offset + i];
        }
        accum += remainder;
        offset += remainder;
        if (accum % blockSize === 0) {
          this._update(block);
        }
      }
      this._len += length;
      return this;
    };
    Hash.prototype.digest = function(enc) {
      var rem = this._len % this._blockSize;
      this._block[rem] = 128;
      this._block.fill(0, rem + 1);
      if (rem >= this._finalSize) {
        this._update(this._block);
        this._block.fill(0);
      }
      var bits = this._len * 8;
      if (bits <= 4294967295) {
        this._block.writeUInt32BE(bits, this._blockSize - 4);
      } else {
        var lowBits = (bits & 4294967295) >>> 0;
        var highBits = (bits - lowBits) / 4294967296;
        this._block.writeUInt32BE(highBits, this._blockSize - 8);
        this._block.writeUInt32BE(lowBits, this._blockSize - 4);
      }
      this._update(this._block);
      var hash3 = this._hash();
      return enc ? hash3.toString(enc) : hash3;
    };
    Hash.prototype._update = function() {
      throw new Error("_update must be implemented by subclass");
    };
    module.exports = Hash;
  }
});

// node_modules/sha.js/sha.js
var require_sha = __commonJS({
  "node_modules/sha.js/sha.js"(exports, module) {
    init_shim();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer3 = require_safe_buffer().Buffer;
    var K = [
      1518500249,
      1859775393,
      2400959708 | 0,
      3395469782 | 0
    ];
    var W = new Array(80);
    function Sha() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha, Hash);
    Sha.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (s === 0)
        return b & c | ~b & d;
      if (s === 2)
        return b & c | b & d | c & d;
      return b ^ c ^ d;
    }
    Sha.prototype._update = function(M) {
      var W2 = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e = this._e | 0;
      for (var i = 0; i < 16; ++i)
        W2[i] = M.readInt32BE(i * 4);
      for (; i < 80; ++i)
        W2[i] = W2[i - 3] ^ W2[i - 8] ^ W2[i - 14] ^ W2[i - 16];
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W2[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
    };
    Sha.prototype._hash = function() {
      var H = Buffer3.allocUnsafe(20);
      H.writeInt32BE(this._a | 0, 0);
      H.writeInt32BE(this._b | 0, 4);
      H.writeInt32BE(this._c | 0, 8);
      H.writeInt32BE(this._d | 0, 12);
      H.writeInt32BE(this._e | 0, 16);
      return H;
    };
    module.exports = Sha;
  }
});

// node_modules/sha.js/sha1.js
var require_sha1 = __commonJS({
  "node_modules/sha.js/sha1.js"(exports, module) {
    init_shim();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer3 = require_safe_buffer().Buffer;
    var K = [
      1518500249,
      1859775393,
      2400959708 | 0,
      3395469782 | 0
    ];
    var W = new Array(80);
    function Sha1() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha1, Hash);
    Sha1.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl1(num) {
      return num << 1 | num >>> 31;
    }
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (s === 0)
        return b & c | ~b & d;
      if (s === 2)
        return b & c | b & d | c & d;
      return b ^ c ^ d;
    }
    Sha1.prototype._update = function(M) {
      var W2 = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e = this._e | 0;
      for (var i = 0; i < 16; ++i)
        W2[i] = M.readInt32BE(i * 4);
      for (; i < 80; ++i)
        W2[i] = rotl1(W2[i - 3] ^ W2[i - 8] ^ W2[i - 14] ^ W2[i - 16]);
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W2[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
    };
    Sha1.prototype._hash = function() {
      var H = Buffer3.allocUnsafe(20);
      H.writeInt32BE(this._a | 0, 0);
      H.writeInt32BE(this._b | 0, 4);
      H.writeInt32BE(this._c | 0, 8);
      H.writeInt32BE(this._d | 0, 12);
      H.writeInt32BE(this._e | 0, 16);
      return H;
    };
    module.exports = Sha1;
  }
});

// node_modules/sha.js/sha256.js
var require_sha256 = __commonJS({
  "node_modules/sha.js/sha256.js"(exports, module) {
    init_shim();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer3 = require_safe_buffer().Buffer;
    var K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ];
    var W = new Array(64);
    function Sha256() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha256, Hash);
    Sha256.prototype.init = function() {
      this._a = 1779033703;
      this._b = 3144134277;
      this._c = 1013904242;
      this._d = 2773480762;
      this._e = 1359893119;
      this._f = 2600822924;
      this._g = 528734635;
      this._h = 1541459225;
      return this;
    };
    function ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x) {
      return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
    }
    function sigma1(x) {
      return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
    }
    function gamma0(x) {
      return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;
    }
    function gamma1(x) {
      return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
    }
    Sha256.prototype._update = function(M) {
      var W2 = this._w;
      var a = this._a | 0;
      var b = this._b | 0;
      var c = this._c | 0;
      var d = this._d | 0;
      var e = this._e | 0;
      var f = this._f | 0;
      var g = this._g | 0;
      var h = this._h | 0;
      for (var i = 0; i < 16; ++i)
        W2[i] = M.readInt32BE(i * 4);
      for (; i < 64; ++i)
        W2[i] = gamma1(W2[i - 2]) + W2[i - 7] + gamma0(W2[i - 15]) + W2[i - 16] | 0;
      for (var j = 0; j < 64; ++j) {
        var T1 = h + sigma1(e) + ch(e, f, g) + K[j] + W2[j] | 0;
        var T2 = sigma0(a) + maj(a, b, c) | 0;
        h = g;
        g = f;
        f = e;
        e = d + T1 | 0;
        d = c;
        c = b;
        b = a;
        a = T1 + T2 | 0;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
      this._f = f + this._f | 0;
      this._g = g + this._g | 0;
      this._h = h + this._h | 0;
    };
    Sha256.prototype._hash = function() {
      var H = Buffer3.allocUnsafe(32);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      H.writeInt32BE(this._h, 28);
      return H;
    };
    module.exports = Sha256;
  }
});

// node_modules/sha.js/sha224.js
var require_sha224 = __commonJS({
  "node_modules/sha.js/sha224.js"(exports, module) {
    init_shim();
    var inherits = require_inherits_browser();
    var Sha256 = require_sha256();
    var Hash = require_hash();
    var Buffer3 = require_safe_buffer().Buffer;
    var W = new Array(64);
    function Sha224() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha224, Sha256);
    Sha224.prototype.init = function() {
      this._a = 3238371032;
      this._b = 914150663;
      this._c = 812702999;
      this._d = 4144912697;
      this._e = 4290775857;
      this._f = 1750603025;
      this._g = 1694076839;
      this._h = 3204075428;
      return this;
    };
    Sha224.prototype._hash = function() {
      var H = Buffer3.allocUnsafe(28);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      return H;
    };
    module.exports = Sha224;
  }
});

// node_modules/sha.js/sha512.js
var require_sha512 = __commonJS({
  "node_modules/sha.js/sha512.js"(exports, module) {
    init_shim();
    var inherits = require_inherits_browser();
    var Hash = require_hash();
    var Buffer3 = require_safe_buffer().Buffer;
    var K = [
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ];
    var W = new Array(160);
    function Sha512() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha512, Hash);
    Sha512.prototype.init = function() {
      this._ah = 1779033703;
      this._bh = 3144134277;
      this._ch = 1013904242;
      this._dh = 2773480762;
      this._eh = 1359893119;
      this._fh = 2600822924;
      this._gh = 528734635;
      this._hh = 1541459225;
      this._al = 4089235720;
      this._bl = 2227873595;
      this._cl = 4271175723;
      this._dl = 1595750129;
      this._el = 2917565137;
      this._fl = 725511199;
      this._gl = 4215389547;
      this._hl = 327033209;
      return this;
    };
    function Ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x, xl) {
      return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
    }
    function sigma1(x, xl) {
      return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
    }
    function Gamma0(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;
    }
    function Gamma0l(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
    }
    function Gamma1(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;
    }
    function Gamma1l(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
    }
    function getCarry(a, b) {
      return a >>> 0 < b >>> 0 ? 1 : 0;
    }
    Sha512.prototype._update = function(M) {
      var W2 = this._w;
      var ah = this._ah | 0;
      var bh = this._bh | 0;
      var ch = this._ch | 0;
      var dh = this._dh | 0;
      var eh = this._eh | 0;
      var fh = this._fh | 0;
      var gh = this._gh | 0;
      var hh = this._hh | 0;
      var al = this._al | 0;
      var bl = this._bl | 0;
      var cl = this._cl | 0;
      var dl = this._dl | 0;
      var el = this._el | 0;
      var fl = this._fl | 0;
      var gl = this._gl | 0;
      var hl = this._hl | 0;
      for (var i = 0; i < 32; i += 2) {
        W2[i] = M.readInt32BE(i * 4);
        W2[i + 1] = M.readInt32BE(i * 4 + 4);
      }
      for (; i < 160; i += 2) {
        var xh = W2[i - 15 * 2];
        var xl = W2[i - 15 * 2 + 1];
        var gamma0 = Gamma0(xh, xl);
        var gamma0l = Gamma0l(xl, xh);
        xh = W2[i - 2 * 2];
        xl = W2[i - 2 * 2 + 1];
        var gamma1 = Gamma1(xh, xl);
        var gamma1l = Gamma1l(xl, xh);
        var Wi7h = W2[i - 7 * 2];
        var Wi7l = W2[i - 7 * 2 + 1];
        var Wi16h = W2[i - 16 * 2];
        var Wi16l = W2[i - 16 * 2 + 1];
        var Wil = gamma0l + Wi7l | 0;
        var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;
        Wil = Wil + gamma1l | 0;
        Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;
        Wil = Wil + Wi16l | 0;
        Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;
        W2[i] = Wih;
        W2[i + 1] = Wil;
      }
      for (var j = 0; j < 160; j += 2) {
        Wih = W2[j];
        Wil = W2[j + 1];
        var majh = maj(ah, bh, ch);
        var majl = maj(al, bl, cl);
        var sigma0h = sigma0(ah, al);
        var sigma0l = sigma0(al, ah);
        var sigma1h = sigma1(eh, el);
        var sigma1l = sigma1(el, eh);
        var Kih = K[j];
        var Kil = K[j + 1];
        var chh = Ch(eh, fh, gh);
        var chl = Ch(el, fl, gl);
        var t1l = hl + sigma1l | 0;
        var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;
        t1l = t1l + chl | 0;
        t1h = t1h + chh + getCarry(t1l, chl) | 0;
        t1l = t1l + Kil | 0;
        t1h = t1h + Kih + getCarry(t1l, Kil) | 0;
        t1l = t1l + Wil | 0;
        t1h = t1h + Wih + getCarry(t1l, Wil) | 0;
        var t2l = sigma0l + majl | 0;
        var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        el = dl + t1l | 0;
        eh = dh + t1h + getCarry(el, dl) | 0;
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        al = t1l + t2l | 0;
        ah = t1h + t2h + getCarry(al, t1l) | 0;
      }
      this._al = this._al + al | 0;
      this._bl = this._bl + bl | 0;
      this._cl = this._cl + cl | 0;
      this._dl = this._dl + dl | 0;
      this._el = this._el + el | 0;
      this._fl = this._fl + fl | 0;
      this._gl = this._gl + gl | 0;
      this._hl = this._hl + hl | 0;
      this._ah = this._ah + ah + getCarry(this._al, al) | 0;
      this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;
      this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;
      this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;
      this._eh = this._eh + eh + getCarry(this._el, el) | 0;
      this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;
      this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;
      this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;
    };
    Sha512.prototype._hash = function() {
      var H = Buffer3.allocUnsafe(64);
      function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      writeInt64BE(this._gh, this._gl, 48);
      writeInt64BE(this._hh, this._hl, 56);
      return H;
    };
    module.exports = Sha512;
  }
});

// node_modules/sha.js/sha384.js
var require_sha384 = __commonJS({
  "node_modules/sha.js/sha384.js"(exports, module) {
    init_shim();
    var inherits = require_inherits_browser();
    var SHA512 = require_sha512();
    var Hash = require_hash();
    var Buffer3 = require_safe_buffer().Buffer;
    var W = new Array(160);
    function Sha384() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha384, SHA512);
    Sha384.prototype.init = function() {
      this._ah = 3418070365;
      this._bh = 1654270250;
      this._ch = 2438529370;
      this._dh = 355462360;
      this._eh = 1731405415;
      this._fh = 2394180231;
      this._gh = 3675008525;
      this._hh = 1203062813;
      this._al = 3238371032;
      this._bl = 914150663;
      this._cl = 812702999;
      this._dl = 4144912697;
      this._el = 4290775857;
      this._fl = 1750603025;
      this._gl = 1694076839;
      this._hl = 3204075428;
      return this;
    };
    Sha384.prototype._hash = function() {
      var H = Buffer3.allocUnsafe(48);
      function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      return H;
    };
    module.exports = Sha384;
  }
});

// node_modules/sha.js/index.js
var require_sha2 = __commonJS({
  "node_modules/sha.js/index.js"(exports, module) {
    init_shim();
    var exports = module.exports = function SHA(algorithm) {
      algorithm = algorithm.toLowerCase();
      var Algorithm = exports[algorithm];
      if (!Algorithm)
        throw new Error(algorithm + " is not supported (we accept pull requests)");
      return new Algorithm();
    };
    exports.sha = require_sha();
    exports.sha1 = require_sha1();
    exports.sha224 = require_sha224();
    exports.sha256 = require_sha256();
    exports.sha384 = require_sha384();
    exports.sha512 = require_sha512();
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js
var require_stream_browser2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js"(exports, module) {
    init_shim();
    module.exports = require_events().EventEmitter;
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js
var require_buffer_list2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js"(exports, module) {
    "use strict";
    init_shim();
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key2) {
            _defineProperty(target, key2, source[key2]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key2) {
            Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var _require = require_buffer();
    var Buffer3 = _require.Buffer;
    var _require2 = require_util();
    var inspect4 = _require2.inspect;
    var custom = inspect4 && inspect4.custom || "inspect";
    function copyBuffer(src, target, offset) {
      Buffer3.prototype.copy.call(src, target, offset);
    }
    module.exports = /* @__PURE__ */ function() {
      function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      _createClass(BufferList, [{
        key: "push",
        value: function push(v) {
          var entry = {
            data: v,
            next: null
          };
          if (this.length > 0)
            this.tail.next = entry;
          else
            this.head = entry;
          this.tail = entry;
          ++this.length;
        }
      }, {
        key: "unshift",
        value: function unshift(v) {
          var entry = {
            data: v,
            next: this.head
          };
          if (this.length === 0)
            this.tail = entry;
          this.head = entry;
          ++this.length;
        }
      }, {
        key: "shift",
        value: function shift() {
          if (this.length === 0)
            return;
          var ret = this.head.data;
          if (this.length === 1)
            this.head = this.tail = null;
          else
            this.head = this.head.next;
          --this.length;
          return ret;
        }
      }, {
        key: "clear",
        value: function clear() {
          this.head = this.tail = null;
          this.length = 0;
        }
      }, {
        key: "join",
        value: function join(s) {
          if (this.length === 0)
            return "";
          var p = this.head;
          var ret = "" + p.data;
          while (p = p.next) {
            ret += s + p.data;
          }
          return ret;
        }
      }, {
        key: "concat",
        value: function concat2(n) {
          if (this.length === 0)
            return Buffer3.alloc(0);
          var ret = Buffer3.allocUnsafe(n >>> 0);
          var p = this.head;
          var i = 0;
          while (p) {
            copyBuffer(p.data, ret, i);
            i += p.data.length;
            p = p.next;
          }
          return ret;
        }
      }, {
        key: "consume",
        value: function consume(n, hasStrings) {
          var ret;
          if (n < this.head.data.length) {
            ret = this.head.data.slice(0, n);
            this.head.data = this.head.data.slice(n);
          } else if (n === this.head.data.length) {
            ret = this.shift();
          } else {
            ret = hasStrings ? this._getString(n) : this._getBuffer(n);
          }
          return ret;
        }
      }, {
        key: "first",
        value: function first() {
          return this.head.data;
        }
      }, {
        key: "_getString",
        value: function _getString(n) {
          var p = this.head;
          var c = 1;
          var ret = p.data;
          n -= ret.length;
          while (p = p.next) {
            var str = p.data;
            var nb = n > str.length ? str.length : n;
            if (nb === str.length)
              ret += str;
            else
              ret += str.slice(0, n);
            n -= nb;
            if (n === 0) {
              if (nb === str.length) {
                ++c;
                if (p.next)
                  this.head = p.next;
                else
                  this.head = this.tail = null;
              } else {
                this.head = p;
                p.data = str.slice(nb);
              }
              break;
            }
            ++c;
          }
          this.length -= c;
          return ret;
        }
      }, {
        key: "_getBuffer",
        value: function _getBuffer(n) {
          var ret = Buffer3.allocUnsafe(n);
          var p = this.head;
          var c = 1;
          p.data.copy(ret);
          n -= p.data.length;
          while (p = p.next) {
            var buf = p.data;
            var nb = n > buf.length ? buf.length : n;
            buf.copy(ret, ret.length - n, 0, nb);
            n -= nb;
            if (n === 0) {
              if (nb === buf.length) {
                ++c;
                if (p.next)
                  this.head = p.next;
                else
                  this.head = this.tail = null;
              } else {
                this.head = p;
                p.data = buf.slice(nb);
              }
              break;
            }
            ++c;
          }
          this.length -= c;
          return ret;
        }
      }, {
        key: custom,
        value: function value(_, options) {
          return inspect4(this, _objectSpread({}, options, {
            depth: 0,
            customInspect: false
          }));
        }
      }]);
      return BufferList;
    }();
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js
var require_destroy2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js"(exports, module) {
    "use strict";
    init_shim();
    function destroy(err, cb) {
      var _this = this;
      var readableDestroyed = this._readableState && this._readableState.destroyed;
      var writableDestroyed = this._writableState && this._writableState.destroyed;
      if (readableDestroyed || writableDestroyed) {
        if (cb) {
          cb(err);
        } else if (err) {
          if (!this._writableState) {
            process.nextTick(emitErrorNT, this, err);
          } else if (!this._writableState.errorEmitted) {
            this._writableState.errorEmitted = true;
            process.nextTick(emitErrorNT, this, err);
          }
        }
        return this;
      }
      if (this._readableState) {
        this._readableState.destroyed = true;
      }
      if (this._writableState) {
        this._writableState.destroyed = true;
      }
      this._destroy(err || null, function(err2) {
        if (!cb && err2) {
          if (!_this._writableState) {
            process.nextTick(emitErrorAndCloseNT, _this, err2);
          } else if (!_this._writableState.errorEmitted) {
            _this._writableState.errorEmitted = true;
            process.nextTick(emitErrorAndCloseNT, _this, err2);
          } else {
            process.nextTick(emitCloseNT, _this);
          }
        } else if (cb) {
          process.nextTick(emitCloseNT, _this);
          cb(err2);
        } else {
          process.nextTick(emitCloseNT, _this);
        }
      });
      return this;
    }
    function emitErrorAndCloseNT(self2, err) {
      emitErrorNT(self2, err);
      emitCloseNT(self2);
    }
    function emitCloseNT(self2) {
      if (self2._writableState && !self2._writableState.emitClose)
        return;
      if (self2._readableState && !self2._readableState.emitClose)
        return;
      self2.emit("close");
    }
    function undestroy() {
      if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
      }
      if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
      }
    }
    function emitErrorNT(self2, err) {
      self2.emit("error", err);
    }
    function errorOrDestroy(stream, err) {
      var rState = stream._readableState;
      var wState = stream._writableState;
      if (rState && rState.autoDestroy || wState && wState.autoDestroy)
        stream.destroy(err);
      else
        stream.emit("error", err);
    }
    module.exports = {
      destroy,
      undestroy,
      errorOrDestroy
    };
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js
var require_errors_browser2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js"(exports, module) {
    "use strict";
    init_shim();
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var codes = {};
    function createErrorType(code, message, Base) {
      if (!Base) {
        Base = Error;
      }
      function getMessage(arg1, arg2, arg3) {
        if (typeof message === "string") {
          return message;
        } else {
          return message(arg1, arg2, arg3);
        }
      }
      var NodeError = /* @__PURE__ */ function(_Base) {
        _inheritsLoose(NodeError2, _Base);
        function NodeError2(arg1, arg2, arg3) {
          return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
        }
        return NodeError2;
      }(Base);
      NodeError.prototype.name = Base.name;
      NodeError.prototype.code = code;
      codes[code] = NodeError;
    }
    function oneOf(expected, thing) {
      if (Array.isArray(expected)) {
        var len = expected.length;
        expected = expected.map(function(i) {
          return String(i);
        });
        if (len > 2) {
          return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1];
        } else if (len === 2) {
          return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
        } else {
          return "of ".concat(thing, " ").concat(expected[0]);
        }
      } else {
        return "of ".concat(thing, " ").concat(String(expected));
      }
    }
    function startsWith(str, search, pos) {
      return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
    }
    function endsWith(str, search, this_len) {
      if (this_len === void 0 || this_len > str.length) {
        this_len = str.length;
      }
      return str.substring(this_len - search.length, this_len) === search;
    }
    function includes(str, search, start) {
      if (typeof start !== "number") {
        start = 0;
      }
      if (start + search.length > str.length) {
        return false;
      } else {
        return str.indexOf(search, start) !== -1;
      }
    }
    createErrorType("ERR_INVALID_OPT_VALUE", function(name, value) {
      return 'The value "' + value + '" is invalid for option "' + name + '"';
    }, TypeError);
    createErrorType("ERR_INVALID_ARG_TYPE", function(name, expected, actual) {
      var determiner;
      if (typeof expected === "string" && startsWith(expected, "not ")) {
        determiner = "must not be";
        expected = expected.replace(/^not /, "");
      } else {
        determiner = "must be";
      }
      var msg;
      if (endsWith(name, " argument")) {
        msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
      } else {
        var type = includes(name, ".") ? "property" : "argument";
        msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
      }
      msg += ". Received type ".concat(typeof actual);
      return msg;
    }, TypeError);
    createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function(name) {
      return "The " + name + " method is not implemented";
    });
    createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    createErrorType("ERR_STREAM_DESTROYED", function(name) {
      return "Cannot call " + name + " after a stream was destroyed";
    });
    createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
    createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    createErrorType("ERR_UNKNOWN_ENCODING", function(arg) {
      return "Unknown encoding: " + arg;
    }, TypeError);
    createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    module.exports.codes = codes;
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js
var require_state2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js"(exports, module) {
    "use strict";
    init_shim();
    var ERR_INVALID_OPT_VALUE = require_errors_browser2().codes.ERR_INVALID_OPT_VALUE;
    function highWaterMarkFrom(options, isDuplex, duplexKey) {
      return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
    }
    function getHighWaterMark(state, options, duplexKey, isDuplex) {
      var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
      if (hwm != null) {
        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
          var name = isDuplex ? duplexKey : "highWaterMark";
          throw new ERR_INVALID_OPT_VALUE(name, hwm);
        }
        return Math.floor(hwm);
      }
      return state.objectMode ? 16 : 16 * 1024;
    }
    module.exports = {
      getHighWaterMark
    };
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js
var require_stream_writable2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Writable;
    function CorkedRequest(state) {
      var _this = this;
      this.next = null;
      this.entry = null;
      this.finish = function() {
        onCorkedFinish(_this, state);
      };
    }
    var Duplex;
    Writable.WritableState = WritableState;
    var internalUtil = {
      deprecate: require_browser2()
    };
    var Stream = require_stream_browser2();
    var Buffer3 = require_buffer().Buffer;
    var OurUint8Array = window.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer3.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer3.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var destroyImpl = require_destroy2();
    var _require = require_state2();
    var getHighWaterMark = _require.getHighWaterMark;
    var _require$codes = require_errors_browser2().codes;
    var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
    var ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE;
    var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
    var ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES;
    var ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END;
    var ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
    var errorOrDestroy = destroyImpl.errorOrDestroy;
    require_inherits_browser()(Writable, Stream);
    function nop() {
    }
    function WritableState(options, stream, isDuplex) {
      Duplex = Duplex || require_stream_duplex2();
      options = options || {};
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof Duplex;
      this.objectMode = !!options.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options.writableObjectMode;
      this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex);
      this.finalCalled = false;
      this.needDrain = false;
      this.ending = false;
      this.ended = false;
      this.finished = false;
      this.destroyed = false;
      var noDecode = options.decodeStrings === false;
      this.decodeStrings = !noDecode;
      this.defaultEncoding = options.defaultEncoding || "utf8";
      this.length = 0;
      this.writing = false;
      this.corked = 0;
      this.sync = true;
      this.bufferProcessing = false;
      this.onwrite = function(er) {
        onwrite(stream, er);
      };
      this.writecb = null;
      this.writelen = 0;
      this.bufferedRequest = null;
      this.lastBufferedRequest = null;
      this.pendingcb = 0;
      this.prefinished = false;
      this.errorEmitted = false;
      this.emitClose = options.emitClose !== false;
      this.autoDestroy = !!options.autoDestroy;
      this.bufferedRequestCount = 0;
      this.corkedRequestsFree = new CorkedRequest(this);
    }
    WritableState.prototype.getBuffer = function getBuffer() {
      var current = this.bufferedRequest;
      var out = [];
      while (current) {
        out.push(current);
        current = current.next;
      }
      return out;
    };
    (function() {
      try {
        Object.defineProperty(WritableState.prototype, "buffer", {
          get: internalUtil.deprecate(function writableStateBufferGetter() {
            return this.getBuffer();
          }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
        });
      } catch (_) {
      }
    })();
    var realHasInstance;
    if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
      realHasInstance = Function.prototype[Symbol.hasInstance];
      Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function value(object) {
          if (realHasInstance.call(this, object))
            return true;
          if (this !== Writable)
            return false;
          return object && object._writableState instanceof WritableState;
        }
      });
    } else {
      realHasInstance = function realHasInstance2(object) {
        return object instanceof this;
      };
    }
    function Writable(options) {
      Duplex = Duplex || require_stream_duplex2();
      var isDuplex = this instanceof Duplex;
      if (!isDuplex && !realHasInstance.call(Writable, this))
        return new Writable(options);
      this._writableState = new WritableState(options, this, isDuplex);
      this.writable = true;
      if (options) {
        if (typeof options.write === "function")
          this._write = options.write;
        if (typeof options.writev === "function")
          this._writev = options.writev;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
        if (typeof options.final === "function")
          this._final = options.final;
      }
      Stream.call(this);
    }
    Writable.prototype.pipe = function() {
      errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
    };
    function writeAfterEnd(stream, cb) {
      var er = new ERR_STREAM_WRITE_AFTER_END();
      errorOrDestroy(stream, er);
      process.nextTick(cb, er);
    }
    function validChunk(stream, state, chunk, cb) {
      var er;
      if (chunk === null) {
        er = new ERR_STREAM_NULL_VALUES();
      } else if (typeof chunk !== "string" && !state.objectMode) {
        er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk);
      }
      if (er) {
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
        return false;
      }
      return true;
    }
    Writable.prototype.write = function(chunk, encoding, cb) {
      var state = this._writableState;
      var ret = false;
      var isBuf = !state.objectMode && _isUint8Array(chunk);
      if (isBuf && !Buffer3.isBuffer(chunk)) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (isBuf)
        encoding = "buffer";
      else if (!encoding)
        encoding = state.defaultEncoding;
      if (typeof cb !== "function")
        cb = nop;
      if (state.ending)
        writeAfterEnd(this, cb);
      else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
      }
      return ret;
    };
    Writable.prototype.cork = function() {
      this._writableState.corked++;
    };
    Writable.prototype.uncork = function() {
      var state = this._writableState;
      if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest)
          clearBuffer(this, state);
      }
    };
    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
      if (typeof encoding === "string")
        encoding = encoding.toLowerCase();
      if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
        throw new ERR_UNKNOWN_ENCODING(encoding);
      this._writableState.defaultEncoding = encoding;
      return this;
    };
    Object.defineProperty(Writable.prototype, "writableBuffer", {
      enumerable: false,
      get: function get() {
        return this._writableState && this._writableState.getBuffer();
      }
    });
    function decodeChunk(state, chunk, encoding) {
      if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
        chunk = Buffer3.from(chunk, encoding);
      }
      return chunk;
    }
    Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    });
    function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
      if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
          isBuf = true;
          encoding = "buffer";
          chunk = newChunk;
        }
      }
      var len = state.objectMode ? 1 : chunk.length;
      state.length += len;
      var ret = state.length < state.highWaterMark;
      if (!ret)
        state.needDrain = true;
      if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
          chunk,
          encoding,
          isBuf,
          callback: cb,
          next: null
        };
        if (last) {
          last.next = state.lastBufferedRequest;
        } else {
          state.bufferedRequest = state.lastBufferedRequest;
        }
        state.bufferedRequestCount += 1;
      } else {
        doWrite(stream, state, false, len, chunk, encoding, cb);
      }
      return ret;
    }
    function doWrite(stream, state, writev, len, chunk, encoding, cb) {
      state.writelen = len;
      state.writecb = cb;
      state.writing = true;
      state.sync = true;
      if (state.destroyed)
        state.onwrite(new ERR_STREAM_DESTROYED("write"));
      else if (writev)
        stream._writev(chunk, state.onwrite);
      else
        stream._write(chunk, encoding, state.onwrite);
      state.sync = false;
    }
    function onwriteError(stream, state, sync, er, cb) {
      --state.pendingcb;
      if (sync) {
        process.nextTick(cb, er);
        process.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
      } else {
        cb(er);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
        finishMaybe(stream, state);
      }
    }
    function onwriteStateUpdate(state) {
      state.writing = false;
      state.writecb = null;
      state.length -= state.writelen;
      state.writelen = 0;
    }
    function onwrite(stream, er) {
      var state = stream._writableState;
      var sync = state.sync;
      var cb = state.writecb;
      if (typeof cb !== "function")
        throw new ERR_MULTIPLE_CALLBACK();
      onwriteStateUpdate(state);
      if (er)
        onwriteError(stream, state, sync, er, cb);
      else {
        var finished = needFinish(state) || stream.destroyed;
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
          clearBuffer(stream, state);
        }
        if (sync) {
          process.nextTick(afterWrite, stream, state, finished, cb);
        } else {
          afterWrite(stream, state, finished, cb);
        }
      }
    }
    function afterWrite(stream, state, finished, cb) {
      if (!finished)
        onwriteDrain(stream, state);
      state.pendingcb--;
      cb();
      finishMaybe(stream, state);
    }
    function onwriteDrain(stream, state) {
      if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit("drain");
      }
    }
    function clearBuffer(stream, state) {
      state.bufferProcessing = true;
      var entry = state.bufferedRequest;
      if (stream._writev && entry && entry.next) {
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while (entry) {
          buffer[count] = entry;
          if (!entry.isBuf)
            allBuffers = false;
          entry = entry.next;
          count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, "", holder.finish);
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
          state.corkedRequestsFree = holder.next;
          holder.next = null;
        } else {
          state.corkedRequestsFree = new CorkedRequest(state);
        }
        state.bufferedRequestCount = 0;
      } else {
        while (entry) {
          var chunk = entry.chunk;
          var encoding = entry.encoding;
          var cb = entry.callback;
          var len = state.objectMode ? 1 : chunk.length;
          doWrite(stream, state, false, len, chunk, encoding, cb);
          entry = entry.next;
          state.bufferedRequestCount--;
          if (state.writing) {
            break;
          }
        }
        if (entry === null)
          state.lastBufferedRequest = null;
      }
      state.bufferedRequest = entry;
      state.bufferProcessing = false;
    }
    Writable.prototype._write = function(chunk, encoding, cb) {
      cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
    };
    Writable.prototype._writev = null;
    Writable.prototype.end = function(chunk, encoding, cb) {
      var state = this._writableState;
      if (typeof chunk === "function") {
        cb = chunk;
        chunk = null;
        encoding = null;
      } else if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (chunk !== null && chunk !== void 0)
        this.write(chunk, encoding);
      if (state.corked) {
        state.corked = 1;
        this.uncork();
      }
      if (!state.ending)
        endWritable(this, state, cb);
      return this;
    };
    Object.defineProperty(Writable.prototype, "writableLength", {
      enumerable: false,
      get: function get() {
        return this._writableState.length;
      }
    });
    function needFinish(state) {
      return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
    }
    function callFinal(stream, state) {
      stream._final(function(err) {
        state.pendingcb--;
        if (err) {
          errorOrDestroy(stream, err);
        }
        state.prefinished = true;
        stream.emit("prefinish");
        finishMaybe(stream, state);
      });
    }
    function prefinish(stream, state) {
      if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === "function" && !state.destroyed) {
          state.pendingcb++;
          state.finalCalled = true;
          process.nextTick(callFinal, stream, state);
        } else {
          state.prefinished = true;
          stream.emit("prefinish");
        }
      }
    }
    function finishMaybe(stream, state) {
      var need = needFinish(state);
      if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
          state.finished = true;
          stream.emit("finish");
          if (state.autoDestroy) {
            var rState = stream._readableState;
            if (!rState || rState.autoDestroy && rState.endEmitted) {
              stream.destroy();
            }
          }
        }
      }
      return need;
    }
    function endWritable(stream, state, cb) {
      state.ending = true;
      finishMaybe(stream, state);
      if (cb) {
        if (state.finished)
          process.nextTick(cb);
        else
          stream.once("finish", cb);
      }
      state.ended = true;
      stream.writable = false;
    }
    function onCorkedFinish(corkReq, state, err) {
      var entry = corkReq.entry;
      corkReq.entry = null;
      while (entry) {
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
      }
      state.corkedRequestsFree.next = corkReq;
    }
    Object.defineProperty(Writable.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._writableState === void 0) {
          return false;
        }
        return this._writableState.destroyed;
      },
      set: function set(value) {
        if (!this._writableState) {
          return;
        }
        this._writableState.destroyed = value;
      }
    });
    Writable.prototype.destroy = destroyImpl.destroy;
    Writable.prototype._undestroy = destroyImpl.undestroy;
    Writable.prototype._destroy = function(err, cb) {
      cb(err);
    };
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js
var require_stream_duplex2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js"(exports, module) {
    "use strict";
    init_shim();
    var objectKeys = Object.keys || function(obj) {
      var keys2 = [];
      for (var key2 in obj) {
        keys2.push(key2);
      }
      return keys2;
    };
    module.exports = Duplex;
    var Readable = require_stream_readable2();
    var Writable = require_stream_writable2();
    require_inherits_browser()(Duplex, Readable);
    {
      keys = objectKeys(Writable.prototype);
      for (v = 0; v < keys.length; v++) {
        method = keys[v];
        if (!Duplex.prototype[method])
          Duplex.prototype[method] = Writable.prototype[method];
      }
    }
    var keys;
    var method;
    var v;
    function Duplex(options) {
      if (!(this instanceof Duplex))
        return new Duplex(options);
      Readable.call(this, options);
      Writable.call(this, options);
      this.allowHalfOpen = true;
      if (options) {
        if (options.readable === false)
          this.readable = false;
        if (options.writable === false)
          this.writable = false;
        if (options.allowHalfOpen === false) {
          this.allowHalfOpen = false;
          this.once("end", onend);
        }
      }
    }
    Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    });
    Object.defineProperty(Duplex.prototype, "writableBuffer", {
      enumerable: false,
      get: function get() {
        return this._writableState && this._writableState.getBuffer();
      }
    });
    Object.defineProperty(Duplex.prototype, "writableLength", {
      enumerable: false,
      get: function get() {
        return this._writableState.length;
      }
    });
    function onend() {
      if (this._writableState.ended)
        return;
      process.nextTick(onEndNT, this);
    }
    function onEndNT(self2) {
      self2.end();
    }
    Object.defineProperty(Duplex.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return false;
        }
        return this._readableState.destroyed && this._writableState.destroyed;
      },
      set: function set(value) {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return;
        }
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
      }
    });
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js
var require_end_of_stream2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"(exports, module) {
    "use strict";
    init_shim();
    var ERR_STREAM_PREMATURE_CLOSE = require_errors_browser2().codes.ERR_STREAM_PREMATURE_CLOSE;
    function once(callback) {
      var called = false;
      return function() {
        if (called)
          return;
        called = true;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        callback.apply(this, args);
      };
    }
    function noop() {
    }
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    function eos(stream, opts, callback) {
      if (typeof opts === "function")
        return eos(stream, null, opts);
      if (!opts)
        opts = {};
      callback = once(callback || noop);
      var readable = opts.readable || opts.readable !== false && stream.readable;
      var writable = opts.writable || opts.writable !== false && stream.writable;
      var onlegacyfinish = function onlegacyfinish2() {
        if (!stream.writable)
          onfinish();
      };
      var writableEnded = stream._writableState && stream._writableState.finished;
      var onfinish = function onfinish2() {
        writable = false;
        writableEnded = true;
        if (!readable)
          callback.call(stream);
      };
      var readableEnded = stream._readableState && stream._readableState.endEmitted;
      var onend = function onend2() {
        readable = false;
        readableEnded = true;
        if (!writable)
          callback.call(stream);
      };
      var onerror = function onerror2(err) {
        callback.call(stream, err);
      };
      var onclose = function onclose2() {
        var err;
        if (readable && !readableEnded) {
          if (!stream._readableState || !stream._readableState.ended)
            err = new ERR_STREAM_PREMATURE_CLOSE();
          return callback.call(stream, err);
        }
        if (writable && !writableEnded) {
          if (!stream._writableState || !stream._writableState.ended)
            err = new ERR_STREAM_PREMATURE_CLOSE();
          return callback.call(stream, err);
        }
      };
      var onrequest = function onrequest2() {
        stream.req.on("finish", onfinish);
      };
      if (isRequest(stream)) {
        stream.on("complete", onfinish);
        stream.on("abort", onclose);
        if (stream.req)
          onrequest();
        else
          stream.on("request", onrequest);
      } else if (writable && !stream._writableState) {
        stream.on("end", onlegacyfinish);
        stream.on("close", onlegacyfinish);
      }
      stream.on("end", onend);
      stream.on("finish", onfinish);
      if (opts.error !== false)
        stream.on("error", onerror);
      stream.on("close", onclose);
      return function() {
        stream.removeListener("complete", onfinish);
        stream.removeListener("abort", onclose);
        stream.removeListener("request", onrequest);
        if (stream.req)
          stream.req.removeListener("finish", onfinish);
        stream.removeListener("end", onlegacyfinish);
        stream.removeListener("close", onlegacyfinish);
        stream.removeListener("finish", onfinish);
        stream.removeListener("end", onend);
        stream.removeListener("error", onerror);
        stream.removeListener("close", onclose);
      };
    }
    module.exports = eos;
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js
var require_async_iterator2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js"(exports, module) {
    "use strict";
    init_shim();
    var _Object$setPrototypeO;
    function _defineProperty(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    var finished = require_end_of_stream2();
    var kLastResolve = Symbol("lastResolve");
    var kLastReject = Symbol("lastReject");
    var kError = Symbol("error");
    var kEnded = Symbol("ended");
    var kLastPromise = Symbol("lastPromise");
    var kHandlePromise = Symbol("handlePromise");
    var kStream = Symbol("stream");
    function createIterResult(value, done) {
      return {
        value,
        done
      };
    }
    function readAndResolve(iter) {
      var resolve = iter[kLastResolve];
      if (resolve !== null) {
        var data = iter[kStream].read();
        if (data !== null) {
          iter[kLastPromise] = null;
          iter[kLastResolve] = null;
          iter[kLastReject] = null;
          resolve(createIterResult(data, false));
        }
      }
    }
    function onReadable(iter) {
      process.nextTick(readAndResolve, iter);
    }
    function wrapForNext(lastPromise, iter) {
      return function(resolve, reject) {
        lastPromise.then(function() {
          if (iter[kEnded]) {
            resolve(createIterResult(void 0, true));
            return;
          }
          iter[kHandlePromise](resolve, reject);
        }, reject);
      };
    }
    var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
    });
    var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
      get stream() {
        return this[kStream];
      },
      next: function next() {
        var _this = this;
        var error = this[kError];
        if (error !== null) {
          return Promise.reject(error);
        }
        if (this[kEnded]) {
          return Promise.resolve(createIterResult(void 0, true));
        }
        if (this[kStream].destroyed) {
          return new Promise(function(resolve, reject) {
            process.nextTick(function() {
              if (_this[kError]) {
                reject(_this[kError]);
              } else {
                resolve(createIterResult(void 0, true));
              }
            });
          });
        }
        var lastPromise = this[kLastPromise];
        var promise;
        if (lastPromise) {
          promise = new Promise(wrapForNext(lastPromise, this));
        } else {
          var data = this[kStream].read();
          if (data !== null) {
            return Promise.resolve(createIterResult(data, false));
          }
          promise = new Promise(this[kHandlePromise]);
        }
        this[kLastPromise] = promise;
        return promise;
      }
    }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
      return this;
    }), _defineProperty(_Object$setPrototypeO, "return", function _return() {
      var _this2 = this;
      return new Promise(function(resolve, reject) {
        _this2[kStream].destroy(null, function(err) {
          if (err) {
            reject(err);
            return;
          }
          resolve(createIterResult(void 0, true));
        });
      });
    }), _Object$setPrototypeO), AsyncIteratorPrototype);
    var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator2(stream) {
      var _Object$create;
      var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
        value: stream,
        writable: true
      }), _defineProperty(_Object$create, kLastResolve, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kLastReject, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kError, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kEnded, {
        value: stream._readableState.endEmitted,
        writable: true
      }), _defineProperty(_Object$create, kHandlePromise, {
        value: function value(resolve, reject) {
          var data = iterator[kStream].read();
          if (data) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(data, false));
          } else {
            iterator[kLastResolve] = resolve;
            iterator[kLastReject] = reject;
          }
        },
        writable: true
      }), _Object$create));
      iterator[kLastPromise] = null;
      finished(stream, function(err) {
        if (err && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var reject = iterator[kLastReject];
          if (reject !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            reject(err);
          }
          iterator[kError] = err;
          return;
        }
        var resolve = iterator[kLastResolve];
        if (resolve !== null) {
          iterator[kLastPromise] = null;
          iterator[kLastResolve] = null;
          iterator[kLastReject] = null;
          resolve(createIterResult(void 0, true));
        }
        iterator[kEnded] = true;
      });
      stream.on("readable", onReadable.bind(null, iterator));
      return iterator;
    };
    module.exports = createReadableStreamAsyncIterator;
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js
var require_from_browser2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js"(exports, module) {
    init_shim();
    module.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js
var require_stream_readable2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Readable;
    var Duplex;
    Readable.ReadableState = ReadableState;
    var EE = require_events().EventEmitter;
    var EElistenerCount = function EElistenerCount2(emitter, type) {
      return emitter.listeners(type).length;
    };
    var Stream = require_stream_browser2();
    var Buffer3 = require_buffer().Buffer;
    var OurUint8Array = window.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer3.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer3.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var debugUtil = require_util();
    var debug;
    if (debugUtil && debugUtil.debuglog) {
      debug = debugUtil.debuglog("stream");
    } else {
      debug = function debug2() {
      };
    }
    var BufferList = require_buffer_list2();
    var destroyImpl = require_destroy2();
    var _require = require_state2();
    var getHighWaterMark = _require.getHighWaterMark;
    var _require$codes = require_errors_browser2().codes;
    var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
    var ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
    var StringDecoder;
    var createReadableStreamAsyncIterator;
    var from;
    require_inherits_browser()(Readable, Stream);
    var errorOrDestroy = destroyImpl.errorOrDestroy;
    var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
    function prependListener(emitter, event, fn) {
      if (typeof emitter.prependListener === "function")
        return emitter.prependListener(event, fn);
      if (!emitter._events || !emitter._events[event])
        emitter.on(event, fn);
      else if (Array.isArray(emitter._events[event]))
        emitter._events[event].unshift(fn);
      else
        emitter._events[event] = [fn, emitter._events[event]];
    }
    function ReadableState(options, stream, isDuplex) {
      Duplex = Duplex || require_stream_duplex2();
      options = options || {};
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof Duplex;
      this.objectMode = !!options.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options.readableObjectMode;
      this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex);
      this.buffer = new BufferList();
      this.length = 0;
      this.pipes = null;
      this.pipesCount = 0;
      this.flowing = null;
      this.ended = false;
      this.endEmitted = false;
      this.reading = false;
      this.sync = true;
      this.needReadable = false;
      this.emittedReadable = false;
      this.readableListening = false;
      this.resumeScheduled = false;
      this.paused = true;
      this.emitClose = options.emitClose !== false;
      this.autoDestroy = !!options.autoDestroy;
      this.destroyed = false;
      this.defaultEncoding = options.defaultEncoding || "utf8";
      this.awaitDrain = 0;
      this.readingMore = false;
      this.decoder = null;
      this.encoding = null;
      if (options.encoding) {
        if (!StringDecoder)
          StringDecoder = require_string_decoder().StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
      }
    }
    function Readable(options) {
      Duplex = Duplex || require_stream_duplex2();
      if (!(this instanceof Readable))
        return new Readable(options);
      var isDuplex = this instanceof Duplex;
      this._readableState = new ReadableState(options, this, isDuplex);
      this.readable = true;
      if (options) {
        if (typeof options.read === "function")
          this._read = options.read;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
      }
      Stream.call(this);
    }
    Object.defineProperty(Readable.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._readableState === void 0) {
          return false;
        }
        return this._readableState.destroyed;
      },
      set: function set(value) {
        if (!this._readableState) {
          return;
        }
        this._readableState.destroyed = value;
      }
    });
    Readable.prototype.destroy = destroyImpl.destroy;
    Readable.prototype._undestroy = destroyImpl.undestroy;
    Readable.prototype._destroy = function(err, cb) {
      cb(err);
    };
    Readable.prototype.push = function(chunk, encoding) {
      var state = this._readableState;
      var skipChunkCheck;
      if (!state.objectMode) {
        if (typeof chunk === "string") {
          encoding = encoding || state.defaultEncoding;
          if (encoding !== state.encoding) {
            chunk = Buffer3.from(chunk, encoding);
            encoding = "";
          }
          skipChunkCheck = true;
        }
      } else {
        skipChunkCheck = true;
      }
      return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
    };
    Readable.prototype.unshift = function(chunk) {
      return readableAddChunk(this, chunk, null, true, false);
    };
    function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
      debug("readableAddChunk", chunk);
      var state = stream._readableState;
      if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
      } else {
        var er;
        if (!skipChunkCheck)
          er = chunkInvalid(state, chunk);
        if (er) {
          errorOrDestroy(stream, er);
        } else if (state.objectMode || chunk && chunk.length > 0) {
          if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer3.prototype) {
            chunk = _uint8ArrayToBuffer(chunk);
          }
          if (addToFront) {
            if (state.endEmitted)
              errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
            else
              addChunk(stream, state, chunk, true);
          } else if (state.ended) {
            errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
          } else if (state.destroyed) {
            return false;
          } else {
            state.reading = false;
            if (state.decoder && !encoding) {
              chunk = state.decoder.write(chunk);
              if (state.objectMode || chunk.length !== 0)
                addChunk(stream, state, chunk, false);
              else
                maybeReadMore(stream, state);
            } else {
              addChunk(stream, state, chunk, false);
            }
          }
        } else if (!addToFront) {
          state.reading = false;
          maybeReadMore(stream, state);
        }
      }
      return !state.ended && (state.length < state.highWaterMark || state.length === 0);
    }
    function addChunk(stream, state, chunk, addToFront) {
      if (state.flowing && state.length === 0 && !state.sync) {
        state.awaitDrain = 0;
        stream.emit("data", chunk);
      } else {
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);
        if (state.needReadable)
          emitReadable(stream);
      }
      maybeReadMore(stream, state);
    }
    function chunkInvalid(state, chunk) {
      var er;
      if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
        er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
      }
      return er;
    }
    Readable.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Readable.prototype.setEncoding = function(enc) {
      if (!StringDecoder)
        StringDecoder = require_string_decoder().StringDecoder;
      var decoder = new StringDecoder(enc);
      this._readableState.decoder = decoder;
      this._readableState.encoding = this._readableState.decoder.encoding;
      var p = this._readableState.buffer.head;
      var content = "";
      while (p !== null) {
        content += decoder.write(p.data);
        p = p.next;
      }
      this._readableState.buffer.clear();
      if (content !== "")
        this._readableState.buffer.push(content);
      this._readableState.length = content.length;
      return this;
    };
    var MAX_HWM = 1073741824;
    function computeNewHighWaterMark(n) {
      if (n >= MAX_HWM) {
        n = MAX_HWM;
      } else {
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
      }
      return n;
    }
    function howMuchToRead(n, state) {
      if (n <= 0 || state.length === 0 && state.ended)
        return 0;
      if (state.objectMode)
        return 1;
      if (n !== n) {
        if (state.flowing && state.length)
          return state.buffer.head.data.length;
        else
          return state.length;
      }
      if (n > state.highWaterMark)
        state.highWaterMark = computeNewHighWaterMark(n);
      if (n <= state.length)
        return n;
      if (!state.ended) {
        state.needReadable = true;
        return 0;
      }
      return state.length;
    }
    Readable.prototype.read = function(n) {
      debug("read", n);
      n = parseInt(n, 10);
      var state = this._readableState;
      var nOrig = n;
      if (n !== 0)
        state.emittedReadable = false;
      if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug("read: emitReadable", state.length, state.ended);
        if (state.length === 0 && state.ended)
          endReadable(this);
        else
          emitReadable(this);
        return null;
      }
      n = howMuchToRead(n, state);
      if (n === 0 && state.ended) {
        if (state.length === 0)
          endReadable(this);
        return null;
      }
      var doRead = state.needReadable;
      debug("need readable", doRead);
      if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug("length less than watermark", doRead);
      }
      if (state.ended || state.reading) {
        doRead = false;
        debug("reading or ended", doRead);
      } else if (doRead) {
        debug("do read");
        state.reading = true;
        state.sync = true;
        if (state.length === 0)
          state.needReadable = true;
        this._read(state.highWaterMark);
        state.sync = false;
        if (!state.reading)
          n = howMuchToRead(nOrig, state);
      }
      var ret;
      if (n > 0)
        ret = fromList(n, state);
      else
        ret = null;
      if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
      } else {
        state.length -= n;
        state.awaitDrain = 0;
      }
      if (state.length === 0) {
        if (!state.ended)
          state.needReadable = true;
        if (nOrig !== n && state.ended)
          endReadable(this);
      }
      if (ret !== null)
        this.emit("data", ret);
      return ret;
    };
    function onEofChunk(stream, state) {
      debug("onEofChunk");
      if (state.ended)
        return;
      if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
          state.buffer.push(chunk);
          state.length += state.objectMode ? 1 : chunk.length;
        }
      }
      state.ended = true;
      if (state.sync) {
        emitReadable(stream);
      } else {
        state.needReadable = false;
        if (!state.emittedReadable) {
          state.emittedReadable = true;
          emitReadable_(stream);
        }
      }
    }
    function emitReadable(stream) {
      var state = stream._readableState;
      debug("emitReadable", state.needReadable, state.emittedReadable);
      state.needReadable = false;
      if (!state.emittedReadable) {
        debug("emitReadable", state.flowing);
        state.emittedReadable = true;
        process.nextTick(emitReadable_, stream);
      }
    }
    function emitReadable_(stream) {
      var state = stream._readableState;
      debug("emitReadable_", state.destroyed, state.length, state.ended);
      if (!state.destroyed && (state.length || state.ended)) {
        stream.emit("readable");
        state.emittedReadable = false;
      }
      state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
      flow(stream);
    }
    function maybeReadMore(stream, state) {
      if (!state.readingMore) {
        state.readingMore = true;
        process.nextTick(maybeReadMore_, stream, state);
      }
    }
    function maybeReadMore_(stream, state) {
      while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
        var len = state.length;
        debug("maybeReadMore read 0");
        stream.read(0);
        if (len === state.length)
          break;
      }
      state.readingMore = false;
    }
    Readable.prototype._read = function(n) {
      errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
    };
    Readable.prototype.pipe = function(dest, pipeOpts) {
      var src = this;
      var state = this._readableState;
      switch (state.pipesCount) {
        case 0:
          state.pipes = dest;
          break;
        case 1:
          state.pipes = [state.pipes, dest];
          break;
        default:
          state.pipes.push(dest);
          break;
      }
      state.pipesCount += 1;
      debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
      var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
      var endFn = doEnd ? onend : unpipe;
      if (state.endEmitted)
        process.nextTick(endFn);
      else
        src.once("end", endFn);
      dest.on("unpipe", onunpipe);
      function onunpipe(readable, unpipeInfo) {
        debug("onunpipe");
        if (readable === src) {
          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
            unpipeInfo.hasUnpiped = true;
            cleanup();
          }
        }
      }
      function onend() {
        debug("onend");
        dest.end();
      }
      var ondrain = pipeOnDrain(src);
      dest.on("drain", ondrain);
      var cleanedUp = false;
      function cleanup() {
        debug("cleanup");
        dest.removeListener("close", onclose);
        dest.removeListener("finish", onfinish);
        dest.removeListener("drain", ondrain);
        dest.removeListener("error", onerror);
        dest.removeListener("unpipe", onunpipe);
        src.removeListener("end", onend);
        src.removeListener("end", unpipe);
        src.removeListener("data", ondata);
        cleanedUp = true;
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
          ondrain();
      }
      src.on("data", ondata);
      function ondata(chunk) {
        debug("ondata");
        var ret = dest.write(chunk);
        debug("dest.write", ret);
        if (ret === false) {
          if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
            debug("false write response, pause", state.awaitDrain);
            state.awaitDrain++;
          }
          src.pause();
        }
      }
      function onerror(er) {
        debug("onerror", er);
        unpipe();
        dest.removeListener("error", onerror);
        if (EElistenerCount(dest, "error") === 0)
          errorOrDestroy(dest, er);
      }
      prependListener(dest, "error", onerror);
      function onclose() {
        dest.removeListener("finish", onfinish);
        unpipe();
      }
      dest.once("close", onclose);
      function onfinish() {
        debug("onfinish");
        dest.removeListener("close", onclose);
        unpipe();
      }
      dest.once("finish", onfinish);
      function unpipe() {
        debug("unpipe");
        src.unpipe(dest);
      }
      dest.emit("pipe", src);
      if (!state.flowing) {
        debug("pipe resume");
        src.resume();
      }
      return dest;
    };
    function pipeOnDrain(src) {
      return function pipeOnDrainFunctionResult() {
        var state = src._readableState;
        debug("pipeOnDrain", state.awaitDrain);
        if (state.awaitDrain)
          state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, "data")) {
          state.flowing = true;
          flow(src);
        }
      };
    }
    Readable.prototype.unpipe = function(dest) {
      var state = this._readableState;
      var unpipeInfo = {
        hasUnpiped: false
      };
      if (state.pipesCount === 0)
        return this;
      if (state.pipesCount === 1) {
        if (dest && dest !== state.pipes)
          return this;
        if (!dest)
          dest = state.pipes;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest)
          dest.emit("unpipe", this, unpipeInfo);
        return this;
      }
      if (!dest) {
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for (var i = 0; i < len; i++) {
          dests[i].emit("unpipe", this, {
            hasUnpiped: false
          });
        }
        return this;
      }
      var index = indexOf(state.pipes, dest);
      if (index === -1)
        return this;
      state.pipes.splice(index, 1);
      state.pipesCount -= 1;
      if (state.pipesCount === 1)
        state.pipes = state.pipes[0];
      dest.emit("unpipe", this, unpipeInfo);
      return this;
    };
    Readable.prototype.on = function(ev, fn) {
      var res = Stream.prototype.on.call(this, ev, fn);
      var state = this._readableState;
      if (ev === "data") {
        state.readableListening = this.listenerCount("readable") > 0;
        if (state.flowing !== false)
          this.resume();
      } else if (ev === "readable") {
        if (!state.endEmitted && !state.readableListening) {
          state.readableListening = state.needReadable = true;
          state.flowing = false;
          state.emittedReadable = false;
          debug("on readable", state.length, state.reading);
          if (state.length) {
            emitReadable(this);
          } else if (!state.reading) {
            process.nextTick(nReadingNextTick, this);
          }
        }
      }
      return res;
    };
    Readable.prototype.addListener = Readable.prototype.on;
    Readable.prototype.removeListener = function(ev, fn) {
      var res = Stream.prototype.removeListener.call(this, ev, fn);
      if (ev === "readable") {
        process.nextTick(updateReadableListening, this);
      }
      return res;
    };
    Readable.prototype.removeAllListeners = function(ev) {
      var res = Stream.prototype.removeAllListeners.apply(this, arguments);
      if (ev === "readable" || ev === void 0) {
        process.nextTick(updateReadableListening, this);
      }
      return res;
    };
    function updateReadableListening(self2) {
      var state = self2._readableState;
      state.readableListening = self2.listenerCount("readable") > 0;
      if (state.resumeScheduled && !state.paused) {
        state.flowing = true;
      } else if (self2.listenerCount("data") > 0) {
        self2.resume();
      }
    }
    function nReadingNextTick(self2) {
      debug("readable nexttick read 0");
      self2.read(0);
    }
    Readable.prototype.resume = function() {
      var state = this._readableState;
      if (!state.flowing) {
        debug("resume");
        state.flowing = !state.readableListening;
        resume(this, state);
      }
      state.paused = false;
      return this;
    };
    function resume(stream, state) {
      if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process.nextTick(resume_, stream, state);
      }
    }
    function resume_(stream, state) {
      debug("resume", state.reading);
      if (!state.reading) {
        stream.read(0);
      }
      state.resumeScheduled = false;
      stream.emit("resume");
      flow(stream);
      if (state.flowing && !state.reading)
        stream.read(0);
    }
    Readable.prototype.pause = function() {
      debug("call pause flowing=%j", this._readableState.flowing);
      if (this._readableState.flowing !== false) {
        debug("pause");
        this._readableState.flowing = false;
        this.emit("pause");
      }
      this._readableState.paused = true;
      return this;
    };
    function flow(stream) {
      var state = stream._readableState;
      debug("flow", state.flowing);
      while (state.flowing && stream.read() !== null) {
        ;
      }
    }
    Readable.prototype.wrap = function(stream) {
      var _this = this;
      var state = this._readableState;
      var paused = false;
      stream.on("end", function() {
        debug("wrapped end");
        if (state.decoder && !state.ended) {
          var chunk = state.decoder.end();
          if (chunk && chunk.length)
            _this.push(chunk);
        }
        _this.push(null);
      });
      stream.on("data", function(chunk) {
        debug("wrapped data");
        if (state.decoder)
          chunk = state.decoder.write(chunk);
        if (state.objectMode && (chunk === null || chunk === void 0))
          return;
        else if (!state.objectMode && (!chunk || !chunk.length))
          return;
        var ret = _this.push(chunk);
        if (!ret) {
          paused = true;
          stream.pause();
        }
      });
      for (var i in stream) {
        if (this[i] === void 0 && typeof stream[i] === "function") {
          this[i] = function methodWrap(method) {
            return function methodWrapReturnFunction() {
              return stream[method].apply(stream, arguments);
            };
          }(i);
        }
      }
      for (var n = 0; n < kProxyEvents.length; n++) {
        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
      }
      this._read = function(n2) {
        debug("wrapped _read", n2);
        if (paused) {
          paused = false;
          stream.resume();
        }
      };
      return this;
    };
    if (typeof Symbol === "function") {
      Readable.prototype[Symbol.asyncIterator] = function() {
        if (createReadableStreamAsyncIterator === void 0) {
          createReadableStreamAsyncIterator = require_async_iterator2();
        }
        return createReadableStreamAsyncIterator(this);
      };
    }
    Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._readableState.highWaterMark;
      }
    });
    Object.defineProperty(Readable.prototype, "readableBuffer", {
      enumerable: false,
      get: function get() {
        return this._readableState && this._readableState.buffer;
      }
    });
    Object.defineProperty(Readable.prototype, "readableFlowing", {
      enumerable: false,
      get: function get() {
        return this._readableState.flowing;
      },
      set: function set(state) {
        if (this._readableState) {
          this._readableState.flowing = state;
        }
      }
    });
    Readable._fromList = fromList;
    Object.defineProperty(Readable.prototype, "readableLength", {
      enumerable: false,
      get: function get() {
        return this._readableState.length;
      }
    });
    function fromList(n, state) {
      if (state.length === 0)
        return null;
      var ret;
      if (state.objectMode)
        ret = state.buffer.shift();
      else if (!n || n >= state.length) {
        if (state.decoder)
          ret = state.buffer.join("");
        else if (state.buffer.length === 1)
          ret = state.buffer.first();
        else
          ret = state.buffer.concat(state.length);
        state.buffer.clear();
      } else {
        ret = state.buffer.consume(n, state.decoder);
      }
      return ret;
    }
    function endReadable(stream) {
      var state = stream._readableState;
      debug("endReadable", state.endEmitted);
      if (!state.endEmitted) {
        state.ended = true;
        process.nextTick(endReadableNT, state, stream);
      }
    }
    function endReadableNT(state, stream) {
      debug("endReadableNT", state.endEmitted, state.length);
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit("end");
        if (state.autoDestroy) {
          var wState = stream._writableState;
          if (!wState || wState.autoDestroy && wState.finished) {
            stream.destroy();
          }
        }
      }
    }
    if (typeof Symbol === "function") {
      Readable.from = function(iterable, opts) {
        if (from === void 0) {
          from = require_from_browser2();
        }
        return from(Readable, iterable, opts);
      };
    }
    function indexOf(xs, x) {
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x)
          return i;
      }
      return -1;
    }
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js
var require_stream_transform2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Transform;
    var _require$codes = require_errors_browser2().codes;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
    var ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING;
    var ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
    var Duplex = require_stream_duplex2();
    require_inherits_browser()(Transform, Duplex);
    function afterTransform(er, data) {
      var ts = this._transformState;
      ts.transforming = false;
      var cb = ts.writecb;
      if (cb === null) {
        return this.emit("error", new ERR_MULTIPLE_CALLBACK());
      }
      ts.writechunk = null;
      ts.writecb = null;
      if (data != null)
        this.push(data);
      cb(er);
      var rs = this._readableState;
      rs.reading = false;
      if (rs.needReadable || rs.length < rs.highWaterMark) {
        this._read(rs.highWaterMark);
      }
    }
    function Transform(options) {
      if (!(this instanceof Transform))
        return new Transform(options);
      Duplex.call(this, options);
      this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      };
      this._readableState.needReadable = true;
      this._readableState.sync = false;
      if (options) {
        if (typeof options.transform === "function")
          this._transform = options.transform;
        if (typeof options.flush === "function")
          this._flush = options.flush;
      }
      this.on("prefinish", prefinish);
    }
    function prefinish() {
      var _this = this;
      if (typeof this._flush === "function" && !this._readableState.destroyed) {
        this._flush(function(er, data) {
          done(_this, er, data);
        });
      } else {
        done(this, null, null);
      }
    }
    Transform.prototype.push = function(chunk, encoding) {
      this._transformState.needTransform = false;
      return Duplex.prototype.push.call(this, chunk, encoding);
    };
    Transform.prototype._transform = function(chunk, encoding, cb) {
      cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
    };
    Transform.prototype._write = function(chunk, encoding, cb) {
      var ts = this._transformState;
      ts.writecb = cb;
      ts.writechunk = chunk;
      ts.writeencoding = encoding;
      if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
          this._read(rs.highWaterMark);
      }
    };
    Transform.prototype._read = function(n) {
      var ts = this._transformState;
      if (ts.writechunk !== null && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
      } else {
        ts.needTransform = true;
      }
    };
    Transform.prototype._destroy = function(err, cb) {
      Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
      });
    };
    function done(stream, er, data) {
      if (er)
        return stream.emit("error", er);
      if (data != null)
        stream.push(data);
      if (stream._writableState.length)
        throw new ERR_TRANSFORM_WITH_LENGTH_0();
      if (stream._transformState.transforming)
        throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
      return stream.push(null);
    }
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js
var require_stream_passthrough2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = PassThrough;
    var Transform = require_stream_transform2();
    require_inherits_browser()(PassThrough, Transform);
    function PassThrough(options) {
      if (!(this instanceof PassThrough))
        return new PassThrough(options);
      Transform.call(this, options);
    }
    PassThrough.prototype._transform = function(chunk, encoding, cb) {
      cb(null, chunk);
    };
  }
});

// node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js
var require_pipeline2 = __commonJS({
  "node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js"(exports, module) {
    "use strict";
    init_shim();
    var eos;
    function once(callback) {
      var called = false;
      return function() {
        if (called)
          return;
        called = true;
        callback.apply(void 0, arguments);
      };
    }
    var _require$codes = require_errors_browser2().codes;
    var ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
    var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
    function noop(err) {
      if (err)
        throw err;
    }
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    function destroyer(stream, reading, writing, callback) {
      callback = once(callback);
      var closed = false;
      stream.on("close", function() {
        closed = true;
      });
      if (eos === void 0)
        eos = require_end_of_stream2();
      eos(stream, {
        readable: reading,
        writable: writing
      }, function(err) {
        if (err)
          return callback(err);
        closed = true;
        callback();
      });
      var destroyed = false;
      return function(err) {
        if (closed)
          return;
        if (destroyed)
          return;
        destroyed = true;
        if (isRequest(stream))
          return stream.abort();
        if (typeof stream.destroy === "function")
          return stream.destroy();
        callback(err || new ERR_STREAM_DESTROYED("pipe"));
      };
    }
    function call(fn) {
      fn();
    }
    function pipe(from, to) {
      return from.pipe(to);
    }
    function popCallback(streams) {
      if (!streams.length)
        return noop;
      if (typeof streams[streams.length - 1] !== "function")
        return noop;
      return streams.pop();
    }
    function pipeline() {
      for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
        streams[_key] = arguments[_key];
      }
      var callback = popCallback(streams);
      if (Array.isArray(streams[0]))
        streams = streams[0];
      if (streams.length < 2) {
        throw new ERR_MISSING_ARGS("streams");
      }
      var error;
      var destroys = streams.map(function(stream, i) {
        var reading = i < streams.length - 1;
        var writing = i > 0;
        return destroyer(stream, reading, writing, function(err) {
          if (!error)
            error = err;
          if (err)
            destroys.forEach(call);
          if (reading)
            return;
          destroys.forEach(call);
          callback(error);
        });
      });
      return streams.reduce(pipe);
    }
    module.exports = pipeline;
  }
});

// node_modules/stream-browserify/index.js
var require_stream_browserify = __commonJS({
  "node_modules/stream-browserify/index.js"(exports, module) {
    init_shim();
    module.exports = Stream;
    var EE = require_events().EventEmitter;
    var inherits = require_inherits_browser();
    inherits(Stream, EE);
    Stream.Readable = require_stream_readable2();
    Stream.Writable = require_stream_writable2();
    Stream.Duplex = require_stream_duplex2();
    Stream.Transform = require_stream_transform2();
    Stream.PassThrough = require_stream_passthrough2();
    Stream.finished = require_end_of_stream2();
    Stream.pipeline = require_pipeline2();
    Stream.Stream = Stream;
    function Stream() {
      EE.call(this);
    }
    Stream.prototype.pipe = function(dest, options) {
      var source = this;
      function ondata(chunk) {
        if (dest.writable) {
          if (dest.write(chunk) === false && source.pause) {
            source.pause();
          }
        }
      }
      source.on("data", ondata);
      function ondrain() {
        if (source.readable && source.resume) {
          source.resume();
        }
      }
      dest.on("drain", ondrain);
      if (!dest._isStdio && (!options || options.end !== false)) {
        source.on("end", onend);
        source.on("close", onclose);
      }
      var didOnEnd = false;
      function onend() {
        if (didOnEnd)
          return;
        didOnEnd = true;
        dest.end();
      }
      function onclose() {
        if (didOnEnd)
          return;
        didOnEnd = true;
        if (typeof dest.destroy === "function")
          dest.destroy();
      }
      function onerror(er) {
        cleanup();
        if (EE.listenerCount(this, "error") === 0) {
          throw er;
        }
      }
      source.on("error", onerror);
      dest.on("error", onerror);
      function cleanup() {
        source.removeListener("data", ondata);
        dest.removeListener("drain", ondrain);
        source.removeListener("end", onend);
        source.removeListener("close", onclose);
        source.removeListener("error", onerror);
        dest.removeListener("error", onerror);
        source.removeListener("end", cleanup);
        source.removeListener("close", cleanup);
        dest.removeListener("close", cleanup);
      }
      source.on("end", cleanup);
      source.on("close", cleanup);
      dest.on("close", cleanup);
      dest.emit("pipe", source);
      return dest;
    };
  }
});

// node_modules/cipher-base/index.js
var require_cipher_base = __commonJS({
  "node_modules/cipher-base/index.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var Transform = require_stream_browserify().Transform;
    var StringDecoder = require_string_decoder().StringDecoder;
    var inherits = require_inherits_browser();
    function CipherBase(hashMode) {
      Transform.call(this);
      this.hashMode = typeof hashMode === "string";
      if (this.hashMode) {
        this[hashMode] = this._finalOrDigest;
      } else {
        this.final = this._finalOrDigest;
      }
      if (this._final) {
        this.__final = this._final;
        this._final = null;
      }
      this._decoder = null;
      this._encoding = null;
    }
    inherits(CipherBase, Transform);
    CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
      if (typeof data === "string") {
        data = Buffer3.from(data, inputEnc);
      }
      var outData = this._update(data);
      if (this.hashMode)
        return this;
      if (outputEnc) {
        outData = this._toString(outData, outputEnc);
      }
      return outData;
    };
    CipherBase.prototype.setAutoPadding = function() {
    };
    CipherBase.prototype.getAuthTag = function() {
      throw new Error("trying to get auth tag in unsupported state");
    };
    CipherBase.prototype.setAuthTag = function() {
      throw new Error("trying to set auth tag in unsupported state");
    };
    CipherBase.prototype.setAAD = function() {
      throw new Error("trying to set aad in unsupported state");
    };
    CipherBase.prototype._transform = function(data, _, next) {
      var err;
      try {
        if (this.hashMode) {
          this._update(data);
        } else {
          this.push(this._update(data));
        }
      } catch (e) {
        err = e;
      } finally {
        next(err);
      }
    };
    CipherBase.prototype._flush = function(done) {
      var err;
      try {
        this.push(this.__final());
      } catch (e) {
        err = e;
      }
      done(err);
    };
    CipherBase.prototype._finalOrDigest = function(outputEnc) {
      var outData = this.__final() || Buffer3.alloc(0);
      if (outputEnc) {
        outData = this._toString(outData, outputEnc, true);
      }
      return outData;
    };
    CipherBase.prototype._toString = function(value, enc, fin) {
      if (!this._decoder) {
        this._decoder = new StringDecoder(enc);
        this._encoding = enc;
      }
      if (this._encoding !== enc)
        throw new Error("can't switch encodings");
      var out = this._decoder.write(value);
      if (fin) {
        out += this._decoder.end();
      }
      return out;
    };
    module.exports = CipherBase;
  }
});

// node_modules/create-hash/browser.js
var require_browser3 = __commonJS({
  "node_modules/create-hash/browser.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var MD5 = require_md5();
    var RIPEMD160 = require_ripemd160();
    var sha = require_sha2();
    var Base = require_cipher_base();
    function Hash(hash3) {
      Base.call(this, "digest");
      this._hash = hash3;
    }
    inherits(Hash, Base);
    Hash.prototype._update = function(data) {
      this._hash.update(data);
    };
    Hash.prototype._final = function() {
      return this._hash.digest();
    };
    module.exports = function createHash(alg) {
      alg = alg.toLowerCase();
      if (alg === "md5")
        return new MD5();
      if (alg === "rmd160" || alg === "ripemd160")
        return new RIPEMD160();
      return new Hash(sha(alg));
    };
  }
});

// node_modules/base-x/src/index.js
var require_src = __commonJS({
  "node_modules/base-x/src/index.js"(exports, module) {
    "use strict";
    init_shim();
    var _Buffer = require_safe_buffer().Buffer;
    function base2(ALPHABET) {
      if (ALPHABET.length >= 255) {
        throw new TypeError("Alphabet too long");
      }
      var BASE_MAP = new Uint8Array(256);
      for (var j = 0; j < BASE_MAP.length; j++) {
        BASE_MAP[j] = 255;
      }
      for (var i = 0; i < ALPHABET.length; i++) {
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) {
          throw new TypeError(x + " is ambiguous");
        }
        BASE_MAP[xc] = i;
      }
      var BASE = ALPHABET.length;
      var LEADER = ALPHABET.charAt(0);
      var FACTOR = Math.log(BASE) / Math.log(256);
      var iFACTOR = Math.log(256) / Math.log(BASE);
      function encode3(source) {
        if (Array.isArray(source) || source instanceof Uint8Array) {
          source = _Buffer.from(source);
        }
        if (!_Buffer.isBuffer(source)) {
          throw new TypeError("Expected Buffer");
        }
        if (source.length === 0) {
          return "";
        }
        var zeroes = 0;
        var length = 0;
        var pbegin = 0;
        var pend = source.length;
        while (pbegin !== pend && source[pbegin] === 0) {
          pbegin++;
          zeroes++;
        }
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        while (pbegin !== pend) {
          var carry = source[pbegin];
          var i2 = 0;
          for (var it1 = size - 1; (carry !== 0 || i2 < length) && it1 !== -1; it1--, i2++) {
            carry += 256 * b58[it1] >>> 0;
            b58[it1] = carry % BASE >>> 0;
            carry = carry / BASE >>> 0;
          }
          if (carry !== 0) {
            throw new Error("Non-zero carry");
          }
          length = i2;
          pbegin++;
        }
        var it2 = size - length;
        while (it2 !== size && b58[it2] === 0) {
          it2++;
        }
        var str = LEADER.repeat(zeroes);
        for (; it2 < size; ++it2) {
          str += ALPHABET.charAt(b58[it2]);
        }
        return str;
      }
      function decodeUnsafe(source) {
        if (typeof source !== "string") {
          throw new TypeError("Expected String");
        }
        if (source.length === 0) {
          return _Buffer.alloc(0);
        }
        var psz = 0;
        var zeroes = 0;
        var length = 0;
        while (source[psz] === LEADER) {
          zeroes++;
          psz++;
        }
        var size = (source.length - psz) * FACTOR + 1 >>> 0;
        var b256 = new Uint8Array(size);
        while (source[psz]) {
          var carry = BASE_MAP[source.charCodeAt(psz)];
          if (carry === 255) {
            return;
          }
          var i2 = 0;
          for (var it3 = size - 1; (carry !== 0 || i2 < length) && it3 !== -1; it3--, i2++) {
            carry += BASE * b256[it3] >>> 0;
            b256[it3] = carry % 256 >>> 0;
            carry = carry / 256 >>> 0;
          }
          if (carry !== 0) {
            throw new Error("Non-zero carry");
          }
          length = i2;
          psz++;
        }
        var it4 = size - length;
        while (it4 !== size && b256[it4] === 0) {
          it4++;
        }
        var vch = _Buffer.allocUnsafe(zeroes + (size - it4));
        vch.fill(0, 0, zeroes);
        var j2 = zeroes;
        while (it4 !== size) {
          vch[j2++] = b256[it4++];
        }
        return vch;
      }
      function decode2(string) {
        var buffer = decodeUnsafe(string);
        if (buffer) {
          return buffer;
        }
        throw new Error("Non-base" + BASE + " character");
      }
      return {
        encode: encode3,
        decodeUnsafe,
        decode: decode2
      };
    }
    module.exports = base2;
  }
});

// node_modules/bs58/index.js
var require_bs58 = __commonJS({
  "node_modules/bs58/index.js"(exports, module) {
    init_shim();
    var basex = require_src();
    var ALPHABET = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
    module.exports = basex(ALPHABET);
  }
});

// node_modules/bs58check/base.js
var require_base = __commonJS({
  "node_modules/bs58check/base.js"(exports, module) {
    "use strict";
    init_shim();
    var base58 = require_bs58();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = function(checksumFn) {
      function encode3(payload) {
        var checksum = checksumFn(payload);
        return base58.encode(Buffer3.concat([
          payload,
          checksum
        ], payload.length + 4));
      }
      function decodeRaw(buffer) {
        var payload = buffer.slice(0, -4);
        var checksum = buffer.slice(-4);
        var newChecksum = checksumFn(payload);
        if (checksum[0] ^ newChecksum[0] | checksum[1] ^ newChecksum[1] | checksum[2] ^ newChecksum[2] | checksum[3] ^ newChecksum[3])
          return;
        return payload;
      }
      function decodeUnsafe(string) {
        var buffer = base58.decodeUnsafe(string);
        if (!buffer)
          return;
        return decodeRaw(buffer);
      }
      function decode2(string) {
        var buffer = base58.decode(string);
        var payload = decodeRaw(buffer, checksumFn);
        if (!payload)
          throw new Error("Invalid checksum");
        return payload;
      }
      return {
        encode: encode3,
        decode: decode2,
        decodeUnsafe
      };
    };
  }
});

// node_modules/bs58check/index.js
var require_bs58check = __commonJS({
  "node_modules/bs58check/index.js"(exports, module) {
    "use strict";
    init_shim();
    var createHash = require_browser3();
    var bs58checkBase = require_base();
    function sha256x2(buffer) {
      var tmp = createHash("sha256").update(buffer).digest();
      return createHash("sha256").update(tmp).digest();
    }
    module.exports = bs58checkBase(sha256x2);
  }
});

// node_modules/randombytes/browser.js
var require_browser4 = __commonJS({
  "node_modules/randombytes/browser.js"(exports, module) {
    "use strict";
    init_shim();
    var MAX_BYTES = 65536;
    var MAX_UINT32 = 4294967295;
    function oldBrowser() {
      throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
    }
    var Buffer3 = require_safe_buffer().Buffer;
    var crypto2 = window.crypto || window.msCrypto;
    if (crypto2 && crypto2.getRandomValues) {
      module.exports = randomBytes2;
    } else {
      module.exports = oldBrowser;
    }
    function randomBytes2(size, cb) {
      if (size > MAX_UINT32)
        throw new RangeError("requested too many random bytes");
      var bytes = Buffer3.allocUnsafe(size);
      if (size > 0) {
        if (size > MAX_BYTES) {
          for (var generated = 0; generated < size; generated += MAX_BYTES) {
            crypto2.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));
          }
        } else {
          crypto2.getRandomValues(bytes);
        }
      }
      if (typeof cb === "function") {
        return process.nextTick(function() {
          cb(null, bytes);
        });
      }
      return bytes;
    }
  }
});

// node_modules/create-hmac/legacy.js
var require_legacy = __commonJS({
  "node_modules/create-hmac/legacy.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var Buffer3 = require_safe_buffer().Buffer;
    var Base = require_cipher_base();
    var ZEROS = Buffer3.alloc(128);
    var blocksize = 64;
    function Hmac(alg, key2) {
      Base.call(this, "digest");
      if (typeof key2 === "string") {
        key2 = Buffer3.from(key2);
      }
      this._alg = alg;
      this._key = key2;
      if (key2.length > blocksize) {
        key2 = alg(key2);
      } else if (key2.length < blocksize) {
        key2 = Buffer3.concat([key2, ZEROS], blocksize);
      }
      var ipad = this._ipad = Buffer3.allocUnsafe(blocksize);
      var opad = this._opad = Buffer3.allocUnsafe(blocksize);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = key2[i] ^ 54;
        opad[i] = key2[i] ^ 92;
      }
      this._hash = [ipad];
    }
    inherits(Hmac, Base);
    Hmac.prototype._update = function(data) {
      this._hash.push(data);
    };
    Hmac.prototype._final = function() {
      var h = this._alg(Buffer3.concat(this._hash));
      return this._alg(Buffer3.concat([this._opad, h]));
    };
    module.exports = Hmac;
  }
});

// node_modules/create-hash/md5.js
var require_md52 = __commonJS({
  "node_modules/create-hash/md5.js"(exports, module) {
    init_shim();
    var MD5 = require_md5();
    module.exports = function(buffer) {
      return new MD5().update(buffer).digest();
    };
  }
});

// node_modules/create-hmac/browser.js
var require_browser5 = __commonJS({
  "node_modules/create-hmac/browser.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var Legacy = require_legacy();
    var Base = require_cipher_base();
    var Buffer3 = require_safe_buffer().Buffer;
    var md5 = require_md52();
    var RIPEMD160 = require_ripemd160();
    var sha = require_sha2();
    var ZEROS = Buffer3.alloc(128);
    function Hmac(alg, key2) {
      Base.call(this, "digest");
      if (typeof key2 === "string") {
        key2 = Buffer3.from(key2);
      }
      var blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
      this._alg = alg;
      this._key = key2;
      if (key2.length > blocksize) {
        var hash3 = alg === "rmd160" ? new RIPEMD160() : sha(alg);
        key2 = hash3.update(key2).digest();
      } else if (key2.length < blocksize) {
        key2 = Buffer3.concat([key2, ZEROS], blocksize);
      }
      var ipad = this._ipad = Buffer3.allocUnsafe(blocksize);
      var opad = this._opad = Buffer3.allocUnsafe(blocksize);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = key2[i] ^ 54;
        opad[i] = key2[i] ^ 92;
      }
      this._hash = alg === "rmd160" ? new RIPEMD160() : sha(alg);
      this._hash.update(ipad);
    }
    inherits(Hmac, Base);
    Hmac.prototype._update = function(data) {
      this._hash.update(data);
    };
    Hmac.prototype._final = function() {
      var h = this._hash.digest();
      var hash3 = this._alg === "rmd160" ? new RIPEMD160() : sha(this._alg);
      return hash3.update(this._opad).update(h).digest();
    };
    module.exports = function createHmac(alg, key2) {
      alg = alg.toLowerCase();
      if (alg === "rmd160" || alg === "ripemd160") {
        return new Hmac("rmd160", key2);
      }
      if (alg === "md5") {
        return new Legacy(md5, key2);
      }
      return new Hmac(alg, key2);
    };
  }
});

// node_modules/browserify-sign/browser/algorithms.json
var require_algorithms = __commonJS({
  "node_modules/browserify-sign/browser/algorithms.json"(exports, module) {
    module.exports = {
      sha224WithRSAEncryption: {
        sign: "rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      "RSA-SHA224": {
        sign: "ecdsa/rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      sha256WithRSAEncryption: {
        sign: "rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      "RSA-SHA256": {
        sign: "ecdsa/rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      sha384WithRSAEncryption: {
        sign: "rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      "RSA-SHA384": {
        sign: "ecdsa/rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      sha512WithRSAEncryption: {
        sign: "rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA512": {
        sign: "ecdsa/rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA1": {
        sign: "rsa",
        hash: "sha1",
        id: "3021300906052b0e03021a05000414"
      },
      "ecdsa-with-SHA1": {
        sign: "ecdsa",
        hash: "sha1",
        id: ""
      },
      sha256: {
        sign: "ecdsa",
        hash: "sha256",
        id: ""
      },
      sha224: {
        sign: "ecdsa",
        hash: "sha224",
        id: ""
      },
      sha384: {
        sign: "ecdsa",
        hash: "sha384",
        id: ""
      },
      sha512: {
        sign: "ecdsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-SHA1": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      DSA: {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-WITH-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-WITH-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-WITH-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-WITH-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-RIPEMD160": {
        sign: "dsa",
        hash: "rmd160",
        id: ""
      },
      ripemd160WithRSA: {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      "RSA-RIPEMD160": {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      md5WithRSAEncryption: {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      },
      "RSA-MD5": {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      }
    };
  }
});

// node_modules/browserify-sign/algos.js
var require_algos = __commonJS({
  "node_modules/browserify-sign/algos.js"(exports, module) {
    init_shim();
    module.exports = require_algorithms();
  }
});

// node_modules/pbkdf2/lib/precondition.js
var require_precondition = __commonJS({
  "node_modules/pbkdf2/lib/precondition.js"(exports, module) {
    init_shim();
    var MAX_ALLOC = Math.pow(2, 30) - 1;
    module.exports = function(iterations, keylen) {
      if (typeof iterations !== "number") {
        throw new TypeError("Iterations not a number");
      }
      if (iterations < 0) {
        throw new TypeError("Bad iterations");
      }
      if (typeof keylen !== "number") {
        throw new TypeError("Key length not a number");
      }
      if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
        throw new TypeError("Bad key length");
      }
    };
  }
});

// node_modules/pbkdf2/lib/default-encoding.js
var require_default_encoding = __commonJS({
  "node_modules/pbkdf2/lib/default-encoding.js"(exports, module) {
    init_shim();
    var defaultEncoding;
    if (window.process && window.process.browser) {
      defaultEncoding = "utf-8";
    } else if (window.process && window.process.version) {
      pVersionMajor = parseInt(process.version.split(".")[0].slice(1), 10);
      defaultEncoding = pVersionMajor >= 6 ? "utf-8" : "binary";
    } else {
      defaultEncoding = "utf-8";
    }
    var pVersionMajor;
    module.exports = defaultEncoding;
  }
});

// node_modules/pbkdf2/lib/to-buffer.js
var require_to_buffer = __commonJS({
  "node_modules/pbkdf2/lib/to-buffer.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = function(thing, encoding, name) {
      if (Buffer3.isBuffer(thing)) {
        return thing;
      } else if (typeof thing === "string") {
        return Buffer3.from(thing, encoding);
      } else if (ArrayBuffer.isView(thing)) {
        return Buffer3.from(thing.buffer);
      } else {
        throw new TypeError(name + " must be a string, a Buffer, a typed array or a DataView");
      }
    };
  }
});

// node_modules/pbkdf2/lib/sync-browser.js
var require_sync_browser = __commonJS({
  "node_modules/pbkdf2/lib/sync-browser.js"(exports, module) {
    init_shim();
    var md5 = require_md52();
    var RIPEMD160 = require_ripemd160();
    var sha = require_sha2();
    var Buffer3 = require_safe_buffer().Buffer;
    var checkParameters = require_precondition();
    var defaultEncoding = require_default_encoding();
    var toBuffer = require_to_buffer();
    var ZEROS = Buffer3.alloc(128);
    var sizes = {
      md5: 16,
      sha1: 20,
      sha224: 28,
      sha256: 32,
      sha384: 48,
      sha512: 64,
      rmd160: 20,
      ripemd160: 20
    };
    function Hmac(alg, key2, saltLen) {
      var hash3 = getDigest(alg);
      var blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
      if (key2.length > blocksize) {
        key2 = hash3(key2);
      } else if (key2.length < blocksize) {
        key2 = Buffer3.concat([key2, ZEROS], blocksize);
      }
      var ipad = Buffer3.allocUnsafe(blocksize + sizes[alg]);
      var opad = Buffer3.allocUnsafe(blocksize + sizes[alg]);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = key2[i] ^ 54;
        opad[i] = key2[i] ^ 92;
      }
      var ipad1 = Buffer3.allocUnsafe(blocksize + saltLen + 4);
      ipad.copy(ipad1, 0, 0, blocksize);
      this.ipad1 = ipad1;
      this.ipad2 = ipad;
      this.opad = opad;
      this.alg = alg;
      this.blocksize = blocksize;
      this.hash = hash3;
      this.size = sizes[alg];
    }
    Hmac.prototype.run = function(data, ipad) {
      data.copy(ipad, this.blocksize);
      var h = this.hash(ipad);
      h.copy(this.opad, this.blocksize);
      return this.hash(this.opad);
    };
    function getDigest(alg) {
      function shaFunc(data) {
        return sha(alg).update(data).digest();
      }
      function rmd160Func(data) {
        return new RIPEMD160().update(data).digest();
      }
      if (alg === "rmd160" || alg === "ripemd160")
        return rmd160Func;
      if (alg === "md5")
        return md5;
      return shaFunc;
    }
    function pbkdf23(password, salt, iterations, keylen, digest) {
      checkParameters(iterations, keylen);
      password = toBuffer(password, defaultEncoding, "Password");
      salt = toBuffer(salt, defaultEncoding, "Salt");
      digest = digest || "sha1";
      var hmac2 = new Hmac(digest, password, salt.length);
      var DK = Buffer3.allocUnsafe(keylen);
      var block1 = Buffer3.allocUnsafe(salt.length + 4);
      salt.copy(block1, 0, 0, salt.length);
      var destPos = 0;
      var hLen = sizes[digest];
      var l = Math.ceil(keylen / hLen);
      for (var i = 1; i <= l; i++) {
        block1.writeUInt32BE(i, salt.length);
        var T = hmac2.run(block1, hmac2.ipad1);
        var U = T;
        for (var j = 1; j < iterations; j++) {
          U = hmac2.run(U, hmac2.ipad2);
          for (var k = 0; k < hLen; k++)
            T[k] ^= U[k];
        }
        T.copy(DK, destPos);
        destPos += hLen;
      }
      return DK;
    }
    module.exports = pbkdf23;
  }
});

// node_modules/pbkdf2/lib/async.js
var require_async = __commonJS({
  "node_modules/pbkdf2/lib/async.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var checkParameters = require_precondition();
    var defaultEncoding = require_default_encoding();
    var sync = require_sync_browser();
    var toBuffer = require_to_buffer();
    var ZERO_BUF;
    var subtle = window.crypto && window.crypto.subtle;
    var toBrowser = {
      sha: "SHA-1",
      "sha-1": "SHA-1",
      sha1: "SHA-1",
      sha256: "SHA-256",
      "sha-256": "SHA-256",
      sha384: "SHA-384",
      "sha-384": "SHA-384",
      "sha-512": "SHA-512",
      sha512: "SHA-512"
    };
    var checks = [];
    function checkNative(algo) {
      if (window.process && !window.process.browser) {
        return Promise.resolve(false);
      }
      if (!subtle || !subtle.importKey || !subtle.deriveBits) {
        return Promise.resolve(false);
      }
      if (checks[algo] !== void 0) {
        return checks[algo];
      }
      ZERO_BUF = ZERO_BUF || Buffer3.alloc(8);
      var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
        return true;
      }).catch(function() {
        return false;
      });
      checks[algo] = prom;
      return prom;
    }
    var nextTick;
    function getNextTick() {
      if (nextTick) {
        return nextTick;
      }
      if (window.process && window.process.nextTick) {
        nextTick = window.process.nextTick;
      } else if (window.queueMicrotask) {
        nextTick = window.queueMicrotask;
      } else if (window.setImmediate) {
        nextTick = window.setImmediate;
      } else {
        nextTick = window.setTimeout;
      }
      return nextTick;
    }
    function browserPbkdf2(password, salt, iterations, length, algo) {
      return subtle.importKey("raw", password, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(key2) {
        return subtle.deriveBits({
          name: "PBKDF2",
          salt,
          iterations,
          hash: {
            name: algo
          }
        }, key2, length << 3);
      }).then(function(res) {
        return Buffer3.from(res);
      });
    }
    function resolvePromise(promise, callback) {
      promise.then(function(out) {
        getNextTick()(function() {
          callback(null, out);
        });
      }, function(e) {
        getNextTick()(function() {
          callback(e);
        });
      });
    }
    module.exports = function(password, salt, iterations, keylen, digest, callback) {
      if (typeof digest === "function") {
        callback = digest;
        digest = void 0;
      }
      digest = digest || "sha1";
      var algo = toBrowser[digest.toLowerCase()];
      if (!algo || typeof window.Promise !== "function") {
        getNextTick()(function() {
          var out;
          try {
            out = sync(password, salt, iterations, keylen, digest);
          } catch (e) {
            return callback(e);
          }
          callback(null, out);
        });
        return;
      }
      checkParameters(iterations, keylen);
      password = toBuffer(password, defaultEncoding, "Password");
      salt = toBuffer(salt, defaultEncoding, "Salt");
      if (typeof callback !== "function")
        throw new Error("No callback provided to pbkdf2");
      resolvePromise(checkNative(algo).then(function(resp) {
        if (resp)
          return browserPbkdf2(password, salt, iterations, keylen, algo);
        return sync(password, salt, iterations, keylen, digest);
      }), callback);
    };
  }
});

// node_modules/pbkdf2/browser.js
var require_browser6 = __commonJS({
  "node_modules/pbkdf2/browser.js"(exports) {
    init_shim();
    exports.pbkdf2 = require_async();
    exports.pbkdf2Sync = require_sync_browser();
  }
});

// node_modules/des.js/lib/des/utils.js
var require_utils = __commonJS({
  "node_modules/des.js/lib/des/utils.js"(exports) {
    "use strict";
    init_shim();
    exports.readUInt32BE = function readUInt32BE(bytes, off) {
      var res = bytes[0 + off] << 24 | bytes[1 + off] << 16 | bytes[2 + off] << 8 | bytes[3 + off];
      return res >>> 0;
    };
    exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
      bytes[0 + off] = value >>> 24;
      bytes[1 + off] = value >>> 16 & 255;
      bytes[2 + off] = value >>> 8 & 255;
      bytes[3 + off] = value & 255;
    };
    exports.ip = function ip(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 6; i >= 0; i -= 2) {
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inR >>> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inL >>> j + i & 1;
        }
      }
      for (var i = 6; i >= 0; i -= 2) {
        for (var j = 1; j <= 25; j += 8) {
          outR <<= 1;
          outR |= inR >>> j + i & 1;
        }
        for (var j = 1; j <= 25; j += 8) {
          outR <<= 1;
          outR |= inL >>> j + i & 1;
        }
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.rip = function rip(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 0; i < 4; i++) {
        for (var j = 24; j >= 0; j -= 8) {
          outL <<= 1;
          outL |= inR >>> j + i & 1;
          outL <<= 1;
          outL |= inL >>> j + i & 1;
        }
      }
      for (var i = 4; i < 8; i++) {
        for (var j = 24; j >= 0; j -= 8) {
          outR <<= 1;
          outR |= inR >>> j + i & 1;
          outR <<= 1;
          outR |= inL >>> j + i & 1;
        }
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.pc1 = function pc1(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 7; i >= 5; i--) {
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inR >> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inL >> j + i & 1;
        }
      }
      for (var j = 0; j <= 24; j += 8) {
        outL <<= 1;
        outL |= inR >> j + i & 1;
      }
      for (var i = 1; i <= 3; i++) {
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= inR >> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= inL >> j + i & 1;
        }
      }
      for (var j = 0; j <= 24; j += 8) {
        outR <<= 1;
        outR |= inL >> j + i & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.r28shl = function r28shl(num, shift) {
      return num << shift & 268435455 | num >>> 28 - shift;
    };
    var pc2table = [
      14,
      11,
      17,
      4,
      27,
      23,
      25,
      0,
      13,
      22,
      7,
      18,
      5,
      9,
      16,
      24,
      2,
      20,
      12,
      21,
      1,
      8,
      15,
      26,
      15,
      4,
      25,
      19,
      9,
      1,
      26,
      16,
      5,
      11,
      23,
      8,
      12,
      7,
      17,
      0,
      22,
      3,
      10,
      14,
      6,
      20,
      27,
      24
    ];
    exports.pc2 = function pc2(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      var len = pc2table.length >>> 1;
      for (var i = 0; i < len; i++) {
        outL <<= 1;
        outL |= inL >>> pc2table[i] & 1;
      }
      for (var i = len; i < pc2table.length; i++) {
        outR <<= 1;
        outR |= inR >>> pc2table[i] & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.expand = function expand(r, out, off) {
      var outL = 0;
      var outR = 0;
      outL = (r & 1) << 5 | r >>> 27;
      for (var i = 23; i >= 15; i -= 4) {
        outL <<= 6;
        outL |= r >>> i & 63;
      }
      for (var i = 11; i >= 3; i -= 4) {
        outR |= r >>> i & 63;
        outR <<= 6;
      }
      outR |= (r & 31) << 1 | r >>> 31;
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    var sTable = [
      14,
      0,
      4,
      15,
      13,
      7,
      1,
      4,
      2,
      14,
      15,
      2,
      11,
      13,
      8,
      1,
      3,
      10,
      10,
      6,
      6,
      12,
      12,
      11,
      5,
      9,
      9,
      5,
      0,
      3,
      7,
      8,
      4,
      15,
      1,
      12,
      14,
      8,
      8,
      2,
      13,
      4,
      6,
      9,
      2,
      1,
      11,
      7,
      15,
      5,
      12,
      11,
      9,
      3,
      7,
      14,
      3,
      10,
      10,
      0,
      5,
      6,
      0,
      13,
      15,
      3,
      1,
      13,
      8,
      4,
      14,
      7,
      6,
      15,
      11,
      2,
      3,
      8,
      4,
      14,
      9,
      12,
      7,
      0,
      2,
      1,
      13,
      10,
      12,
      6,
      0,
      9,
      5,
      11,
      10,
      5,
      0,
      13,
      14,
      8,
      7,
      10,
      11,
      1,
      10,
      3,
      4,
      15,
      13,
      4,
      1,
      2,
      5,
      11,
      8,
      6,
      12,
      7,
      6,
      12,
      9,
      0,
      3,
      5,
      2,
      14,
      15,
      9,
      10,
      13,
      0,
      7,
      9,
      0,
      14,
      9,
      6,
      3,
      3,
      4,
      15,
      6,
      5,
      10,
      1,
      2,
      13,
      8,
      12,
      5,
      7,
      14,
      11,
      12,
      4,
      11,
      2,
      15,
      8,
      1,
      13,
      1,
      6,
      10,
      4,
      13,
      9,
      0,
      8,
      6,
      15,
      9,
      3,
      8,
      0,
      7,
      11,
      4,
      1,
      15,
      2,
      14,
      12,
      3,
      5,
      11,
      10,
      5,
      14,
      2,
      7,
      12,
      7,
      13,
      13,
      8,
      14,
      11,
      3,
      5,
      0,
      6,
      6,
      15,
      9,
      0,
      10,
      3,
      1,
      4,
      2,
      7,
      8,
      2,
      5,
      12,
      11,
      1,
      12,
      10,
      4,
      14,
      15,
      9,
      10,
      3,
      6,
      15,
      9,
      0,
      0,
      6,
      12,
      10,
      11,
      1,
      7,
      13,
      13,
      8,
      15,
      9,
      1,
      4,
      3,
      5,
      14,
      11,
      5,
      12,
      2,
      7,
      8,
      2,
      4,
      14,
      2,
      14,
      12,
      11,
      4,
      2,
      1,
      12,
      7,
      4,
      10,
      7,
      11,
      13,
      6,
      1,
      8,
      5,
      5,
      0,
      3,
      15,
      15,
      10,
      13,
      3,
      0,
      9,
      14,
      8,
      9,
      6,
      4,
      11,
      2,
      8,
      1,
      12,
      11,
      7,
      10,
      1,
      13,
      14,
      7,
      2,
      8,
      13,
      15,
      6,
      9,
      15,
      12,
      0,
      5,
      9,
      6,
      10,
      3,
      4,
      0,
      5,
      14,
      3,
      12,
      10,
      1,
      15,
      10,
      4,
      15,
      2,
      9,
      7,
      2,
      12,
      6,
      9,
      8,
      5,
      0,
      6,
      13,
      1,
      3,
      13,
      4,
      14,
      14,
      0,
      7,
      11,
      5,
      3,
      11,
      8,
      9,
      4,
      14,
      3,
      15,
      2,
      5,
      12,
      2,
      9,
      8,
      5,
      12,
      15,
      3,
      10,
      7,
      11,
      0,
      14,
      4,
      1,
      10,
      7,
      1,
      6,
      13,
      0,
      11,
      8,
      6,
      13,
      4,
      13,
      11,
      0,
      2,
      11,
      14,
      7,
      15,
      4,
      0,
      9,
      8,
      1,
      13,
      10,
      3,
      14,
      12,
      3,
      9,
      5,
      7,
      12,
      5,
      2,
      10,
      15,
      6,
      8,
      1,
      6,
      1,
      6,
      4,
      11,
      11,
      13,
      13,
      8,
      12,
      1,
      3,
      4,
      7,
      10,
      14,
      7,
      10,
      9,
      15,
      5,
      6,
      0,
      8,
      15,
      0,
      14,
      5,
      2,
      9,
      3,
      2,
      12,
      13,
      1,
      2,
      15,
      8,
      13,
      4,
      8,
      6,
      10,
      15,
      3,
      11,
      7,
      1,
      4,
      10,
      12,
      9,
      5,
      3,
      6,
      14,
      11,
      5,
      0,
      0,
      14,
      12,
      9,
      7,
      2,
      7,
      2,
      11,
      1,
      4,
      14,
      1,
      7,
      9,
      4,
      12,
      10,
      14,
      8,
      2,
      13,
      0,
      15,
      6,
      12,
      10,
      9,
      13,
      0,
      15,
      3,
      3,
      5,
      5,
      6,
      8,
      11
    ];
    exports.substitute = function substitute(inL, inR) {
      var out = 0;
      for (var i = 0; i < 4; i++) {
        var b = inL >>> 18 - i * 6 & 63;
        var sb = sTable[i * 64 + b];
        out <<= 4;
        out |= sb;
      }
      for (var i = 0; i < 4; i++) {
        var b = inR >>> 18 - i * 6 & 63;
        var sb = sTable[4 * 64 + i * 64 + b];
        out <<= 4;
        out |= sb;
      }
      return out >>> 0;
    };
    var permuteTable = [
      16,
      25,
      12,
      11,
      3,
      20,
      4,
      15,
      31,
      17,
      9,
      6,
      27,
      14,
      1,
      22,
      30,
      24,
      8,
      18,
      0,
      5,
      29,
      23,
      13,
      19,
      2,
      26,
      10,
      21,
      28,
      7
    ];
    exports.permute = function permute(num) {
      var out = 0;
      for (var i = 0; i < permuteTable.length; i++) {
        out <<= 1;
        out |= num >>> permuteTable[i] & 1;
      }
      return out >>> 0;
    };
    exports.padSplit = function padSplit(num, size, group) {
      var str = num.toString(2);
      while (str.length < size)
        str = "0" + str;
      var out = [];
      for (var i = 0; i < size; i += group)
        out.push(str.slice(i, i + group));
      return out.join(" ");
    };
  }
});

// node_modules/minimalistic-assert/index.js
var require_minimalistic_assert = __commonJS({
  "node_modules/minimalistic-assert/index.js"(exports, module) {
    init_shim();
    module.exports = assert2;
    function assert2(val, msg) {
      if (!val)
        throw new Error(msg || "Assertion failed");
    }
    assert2.equal = function assertEqual2(l, r, msg) {
      if (l != r)
        throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
  }
});

// node_modules/des.js/lib/des/cipher.js
var require_cipher = __commonJS({
  "node_modules/des.js/lib/des/cipher.js"(exports, module) {
    "use strict";
    init_shim();
    var assert2 = require_minimalistic_assert();
    function Cipher(options) {
      this.options = options;
      this.type = this.options.type;
      this.blockSize = 8;
      this._init();
      this.buffer = new Array(this.blockSize);
      this.bufferOff = 0;
    }
    module.exports = Cipher;
    Cipher.prototype._init = function _init() {
    };
    Cipher.prototype.update = function update2(data) {
      if (data.length === 0)
        return [];
      if (this.type === "decrypt")
        return this._updateDecrypt(data);
      else
        return this._updateEncrypt(data);
    };
    Cipher.prototype._buffer = function _buffer(data, off) {
      var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
      for (var i = 0; i < min; i++)
        this.buffer[this.bufferOff + i] = data[off + i];
      this.bufferOff += min;
      return min;
    };
    Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
      this._update(this.buffer, 0, out, off);
      this.bufferOff = 0;
      return this.blockSize;
    };
    Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
      var inputOff = 0;
      var outputOff = 0;
      var count = (this.bufferOff + data.length) / this.blockSize | 0;
      var out = new Array(count * this.blockSize);
      if (this.bufferOff !== 0) {
        inputOff += this._buffer(data, inputOff);
        if (this.bufferOff === this.buffer.length)
          outputOff += this._flushBuffer(out, outputOff);
      }
      var max = data.length - (data.length - inputOff) % this.blockSize;
      for (; inputOff < max; inputOff += this.blockSize) {
        this._update(data, inputOff, out, outputOff);
        outputOff += this.blockSize;
      }
      for (; inputOff < data.length; inputOff++, this.bufferOff++)
        this.buffer[this.bufferOff] = data[inputOff];
      return out;
    };
    Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
      var inputOff = 0;
      var outputOff = 0;
      var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
      var out = new Array(count * this.blockSize);
      for (; count > 0; count--) {
        inputOff += this._buffer(data, inputOff);
        outputOff += this._flushBuffer(out, outputOff);
      }
      inputOff += this._buffer(data, inputOff);
      return out;
    };
    Cipher.prototype.final = function final(buffer) {
      var first;
      if (buffer)
        first = this.update(buffer);
      var last;
      if (this.type === "encrypt")
        last = this._finalEncrypt();
      else
        last = this._finalDecrypt();
      if (first)
        return first.concat(last);
      else
        return last;
    };
    Cipher.prototype._pad = function _pad(buffer, off) {
      if (off === 0)
        return false;
      while (off < buffer.length)
        buffer[off++] = 0;
      return true;
    };
    Cipher.prototype._finalEncrypt = function _finalEncrypt() {
      if (!this._pad(this.buffer, this.bufferOff))
        return [];
      var out = new Array(this.blockSize);
      this._update(this.buffer, 0, out, 0);
      return out;
    };
    Cipher.prototype._unpad = function _unpad(buffer) {
      return buffer;
    };
    Cipher.prototype._finalDecrypt = function _finalDecrypt() {
      assert2.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
      var out = new Array(this.blockSize);
      this._flushBuffer(out, 0);
      return this._unpad(out);
    };
  }
});

// node_modules/des.js/lib/des/des.js
var require_des = __commonJS({
  "node_modules/des.js/lib/des/des.js"(exports, module) {
    "use strict";
    init_shim();
    var assert2 = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    var utils = require_utils();
    var Cipher = require_cipher();
    function DESState() {
      this.tmp = new Array(2);
      this.keys = null;
    }
    function DES(options) {
      Cipher.call(this, options);
      var state = new DESState();
      this._desState = state;
      this.deriveKeys(state, options.key);
    }
    inherits(DES, Cipher);
    module.exports = DES;
    DES.create = function create(options) {
      return new DES(options);
    };
    var shiftTable = [
      1,
      1,
      2,
      2,
      2,
      2,
      2,
      2,
      1,
      2,
      2,
      2,
      2,
      2,
      2,
      1
    ];
    DES.prototype.deriveKeys = function deriveKeys(state, key2) {
      state.keys = new Array(16 * 2);
      assert2.equal(key2.length, this.blockSize, "Invalid key length");
      var kL = utils.readUInt32BE(key2, 0);
      var kR = utils.readUInt32BE(key2, 4);
      utils.pc1(kL, kR, state.tmp, 0);
      kL = state.tmp[0];
      kR = state.tmp[1];
      for (var i = 0; i < state.keys.length; i += 2) {
        var shift = shiftTable[i >>> 1];
        kL = utils.r28shl(kL, shift);
        kR = utils.r28shl(kR, shift);
        utils.pc2(kL, kR, state.keys, i);
      }
    };
    DES.prototype._update = function _update(inp, inOff, out, outOff) {
      var state = this._desState;
      var l = utils.readUInt32BE(inp, inOff);
      var r = utils.readUInt32BE(inp, inOff + 4);
      utils.ip(l, r, state.tmp, 0);
      l = state.tmp[0];
      r = state.tmp[1];
      if (this.type === "encrypt")
        this._encrypt(state, l, r, state.tmp, 0);
      else
        this._decrypt(state, l, r, state.tmp, 0);
      l = state.tmp[0];
      r = state.tmp[1];
      utils.writeUInt32BE(out, l, outOff);
      utils.writeUInt32BE(out, r, outOff + 4);
    };
    DES.prototype._pad = function _pad(buffer, off) {
      var value = buffer.length - off;
      for (var i = off; i < buffer.length; i++)
        buffer[i] = value;
      return true;
    };
    DES.prototype._unpad = function _unpad(buffer) {
      var pad = buffer[buffer.length - 1];
      for (var i = buffer.length - pad; i < buffer.length; i++)
        assert2.equal(buffer[i], pad);
      return buffer.slice(0, buffer.length - pad);
    };
    DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
      var l = lStart;
      var r = rStart;
      for (var i = 0; i < state.keys.length; i += 2) {
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        utils.expand(r, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = r;
        r = (l ^ f) >>> 0;
        l = t;
      }
      utils.rip(r, l, out, off);
    };
    DES.prototype._decrypt = function _decrypt2(state, lStart, rStart, out, off) {
      var l = rStart;
      var r = lStart;
      for (var i = state.keys.length - 2; i >= 0; i -= 2) {
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        utils.expand(l, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = l;
        l = (r ^ f) >>> 0;
        r = t;
      }
      utils.rip(l, r, out, off);
    };
  }
});

// node_modules/des.js/lib/des/cbc.js
var require_cbc = __commonJS({
  "node_modules/des.js/lib/des/cbc.js"(exports) {
    "use strict";
    init_shim();
    var assert2 = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    var proto = {};
    function CBCState(iv) {
      assert2.equal(iv.length, 8, "Invalid IV length");
      this.iv = new Array(8);
      for (var i = 0; i < this.iv.length; i++)
        this.iv[i] = iv[i];
    }
    function instantiate(Base) {
      function CBC(options) {
        Base.call(this, options);
        this._cbcInit();
      }
      inherits(CBC, Base);
      var keys = Object.keys(proto);
      for (var i = 0; i < keys.length; i++) {
        var key2 = keys[i];
        CBC.prototype[key2] = proto[key2];
      }
      CBC.create = function create(options) {
        return new CBC(options);
      };
      return CBC;
    }
    exports.instantiate = instantiate;
    proto._cbcInit = function _cbcInit() {
      var state = new CBCState(this.options.iv);
      this._cbcState = state;
    };
    proto._update = function _update(inp, inOff, out, outOff) {
      var state = this._cbcState;
      var superProto = this.constructor.super_.prototype;
      var iv = state.iv;
      if (this.type === "encrypt") {
        for (var i = 0; i < this.blockSize; i++)
          iv[i] ^= inp[inOff + i];
        superProto._update.call(this, iv, 0, out, outOff);
        for (var i = 0; i < this.blockSize; i++)
          iv[i] = out[outOff + i];
      } else {
        superProto._update.call(this, inp, inOff, out, outOff);
        for (var i = 0; i < this.blockSize; i++)
          out[outOff + i] ^= iv[i];
        for (var i = 0; i < this.blockSize; i++)
          iv[i] = inp[inOff + i];
      }
    };
  }
});

// node_modules/des.js/lib/des/ede.js
var require_ede = __commonJS({
  "node_modules/des.js/lib/des/ede.js"(exports, module) {
    "use strict";
    init_shim();
    var assert2 = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    var Cipher = require_cipher();
    var DES = require_des();
    function EDEState(type, key2) {
      assert2.equal(key2.length, 24, "Invalid key length");
      var k1 = key2.slice(0, 8);
      var k2 = key2.slice(8, 16);
      var k3 = key2.slice(16, 24);
      if (type === "encrypt") {
        this.ciphers = [
          DES.create({ type: "encrypt", key: k1 }),
          DES.create({ type: "decrypt", key: k2 }),
          DES.create({ type: "encrypt", key: k3 })
        ];
      } else {
        this.ciphers = [
          DES.create({ type: "decrypt", key: k3 }),
          DES.create({ type: "encrypt", key: k2 }),
          DES.create({ type: "decrypt", key: k1 })
        ];
      }
    }
    function EDE(options) {
      Cipher.call(this, options);
      var state = new EDEState(this.type, this.options.key);
      this._edeState = state;
    }
    inherits(EDE, Cipher);
    module.exports = EDE;
    EDE.create = function create(options) {
      return new EDE(options);
    };
    EDE.prototype._update = function _update(inp, inOff, out, outOff) {
      var state = this._edeState;
      state.ciphers[0]._update(inp, inOff, out, outOff);
      state.ciphers[1]._update(out, outOff, out, outOff);
      state.ciphers[2]._update(out, outOff, out, outOff);
    };
    EDE.prototype._pad = DES.prototype._pad;
    EDE.prototype._unpad = DES.prototype._unpad;
  }
});

// node_modules/des.js/lib/des.js
var require_des2 = __commonJS({
  "node_modules/des.js/lib/des.js"(exports) {
    "use strict";
    init_shim();
    exports.utils = require_utils();
    exports.Cipher = require_cipher();
    exports.DES = require_des();
    exports.CBC = require_cbc();
    exports.EDE = require_ede();
  }
});

// node_modules/browserify-des/index.js
var require_browserify_des = __commonJS({
  "node_modules/browserify-des/index.js"(exports, module) {
    init_shim();
    var CipherBase = require_cipher_base();
    var des = require_des2();
    var inherits = require_inherits_browser();
    var Buffer3 = require_safe_buffer().Buffer;
    var modes = {
      "des-ede3-cbc": des.CBC.instantiate(des.EDE),
      "des-ede3": des.EDE,
      "des-ede-cbc": des.CBC.instantiate(des.EDE),
      "des-ede": des.EDE,
      "des-cbc": des.CBC.instantiate(des.DES),
      "des-ecb": des.DES
    };
    modes.des = modes["des-cbc"];
    modes.des3 = modes["des-ede3-cbc"];
    module.exports = DES;
    inherits(DES, CipherBase);
    function DES(opts) {
      CipherBase.call(this);
      var modeName = opts.mode.toLowerCase();
      var mode = modes[modeName];
      var type;
      if (opts.decrypt) {
        type = "decrypt";
      } else {
        type = "encrypt";
      }
      var key2 = opts.key;
      if (!Buffer3.isBuffer(key2)) {
        key2 = Buffer3.from(key2);
      }
      if (modeName === "des-ede" || modeName === "des-ede-cbc") {
        key2 = Buffer3.concat([key2, key2.slice(0, 8)]);
      }
      var iv = opts.iv;
      if (!Buffer3.isBuffer(iv)) {
        iv = Buffer3.from(iv);
      }
      this._des = mode.create({
        key: key2,
        iv,
        type
      });
    }
    DES.prototype._update = function(data) {
      return Buffer3.from(this._des.update(data));
    };
    DES.prototype._final = function() {
      return Buffer3.from(this._des.final());
    };
  }
});

// node_modules/browserify-aes/modes/ecb.js
var require_ecb = __commonJS({
  "node_modules/browserify-aes/modes/ecb.js"(exports) {
    init_shim();
    exports.encrypt = function(self2, block) {
      return self2._cipher.encryptBlock(block);
    };
    exports.decrypt = function(self2, block) {
      return self2._cipher.decryptBlock(block);
    };
  }
});

// node_modules/buffer-xor/index.js
var require_buffer_xor = __commonJS({
  "node_modules/buffer-xor/index.js"(exports, module) {
    init_shim();
    module.exports = function xor(a, b) {
      var length = Math.min(a.length, b.length);
      var buffer = new Buffer2(length);
      for (var i = 0; i < length; ++i) {
        buffer[i] = a[i] ^ b[i];
      }
      return buffer;
    };
  }
});

// node_modules/browserify-aes/modes/cbc.js
var require_cbc2 = __commonJS({
  "node_modules/browserify-aes/modes/cbc.js"(exports) {
    init_shim();
    var xor = require_buffer_xor();
    exports.encrypt = function(self2, block) {
      var data = xor(block, self2._prev);
      self2._prev = self2._cipher.encryptBlock(data);
      return self2._prev;
    };
    exports.decrypt = function(self2, block) {
      var pad = self2._prev;
      self2._prev = block;
      var out = self2._cipher.decryptBlock(block);
      return xor(out, pad);
    };
  }
});

// node_modules/browserify-aes/modes/cfb.js
var require_cfb = __commonJS({
  "node_modules/browserify-aes/modes/cfb.js"(exports) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var xor = require_buffer_xor();
    function encryptStart(self2, data, decrypt3) {
      var len = data.length;
      var out = xor(data, self2._cache);
      self2._cache = self2._cache.slice(len);
      self2._prev = Buffer3.concat([self2._prev, decrypt3 ? data : out]);
      return out;
    }
    exports.encrypt = function(self2, data, decrypt3) {
      var out = Buffer3.allocUnsafe(0);
      var len;
      while (data.length) {
        if (self2._cache.length === 0) {
          self2._cache = self2._cipher.encryptBlock(self2._prev);
          self2._prev = Buffer3.allocUnsafe(0);
        }
        if (self2._cache.length <= data.length) {
          len = self2._cache.length;
          out = Buffer3.concat([out, encryptStart(self2, data.slice(0, len), decrypt3)]);
          data = data.slice(len);
        } else {
          out = Buffer3.concat([out, encryptStart(self2, data, decrypt3)]);
          break;
        }
      }
      return out;
    };
  }
});

// node_modules/browserify-aes/modes/cfb8.js
var require_cfb8 = __commonJS({
  "node_modules/browserify-aes/modes/cfb8.js"(exports) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    function encryptByte(self2, byteParam, decrypt3) {
      var pad = self2._cipher.encryptBlock(self2._prev);
      var out = pad[0] ^ byteParam;
      self2._prev = Buffer3.concat([
        self2._prev.slice(1),
        Buffer3.from([decrypt3 ? byteParam : out])
      ]);
      return out;
    }
    exports.encrypt = function(self2, chunk, decrypt3) {
      var len = chunk.length;
      var out = Buffer3.allocUnsafe(len);
      var i = -1;
      while (++i < len) {
        out[i] = encryptByte(self2, chunk[i], decrypt3);
      }
      return out;
    };
  }
});

// node_modules/browserify-aes/modes/cfb1.js
var require_cfb1 = __commonJS({
  "node_modules/browserify-aes/modes/cfb1.js"(exports) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    function encryptByte(self2, byteParam, decrypt3) {
      var pad;
      var i = -1;
      var len = 8;
      var out = 0;
      var bit, value;
      while (++i < len) {
        pad = self2._cipher.encryptBlock(self2._prev);
        bit = byteParam & 1 << 7 - i ? 128 : 0;
        value = pad[0] ^ bit;
        out += (value & 128) >> i % 8;
        self2._prev = shiftIn(self2._prev, decrypt3 ? bit : value);
      }
      return out;
    }
    function shiftIn(buffer, value) {
      var len = buffer.length;
      var i = -1;
      var out = Buffer3.allocUnsafe(buffer.length);
      buffer = Buffer3.concat([buffer, Buffer3.from([value])]);
      while (++i < len) {
        out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;
      }
      return out;
    }
    exports.encrypt = function(self2, chunk, decrypt3) {
      var len = chunk.length;
      var out = Buffer3.allocUnsafe(len);
      var i = -1;
      while (++i < len) {
        out[i] = encryptByte(self2, chunk[i], decrypt3);
      }
      return out;
    };
  }
});

// node_modules/browserify-aes/modes/ofb.js
var require_ofb = __commonJS({
  "node_modules/browserify-aes/modes/ofb.js"(exports) {
    init_shim();
    var xor = require_buffer_xor();
    function getBlock(self2) {
      self2._prev = self2._cipher.encryptBlock(self2._prev);
      return self2._prev;
    }
    exports.encrypt = function(self2, chunk) {
      while (self2._cache.length < chunk.length) {
        self2._cache = Buffer2.concat([self2._cache, getBlock(self2)]);
      }
      var pad = self2._cache.slice(0, chunk.length);
      self2._cache = self2._cache.slice(chunk.length);
      return xor(chunk, pad);
    };
  }
});

// node_modules/browserify-aes/incr32.js
var require_incr32 = __commonJS({
  "node_modules/browserify-aes/incr32.js"(exports, module) {
    init_shim();
    function incr32(iv) {
      var len = iv.length;
      var item;
      while (len--) {
        item = iv.readUInt8(len);
        if (item === 255) {
          iv.writeUInt8(0, len);
        } else {
          item++;
          iv.writeUInt8(item, len);
          break;
        }
      }
    }
    module.exports = incr32;
  }
});

// node_modules/browserify-aes/modes/ctr.js
var require_ctr = __commonJS({
  "node_modules/browserify-aes/modes/ctr.js"(exports) {
    init_shim();
    var xor = require_buffer_xor();
    var Buffer3 = require_safe_buffer().Buffer;
    var incr32 = require_incr32();
    function getBlock(self2) {
      var out = self2._cipher.encryptBlockRaw(self2._prev);
      incr32(self2._prev);
      return out;
    }
    var blockSize = 16;
    exports.encrypt = function(self2, chunk) {
      var chunkNum = Math.ceil(chunk.length / blockSize);
      var start = self2._cache.length;
      self2._cache = Buffer3.concat([
        self2._cache,
        Buffer3.allocUnsafe(chunkNum * blockSize)
      ]);
      for (var i = 0; i < chunkNum; i++) {
        var out = getBlock(self2);
        var offset = start + i * blockSize;
        self2._cache.writeUInt32BE(out[0], offset + 0);
        self2._cache.writeUInt32BE(out[1], offset + 4);
        self2._cache.writeUInt32BE(out[2], offset + 8);
        self2._cache.writeUInt32BE(out[3], offset + 12);
      }
      var pad = self2._cache.slice(0, chunk.length);
      self2._cache = self2._cache.slice(chunk.length);
      return xor(chunk, pad);
    };
  }
});

// node_modules/browserify-aes/modes/list.json
var require_list = __commonJS({
  "node_modules/browserify-aes/modes/list.json"(exports, module) {
    module.exports = {
      "aes-128-ecb": {
        cipher: "AES",
        key: 128,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-192-ecb": {
        cipher: "AES",
        key: 192,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-256-ecb": {
        cipher: "AES",
        key: 256,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-128-cbc": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-192-cbc": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-256-cbc": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes128: {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes192: {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes256: {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-128-cfb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-192-cfb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-256-cfb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-128-cfb8": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-192-cfb8": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-256-cfb8": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-128-cfb1": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-192-cfb1": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-256-cfb1": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-128-ofb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-192-ofb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-256-ofb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-128-ctr": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-192-ctr": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-256-ctr": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-128-gcm": {
        cipher: "AES",
        key: 128,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-192-gcm": {
        cipher: "AES",
        key: 192,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-256-gcm": {
        cipher: "AES",
        key: 256,
        iv: 12,
        mode: "GCM",
        type: "auth"
      }
    };
  }
});

// node_modules/browserify-aes/modes/index.js
var require_modes = __commonJS({
  "node_modules/browserify-aes/modes/index.js"(exports, module) {
    init_shim();
    var modeModules = {
      ECB: require_ecb(),
      CBC: require_cbc2(),
      CFB: require_cfb(),
      CFB8: require_cfb8(),
      CFB1: require_cfb1(),
      OFB: require_ofb(),
      CTR: require_ctr(),
      GCM: require_ctr()
    };
    var modes = require_list();
    for (key2 in modes) {
      modes[key2].module = modeModules[modes[key2].mode];
    }
    var key2;
    module.exports = modes;
  }
});

// node_modules/browserify-aes/aes.js
var require_aes = __commonJS({
  "node_modules/browserify-aes/aes.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    function asUInt32Array(buf) {
      if (!Buffer3.isBuffer(buf))
        buf = Buffer3.from(buf);
      var len = buf.length / 4 | 0;
      var out = new Array(len);
      for (var i = 0; i < len; i++) {
        out[i] = buf.readUInt32BE(i * 4);
      }
      return out;
    }
    function scrubVec(v) {
      for (var i = 0; i < v.length; v++) {
        v[i] = 0;
      }
    }
    function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
      var SUB_MIX0 = SUB_MIX[0];
      var SUB_MIX1 = SUB_MIX[1];
      var SUB_MIX2 = SUB_MIX[2];
      var SUB_MIX3 = SUB_MIX[3];
      var s0 = M[0] ^ keySchedule[0];
      var s1 = M[1] ^ keySchedule[1];
      var s2 = M[2] ^ keySchedule[2];
      var s3 = M[3] ^ keySchedule[3];
      var t0, t1, t2, t3;
      var ksRow = 4;
      for (var round = 1; round < nRounds; round++) {
        t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[s1 >>> 16 & 255] ^ SUB_MIX2[s2 >>> 8 & 255] ^ SUB_MIX3[s3 & 255] ^ keySchedule[ksRow++];
        t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[s2 >>> 16 & 255] ^ SUB_MIX2[s3 >>> 8 & 255] ^ SUB_MIX3[s0 & 255] ^ keySchedule[ksRow++];
        t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[s3 >>> 16 & 255] ^ SUB_MIX2[s0 >>> 8 & 255] ^ SUB_MIX3[s1 & 255] ^ keySchedule[ksRow++];
        t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[s0 >>> 16 & 255] ^ SUB_MIX2[s1 >>> 8 & 255] ^ SUB_MIX3[s2 & 255] ^ keySchedule[ksRow++];
        s0 = t0;
        s1 = t1;
        s2 = t2;
        s3 = t3;
      }
      t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 255] << 16 | SBOX[s2 >>> 8 & 255] << 8 | SBOX[s3 & 255]) ^ keySchedule[ksRow++];
      t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 255] << 16 | SBOX[s3 >>> 8 & 255] << 8 | SBOX[s0 & 255]) ^ keySchedule[ksRow++];
      t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 255] << 16 | SBOX[s0 >>> 8 & 255] << 8 | SBOX[s1 & 255]) ^ keySchedule[ksRow++];
      t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 255] << 16 | SBOX[s1 >>> 8 & 255] << 8 | SBOX[s2 & 255]) ^ keySchedule[ksRow++];
      t0 = t0 >>> 0;
      t1 = t1 >>> 0;
      t2 = t2 >>> 0;
      t3 = t3 >>> 0;
      return [t0, t1, t2, t3];
    }
    var RCON = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
    var G = function() {
      var d = new Array(256);
      for (var j = 0; j < 256; j++) {
        if (j < 128) {
          d[j] = j << 1;
        } else {
          d[j] = j << 1 ^ 283;
        }
      }
      var SBOX = [];
      var INV_SBOX = [];
      var SUB_MIX = [[], [], [], []];
      var INV_SUB_MIX = [[], [], [], []];
      var x = 0;
      var xi = 0;
      for (var i = 0; i < 256; ++i) {
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 255 ^ 99;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];
        var t = d[sx] * 257 ^ sx * 16843008;
        SUB_MIX[0][x] = t << 24 | t >>> 8;
        SUB_MIX[1][x] = t << 16 | t >>> 16;
        SUB_MIX[2][x] = t << 8 | t >>> 24;
        SUB_MIX[3][x] = t;
        t = x8 * 16843009 ^ x4 * 65537 ^ x2 * 257 ^ x * 16843008;
        INV_SUB_MIX[0][sx] = t << 24 | t >>> 8;
        INV_SUB_MIX[1][sx] = t << 16 | t >>> 16;
        INV_SUB_MIX[2][sx] = t << 8 | t >>> 24;
        INV_SUB_MIX[3][sx] = t;
        if (x === 0) {
          x = xi = 1;
        } else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }
      return {
        SBOX,
        INV_SBOX,
        SUB_MIX,
        INV_SUB_MIX
      };
    }();
    function AES(key2) {
      this._key = asUInt32Array(key2);
      this._reset();
    }
    AES.blockSize = 4 * 4;
    AES.keySize = 256 / 8;
    AES.prototype.blockSize = AES.blockSize;
    AES.prototype.keySize = AES.keySize;
    AES.prototype._reset = function() {
      var keyWords = this._key;
      var keySize = keyWords.length;
      var nRounds = keySize + 6;
      var ksRows = (nRounds + 1) * 4;
      var keySchedule = [];
      for (var k = 0; k < keySize; k++) {
        keySchedule[k] = keyWords[k];
      }
      for (k = keySize; k < ksRows; k++) {
        var t = keySchedule[k - 1];
        if (k % keySize === 0) {
          t = t << 8 | t >>> 24;
          t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[t & 255];
          t ^= RCON[k / keySize | 0] << 24;
        } else if (keySize > 6 && k % keySize === 4) {
          t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[t & 255];
        }
        keySchedule[k] = keySchedule[k - keySize] ^ t;
      }
      var invKeySchedule = [];
      for (var ik = 0; ik < ksRows; ik++) {
        var ksR = ksRows - ik;
        var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];
        if (ik < 4 || ksR <= 4) {
          invKeySchedule[ik] = tt;
        } else {
          invKeySchedule[ik] = G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[tt >>> 16 & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[tt >>> 8 & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[tt & 255]];
        }
      }
      this._nRounds = nRounds;
      this._keySchedule = keySchedule;
      this._invKeySchedule = invKeySchedule;
    };
    AES.prototype.encryptBlockRaw = function(M) {
      M = asUInt32Array(M);
      return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);
    };
    AES.prototype.encryptBlock = function(M) {
      var out = this.encryptBlockRaw(M);
      var buf = Buffer3.allocUnsafe(16);
      buf.writeUInt32BE(out[0], 0);
      buf.writeUInt32BE(out[1], 4);
      buf.writeUInt32BE(out[2], 8);
      buf.writeUInt32BE(out[3], 12);
      return buf;
    };
    AES.prototype.decryptBlock = function(M) {
      M = asUInt32Array(M);
      var m1 = M[1];
      M[1] = M[3];
      M[3] = m1;
      var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds);
      var buf = Buffer3.allocUnsafe(16);
      buf.writeUInt32BE(out[0], 0);
      buf.writeUInt32BE(out[3], 4);
      buf.writeUInt32BE(out[2], 8);
      buf.writeUInt32BE(out[1], 12);
      return buf;
    };
    AES.prototype.scrub = function() {
      scrubVec(this._keySchedule);
      scrubVec(this._invKeySchedule);
      scrubVec(this._key);
    };
    module.exports.AES = AES;
  }
});

// node_modules/browserify-aes/ghash.js
var require_ghash = __commonJS({
  "node_modules/browserify-aes/ghash.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var ZEROES = Buffer3.alloc(16, 0);
    function toArray(buf) {
      return [
        buf.readUInt32BE(0),
        buf.readUInt32BE(4),
        buf.readUInt32BE(8),
        buf.readUInt32BE(12)
      ];
    }
    function fromArray(out) {
      var buf = Buffer3.allocUnsafe(16);
      buf.writeUInt32BE(out[0] >>> 0, 0);
      buf.writeUInt32BE(out[1] >>> 0, 4);
      buf.writeUInt32BE(out[2] >>> 0, 8);
      buf.writeUInt32BE(out[3] >>> 0, 12);
      return buf;
    }
    function GHASH(key2) {
      this.h = key2;
      this.state = Buffer3.alloc(16, 0);
      this.cache = Buffer3.allocUnsafe(0);
    }
    GHASH.prototype.ghash = function(block) {
      var i = -1;
      while (++i < block.length) {
        this.state[i] ^= block[i];
      }
      this._multiply();
    };
    GHASH.prototype._multiply = function() {
      var Vi = toArray(this.h);
      var Zi = [0, 0, 0, 0];
      var j, xi, lsbVi;
      var i = -1;
      while (++i < 128) {
        xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;
        if (xi) {
          Zi[0] ^= Vi[0];
          Zi[1] ^= Vi[1];
          Zi[2] ^= Vi[2];
          Zi[3] ^= Vi[3];
        }
        lsbVi = (Vi[3] & 1) !== 0;
        for (j = 3; j > 0; j--) {
          Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;
        }
        Vi[0] = Vi[0] >>> 1;
        if (lsbVi) {
          Vi[0] = Vi[0] ^ 225 << 24;
        }
      }
      this.state = fromArray(Zi);
    };
    GHASH.prototype.update = function(buf) {
      this.cache = Buffer3.concat([this.cache, buf]);
      var chunk;
      while (this.cache.length >= 16) {
        chunk = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        this.ghash(chunk);
      }
    };
    GHASH.prototype.final = function(abl, bl) {
      if (this.cache.length) {
        this.ghash(Buffer3.concat([this.cache, ZEROES], 16));
      }
      this.ghash(fromArray([0, abl, 0, bl]));
      return this.state;
    };
    module.exports = GHASH;
  }
});

// node_modules/browserify-aes/authCipher.js
var require_authCipher = __commonJS({
  "node_modules/browserify-aes/authCipher.js"(exports, module) {
    init_shim();
    var aes3 = require_aes();
    var Buffer3 = require_safe_buffer().Buffer;
    var Transform = require_cipher_base();
    var inherits = require_inherits_browser();
    var GHASH = require_ghash();
    var xor = require_buffer_xor();
    var incr32 = require_incr32();
    function xorTest(a, b) {
      var out = 0;
      if (a.length !== b.length)
        out++;
      var len = Math.min(a.length, b.length);
      for (var i = 0; i < len; ++i) {
        out += a[i] ^ b[i];
      }
      return out;
    }
    function calcIv(self2, iv, ck) {
      if (iv.length === 12) {
        self2._finID = Buffer3.concat([iv, Buffer3.from([0, 0, 0, 1])]);
        return Buffer3.concat([iv, Buffer3.from([0, 0, 0, 2])]);
      }
      var ghash = new GHASH(ck);
      var len = iv.length;
      var toPad = len % 16;
      ghash.update(iv);
      if (toPad) {
        toPad = 16 - toPad;
        ghash.update(Buffer3.alloc(toPad, 0));
      }
      ghash.update(Buffer3.alloc(8, 0));
      var ivBits = len * 8;
      var tail = Buffer3.alloc(8);
      tail.writeUIntBE(ivBits, 0, 8);
      ghash.update(tail);
      self2._finID = ghash.state;
      var out = Buffer3.from(self2._finID);
      incr32(out);
      return out;
    }
    function StreamCipher(mode, key2, iv, decrypt3) {
      Transform.call(this);
      var h = Buffer3.alloc(4, 0);
      this._cipher = new aes3.AES(key2);
      var ck = this._cipher.encryptBlock(h);
      this._ghash = new GHASH(ck);
      iv = calcIv(this, iv, ck);
      this._prev = Buffer3.from(iv);
      this._cache = Buffer3.allocUnsafe(0);
      this._secCache = Buffer3.allocUnsafe(0);
      this._decrypt = decrypt3;
      this._alen = 0;
      this._len = 0;
      this._mode = mode;
      this._authTag = null;
      this._called = false;
    }
    inherits(StreamCipher, Transform);
    StreamCipher.prototype._update = function(chunk) {
      if (!this._called && this._alen) {
        var rump = 16 - this._alen % 16;
        if (rump < 16) {
          rump = Buffer3.alloc(rump, 0);
          this._ghash.update(rump);
        }
      }
      this._called = true;
      var out = this._mode.encrypt(this, chunk);
      if (this._decrypt) {
        this._ghash.update(chunk);
      } else {
        this._ghash.update(out);
      }
      this._len += chunk.length;
      return out;
    };
    StreamCipher.prototype._final = function() {
      if (this._decrypt && !this._authTag)
        throw new Error("Unsupported state or unable to authenticate data");
      var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
      if (this._decrypt && xorTest(tag, this._authTag))
        throw new Error("Unsupported state or unable to authenticate data");
      this._authTag = tag;
      this._cipher.scrub();
    };
    StreamCipher.prototype.getAuthTag = function getAuthTag() {
      if (this._decrypt || !Buffer3.isBuffer(this._authTag))
        throw new Error("Attempting to get auth tag in unsupported state");
      return this._authTag;
    };
    StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
      if (!this._decrypt)
        throw new Error("Attempting to set auth tag in unsupported state");
      this._authTag = tag;
    };
    StreamCipher.prototype.setAAD = function setAAD(buf) {
      if (this._called)
        throw new Error("Attempting to set AAD in unsupported state");
      this._ghash.update(buf);
      this._alen += buf.length;
    };
    module.exports = StreamCipher;
  }
});

// node_modules/browserify-aes/streamCipher.js
var require_streamCipher = __commonJS({
  "node_modules/browserify-aes/streamCipher.js"(exports, module) {
    init_shim();
    var aes3 = require_aes();
    var Buffer3 = require_safe_buffer().Buffer;
    var Transform = require_cipher_base();
    var inherits = require_inherits_browser();
    function StreamCipher(mode, key2, iv, decrypt3) {
      Transform.call(this);
      this._cipher = new aes3.AES(key2);
      this._prev = Buffer3.from(iv);
      this._cache = Buffer3.allocUnsafe(0);
      this._secCache = Buffer3.allocUnsafe(0);
      this._decrypt = decrypt3;
      this._mode = mode;
    }
    inherits(StreamCipher, Transform);
    StreamCipher.prototype._update = function(chunk) {
      return this._mode.encrypt(this, chunk, this._decrypt);
    };
    StreamCipher.prototype._final = function() {
      this._cipher.scrub();
    };
    module.exports = StreamCipher;
  }
});

// node_modules/evp_bytestokey/index.js
var require_evp_bytestokey = __commonJS({
  "node_modules/evp_bytestokey/index.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var MD5 = require_md5();
    function EVP_BytesToKey(password, salt, keyBits, ivLen) {
      if (!Buffer3.isBuffer(password))
        password = Buffer3.from(password, "binary");
      if (salt) {
        if (!Buffer3.isBuffer(salt))
          salt = Buffer3.from(salt, "binary");
        if (salt.length !== 8)
          throw new RangeError("salt should be Buffer with 8 byte length");
      }
      var keyLen = keyBits / 8;
      var key2 = Buffer3.alloc(keyLen);
      var iv = Buffer3.alloc(ivLen || 0);
      var tmp = Buffer3.alloc(0);
      while (keyLen > 0 || ivLen > 0) {
        var hash3 = new MD5();
        hash3.update(tmp);
        hash3.update(password);
        if (salt)
          hash3.update(salt);
        tmp = hash3.digest();
        var used = 0;
        if (keyLen > 0) {
          var keyStart = key2.length - keyLen;
          used = Math.min(keyLen, tmp.length);
          tmp.copy(key2, keyStart, 0, used);
          keyLen -= used;
        }
        if (used < tmp.length && ivLen > 0) {
          var ivStart = iv.length - ivLen;
          var length = Math.min(ivLen, tmp.length - used);
          tmp.copy(iv, ivStart, used, used + length);
          ivLen -= length;
        }
      }
      tmp.fill(0);
      return { key: key2, iv };
    }
    module.exports = EVP_BytesToKey;
  }
});

// node_modules/browserify-aes/encrypter.js
var require_encrypter = __commonJS({
  "node_modules/browserify-aes/encrypter.js"(exports) {
    init_shim();
    var MODES = require_modes();
    var AuthCipher = require_authCipher();
    var Buffer3 = require_safe_buffer().Buffer;
    var StreamCipher = require_streamCipher();
    var Transform = require_cipher_base();
    var aes3 = require_aes();
    var ebtk = require_evp_bytestokey();
    var inherits = require_inherits_browser();
    function Cipher(mode, key2, iv) {
      Transform.call(this);
      this._cache = new Splitter();
      this._cipher = new aes3.AES(key2);
      this._prev = Buffer3.from(iv);
      this._mode = mode;
      this._autopadding = true;
    }
    inherits(Cipher, Transform);
    Cipher.prototype._update = function(data) {
      this._cache.add(data);
      var chunk;
      var thing;
      var out = [];
      while (chunk = this._cache.get()) {
        thing = this._mode.encrypt(this, chunk);
        out.push(thing);
      }
      return Buffer3.concat(out);
    };
    var PADDING = Buffer3.alloc(16, 16);
    Cipher.prototype._final = function() {
      var chunk = this._cache.flush();
      if (this._autopadding) {
        chunk = this._mode.encrypt(this, chunk);
        this._cipher.scrub();
        return chunk;
      }
      if (!chunk.equals(PADDING)) {
        this._cipher.scrub();
        throw new Error("data not multiple of block length");
      }
    };
    Cipher.prototype.setAutoPadding = function(setTo) {
      this._autopadding = !!setTo;
      return this;
    };
    function Splitter() {
      this.cache = Buffer3.allocUnsafe(0);
    }
    Splitter.prototype.add = function(data) {
      this.cache = Buffer3.concat([this.cache, data]);
    };
    Splitter.prototype.get = function() {
      if (this.cache.length > 15) {
        var out = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        return out;
      }
      return null;
    };
    Splitter.prototype.flush = function() {
      var len = 16 - this.cache.length;
      var padBuff = Buffer3.allocUnsafe(len);
      var i = -1;
      while (++i < len) {
        padBuff.writeUInt8(len, i);
      }
      return Buffer3.concat([this.cache, padBuff]);
    };
    function createCipheriv(suite, password, iv) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      if (typeof password === "string")
        password = Buffer3.from(password);
      if (password.length !== config.key / 8)
        throw new TypeError("invalid key length " + password.length);
      if (typeof iv === "string")
        iv = Buffer3.from(iv);
      if (config.mode !== "GCM" && iv.length !== config.iv)
        throw new TypeError("invalid iv length " + iv.length);
      if (config.type === "stream") {
        return new StreamCipher(config.module, password, iv);
      } else if (config.type === "auth") {
        return new AuthCipher(config.module, password, iv);
      }
      return new Cipher(config.module, password, iv);
    }
    function createCipher(suite, password) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      var keys = ebtk(password, false, config.key, config.iv);
      return createCipheriv(suite, keys.key, keys.iv);
    }
    exports.createCipheriv = createCipheriv;
    exports.createCipher = createCipher;
  }
});

// node_modules/browserify-aes/decrypter.js
var require_decrypter = __commonJS({
  "node_modules/browserify-aes/decrypter.js"(exports) {
    init_shim();
    var AuthCipher = require_authCipher();
    var Buffer3 = require_safe_buffer().Buffer;
    var MODES = require_modes();
    var StreamCipher = require_streamCipher();
    var Transform = require_cipher_base();
    var aes3 = require_aes();
    var ebtk = require_evp_bytestokey();
    var inherits = require_inherits_browser();
    function Decipher(mode, key2, iv) {
      Transform.call(this);
      this._cache = new Splitter();
      this._last = void 0;
      this._cipher = new aes3.AES(key2);
      this._prev = Buffer3.from(iv);
      this._mode = mode;
      this._autopadding = true;
    }
    inherits(Decipher, Transform);
    Decipher.prototype._update = function(data) {
      this._cache.add(data);
      var chunk;
      var thing;
      var out = [];
      while (chunk = this._cache.get(this._autopadding)) {
        thing = this._mode.decrypt(this, chunk);
        out.push(thing);
      }
      return Buffer3.concat(out);
    };
    Decipher.prototype._final = function() {
      var chunk = this._cache.flush();
      if (this._autopadding) {
        return unpad(this._mode.decrypt(this, chunk));
      } else if (chunk) {
        throw new Error("data not multiple of block length");
      }
    };
    Decipher.prototype.setAutoPadding = function(setTo) {
      this._autopadding = !!setTo;
      return this;
    };
    function Splitter() {
      this.cache = Buffer3.allocUnsafe(0);
    }
    Splitter.prototype.add = function(data) {
      this.cache = Buffer3.concat([this.cache, data]);
    };
    Splitter.prototype.get = function(autoPadding) {
      var out;
      if (autoPadding) {
        if (this.cache.length > 16) {
          out = this.cache.slice(0, 16);
          this.cache = this.cache.slice(16);
          return out;
        }
      } else {
        if (this.cache.length >= 16) {
          out = this.cache.slice(0, 16);
          this.cache = this.cache.slice(16);
          return out;
        }
      }
      return null;
    };
    Splitter.prototype.flush = function() {
      if (this.cache.length)
        return this.cache;
    };
    function unpad(last) {
      var padded = last[15];
      if (padded < 1 || padded > 16) {
        throw new Error("unable to decrypt data");
      }
      var i = -1;
      while (++i < padded) {
        if (last[i + (16 - padded)] !== padded) {
          throw new Error("unable to decrypt data");
        }
      }
      if (padded === 16)
        return;
      return last.slice(0, 16 - padded);
    }
    function createDecipheriv(suite, password, iv) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      if (typeof iv === "string")
        iv = Buffer3.from(iv);
      if (config.mode !== "GCM" && iv.length !== config.iv)
        throw new TypeError("invalid iv length " + iv.length);
      if (typeof password === "string")
        password = Buffer3.from(password);
      if (password.length !== config.key / 8)
        throw new TypeError("invalid key length " + password.length);
      if (config.type === "stream") {
        return new StreamCipher(config.module, password, iv, true);
      } else if (config.type === "auth") {
        return new AuthCipher(config.module, password, iv, true);
      }
      return new Decipher(config.module, password, iv);
    }
    function createDecipher(suite, password) {
      var config = MODES[suite.toLowerCase()];
      if (!config)
        throw new TypeError("invalid suite type");
      var keys = ebtk(password, false, config.key, config.iv);
      return createDecipheriv(suite, keys.key, keys.iv);
    }
    exports.createDecipher = createDecipher;
    exports.createDecipheriv = createDecipheriv;
  }
});

// node_modules/browserify-aes/browser.js
var require_browser7 = __commonJS({
  "node_modules/browserify-aes/browser.js"(exports) {
    init_shim();
    var ciphers = require_encrypter();
    var deciphers = require_decrypter();
    var modes = require_list();
    function getCiphers() {
      return Object.keys(modes);
    }
    exports.createCipher = exports.Cipher = ciphers.createCipher;
    exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
    exports.createDecipher = exports.Decipher = deciphers.createDecipher;
    exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;
    exports.listCiphers = exports.getCiphers = getCiphers;
  }
});

// node_modules/browserify-des/modes.js
var require_modes2 = __commonJS({
  "node_modules/browserify-des/modes.js"(exports) {
    init_shim();
    exports["des-ecb"] = {
      key: 8,
      iv: 0
    };
    exports["des-cbc"] = exports.des = {
      key: 8,
      iv: 8
    };
    exports["des-ede3-cbc"] = exports.des3 = {
      key: 24,
      iv: 8
    };
    exports["des-ede3"] = {
      key: 24,
      iv: 0
    };
    exports["des-ede-cbc"] = {
      key: 16,
      iv: 8
    };
    exports["des-ede"] = {
      key: 16,
      iv: 0
    };
  }
});

// node_modules/browserify-cipher/browser.js
var require_browser8 = __commonJS({
  "node_modules/browserify-cipher/browser.js"(exports) {
    init_shim();
    var DES = require_browserify_des();
    var aes3 = require_browser7();
    var aesModes = require_modes();
    var desModes = require_modes2();
    var ebtk = require_evp_bytestokey();
    function createCipher(suite, password) {
      suite = suite.toLowerCase();
      var keyLen, ivLen;
      if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
      } else if (desModes[suite]) {
        keyLen = desModes[suite].key * 8;
        ivLen = desModes[suite].iv;
      } else {
        throw new TypeError("invalid suite type");
      }
      var keys = ebtk(password, false, keyLen, ivLen);
      return createCipheriv(suite, keys.key, keys.iv);
    }
    function createDecipher(suite, password) {
      suite = suite.toLowerCase();
      var keyLen, ivLen;
      if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
      } else if (desModes[suite]) {
        keyLen = desModes[suite].key * 8;
        ivLen = desModes[suite].iv;
      } else {
        throw new TypeError("invalid suite type");
      }
      var keys = ebtk(password, false, keyLen, ivLen);
      return createDecipheriv(suite, keys.key, keys.iv);
    }
    function createCipheriv(suite, key2, iv) {
      suite = suite.toLowerCase();
      if (aesModes[suite])
        return aes3.createCipheriv(suite, key2, iv);
      if (desModes[suite])
        return new DES({ key: key2, iv, mode: suite });
      throw new TypeError("invalid suite type");
    }
    function createDecipheriv(suite, key2, iv) {
      suite = suite.toLowerCase();
      if (aesModes[suite])
        return aes3.createDecipheriv(suite, key2, iv);
      if (desModes[suite])
        return new DES({ key: key2, iv, mode: suite, decrypt: true });
      throw new TypeError("invalid suite type");
    }
    function getCiphers() {
      return Object.keys(desModes).concat(aes3.getCiphers());
    }
    exports.createCipher = exports.Cipher = createCipher;
    exports.createCipheriv = exports.Cipheriv = createCipheriv;
    exports.createDecipher = exports.Decipher = createDecipher;
    exports.createDecipheriv = exports.Decipheriv = createDecipheriv;
    exports.listCiphers = exports.getCiphers = getCiphers;
  }
});

// (disabled):node_modules/buffer/index.js
var require_buffer2 = __commonJS({
  "(disabled):node_modules/buffer/index.js"() {
    init_shim();
  }
});

// node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js
var require_bn = __commonJS({
  "node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/miller-rabin/node_modules/bn.js/lib/bn.js
var require_bn2 = __commonJS({
  "node_modules/miller-rabin/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// (disabled):crypto
var require_crypto = __commonJS({
  "(disabled):crypto"() {
    init_shim();
  }
});

// node_modules/brorand/index.js
var require_brorand = __commonJS({
  "node_modules/brorand/index.js"(exports, module) {
    init_shim();
    var r;
    module.exports = function rand2(len) {
      if (!r)
        r = new Rand(null);
      return r.generate(len);
    };
    function Rand(rand2) {
      this.rand = rand2;
    }
    module.exports.Rand = Rand;
    Rand.prototype.generate = function generate2(len) {
      return this._rand(len);
    };
    Rand.prototype._rand = function _rand(n) {
      if (this.rand.getBytes)
        return this.rand.getBytes(n);
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++)
        res[i] = this.rand.getByte();
      return res;
    };
    if (typeof self === "object") {
      if (self.crypto && self.crypto.getRandomValues) {
        Rand.prototype._rand = function _rand(n) {
          var arr = new Uint8Array(n);
          self.crypto.getRandomValues(arr);
          return arr;
        };
      } else if (self.msCrypto && self.msCrypto.getRandomValues) {
        Rand.prototype._rand = function _rand(n) {
          var arr = new Uint8Array(n);
          self.msCrypto.getRandomValues(arr);
          return arr;
        };
      } else if (typeof window === "object") {
        Rand.prototype._rand = function() {
          throw new Error("Not implemented yet");
        };
      }
    } else {
      try {
        crypto2 = require_crypto();
        if (typeof crypto2.randomBytes !== "function")
          throw new Error("Not supported");
        Rand.prototype._rand = function _rand(n) {
          return crypto2.randomBytes(n);
        };
      } catch (e) {
      }
    }
    var crypto2;
  }
});

// node_modules/miller-rabin/lib/mr.js
var require_mr = __commonJS({
  "node_modules/miller-rabin/lib/mr.js"(exports, module) {
    init_shim();
    var bn = require_bn2();
    var brorand = require_brorand();
    function MillerRabin(rand2) {
      this.rand = rand2 || new brorand.Rand();
    }
    module.exports = MillerRabin;
    MillerRabin.create = function create(rand2) {
      return new MillerRabin(rand2);
    };
    MillerRabin.prototype._randbelow = function _randbelow(n) {
      var len = n.bitLength();
      var min_bytes = Math.ceil(len / 8);
      do
        var a = new bn(this.rand.generate(min_bytes));
      while (a.cmp(n) >= 0);
      return a;
    };
    MillerRabin.prototype._randrange = function _randrange(start, stop) {
      var size = stop.sub(start);
      return start.add(this._randbelow(size));
    };
    MillerRabin.prototype.test = function test(n, k, cb) {
      var len = n.bitLength();
      var red = bn.mont(n);
      var rone = new bn(1).toRed(red);
      if (!k)
        k = Math.max(1, len / 48 | 0);
      var n1 = n.subn(1);
      for (var s = 0; !n1.testn(s); s++) {
      }
      var d = n.shrn(s);
      var rn1 = n1.toRed(red);
      var prime = true;
      for (; k > 0; k--) {
        var a = this._randrange(new bn(2), n1);
        if (cb)
          cb(a);
        var x = a.toRed(red).redPow(d);
        if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
          continue;
        for (var i = 1; i < s; i++) {
          x = x.redSqr();
          if (x.cmp(rone) === 0)
            return false;
          if (x.cmp(rn1) === 0)
            break;
        }
        if (i === s)
          return false;
      }
      return prime;
    };
    MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
      var len = n.bitLength();
      var red = bn.mont(n);
      var rone = new bn(1).toRed(red);
      if (!k)
        k = Math.max(1, len / 48 | 0);
      var n1 = n.subn(1);
      for (var s = 0; !n1.testn(s); s++) {
      }
      var d = n.shrn(s);
      var rn1 = n1.toRed(red);
      for (; k > 0; k--) {
        var a = this._randrange(new bn(2), n1);
        var g = n.gcd(a);
        if (g.cmpn(1) !== 0)
          return g;
        var x = a.toRed(red).redPow(d);
        if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
          continue;
        for (var i = 1; i < s; i++) {
          x = x.redSqr();
          if (x.cmp(rone) === 0)
            return x.fromRed().subn(1).gcd(n);
          if (x.cmp(rn1) === 0)
            break;
        }
        if (i === s) {
          x = x.redSqr();
          return x.fromRed().subn(1).gcd(n);
        }
      }
      return false;
    };
  }
});

// node_modules/diffie-hellman/lib/generatePrime.js
var require_generatePrime = __commonJS({
  "node_modules/diffie-hellman/lib/generatePrime.js"(exports, module) {
    init_shim();
    var randomBytes2 = require_browser4();
    module.exports = findPrime;
    findPrime.simpleSieve = simpleSieve;
    findPrime.fermatTest = fermatTest;
    var BN3 = require_bn();
    var TWENTYFOUR = new BN3(24);
    var MillerRabin = require_mr();
    var millerRabin = new MillerRabin();
    var ONE = new BN3(1);
    var TWO = new BN3(2);
    var FIVE = new BN3(5);
    var SIXTEEN = new BN3(16);
    var EIGHT = new BN3(8);
    var TEN = new BN3(10);
    var THREE = new BN3(3);
    var SEVEN = new BN3(7);
    var ELEVEN = new BN3(11);
    var FOUR = new BN3(4);
    var TWELVE = new BN3(12);
    var primes = null;
    function _getPrimes() {
      if (primes !== null)
        return primes;
      var limit = 1048576;
      var res = [];
      res[0] = 2;
      for (var i = 1, k = 3; k < limit; k += 2) {
        var sqrt = Math.ceil(Math.sqrt(k));
        for (var j = 0; j < i && res[j] <= sqrt; j++)
          if (k % res[j] === 0)
            break;
        if (i !== j && res[j] <= sqrt)
          continue;
        res[i++] = k;
      }
      primes = res;
      return res;
    }
    function simpleSieve(p) {
      var primes2 = _getPrimes();
      for (var i = 0; i < primes2.length; i++)
        if (p.modn(primes2[i]) === 0) {
          if (p.cmpn(primes2[i]) === 0) {
            return true;
          } else {
            return false;
          }
        }
      return true;
    }
    function fermatTest(p) {
      var red = BN3.mont(p);
      return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
    }
    function findPrime(bits, gen) {
      if (bits < 16) {
        if (gen === 2 || gen === 5) {
          return new BN3([140, 123]);
        } else {
          return new BN3([140, 39]);
        }
      }
      gen = new BN3(gen);
      var num, n2;
      while (true) {
        num = new BN3(randomBytes2(Math.ceil(bits / 8)));
        while (num.bitLength() > bits) {
          num.ishrn(1);
        }
        if (num.isEven()) {
          num.iadd(ONE);
        }
        if (!num.testn(1)) {
          num.iadd(TWO);
        }
        if (!gen.cmp(TWO)) {
          while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
            num.iadd(FOUR);
          }
        } else if (!gen.cmp(FIVE)) {
          while (num.mod(TEN).cmp(THREE)) {
            num.iadd(FOUR);
          }
        }
        n2 = num.shrn(1);
        if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {
          return num;
        }
      }
    }
  }
});

// node_modules/diffie-hellman/lib/primes.json
var require_primes = __commonJS({
  "node_modules/diffie-hellman/lib/primes.json"(exports, module) {
    module.exports = {
      modp1: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
      },
      modp2: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
      },
      modp5: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
      },
      modp14: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
      },
      modp15: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
      },
      modp16: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
      },
      modp17: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
      },
      modp18: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
      }
    };
  }
});

// node_modules/diffie-hellman/lib/dh.js
var require_dh = __commonJS({
  "node_modules/diffie-hellman/lib/dh.js"(exports, module) {
    init_shim();
    var BN3 = require_bn();
    var MillerRabin = require_mr();
    var millerRabin = new MillerRabin();
    var TWENTYFOUR = new BN3(24);
    var ELEVEN = new BN3(11);
    var TEN = new BN3(10);
    var THREE = new BN3(3);
    var SEVEN = new BN3(7);
    var primes = require_generatePrime();
    var randomBytes2 = require_browser4();
    module.exports = DH;
    function setPublicKey(pub, enc) {
      enc = enc || "utf8";
      if (!Buffer2.isBuffer(pub)) {
        pub = new Buffer2(pub, enc);
      }
      this._pub = new BN3(pub);
      return this;
    }
    function setPrivateKey(priv, enc) {
      enc = enc || "utf8";
      if (!Buffer2.isBuffer(priv)) {
        priv = new Buffer2(priv, enc);
      }
      this._priv = new BN3(priv);
      return this;
    }
    var primeCache = {};
    function checkPrime(prime, generator) {
      var gen = generator.toString("hex");
      var hex = [gen, prime.toString(16)].join("_");
      if (hex in primeCache) {
        return primeCache[hex];
      }
      var error = 0;
      if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {
        error += 1;
        if (gen === "02" || gen === "05") {
          error += 8;
        } else {
          error += 4;
        }
        primeCache[hex] = error;
        return error;
      }
      if (!millerRabin.test(prime.shrn(1))) {
        error += 2;
      }
      var rem;
      switch (gen) {
        case "02":
          if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
            error += 8;
          }
          break;
        case "05":
          rem = prime.mod(TEN);
          if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
            error += 8;
          }
          break;
        default:
          error += 4;
      }
      primeCache[hex] = error;
      return error;
    }
    function DH(prime, generator, malleable) {
      this.setGenerator(generator);
      this.__prime = new BN3(prime);
      this._prime = BN3.mont(this.__prime);
      this._primeLen = prime.length;
      this._pub = void 0;
      this._priv = void 0;
      this._primeCode = void 0;
      if (malleable) {
        this.setPublicKey = setPublicKey;
        this.setPrivateKey = setPrivateKey;
      } else {
        this._primeCode = 8;
      }
    }
    Object.defineProperty(DH.prototype, "verifyError", {
      enumerable: true,
      get: function() {
        if (typeof this._primeCode !== "number") {
          this._primeCode = checkPrime(this.__prime, this.__gen);
        }
        return this._primeCode;
      }
    });
    DH.prototype.generateKeys = function() {
      if (!this._priv) {
        this._priv = new BN3(randomBytes2(this._primeLen));
      }
      this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
      return this.getPublicKey();
    };
    DH.prototype.computeSecret = function(other) {
      other = new BN3(other);
      other = other.toRed(this._prime);
      var secret = other.redPow(this._priv).fromRed();
      var out = new Buffer2(secret.toArray());
      var prime = this.getPrime();
      if (out.length < prime.length) {
        var front = new Buffer2(prime.length - out.length);
        front.fill(0);
        out = Buffer2.concat([front, out]);
      }
      return out;
    };
    DH.prototype.getPublicKey = function getPublicKey(enc) {
      return formatReturnValue(this._pub, enc);
    };
    DH.prototype.getPrivateKey = function getPrivateKey(enc) {
      return formatReturnValue(this._priv, enc);
    };
    DH.prototype.getPrime = function(enc) {
      return formatReturnValue(this.__prime, enc);
    };
    DH.prototype.getGenerator = function(enc) {
      return formatReturnValue(this._gen, enc);
    };
    DH.prototype.setGenerator = function(gen, enc) {
      enc = enc || "utf8";
      if (!Buffer2.isBuffer(gen)) {
        gen = new Buffer2(gen, enc);
      }
      this.__gen = gen;
      this._gen = new BN3(gen);
      return this;
    };
    function formatReturnValue(bn, enc) {
      var buf = new Buffer2(bn.toArray());
      if (!enc) {
        return buf;
      } else {
        return buf.toString(enc);
      }
    }
  }
});

// node_modules/diffie-hellman/browser.js
var require_browser9 = __commonJS({
  "node_modules/diffie-hellman/browser.js"(exports) {
    init_shim();
    var generatePrime = require_generatePrime();
    var primes = require_primes();
    var DH = require_dh();
    function getDiffieHellman(mod) {
      var prime = new Buffer2(primes[mod].prime, "hex");
      var gen = new Buffer2(primes[mod].gen, "hex");
      return new DH(prime, gen);
    }
    var ENCODINGS = {
      "binary": true,
      "hex": true,
      "base64": true
    };
    function createDiffieHellman(prime, enc, generator, genc) {
      if (Buffer2.isBuffer(enc) || ENCODINGS[enc] === void 0) {
        return createDiffieHellman(prime, "binary", enc, generator);
      }
      enc = enc || "binary";
      genc = genc || "binary";
      generator = generator || new Buffer2([2]);
      if (!Buffer2.isBuffer(generator)) {
        generator = new Buffer2(generator, genc);
      }
      if (typeof prime === "number") {
        return new DH(generatePrime(prime, generator), generator, true);
      }
      if (!Buffer2.isBuffer(prime)) {
        prime = new Buffer2(prime, enc);
      }
      return new DH(prime, generator, true);
    }
    exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
    exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js
var require_stream_browser3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js"(exports, module) {
    init_shim();
    module.exports = require_events().EventEmitter;
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js
var require_buffer_list3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js"(exports, module) {
    "use strict";
    init_shim();
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key2) {
            _defineProperty(target, key2, source[key2]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key2) {
            Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var _require = require_buffer();
    var Buffer3 = _require.Buffer;
    var _require2 = require_util();
    var inspect4 = _require2.inspect;
    var custom = inspect4 && inspect4.custom || "inspect";
    function copyBuffer(src, target, offset) {
      Buffer3.prototype.copy.call(src, target, offset);
    }
    module.exports = /* @__PURE__ */ function() {
      function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      _createClass(BufferList, [{
        key: "push",
        value: function push(v) {
          var entry = {
            data: v,
            next: null
          };
          if (this.length > 0)
            this.tail.next = entry;
          else
            this.head = entry;
          this.tail = entry;
          ++this.length;
        }
      }, {
        key: "unshift",
        value: function unshift(v) {
          var entry = {
            data: v,
            next: this.head
          };
          if (this.length === 0)
            this.tail = entry;
          this.head = entry;
          ++this.length;
        }
      }, {
        key: "shift",
        value: function shift() {
          if (this.length === 0)
            return;
          var ret = this.head.data;
          if (this.length === 1)
            this.head = this.tail = null;
          else
            this.head = this.head.next;
          --this.length;
          return ret;
        }
      }, {
        key: "clear",
        value: function clear() {
          this.head = this.tail = null;
          this.length = 0;
        }
      }, {
        key: "join",
        value: function join(s) {
          if (this.length === 0)
            return "";
          var p = this.head;
          var ret = "" + p.data;
          while (p = p.next) {
            ret += s + p.data;
          }
          return ret;
        }
      }, {
        key: "concat",
        value: function concat2(n) {
          if (this.length === 0)
            return Buffer3.alloc(0);
          var ret = Buffer3.allocUnsafe(n >>> 0);
          var p = this.head;
          var i = 0;
          while (p) {
            copyBuffer(p.data, ret, i);
            i += p.data.length;
            p = p.next;
          }
          return ret;
        }
      }, {
        key: "consume",
        value: function consume(n, hasStrings) {
          var ret;
          if (n < this.head.data.length) {
            ret = this.head.data.slice(0, n);
            this.head.data = this.head.data.slice(n);
          } else if (n === this.head.data.length) {
            ret = this.shift();
          } else {
            ret = hasStrings ? this._getString(n) : this._getBuffer(n);
          }
          return ret;
        }
      }, {
        key: "first",
        value: function first() {
          return this.head.data;
        }
      }, {
        key: "_getString",
        value: function _getString(n) {
          var p = this.head;
          var c = 1;
          var ret = p.data;
          n -= ret.length;
          while (p = p.next) {
            var str = p.data;
            var nb = n > str.length ? str.length : n;
            if (nb === str.length)
              ret += str;
            else
              ret += str.slice(0, n);
            n -= nb;
            if (n === 0) {
              if (nb === str.length) {
                ++c;
                if (p.next)
                  this.head = p.next;
                else
                  this.head = this.tail = null;
              } else {
                this.head = p;
                p.data = str.slice(nb);
              }
              break;
            }
            ++c;
          }
          this.length -= c;
          return ret;
        }
      }, {
        key: "_getBuffer",
        value: function _getBuffer(n) {
          var ret = Buffer3.allocUnsafe(n);
          var p = this.head;
          var c = 1;
          p.data.copy(ret);
          n -= p.data.length;
          while (p = p.next) {
            var buf = p.data;
            var nb = n > buf.length ? buf.length : n;
            buf.copy(ret, ret.length - n, 0, nb);
            n -= nb;
            if (n === 0) {
              if (nb === buf.length) {
                ++c;
                if (p.next)
                  this.head = p.next;
                else
                  this.head = this.tail = null;
              } else {
                this.head = p;
                p.data = buf.slice(nb);
              }
              break;
            }
            ++c;
          }
          this.length -= c;
          return ret;
        }
      }, {
        key: custom,
        value: function value(_, options) {
          return inspect4(this, _objectSpread({}, options, {
            depth: 0,
            customInspect: false
          }));
        }
      }]);
      return BufferList;
    }();
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js
var require_destroy3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js"(exports, module) {
    "use strict";
    init_shim();
    function destroy(err, cb) {
      var _this = this;
      var readableDestroyed = this._readableState && this._readableState.destroyed;
      var writableDestroyed = this._writableState && this._writableState.destroyed;
      if (readableDestroyed || writableDestroyed) {
        if (cb) {
          cb(err);
        } else if (err) {
          if (!this._writableState) {
            process.nextTick(emitErrorNT, this, err);
          } else if (!this._writableState.errorEmitted) {
            this._writableState.errorEmitted = true;
            process.nextTick(emitErrorNT, this, err);
          }
        }
        return this;
      }
      if (this._readableState) {
        this._readableState.destroyed = true;
      }
      if (this._writableState) {
        this._writableState.destroyed = true;
      }
      this._destroy(err || null, function(err2) {
        if (!cb && err2) {
          if (!_this._writableState) {
            process.nextTick(emitErrorAndCloseNT, _this, err2);
          } else if (!_this._writableState.errorEmitted) {
            _this._writableState.errorEmitted = true;
            process.nextTick(emitErrorAndCloseNT, _this, err2);
          } else {
            process.nextTick(emitCloseNT, _this);
          }
        } else if (cb) {
          process.nextTick(emitCloseNT, _this);
          cb(err2);
        } else {
          process.nextTick(emitCloseNT, _this);
        }
      });
      return this;
    }
    function emitErrorAndCloseNT(self2, err) {
      emitErrorNT(self2, err);
      emitCloseNT(self2);
    }
    function emitCloseNT(self2) {
      if (self2._writableState && !self2._writableState.emitClose)
        return;
      if (self2._readableState && !self2._readableState.emitClose)
        return;
      self2.emit("close");
    }
    function undestroy() {
      if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
      }
      if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finalCalled = false;
        this._writableState.prefinished = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
      }
    }
    function emitErrorNT(self2, err) {
      self2.emit("error", err);
    }
    function errorOrDestroy(stream, err) {
      var rState = stream._readableState;
      var wState = stream._writableState;
      if (rState && rState.autoDestroy || wState && wState.autoDestroy)
        stream.destroy(err);
      else
        stream.emit("error", err);
    }
    module.exports = {
      destroy,
      undestroy,
      errorOrDestroy
    };
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js
var require_errors_browser3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js"(exports, module) {
    "use strict";
    init_shim();
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var codes = {};
    function createErrorType(code, message, Base) {
      if (!Base) {
        Base = Error;
      }
      function getMessage(arg1, arg2, arg3) {
        if (typeof message === "string") {
          return message;
        } else {
          return message(arg1, arg2, arg3);
        }
      }
      var NodeError = /* @__PURE__ */ function(_Base) {
        _inheritsLoose(NodeError2, _Base);
        function NodeError2(arg1, arg2, arg3) {
          return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
        }
        return NodeError2;
      }(Base);
      NodeError.prototype.name = Base.name;
      NodeError.prototype.code = code;
      codes[code] = NodeError;
    }
    function oneOf(expected, thing) {
      if (Array.isArray(expected)) {
        var len = expected.length;
        expected = expected.map(function(i) {
          return String(i);
        });
        if (len > 2) {
          return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(", "), ", or ") + expected[len - 1];
        } else if (len === 2) {
          return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
        } else {
          return "of ".concat(thing, " ").concat(expected[0]);
        }
      } else {
        return "of ".concat(thing, " ").concat(String(expected));
      }
    }
    function startsWith(str, search, pos) {
      return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
    }
    function endsWith(str, search, this_len) {
      if (this_len === void 0 || this_len > str.length) {
        this_len = str.length;
      }
      return str.substring(this_len - search.length, this_len) === search;
    }
    function includes(str, search, start) {
      if (typeof start !== "number") {
        start = 0;
      }
      if (start + search.length > str.length) {
        return false;
      } else {
        return str.indexOf(search, start) !== -1;
      }
    }
    createErrorType("ERR_INVALID_OPT_VALUE", function(name, value) {
      return 'The value "' + value + '" is invalid for option "' + name + '"';
    }, TypeError);
    createErrorType("ERR_INVALID_ARG_TYPE", function(name, expected, actual) {
      var determiner;
      if (typeof expected === "string" && startsWith(expected, "not ")) {
        determiner = "must not be";
        expected = expected.replace(/^not /, "");
      } else {
        determiner = "must be";
      }
      var msg;
      if (endsWith(name, " argument")) {
        msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
      } else {
        var type = includes(name, ".") ? "property" : "argument";
        msg = 'The "'.concat(name, '" ').concat(type, " ").concat(determiner, " ").concat(oneOf(expected, "type"));
      }
      msg += ". Received type ".concat(typeof actual);
      return msg;
    }, TypeError);
    createErrorType("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    createErrorType("ERR_METHOD_NOT_IMPLEMENTED", function(name) {
      return "The " + name + " method is not implemented";
    });
    createErrorType("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    createErrorType("ERR_STREAM_DESTROYED", function(name) {
      return "Cannot call " + name + " after a stream was destroyed";
    });
    createErrorType("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    createErrorType("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
    createErrorType("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    createErrorType("ERR_UNKNOWN_ENCODING", function(arg) {
      return "Unknown encoding: " + arg;
    }, TypeError);
    createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    module.exports.codes = codes;
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js
var require_state3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js"(exports, module) {
    "use strict";
    init_shim();
    var ERR_INVALID_OPT_VALUE = require_errors_browser3().codes.ERR_INVALID_OPT_VALUE;
    function highWaterMarkFrom(options, isDuplex, duplexKey) {
      return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
    }
    function getHighWaterMark(state, options, duplexKey, isDuplex) {
      var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);
      if (hwm != null) {
        if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
          var name = isDuplex ? duplexKey : "highWaterMark";
          throw new ERR_INVALID_OPT_VALUE(name, hwm);
        }
        return Math.floor(hwm);
      }
      return state.objectMode ? 16 : 16 * 1024;
    }
    module.exports = {
      getHighWaterMark
    };
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js
var require_stream_writable3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Writable;
    function CorkedRequest(state) {
      var _this = this;
      this.next = null;
      this.entry = null;
      this.finish = function() {
        onCorkedFinish(_this, state);
      };
    }
    var Duplex;
    Writable.WritableState = WritableState;
    var internalUtil = {
      deprecate: require_browser2()
    };
    var Stream = require_stream_browser3();
    var Buffer3 = require_buffer().Buffer;
    var OurUint8Array = window.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer3.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer3.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var destroyImpl = require_destroy3();
    var _require = require_state3();
    var getHighWaterMark = _require.getHighWaterMark;
    var _require$codes = require_errors_browser3().codes;
    var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
    var ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE;
    var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
    var ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES;
    var ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END;
    var ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;
    var errorOrDestroy = destroyImpl.errorOrDestroy;
    require_inherits_browser()(Writable, Stream);
    function nop() {
    }
    function WritableState(options, stream, isDuplex) {
      Duplex = Duplex || require_stream_duplex3();
      options = options || {};
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof Duplex;
      this.objectMode = !!options.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options.writableObjectMode;
      this.highWaterMark = getHighWaterMark(this, options, "writableHighWaterMark", isDuplex);
      this.finalCalled = false;
      this.needDrain = false;
      this.ending = false;
      this.ended = false;
      this.finished = false;
      this.destroyed = false;
      var noDecode = options.decodeStrings === false;
      this.decodeStrings = !noDecode;
      this.defaultEncoding = options.defaultEncoding || "utf8";
      this.length = 0;
      this.writing = false;
      this.corked = 0;
      this.sync = true;
      this.bufferProcessing = false;
      this.onwrite = function(er) {
        onwrite(stream, er);
      };
      this.writecb = null;
      this.writelen = 0;
      this.bufferedRequest = null;
      this.lastBufferedRequest = null;
      this.pendingcb = 0;
      this.prefinished = false;
      this.errorEmitted = false;
      this.emitClose = options.emitClose !== false;
      this.autoDestroy = !!options.autoDestroy;
      this.bufferedRequestCount = 0;
      this.corkedRequestsFree = new CorkedRequest(this);
    }
    WritableState.prototype.getBuffer = function getBuffer() {
      var current = this.bufferedRequest;
      var out = [];
      while (current) {
        out.push(current);
        current = current.next;
      }
      return out;
    };
    (function() {
      try {
        Object.defineProperty(WritableState.prototype, "buffer", {
          get: internalUtil.deprecate(function writableStateBufferGetter() {
            return this.getBuffer();
          }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
        });
      } catch (_) {
      }
    })();
    var realHasInstance;
    if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
      realHasInstance = Function.prototype[Symbol.hasInstance];
      Object.defineProperty(Writable, Symbol.hasInstance, {
        value: function value(object) {
          if (realHasInstance.call(this, object))
            return true;
          if (this !== Writable)
            return false;
          return object && object._writableState instanceof WritableState;
        }
      });
    } else {
      realHasInstance = function realHasInstance2(object) {
        return object instanceof this;
      };
    }
    function Writable(options) {
      Duplex = Duplex || require_stream_duplex3();
      var isDuplex = this instanceof Duplex;
      if (!isDuplex && !realHasInstance.call(Writable, this))
        return new Writable(options);
      this._writableState = new WritableState(options, this, isDuplex);
      this.writable = true;
      if (options) {
        if (typeof options.write === "function")
          this._write = options.write;
        if (typeof options.writev === "function")
          this._writev = options.writev;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
        if (typeof options.final === "function")
          this._final = options.final;
      }
      Stream.call(this);
    }
    Writable.prototype.pipe = function() {
      errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
    };
    function writeAfterEnd(stream, cb) {
      var er = new ERR_STREAM_WRITE_AFTER_END();
      errorOrDestroy(stream, er);
      process.nextTick(cb, er);
    }
    function validChunk(stream, state, chunk, cb) {
      var er;
      if (chunk === null) {
        er = new ERR_STREAM_NULL_VALUES();
      } else if (typeof chunk !== "string" && !state.objectMode) {
        er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer"], chunk);
      }
      if (er) {
        errorOrDestroy(stream, er);
        process.nextTick(cb, er);
        return false;
      }
      return true;
    }
    Writable.prototype.write = function(chunk, encoding, cb) {
      var state = this._writableState;
      var ret = false;
      var isBuf = !state.objectMode && _isUint8Array(chunk);
      if (isBuf && !Buffer3.isBuffer(chunk)) {
        chunk = _uint8ArrayToBuffer(chunk);
      }
      if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (isBuf)
        encoding = "buffer";
      else if (!encoding)
        encoding = state.defaultEncoding;
      if (typeof cb !== "function")
        cb = nop;
      if (state.ending)
        writeAfterEnd(this, cb);
      else if (isBuf || validChunk(this, state, chunk, cb)) {
        state.pendingcb++;
        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
      }
      return ret;
    };
    Writable.prototype.cork = function() {
      this._writableState.corked++;
    };
    Writable.prototype.uncork = function() {
      var state = this._writableState;
      if (state.corked) {
        state.corked--;
        if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest)
          clearBuffer(this, state);
      }
    };
    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
      if (typeof encoding === "string")
        encoding = encoding.toLowerCase();
      if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((encoding + "").toLowerCase()) > -1))
        throw new ERR_UNKNOWN_ENCODING(encoding);
      this._writableState.defaultEncoding = encoding;
      return this;
    };
    Object.defineProperty(Writable.prototype, "writableBuffer", {
      enumerable: false,
      get: function get() {
        return this._writableState && this._writableState.getBuffer();
      }
    });
    function decodeChunk(state, chunk, encoding) {
      if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
        chunk = Buffer3.from(chunk, encoding);
      }
      return chunk;
    }
    Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    });
    function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
      if (!isBuf) {
        var newChunk = decodeChunk(state, chunk, encoding);
        if (chunk !== newChunk) {
          isBuf = true;
          encoding = "buffer";
          chunk = newChunk;
        }
      }
      var len = state.objectMode ? 1 : chunk.length;
      state.length += len;
      var ret = state.length < state.highWaterMark;
      if (!ret)
        state.needDrain = true;
      if (state.writing || state.corked) {
        var last = state.lastBufferedRequest;
        state.lastBufferedRequest = {
          chunk,
          encoding,
          isBuf,
          callback: cb,
          next: null
        };
        if (last) {
          last.next = state.lastBufferedRequest;
        } else {
          state.bufferedRequest = state.lastBufferedRequest;
        }
        state.bufferedRequestCount += 1;
      } else {
        doWrite(stream, state, false, len, chunk, encoding, cb);
      }
      return ret;
    }
    function doWrite(stream, state, writev, len, chunk, encoding, cb) {
      state.writelen = len;
      state.writecb = cb;
      state.writing = true;
      state.sync = true;
      if (state.destroyed)
        state.onwrite(new ERR_STREAM_DESTROYED("write"));
      else if (writev)
        stream._writev(chunk, state.onwrite);
      else
        stream._write(chunk, encoding, state.onwrite);
      state.sync = false;
    }
    function onwriteError(stream, state, sync, er, cb) {
      --state.pendingcb;
      if (sync) {
        process.nextTick(cb, er);
        process.nextTick(finishMaybe, stream, state);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
      } else {
        cb(er);
        stream._writableState.errorEmitted = true;
        errorOrDestroy(stream, er);
        finishMaybe(stream, state);
      }
    }
    function onwriteStateUpdate(state) {
      state.writing = false;
      state.writecb = null;
      state.length -= state.writelen;
      state.writelen = 0;
    }
    function onwrite(stream, er) {
      var state = stream._writableState;
      var sync = state.sync;
      var cb = state.writecb;
      if (typeof cb !== "function")
        throw new ERR_MULTIPLE_CALLBACK();
      onwriteStateUpdate(state);
      if (er)
        onwriteError(stream, state, sync, er, cb);
      else {
        var finished = needFinish(state) || stream.destroyed;
        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
          clearBuffer(stream, state);
        }
        if (sync) {
          process.nextTick(afterWrite, stream, state, finished, cb);
        } else {
          afterWrite(stream, state, finished, cb);
        }
      }
    }
    function afterWrite(stream, state, finished, cb) {
      if (!finished)
        onwriteDrain(stream, state);
      state.pendingcb--;
      cb();
      finishMaybe(stream, state);
    }
    function onwriteDrain(stream, state) {
      if (state.length === 0 && state.needDrain) {
        state.needDrain = false;
        stream.emit("drain");
      }
    }
    function clearBuffer(stream, state) {
      state.bufferProcessing = true;
      var entry = state.bufferedRequest;
      if (stream._writev && entry && entry.next) {
        var l = state.bufferedRequestCount;
        var buffer = new Array(l);
        var holder = state.corkedRequestsFree;
        holder.entry = entry;
        var count = 0;
        var allBuffers = true;
        while (entry) {
          buffer[count] = entry;
          if (!entry.isBuf)
            allBuffers = false;
          entry = entry.next;
          count += 1;
        }
        buffer.allBuffers = allBuffers;
        doWrite(stream, state, true, state.length, buffer, "", holder.finish);
        state.pendingcb++;
        state.lastBufferedRequest = null;
        if (holder.next) {
          state.corkedRequestsFree = holder.next;
          holder.next = null;
        } else {
          state.corkedRequestsFree = new CorkedRequest(state);
        }
        state.bufferedRequestCount = 0;
      } else {
        while (entry) {
          var chunk = entry.chunk;
          var encoding = entry.encoding;
          var cb = entry.callback;
          var len = state.objectMode ? 1 : chunk.length;
          doWrite(stream, state, false, len, chunk, encoding, cb);
          entry = entry.next;
          state.bufferedRequestCount--;
          if (state.writing) {
            break;
          }
        }
        if (entry === null)
          state.lastBufferedRequest = null;
      }
      state.bufferedRequest = entry;
      state.bufferProcessing = false;
    }
    Writable.prototype._write = function(chunk, encoding, cb) {
      cb(new ERR_METHOD_NOT_IMPLEMENTED("_write()"));
    };
    Writable.prototype._writev = null;
    Writable.prototype.end = function(chunk, encoding, cb) {
      var state = this._writableState;
      if (typeof chunk === "function") {
        cb = chunk;
        chunk = null;
        encoding = null;
      } else if (typeof encoding === "function") {
        cb = encoding;
        encoding = null;
      }
      if (chunk !== null && chunk !== void 0)
        this.write(chunk, encoding);
      if (state.corked) {
        state.corked = 1;
        this.uncork();
      }
      if (!state.ending)
        endWritable(this, state, cb);
      return this;
    };
    Object.defineProperty(Writable.prototype, "writableLength", {
      enumerable: false,
      get: function get() {
        return this._writableState.length;
      }
    });
    function needFinish(state) {
      return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
    }
    function callFinal(stream, state) {
      stream._final(function(err) {
        state.pendingcb--;
        if (err) {
          errorOrDestroy(stream, err);
        }
        state.prefinished = true;
        stream.emit("prefinish");
        finishMaybe(stream, state);
      });
    }
    function prefinish(stream, state) {
      if (!state.prefinished && !state.finalCalled) {
        if (typeof stream._final === "function" && !state.destroyed) {
          state.pendingcb++;
          state.finalCalled = true;
          process.nextTick(callFinal, stream, state);
        } else {
          state.prefinished = true;
          stream.emit("prefinish");
        }
      }
    }
    function finishMaybe(stream, state) {
      var need = needFinish(state);
      if (need) {
        prefinish(stream, state);
        if (state.pendingcb === 0) {
          state.finished = true;
          stream.emit("finish");
          if (state.autoDestroy) {
            var rState = stream._readableState;
            if (!rState || rState.autoDestroy && rState.endEmitted) {
              stream.destroy();
            }
          }
        }
      }
      return need;
    }
    function endWritable(stream, state, cb) {
      state.ending = true;
      finishMaybe(stream, state);
      if (cb) {
        if (state.finished)
          process.nextTick(cb);
        else
          stream.once("finish", cb);
      }
      state.ended = true;
      stream.writable = false;
    }
    function onCorkedFinish(corkReq, state, err) {
      var entry = corkReq.entry;
      corkReq.entry = null;
      while (entry) {
        var cb = entry.callback;
        state.pendingcb--;
        cb(err);
        entry = entry.next;
      }
      state.corkedRequestsFree.next = corkReq;
    }
    Object.defineProperty(Writable.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._writableState === void 0) {
          return false;
        }
        return this._writableState.destroyed;
      },
      set: function set(value) {
        if (!this._writableState) {
          return;
        }
        this._writableState.destroyed = value;
      }
    });
    Writable.prototype.destroy = destroyImpl.destroy;
    Writable.prototype._undestroy = destroyImpl.undestroy;
    Writable.prototype._destroy = function(err, cb) {
      cb(err);
    };
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js
var require_stream_duplex3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"(exports, module) {
    "use strict";
    init_shim();
    var objectKeys = Object.keys || function(obj) {
      var keys2 = [];
      for (var key2 in obj) {
        keys2.push(key2);
      }
      return keys2;
    };
    module.exports = Duplex;
    var Readable = require_stream_readable3();
    var Writable = require_stream_writable3();
    require_inherits_browser()(Duplex, Readable);
    {
      keys = objectKeys(Writable.prototype);
      for (v = 0; v < keys.length; v++) {
        method = keys[v];
        if (!Duplex.prototype[method])
          Duplex.prototype[method] = Writable.prototype[method];
      }
    }
    var keys;
    var method;
    var v;
    function Duplex(options) {
      if (!(this instanceof Duplex))
        return new Duplex(options);
      Readable.call(this, options);
      Writable.call(this, options);
      this.allowHalfOpen = true;
      if (options) {
        if (options.readable === false)
          this.readable = false;
        if (options.writable === false)
          this.writable = false;
        if (options.allowHalfOpen === false) {
          this.allowHalfOpen = false;
          this.once("end", onend);
        }
      }
    }
    Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    });
    Object.defineProperty(Duplex.prototype, "writableBuffer", {
      enumerable: false,
      get: function get() {
        return this._writableState && this._writableState.getBuffer();
      }
    });
    Object.defineProperty(Duplex.prototype, "writableLength", {
      enumerable: false,
      get: function get() {
        return this._writableState.length;
      }
    });
    function onend() {
      if (this._writableState.ended)
        return;
      process.nextTick(onEndNT, this);
    }
    function onEndNT(self2) {
      self2.end();
    }
    Object.defineProperty(Duplex.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return false;
        }
        return this._readableState.destroyed && this._writableState.destroyed;
      },
      set: function set(value) {
        if (this._readableState === void 0 || this._writableState === void 0) {
          return;
        }
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
      }
    });
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js
var require_end_of_stream3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js"(exports, module) {
    "use strict";
    init_shim();
    var ERR_STREAM_PREMATURE_CLOSE = require_errors_browser3().codes.ERR_STREAM_PREMATURE_CLOSE;
    function once(callback) {
      var called = false;
      return function() {
        if (called)
          return;
        called = true;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        callback.apply(this, args);
      };
    }
    function noop() {
    }
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    function eos(stream, opts, callback) {
      if (typeof opts === "function")
        return eos(stream, null, opts);
      if (!opts)
        opts = {};
      callback = once(callback || noop);
      var readable = opts.readable || opts.readable !== false && stream.readable;
      var writable = opts.writable || opts.writable !== false && stream.writable;
      var onlegacyfinish = function onlegacyfinish2() {
        if (!stream.writable)
          onfinish();
      };
      var writableEnded = stream._writableState && stream._writableState.finished;
      var onfinish = function onfinish2() {
        writable = false;
        writableEnded = true;
        if (!readable)
          callback.call(stream);
      };
      var readableEnded = stream._readableState && stream._readableState.endEmitted;
      var onend = function onend2() {
        readable = false;
        readableEnded = true;
        if (!writable)
          callback.call(stream);
      };
      var onerror = function onerror2(err) {
        callback.call(stream, err);
      };
      var onclose = function onclose2() {
        var err;
        if (readable && !readableEnded) {
          if (!stream._readableState || !stream._readableState.ended)
            err = new ERR_STREAM_PREMATURE_CLOSE();
          return callback.call(stream, err);
        }
        if (writable && !writableEnded) {
          if (!stream._writableState || !stream._writableState.ended)
            err = new ERR_STREAM_PREMATURE_CLOSE();
          return callback.call(stream, err);
        }
      };
      var onrequest = function onrequest2() {
        stream.req.on("finish", onfinish);
      };
      if (isRequest(stream)) {
        stream.on("complete", onfinish);
        stream.on("abort", onclose);
        if (stream.req)
          onrequest();
        else
          stream.on("request", onrequest);
      } else if (writable && !stream._writableState) {
        stream.on("end", onlegacyfinish);
        stream.on("close", onlegacyfinish);
      }
      stream.on("end", onend);
      stream.on("finish", onfinish);
      if (opts.error !== false)
        stream.on("error", onerror);
      stream.on("close", onclose);
      return function() {
        stream.removeListener("complete", onfinish);
        stream.removeListener("abort", onclose);
        stream.removeListener("request", onrequest);
        if (stream.req)
          stream.req.removeListener("finish", onfinish);
        stream.removeListener("end", onlegacyfinish);
        stream.removeListener("close", onlegacyfinish);
        stream.removeListener("finish", onfinish);
        stream.removeListener("end", onend);
        stream.removeListener("error", onerror);
        stream.removeListener("close", onclose);
      };
    }
    module.exports = eos;
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js
var require_async_iterator3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js"(exports, module) {
    "use strict";
    init_shim();
    var _Object$setPrototypeO;
    function _defineProperty(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    var finished = require_end_of_stream3();
    var kLastResolve = Symbol("lastResolve");
    var kLastReject = Symbol("lastReject");
    var kError = Symbol("error");
    var kEnded = Symbol("ended");
    var kLastPromise = Symbol("lastPromise");
    var kHandlePromise = Symbol("handlePromise");
    var kStream = Symbol("stream");
    function createIterResult(value, done) {
      return {
        value,
        done
      };
    }
    function readAndResolve(iter) {
      var resolve = iter[kLastResolve];
      if (resolve !== null) {
        var data = iter[kStream].read();
        if (data !== null) {
          iter[kLastPromise] = null;
          iter[kLastResolve] = null;
          iter[kLastReject] = null;
          resolve(createIterResult(data, false));
        }
      }
    }
    function onReadable(iter) {
      process.nextTick(readAndResolve, iter);
    }
    function wrapForNext(lastPromise, iter) {
      return function(resolve, reject) {
        lastPromise.then(function() {
          if (iter[kEnded]) {
            resolve(createIterResult(void 0, true));
            return;
          }
          iter[kHandlePromise](resolve, reject);
        }, reject);
      };
    }
    var AsyncIteratorPrototype = Object.getPrototypeOf(function() {
    });
    var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
      get stream() {
        return this[kStream];
      },
      next: function next() {
        var _this = this;
        var error = this[kError];
        if (error !== null) {
          return Promise.reject(error);
        }
        if (this[kEnded]) {
          return Promise.resolve(createIterResult(void 0, true));
        }
        if (this[kStream].destroyed) {
          return new Promise(function(resolve, reject) {
            process.nextTick(function() {
              if (_this[kError]) {
                reject(_this[kError]);
              } else {
                resolve(createIterResult(void 0, true));
              }
            });
          });
        }
        var lastPromise = this[kLastPromise];
        var promise;
        if (lastPromise) {
          promise = new Promise(wrapForNext(lastPromise, this));
        } else {
          var data = this[kStream].read();
          if (data !== null) {
            return Promise.resolve(createIterResult(data, false));
          }
          promise = new Promise(this[kHandlePromise]);
        }
        this[kLastPromise] = promise;
        return promise;
      }
    }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function() {
      return this;
    }), _defineProperty(_Object$setPrototypeO, "return", function _return() {
      var _this2 = this;
      return new Promise(function(resolve, reject) {
        _this2[kStream].destroy(null, function(err) {
          if (err) {
            reject(err);
            return;
          }
          resolve(createIterResult(void 0, true));
        });
      });
    }), _Object$setPrototypeO), AsyncIteratorPrototype);
    var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator2(stream) {
      var _Object$create;
      var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
        value: stream,
        writable: true
      }), _defineProperty(_Object$create, kLastResolve, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kLastReject, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kError, {
        value: null,
        writable: true
      }), _defineProperty(_Object$create, kEnded, {
        value: stream._readableState.endEmitted,
        writable: true
      }), _defineProperty(_Object$create, kHandlePromise, {
        value: function value(resolve, reject) {
          var data = iterator[kStream].read();
          if (data) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            resolve(createIterResult(data, false));
          } else {
            iterator[kLastResolve] = resolve;
            iterator[kLastReject] = reject;
          }
        },
        writable: true
      }), _Object$create));
      iterator[kLastPromise] = null;
      finished(stream, function(err) {
        if (err && err.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var reject = iterator[kLastReject];
          if (reject !== null) {
            iterator[kLastPromise] = null;
            iterator[kLastResolve] = null;
            iterator[kLastReject] = null;
            reject(err);
          }
          iterator[kError] = err;
          return;
        }
        var resolve = iterator[kLastResolve];
        if (resolve !== null) {
          iterator[kLastPromise] = null;
          iterator[kLastResolve] = null;
          iterator[kLastReject] = null;
          resolve(createIterResult(void 0, true));
        }
        iterator[kEnded] = true;
      });
      stream.on("readable", onReadable.bind(null, iterator));
      return iterator;
    };
    module.exports = createReadableStreamAsyncIterator;
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js
var require_from_browser3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js"(exports, module) {
    init_shim();
    module.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js
var require_stream_readable3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Readable;
    var Duplex;
    Readable.ReadableState = ReadableState;
    var EE = require_events().EventEmitter;
    var EElistenerCount = function EElistenerCount2(emitter, type) {
      return emitter.listeners(type).length;
    };
    var Stream = require_stream_browser3();
    var Buffer3 = require_buffer().Buffer;
    var OurUint8Array = window.Uint8Array || function() {
    };
    function _uint8ArrayToBuffer(chunk) {
      return Buffer3.from(chunk);
    }
    function _isUint8Array(obj) {
      return Buffer3.isBuffer(obj) || obj instanceof OurUint8Array;
    }
    var debugUtil = require_util();
    var debug;
    if (debugUtil && debugUtil.debuglog) {
      debug = debugUtil.debuglog("stream");
    } else {
      debug = function debug2() {
      };
    }
    var BufferList = require_buffer_list3();
    var destroyImpl = require_destroy3();
    var _require = require_state3();
    var getHighWaterMark = _require.getHighWaterMark;
    var _require$codes = require_errors_browser3().codes;
    var ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE;
    var ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
    var StringDecoder;
    var createReadableStreamAsyncIterator;
    var from;
    require_inherits_browser()(Readable, Stream);
    var errorOrDestroy = destroyImpl.errorOrDestroy;
    var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
    function prependListener(emitter, event, fn) {
      if (typeof emitter.prependListener === "function")
        return emitter.prependListener(event, fn);
      if (!emitter._events || !emitter._events[event])
        emitter.on(event, fn);
      else if (Array.isArray(emitter._events[event]))
        emitter._events[event].unshift(fn);
      else
        emitter._events[event] = [fn, emitter._events[event]];
    }
    function ReadableState(options, stream, isDuplex) {
      Duplex = Duplex || require_stream_duplex3();
      options = options || {};
      if (typeof isDuplex !== "boolean")
        isDuplex = stream instanceof Duplex;
      this.objectMode = !!options.objectMode;
      if (isDuplex)
        this.objectMode = this.objectMode || !!options.readableObjectMode;
      this.highWaterMark = getHighWaterMark(this, options, "readableHighWaterMark", isDuplex);
      this.buffer = new BufferList();
      this.length = 0;
      this.pipes = null;
      this.pipesCount = 0;
      this.flowing = null;
      this.ended = false;
      this.endEmitted = false;
      this.reading = false;
      this.sync = true;
      this.needReadable = false;
      this.emittedReadable = false;
      this.readableListening = false;
      this.resumeScheduled = false;
      this.paused = true;
      this.emitClose = options.emitClose !== false;
      this.autoDestroy = !!options.autoDestroy;
      this.destroyed = false;
      this.defaultEncoding = options.defaultEncoding || "utf8";
      this.awaitDrain = 0;
      this.readingMore = false;
      this.decoder = null;
      this.encoding = null;
      if (options.encoding) {
        if (!StringDecoder)
          StringDecoder = require_string_decoder().StringDecoder;
        this.decoder = new StringDecoder(options.encoding);
        this.encoding = options.encoding;
      }
    }
    function Readable(options) {
      Duplex = Duplex || require_stream_duplex3();
      if (!(this instanceof Readable))
        return new Readable(options);
      var isDuplex = this instanceof Duplex;
      this._readableState = new ReadableState(options, this, isDuplex);
      this.readable = true;
      if (options) {
        if (typeof options.read === "function")
          this._read = options.read;
        if (typeof options.destroy === "function")
          this._destroy = options.destroy;
      }
      Stream.call(this);
    }
    Object.defineProperty(Readable.prototype, "destroyed", {
      enumerable: false,
      get: function get() {
        if (this._readableState === void 0) {
          return false;
        }
        return this._readableState.destroyed;
      },
      set: function set(value) {
        if (!this._readableState) {
          return;
        }
        this._readableState.destroyed = value;
      }
    });
    Readable.prototype.destroy = destroyImpl.destroy;
    Readable.prototype._undestroy = destroyImpl.undestroy;
    Readable.prototype._destroy = function(err, cb) {
      cb(err);
    };
    Readable.prototype.push = function(chunk, encoding) {
      var state = this._readableState;
      var skipChunkCheck;
      if (!state.objectMode) {
        if (typeof chunk === "string") {
          encoding = encoding || state.defaultEncoding;
          if (encoding !== state.encoding) {
            chunk = Buffer3.from(chunk, encoding);
            encoding = "";
          }
          skipChunkCheck = true;
        }
      } else {
        skipChunkCheck = true;
      }
      return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
    };
    Readable.prototype.unshift = function(chunk) {
      return readableAddChunk(this, chunk, null, true, false);
    };
    function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
      debug("readableAddChunk", chunk);
      var state = stream._readableState;
      if (chunk === null) {
        state.reading = false;
        onEofChunk(stream, state);
      } else {
        var er;
        if (!skipChunkCheck)
          er = chunkInvalid(state, chunk);
        if (er) {
          errorOrDestroy(stream, er);
        } else if (state.objectMode || chunk && chunk.length > 0) {
          if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer3.prototype) {
            chunk = _uint8ArrayToBuffer(chunk);
          }
          if (addToFront) {
            if (state.endEmitted)
              errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());
            else
              addChunk(stream, state, chunk, true);
          } else if (state.ended) {
            errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
          } else if (state.destroyed) {
            return false;
          } else {
            state.reading = false;
            if (state.decoder && !encoding) {
              chunk = state.decoder.write(chunk);
              if (state.objectMode || chunk.length !== 0)
                addChunk(stream, state, chunk, false);
              else
                maybeReadMore(stream, state);
            } else {
              addChunk(stream, state, chunk, false);
            }
          }
        } else if (!addToFront) {
          state.reading = false;
          maybeReadMore(stream, state);
        }
      }
      return !state.ended && (state.length < state.highWaterMark || state.length === 0);
    }
    function addChunk(stream, state, chunk, addToFront) {
      if (state.flowing && state.length === 0 && !state.sync) {
        state.awaitDrain = 0;
        stream.emit("data", chunk);
      } else {
        state.length += state.objectMode ? 1 : chunk.length;
        if (addToFront)
          state.buffer.unshift(chunk);
        else
          state.buffer.push(chunk);
        if (state.needReadable)
          emitReadable(stream);
      }
      maybeReadMore(stream, state);
    }
    function chunkInvalid(state, chunk) {
      var er;
      if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
        er = new ERR_INVALID_ARG_TYPE("chunk", ["string", "Buffer", "Uint8Array"], chunk);
      }
      return er;
    }
    Readable.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Readable.prototype.setEncoding = function(enc) {
      if (!StringDecoder)
        StringDecoder = require_string_decoder().StringDecoder;
      var decoder = new StringDecoder(enc);
      this._readableState.decoder = decoder;
      this._readableState.encoding = this._readableState.decoder.encoding;
      var p = this._readableState.buffer.head;
      var content = "";
      while (p !== null) {
        content += decoder.write(p.data);
        p = p.next;
      }
      this._readableState.buffer.clear();
      if (content !== "")
        this._readableState.buffer.push(content);
      this._readableState.length = content.length;
      return this;
    };
    var MAX_HWM = 1073741824;
    function computeNewHighWaterMark(n) {
      if (n >= MAX_HWM) {
        n = MAX_HWM;
      } else {
        n--;
        n |= n >>> 1;
        n |= n >>> 2;
        n |= n >>> 4;
        n |= n >>> 8;
        n |= n >>> 16;
        n++;
      }
      return n;
    }
    function howMuchToRead(n, state) {
      if (n <= 0 || state.length === 0 && state.ended)
        return 0;
      if (state.objectMode)
        return 1;
      if (n !== n) {
        if (state.flowing && state.length)
          return state.buffer.head.data.length;
        else
          return state.length;
      }
      if (n > state.highWaterMark)
        state.highWaterMark = computeNewHighWaterMark(n);
      if (n <= state.length)
        return n;
      if (!state.ended) {
        state.needReadable = true;
        return 0;
      }
      return state.length;
    }
    Readable.prototype.read = function(n) {
      debug("read", n);
      n = parseInt(n, 10);
      var state = this._readableState;
      var nOrig = n;
      if (n !== 0)
        state.emittedReadable = false;
      if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
        debug("read: emitReadable", state.length, state.ended);
        if (state.length === 0 && state.ended)
          endReadable(this);
        else
          emitReadable(this);
        return null;
      }
      n = howMuchToRead(n, state);
      if (n === 0 && state.ended) {
        if (state.length === 0)
          endReadable(this);
        return null;
      }
      var doRead = state.needReadable;
      debug("need readable", doRead);
      if (state.length === 0 || state.length - n < state.highWaterMark) {
        doRead = true;
        debug("length less than watermark", doRead);
      }
      if (state.ended || state.reading) {
        doRead = false;
        debug("reading or ended", doRead);
      } else if (doRead) {
        debug("do read");
        state.reading = true;
        state.sync = true;
        if (state.length === 0)
          state.needReadable = true;
        this._read(state.highWaterMark);
        state.sync = false;
        if (!state.reading)
          n = howMuchToRead(nOrig, state);
      }
      var ret;
      if (n > 0)
        ret = fromList(n, state);
      else
        ret = null;
      if (ret === null) {
        state.needReadable = state.length <= state.highWaterMark;
        n = 0;
      } else {
        state.length -= n;
        state.awaitDrain = 0;
      }
      if (state.length === 0) {
        if (!state.ended)
          state.needReadable = true;
        if (nOrig !== n && state.ended)
          endReadable(this);
      }
      if (ret !== null)
        this.emit("data", ret);
      return ret;
    };
    function onEofChunk(stream, state) {
      debug("onEofChunk");
      if (state.ended)
        return;
      if (state.decoder) {
        var chunk = state.decoder.end();
        if (chunk && chunk.length) {
          state.buffer.push(chunk);
          state.length += state.objectMode ? 1 : chunk.length;
        }
      }
      state.ended = true;
      if (state.sync) {
        emitReadable(stream);
      } else {
        state.needReadable = false;
        if (!state.emittedReadable) {
          state.emittedReadable = true;
          emitReadable_(stream);
        }
      }
    }
    function emitReadable(stream) {
      var state = stream._readableState;
      debug("emitReadable", state.needReadable, state.emittedReadable);
      state.needReadable = false;
      if (!state.emittedReadable) {
        debug("emitReadable", state.flowing);
        state.emittedReadable = true;
        process.nextTick(emitReadable_, stream);
      }
    }
    function emitReadable_(stream) {
      var state = stream._readableState;
      debug("emitReadable_", state.destroyed, state.length, state.ended);
      if (!state.destroyed && (state.length || state.ended)) {
        stream.emit("readable");
        state.emittedReadable = false;
      }
      state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
      flow(stream);
    }
    function maybeReadMore(stream, state) {
      if (!state.readingMore) {
        state.readingMore = true;
        process.nextTick(maybeReadMore_, stream, state);
      }
    }
    function maybeReadMore_(stream, state) {
      while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
        var len = state.length;
        debug("maybeReadMore read 0");
        stream.read(0);
        if (len === state.length)
          break;
      }
      state.readingMore = false;
    }
    Readable.prototype._read = function(n) {
      errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED("_read()"));
    };
    Readable.prototype.pipe = function(dest, pipeOpts) {
      var src = this;
      var state = this._readableState;
      switch (state.pipesCount) {
        case 0:
          state.pipes = dest;
          break;
        case 1:
          state.pipes = [state.pipes, dest];
          break;
        default:
          state.pipes.push(dest);
          break;
      }
      state.pipesCount += 1;
      debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
      var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
      var endFn = doEnd ? onend : unpipe;
      if (state.endEmitted)
        process.nextTick(endFn);
      else
        src.once("end", endFn);
      dest.on("unpipe", onunpipe);
      function onunpipe(readable, unpipeInfo) {
        debug("onunpipe");
        if (readable === src) {
          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
            unpipeInfo.hasUnpiped = true;
            cleanup();
          }
        }
      }
      function onend() {
        debug("onend");
        dest.end();
      }
      var ondrain = pipeOnDrain(src);
      dest.on("drain", ondrain);
      var cleanedUp = false;
      function cleanup() {
        debug("cleanup");
        dest.removeListener("close", onclose);
        dest.removeListener("finish", onfinish);
        dest.removeListener("drain", ondrain);
        dest.removeListener("error", onerror);
        dest.removeListener("unpipe", onunpipe);
        src.removeListener("end", onend);
        src.removeListener("end", unpipe);
        src.removeListener("data", ondata);
        cleanedUp = true;
        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
          ondrain();
      }
      src.on("data", ondata);
      function ondata(chunk) {
        debug("ondata");
        var ret = dest.write(chunk);
        debug("dest.write", ret);
        if (ret === false) {
          if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
            debug("false write response, pause", state.awaitDrain);
            state.awaitDrain++;
          }
          src.pause();
        }
      }
      function onerror(er) {
        debug("onerror", er);
        unpipe();
        dest.removeListener("error", onerror);
        if (EElistenerCount(dest, "error") === 0)
          errorOrDestroy(dest, er);
      }
      prependListener(dest, "error", onerror);
      function onclose() {
        dest.removeListener("finish", onfinish);
        unpipe();
      }
      dest.once("close", onclose);
      function onfinish() {
        debug("onfinish");
        dest.removeListener("close", onclose);
        unpipe();
      }
      dest.once("finish", onfinish);
      function unpipe() {
        debug("unpipe");
        src.unpipe(dest);
      }
      dest.emit("pipe", src);
      if (!state.flowing) {
        debug("pipe resume");
        src.resume();
      }
      return dest;
    };
    function pipeOnDrain(src) {
      return function pipeOnDrainFunctionResult() {
        var state = src._readableState;
        debug("pipeOnDrain", state.awaitDrain);
        if (state.awaitDrain)
          state.awaitDrain--;
        if (state.awaitDrain === 0 && EElistenerCount(src, "data")) {
          state.flowing = true;
          flow(src);
        }
      };
    }
    Readable.prototype.unpipe = function(dest) {
      var state = this._readableState;
      var unpipeInfo = {
        hasUnpiped: false
      };
      if (state.pipesCount === 0)
        return this;
      if (state.pipesCount === 1) {
        if (dest && dest !== state.pipes)
          return this;
        if (!dest)
          dest = state.pipes;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        if (dest)
          dest.emit("unpipe", this, unpipeInfo);
        return this;
      }
      if (!dest) {
        var dests = state.pipes;
        var len = state.pipesCount;
        state.pipes = null;
        state.pipesCount = 0;
        state.flowing = false;
        for (var i = 0; i < len; i++) {
          dests[i].emit("unpipe", this, {
            hasUnpiped: false
          });
        }
        return this;
      }
      var index = indexOf(state.pipes, dest);
      if (index === -1)
        return this;
      state.pipes.splice(index, 1);
      state.pipesCount -= 1;
      if (state.pipesCount === 1)
        state.pipes = state.pipes[0];
      dest.emit("unpipe", this, unpipeInfo);
      return this;
    };
    Readable.prototype.on = function(ev, fn) {
      var res = Stream.prototype.on.call(this, ev, fn);
      var state = this._readableState;
      if (ev === "data") {
        state.readableListening = this.listenerCount("readable") > 0;
        if (state.flowing !== false)
          this.resume();
      } else if (ev === "readable") {
        if (!state.endEmitted && !state.readableListening) {
          state.readableListening = state.needReadable = true;
          state.flowing = false;
          state.emittedReadable = false;
          debug("on readable", state.length, state.reading);
          if (state.length) {
            emitReadable(this);
          } else if (!state.reading) {
            process.nextTick(nReadingNextTick, this);
          }
        }
      }
      return res;
    };
    Readable.prototype.addListener = Readable.prototype.on;
    Readable.prototype.removeListener = function(ev, fn) {
      var res = Stream.prototype.removeListener.call(this, ev, fn);
      if (ev === "readable") {
        process.nextTick(updateReadableListening, this);
      }
      return res;
    };
    Readable.prototype.removeAllListeners = function(ev) {
      var res = Stream.prototype.removeAllListeners.apply(this, arguments);
      if (ev === "readable" || ev === void 0) {
        process.nextTick(updateReadableListening, this);
      }
      return res;
    };
    function updateReadableListening(self2) {
      var state = self2._readableState;
      state.readableListening = self2.listenerCount("readable") > 0;
      if (state.resumeScheduled && !state.paused) {
        state.flowing = true;
      } else if (self2.listenerCount("data") > 0) {
        self2.resume();
      }
    }
    function nReadingNextTick(self2) {
      debug("readable nexttick read 0");
      self2.read(0);
    }
    Readable.prototype.resume = function() {
      var state = this._readableState;
      if (!state.flowing) {
        debug("resume");
        state.flowing = !state.readableListening;
        resume(this, state);
      }
      state.paused = false;
      return this;
    };
    function resume(stream, state) {
      if (!state.resumeScheduled) {
        state.resumeScheduled = true;
        process.nextTick(resume_, stream, state);
      }
    }
    function resume_(stream, state) {
      debug("resume", state.reading);
      if (!state.reading) {
        stream.read(0);
      }
      state.resumeScheduled = false;
      stream.emit("resume");
      flow(stream);
      if (state.flowing && !state.reading)
        stream.read(0);
    }
    Readable.prototype.pause = function() {
      debug("call pause flowing=%j", this._readableState.flowing);
      if (this._readableState.flowing !== false) {
        debug("pause");
        this._readableState.flowing = false;
        this.emit("pause");
      }
      this._readableState.paused = true;
      return this;
    };
    function flow(stream) {
      var state = stream._readableState;
      debug("flow", state.flowing);
      while (state.flowing && stream.read() !== null) {
        ;
      }
    }
    Readable.prototype.wrap = function(stream) {
      var _this = this;
      var state = this._readableState;
      var paused = false;
      stream.on("end", function() {
        debug("wrapped end");
        if (state.decoder && !state.ended) {
          var chunk = state.decoder.end();
          if (chunk && chunk.length)
            _this.push(chunk);
        }
        _this.push(null);
      });
      stream.on("data", function(chunk) {
        debug("wrapped data");
        if (state.decoder)
          chunk = state.decoder.write(chunk);
        if (state.objectMode && (chunk === null || chunk === void 0))
          return;
        else if (!state.objectMode && (!chunk || !chunk.length))
          return;
        var ret = _this.push(chunk);
        if (!ret) {
          paused = true;
          stream.pause();
        }
      });
      for (var i in stream) {
        if (this[i] === void 0 && typeof stream[i] === "function") {
          this[i] = function methodWrap(method) {
            return function methodWrapReturnFunction() {
              return stream[method].apply(stream, arguments);
            };
          }(i);
        }
      }
      for (var n = 0; n < kProxyEvents.length; n++) {
        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
      }
      this._read = function(n2) {
        debug("wrapped _read", n2);
        if (paused) {
          paused = false;
          stream.resume();
        }
      };
      return this;
    };
    if (typeof Symbol === "function") {
      Readable.prototype[Symbol.asyncIterator] = function() {
        if (createReadableStreamAsyncIterator === void 0) {
          createReadableStreamAsyncIterator = require_async_iterator3();
        }
        return createReadableStreamAsyncIterator(this);
      };
    }
    Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
      enumerable: false,
      get: function get() {
        return this._readableState.highWaterMark;
      }
    });
    Object.defineProperty(Readable.prototype, "readableBuffer", {
      enumerable: false,
      get: function get() {
        return this._readableState && this._readableState.buffer;
      }
    });
    Object.defineProperty(Readable.prototype, "readableFlowing", {
      enumerable: false,
      get: function get() {
        return this._readableState.flowing;
      },
      set: function set(state) {
        if (this._readableState) {
          this._readableState.flowing = state;
        }
      }
    });
    Readable._fromList = fromList;
    Object.defineProperty(Readable.prototype, "readableLength", {
      enumerable: false,
      get: function get() {
        return this._readableState.length;
      }
    });
    function fromList(n, state) {
      if (state.length === 0)
        return null;
      var ret;
      if (state.objectMode)
        ret = state.buffer.shift();
      else if (!n || n >= state.length) {
        if (state.decoder)
          ret = state.buffer.join("");
        else if (state.buffer.length === 1)
          ret = state.buffer.first();
        else
          ret = state.buffer.concat(state.length);
        state.buffer.clear();
      } else {
        ret = state.buffer.consume(n, state.decoder);
      }
      return ret;
    }
    function endReadable(stream) {
      var state = stream._readableState;
      debug("endReadable", state.endEmitted);
      if (!state.endEmitted) {
        state.ended = true;
        process.nextTick(endReadableNT, state, stream);
      }
    }
    function endReadableNT(state, stream) {
      debug("endReadableNT", state.endEmitted, state.length);
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit("end");
        if (state.autoDestroy) {
          var wState = stream._writableState;
          if (!wState || wState.autoDestroy && wState.finished) {
            stream.destroy();
          }
        }
      }
    }
    if (typeof Symbol === "function") {
      Readable.from = function(iterable, opts) {
        if (from === void 0) {
          from = require_from_browser3();
        }
        return from(Readable, iterable, opts);
      };
    }
    function indexOf(xs, x) {
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x)
          return i;
      }
      return -1;
    }
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js
var require_stream_transform3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = Transform;
    var _require$codes = require_errors_browser3().codes;
    var ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED;
    var ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK;
    var ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING;
    var ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;
    var Duplex = require_stream_duplex3();
    require_inherits_browser()(Transform, Duplex);
    function afterTransform(er, data) {
      var ts = this._transformState;
      ts.transforming = false;
      var cb = ts.writecb;
      if (cb === null) {
        return this.emit("error", new ERR_MULTIPLE_CALLBACK());
      }
      ts.writechunk = null;
      ts.writecb = null;
      if (data != null)
        this.push(data);
      cb(er);
      var rs = this._readableState;
      rs.reading = false;
      if (rs.needReadable || rs.length < rs.highWaterMark) {
        this._read(rs.highWaterMark);
      }
    }
    function Transform(options) {
      if (!(this instanceof Transform))
        return new Transform(options);
      Duplex.call(this, options);
      this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      };
      this._readableState.needReadable = true;
      this._readableState.sync = false;
      if (options) {
        if (typeof options.transform === "function")
          this._transform = options.transform;
        if (typeof options.flush === "function")
          this._flush = options.flush;
      }
      this.on("prefinish", prefinish);
    }
    function prefinish() {
      var _this = this;
      if (typeof this._flush === "function" && !this._readableState.destroyed) {
        this._flush(function(er, data) {
          done(_this, er, data);
        });
      } else {
        done(this, null, null);
      }
    }
    Transform.prototype.push = function(chunk, encoding) {
      this._transformState.needTransform = false;
      return Duplex.prototype.push.call(this, chunk, encoding);
    };
    Transform.prototype._transform = function(chunk, encoding, cb) {
      cb(new ERR_METHOD_NOT_IMPLEMENTED("_transform()"));
    };
    Transform.prototype._write = function(chunk, encoding, cb) {
      var ts = this._transformState;
      ts.writecb = cb;
      ts.writechunk = chunk;
      ts.writeencoding = encoding;
      if (!ts.transforming) {
        var rs = this._readableState;
        if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
          this._read(rs.highWaterMark);
      }
    };
    Transform.prototype._read = function(n) {
      var ts = this._transformState;
      if (ts.writechunk !== null && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
      } else {
        ts.needTransform = true;
      }
    };
    Transform.prototype._destroy = function(err, cb) {
      Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
      });
    };
    function done(stream, er, data) {
      if (er)
        return stream.emit("error", er);
      if (data != null)
        stream.push(data);
      if (stream._writableState.length)
        throw new ERR_TRANSFORM_WITH_LENGTH_0();
      if (stream._transformState.transforming)
        throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
      return stream.push(null);
    }
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js
var require_stream_passthrough3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js"(exports, module) {
    "use strict";
    init_shim();
    module.exports = PassThrough;
    var Transform = require_stream_transform3();
    require_inherits_browser()(PassThrough, Transform);
    function PassThrough(options) {
      if (!(this instanceof PassThrough))
        return new PassThrough(options);
      Transform.call(this, options);
    }
    PassThrough.prototype._transform = function(chunk, encoding, cb) {
      cb(null, chunk);
    };
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js
var require_pipeline3 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js"(exports, module) {
    "use strict";
    init_shim();
    var eos;
    function once(callback) {
      var called = false;
      return function() {
        if (called)
          return;
        called = true;
        callback.apply(void 0, arguments);
      };
    }
    var _require$codes = require_errors_browser3().codes;
    var ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;
    var ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;
    function noop(err) {
      if (err)
        throw err;
    }
    function isRequest(stream) {
      return stream.setHeader && typeof stream.abort === "function";
    }
    function destroyer(stream, reading, writing, callback) {
      callback = once(callback);
      var closed = false;
      stream.on("close", function() {
        closed = true;
      });
      if (eos === void 0)
        eos = require_end_of_stream3();
      eos(stream, {
        readable: reading,
        writable: writing
      }, function(err) {
        if (err)
          return callback(err);
        closed = true;
        callback();
      });
      var destroyed = false;
      return function(err) {
        if (closed)
          return;
        if (destroyed)
          return;
        destroyed = true;
        if (isRequest(stream))
          return stream.abort();
        if (typeof stream.destroy === "function")
          return stream.destroy();
        callback(err || new ERR_STREAM_DESTROYED("pipe"));
      };
    }
    function call(fn) {
      fn();
    }
    function pipe(from, to) {
      return from.pipe(to);
    }
    function popCallback(streams) {
      if (!streams.length)
        return noop;
      if (typeof streams[streams.length - 1] !== "function")
        return noop;
      return streams.pop();
    }
    function pipeline() {
      for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
        streams[_key] = arguments[_key];
      }
      var callback = popCallback(streams);
      if (Array.isArray(streams[0]))
        streams = streams[0];
      if (streams.length < 2) {
        throw new ERR_MISSING_ARGS("streams");
      }
      var error;
      var destroys = streams.map(function(stream, i) {
        var reading = i < streams.length - 1;
        var writing = i > 0;
        return destroyer(stream, reading, writing, function(err) {
          if (!error)
            error = err;
          if (err)
            destroys.forEach(call);
          if (reading)
            return;
          destroys.forEach(call);
          callback(error);
        });
      });
      return streams.reduce(pipe);
    }
    module.exports = pipeline;
  }
});

// node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js
var require_readable_browser2 = __commonJS({
  "node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js"(exports, module) {
    init_shim();
    exports = module.exports = require_stream_readable3();
    exports.Stream = exports;
    exports.Readable = exports;
    exports.Writable = require_stream_writable3();
    exports.Duplex = require_stream_duplex3();
    exports.Transform = require_stream_transform3();
    exports.PassThrough = require_stream_passthrough3();
    exports.finished = require_end_of_stream3();
    exports.pipeline = require_pipeline3();
  }
});

// node_modules/bn.js/lib/bn.js
var require_bn3 = __commonJS({
  "node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this._strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 48 && c <= 57) {
          return c - 48;
        } else if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          assert2(false, "Invalid character in " + string);
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this._strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            b = c - 49 + 10;
          } else if (c >= 17) {
            b = c - 17 + 10;
          } else {
            b = c;
          }
          assert2(c >= 0 && b < mul3, "Invalid character");
          r += b;
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this._strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
      }
      BN3.prototype._move = function _move(dest) {
        move(dest, this);
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype._strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
        try {
          BN3.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect4;
        } catch (e) {
          BN3.prototype.inspect = inspect4;
        }
      } else {
        BN3.prototype.inspect = inspect4;
      }
      function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      }
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modrn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16, 2);
      };
      if (Buffer3) {
        BN3.prototype.toBuffer = function toBuffer(endian, length) {
          return this.toArrayLike(Buffer3, endian, length);
        };
      }
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      var allocate = function allocate2(ArrayType, size) {
        if (ArrayType.allocUnsafe) {
          return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === "le" ? "LE" : "BE";
        this["_toArrayLike" + postfix](res, byteLength);
        return res;
      };
      BN3.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position++] = word & 255;
          if (position < res.length) {
            res[position++] = word >> 8 & 255;
          }
          if (position < res.length) {
            res[position++] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position < res.length) {
              res[position++] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position < res.length) {
          res[position++] = carry;
          while (position < res.length) {
            res[position++] = 0;
          }
        }
      };
      BN3.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for (var i = 0, shift = 0; i < this.length; i++) {
          var word = this.words[i] << shift | carry;
          res[position--] = word & 255;
          if (position >= 0) {
            res[position--] = word >> 8 & 255;
          }
          if (position >= 0) {
            res[position--] = word >> 16 & 255;
          }
          if (shift === 6) {
            if (position >= 0) {
              res[position--] = word >> 24 & 255;
            }
            carry = 0;
            shift = 0;
          } else {
            carry = word >>> 24;
            shift += 2;
          }
        }
        if (position >= 0) {
          res[position--] = carry;
          while (position >= 0) {
            res[position--] = 0;
          }
        }
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this._strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this._strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this._strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this._strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this._strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this._strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out._strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out._strip();
      }
      function jumboMulTo(self2, num, out) {
        return bigMulTo(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return isNegNum ? this.ineg() : this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this._strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this._strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this._strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) <= num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this._strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this._strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q._strip();
        }
        a._strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modrn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modrn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return isNegNum ? -acc : acc;
      };
      BN3.prototype.modn = function modn(num) {
        return this.modrn(num);
      };
      BN3.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum)
          num = -num;
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this._strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/browserify-rsa/index.js
var require_browserify_rsa = __commonJS({
  "node_modules/browserify-rsa/index.js"(exports, module) {
    init_shim();
    var BN3 = require_bn3();
    var randomBytes2 = require_browser4();
    function blind(priv) {
      var r = getr(priv);
      var blinder = r.toRed(BN3.mont(priv.modulus)).redPow(new BN3(priv.publicExponent)).fromRed();
      return { blinder, unblinder: r.invm(priv.modulus) };
    }
    function getr(priv) {
      var len = priv.modulus.byteLength();
      var r;
      do {
        r = new BN3(randomBytes2(len));
      } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));
      return r;
    }
    function crt(msg, priv) {
      var blinds = blind(priv);
      var len = priv.modulus.byteLength();
      var blinded = new BN3(msg).mul(blinds.blinder).umod(priv.modulus);
      var c1 = blinded.toRed(BN3.mont(priv.prime1));
      var c2 = blinded.toRed(BN3.mont(priv.prime2));
      var qinv = priv.coefficient;
      var p = priv.prime1;
      var q = priv.prime2;
      var m1 = c1.redPow(priv.exponent1).fromRed();
      var m2 = c2.redPow(priv.exponent2).fromRed();
      var h = m1.isub(m2).imul(qinv).umod(p).imul(q);
      return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer2, "be", len);
    }
    crt.getr = getr;
    module.exports = crt;
  }
});

// node_modules/elliptic/package.json
var require_package = __commonJS({
  "node_modules/elliptic/package.json"(exports, module) {
    module.exports = {
      name: "elliptic",
      version: "6.5.4",
      description: "EC cryptography",
      main: "lib/elliptic.js",
      files: [
        "lib"
      ],
      scripts: {
        lint: "eslint lib test",
        "lint:fix": "npm run lint -- --fix",
        unit: "istanbul test _mocha --reporter=spec test/index.js",
        test: "npm run lint && npm run unit",
        version: "grunt dist && git add dist/"
      },
      repository: {
        type: "git",
        url: "git@github.com:indutny/elliptic"
      },
      keywords: [
        "EC",
        "Elliptic",
        "curve",
        "Cryptography"
      ],
      author: "Fedor Indutny <fedor@indutny.com>",
      license: "MIT",
      bugs: {
        url: "https://github.com/indutny/elliptic/issues"
      },
      homepage: "https://github.com/indutny/elliptic",
      devDependencies: {
        brfs: "^2.0.2",
        coveralls: "^3.1.0",
        eslint: "^7.6.0",
        grunt: "^1.2.1",
        "grunt-browserify": "^5.3.0",
        "grunt-cli": "^1.3.2",
        "grunt-contrib-connect": "^3.0.0",
        "grunt-contrib-copy": "^1.0.0",
        "grunt-contrib-uglify": "^5.0.0",
        "grunt-mocha-istanbul": "^5.0.2",
        "grunt-saucelabs": "^9.0.1",
        istanbul: "^0.4.5",
        mocha: "^8.0.1"
      },
      dependencies: {
        "bn.js": "^4.11.9",
        brorand: "^1.1.0",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.1",
        inherits: "^2.0.4",
        "minimalistic-assert": "^1.0.1",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    };
  }
});

// node_modules/elliptic/node_modules/bn.js/lib/bn.js
var require_bn4 = __commonJS({
  "node_modules/elliptic/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/minimalistic-crypto-utils/lib/utils.js
var require_utils2 = __commonJS({
  "node_modules/minimalistic-crypto-utils/lib/utils.js"(exports) {
    "use strict";
    init_shim();
    var utils = exports;
    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg !== "string") {
        for (var i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
        return res;
      }
      if (enc === "hex") {
        msg = msg.replace(/[^a-z0-9]+/ig, "");
        if (msg.length % 2 !== 0)
          msg = "0" + msg;
        for (var i = 0; i < msg.length; i += 2)
          res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else {
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          var hi = c >> 8;
          var lo = c & 255;
          if (hi)
            res.push(hi, lo);
          else
            res.push(lo);
        }
      }
      return res;
    }
    utils.toArray = toArray;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    utils.zero2 = zero2;
    function toHex2(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex2;
    utils.encode = function encode3(arr, enc) {
      if (enc === "hex")
        return toHex2(arr);
      else
        return arr;
    };
  }
});

// node_modules/elliptic/lib/elliptic/utils.js
var require_utils3 = __commonJS({
  "node_modules/elliptic/lib/elliptic/utils.js"(exports) {
    "use strict";
    init_shim();
    var utils = exports;
    var BN3 = require_bn4();
    var minAssert = require_minimalistic_assert();
    var minUtils = require_utils2();
    utils.assert = minAssert;
    utils.toArray = minUtils.toArray;
    utils.zero2 = minUtils.zero2;
    utils.toHex = minUtils.toHex;
    utils.encode = minUtils.encode;
    function getNAF2(num, w, bits) {
      var naf = new Array(Math.max(num.bitLength(), bits) + 1);
      naf.fill(0);
      var ws = 1 << w + 1;
      var k = num.clone();
      for (var i = 0; i < naf.length; i++) {
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
          if (mod > (ws >> 1) - 1)
            z = (ws >> 1) - mod;
          else
            z = mod;
          k.isubn(z);
        } else {
          z = 0;
        }
        naf[i] = z;
        k.iushrn(1);
      }
      return naf;
    }
    utils.getNAF = getNAF2;
    function getJSF2(k1, k2) {
      var jsf = [
        [],
        []
      ];
      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      var m8;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        if (m14 === 3)
          m14 = -1;
        if (m24 === 3)
          m24 = -1;
        var u1;
        if ((m14 & 1) === 0) {
          u1 = 0;
        } else {
          m8 = k1.andln(7) + d1 & 7;
          if ((m8 === 3 || m8 === 5) && m24 === 2)
            u1 = -m14;
          else
            u1 = m14;
        }
        jsf[0].push(u1);
        var u2;
        if ((m24 & 1) === 0) {
          u2 = 0;
        } else {
          m8 = k2.andln(7) + d2 & 7;
          if ((m8 === 3 || m8 === 5) && m14 === 2)
            u2 = -m24;
          else
            u2 = m24;
        }
        jsf[1].push(u2);
        if (2 * d1 === u1 + 1)
          d1 = 1 - d1;
        if (2 * d2 === u2 + 1)
          d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
      }
      return jsf;
    }
    utils.getJSF = getJSF2;
    function cachedProperty(obj, name, computer) {
      var key2 = "_" + name;
      obj.prototype[name] = function cachedProperty2() {
        return this[key2] !== void 0 ? this[key2] : this[key2] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
      return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
      return new BN3(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
  }
});

// node_modules/elliptic/lib/elliptic/curve/base.js
var require_base2 = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/base.js"(exports, module) {
    "use strict";
    init_shim();
    var BN3 = require_bn4();
    var utils = require_utils3();
    var getNAF2 = utils.getNAF;
    var getJSF2 = utils.getJSF;
    var assert2 = utils.assert;
    function BaseCurve2(type, conf) {
      this.type = type;
      this.p = new BN3(conf.p, 16);
      this.red = conf.prime ? BN3.red(conf.prime) : BN3.mont(this.p);
      this.zero = new BN3(0).toRed(this.red);
      this.one = new BN3(1).toRed(this.red);
      this.two = new BN3(2).toRed(this.red);
      this.n = conf.n && new BN3(conf.n, 16);
      this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
      this._wnafT1 = new Array(4);
      this._wnafT2 = new Array(4);
      this._wnafT3 = new Array(4);
      this._wnafT4 = new Array(4);
      this._bitLength = this.n ? this.n.bitLength() : 0;
      var adjustCount = this.n && this.p.div(this.n);
      if (!adjustCount || adjustCount.cmpn(100) > 0) {
        this.redN = null;
      } else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
      }
    }
    module.exports = BaseCurve2;
    BaseCurve2.prototype.point = function point3() {
      throw new Error("Not implemented");
    };
    BaseCurve2.prototype.validate = function validate5() {
      throw new Error("Not implemented");
    };
    BaseCurve2.prototype._fixedNafMul = function _fixedNafMul2(p, k) {
      assert2(p.precomputed);
      var doubles = p._getDoubles();
      var naf = getNAF2(k, 1, this._bitLength);
      var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
      I /= 3;
      var repr = [];
      var j;
      var nafW;
      for (j = 0; j < naf.length; j += doubles.step) {
        nafW = 0;
        for (var l = j + doubles.step - 1; l >= j; l--)
          nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
      }
      var a = this.jpoint(null, null, null);
      var b = this.jpoint(null, null, null);
      for (var i = I; i > 0; i--) {
        for (j = 0; j < repr.length; j++) {
          nafW = repr[j];
          if (nafW === i)
            b = b.mixedAdd(doubles.points[j]);
          else if (nafW === -i)
            b = b.mixedAdd(doubles.points[j].neg());
        }
        a = a.add(b);
      }
      return a.toP();
    };
    BaseCurve2.prototype._wnafMul = function _wnafMul2(p, k) {
      var w = 4;
      var nafPoints = p._getNAFPoints(w);
      w = nafPoints.wnd;
      var wnd = nafPoints.points;
      var naf = getNAF2(k, w, this._bitLength);
      var acc = this.jpoint(null, null, null);
      for (var i = naf.length - 1; i >= 0; i--) {
        for (var l = 0; i >= 0 && naf[i] === 0; i--)
          l++;
        if (i >= 0)
          l++;
        acc = acc.dblp(l);
        if (i < 0)
          break;
        var z = naf[i];
        assert2(z !== 0);
        if (p.type === "affine") {
          if (z > 0)
            acc = acc.mixedAdd(wnd[z - 1 >> 1]);
          else
            acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
        } else {
          if (z > 0)
            acc = acc.add(wnd[z - 1 >> 1]);
          else
            acc = acc.add(wnd[-z - 1 >> 1].neg());
        }
      }
      return p.type === "affine" ? acc.toP() : acc;
    };
    BaseCurve2.prototype._wnafMulAdd = function _wnafMulAdd2(defW, points, coeffs, len, jacobianResult) {
      var wndWidth = this._wnafT1;
      var wnd = this._wnafT2;
      var naf = this._wnafT3;
      var max = 0;
      var i;
      var j;
      var p;
      for (i = 0; i < len; i++) {
        p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
      }
      for (i = len - 1; i >= 1; i -= 2) {
        var a = i - 1;
        var b = i;
        if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
          naf[a] = getNAF2(coeffs[a], wndWidth[a], this._bitLength);
          naf[b] = getNAF2(coeffs[b], wndWidth[b], this._bitLength);
          max = Math.max(naf[a].length, max);
          max = Math.max(naf[b].length, max);
          continue;
        }
        var comb = [
          points[a],
          null,
          null,
          points[b]
        ];
        if (points[a].y.cmp(points[b].y) === 0) {
          comb[1] = points[a].add(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].add(points[b].neg());
        } else {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [
          -3,
          -1,
          -5,
          -7,
          0,
          7,
          5,
          1,
          3
        ];
        var jsf = getJSF2(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for (j = 0; j < max; j++) {
          var ja = jsf[0][j] | 0;
          var jb = jsf[1][j] | 0;
          naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
          naf[b][j] = 0;
          wnd[a] = comb;
        }
      }
      var acc = this.jpoint(null, null, null);
      var tmp = this._wnafT4;
      for (i = max; i >= 0; i--) {
        var k = 0;
        while (i >= 0) {
          var zero = true;
          for (j = 0; j < len; j++) {
            tmp[j] = naf[j][i] | 0;
            if (tmp[j] !== 0)
              zero = false;
          }
          if (!zero)
            break;
          k++;
          i--;
        }
        if (i >= 0)
          k++;
        acc = acc.dblp(k);
        if (i < 0)
          break;
        for (j = 0; j < len; j++) {
          var z = tmp[j];
          p;
          if (z === 0)
            continue;
          else if (z > 0)
            p = wnd[j][z - 1 >> 1];
          else if (z < 0)
            p = wnd[j][-z - 1 >> 1].neg();
          if (p.type === "affine")
            acc = acc.mixedAdd(p);
          else
            acc = acc.add(p);
        }
      }
      for (i = 0; i < len; i++)
        wnd[i] = null;
      if (jacobianResult)
        return acc;
      else
        return acc.toP();
    };
    function BasePoint2(curve, type) {
      this.curve = curve;
      this.type = type;
      this.precomputed = null;
    }
    BaseCurve2.BasePoint = BasePoint2;
    BasePoint2.prototype.eq = function eq4() {
      throw new Error("Not implemented");
    };
    BasePoint2.prototype.validate = function validate5() {
      return this.curve.validate(this);
    };
    BaseCurve2.prototype.decodePoint = function decodePoint2(bytes, enc) {
      bytes = utils.toArray(bytes, enc);
      var len = this.p.byteLength();
      if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
        if (bytes[0] === 6)
          assert2(bytes[bytes.length - 1] % 2 === 0);
        else if (bytes[0] === 7)
          assert2(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
        return res;
      } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
        return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
      }
      throw new Error("Unknown point format");
    };
    BasePoint2.prototype.encodeCompressed = function encodeCompressed2(enc) {
      return this.encode(enc, true);
    };
    BasePoint2.prototype._encode = function _encode3(compact) {
      var len = this.curve.p.byteLength();
      var x = this.getX().toArray("be", len);
      if (compact)
        return [this.getY().isEven() ? 2 : 3].concat(x);
      return [4].concat(x, this.getY().toArray("be", len));
    };
    BasePoint2.prototype.encode = function encode3(enc, compact) {
      return utils.encode(this._encode(compact), enc);
    };
    BasePoint2.prototype.precompute = function precompute2(power) {
      if (this.precomputed)
        return this;
      var precomputed = {
        doubles: null,
        naf: null,
        beta: null
      };
      precomputed.naf = this._getNAFPoints(8);
      precomputed.doubles = this._getDoubles(4, power);
      precomputed.beta = this._getBeta();
      this.precomputed = precomputed;
      return this;
    };
    BasePoint2.prototype._hasDoubles = function _hasDoubles2(k) {
      if (!this.precomputed)
        return false;
      var doubles = this.precomputed.doubles;
      if (!doubles)
        return false;
      return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
    };
    BasePoint2.prototype._getDoubles = function _getDoubles2(step, power) {
      if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;
      var doubles = [this];
      var acc = this;
      for (var i = 0; i < power; i += step) {
        for (var j = 0; j < step; j++)
          acc = acc.dbl();
        doubles.push(acc);
      }
      return {
        step,
        points: doubles
      };
    };
    BasePoint2.prototype._getNAFPoints = function _getNAFPoints2(wnd) {
      if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;
      var res = [this];
      var max = (1 << wnd) - 1;
      var dbl3 = max === 1 ? null : this.dbl();
      for (var i = 1; i < max; i++)
        res[i] = res[i - 1].add(dbl3);
      return {
        wnd,
        points: res
      };
    };
    BasePoint2.prototype._getBeta = function _getBeta3() {
      return null;
    };
    BasePoint2.prototype.dblp = function dblp3(k) {
      var r = this;
      for (var i = 0; i < k; i++)
        r = r.dbl();
      return r;
    };
  }
});

// node_modules/elliptic/lib/elliptic/curve/short.js
var require_short = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/short.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils3();
    var BN3 = require_bn4();
    var inherits = require_inherits_browser();
    var Base = require_base2();
    var assert2 = utils.assert;
    function ShortCurve2(conf) {
      Base.call(this, "short", conf);
      this.a = new BN3(conf.a, 16).toRed(this.red);
      this.b = new BN3(conf.b, 16).toRed(this.red);
      this.tinv = this.two.redInvm();
      this.zeroA = this.a.fromRed().cmpn(0) === 0;
      this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
      this.endo = this._getEndomorphism(conf);
      this._endoWnafT1 = new Array(4);
      this._endoWnafT2 = new Array(4);
    }
    inherits(ShortCurve2, Base);
    module.exports = ShortCurve2;
    ShortCurve2.prototype._getEndomorphism = function _getEndomorphism2(conf) {
      if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
        return;
      var beta;
      var lambda;
      if (conf.beta) {
        beta = new BN3(conf.beta, 16).toRed(this.red);
      } else {
        var betas = this._getEndoRoots(this.p);
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
      }
      if (conf.lambda) {
        lambda = new BN3(conf.lambda, 16);
      } else {
        var lambdas = this._getEndoRoots(this.n);
        if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
          lambda = lambdas[0];
        } else {
          lambda = lambdas[1];
          assert2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
        }
      }
      var basis;
      if (conf.basis) {
        basis = conf.basis.map(function(vec) {
          return {
            a: new BN3(vec.a, 16),
            b: new BN3(vec.b, 16)
          };
        });
      } else {
        basis = this._getEndoBasis(lambda);
      }
      return {
        beta,
        lambda,
        basis
      };
    };
    ShortCurve2.prototype._getEndoRoots = function _getEndoRoots2(num) {
      var red = num === this.p ? this.red : BN3.mont(num);
      var tinv = new BN3(2).toRed(red).redInvm();
      var ntinv = tinv.redNeg();
      var s = new BN3(3).toRed(red).redNeg().redSqrt().redMul(tinv);
      var l1 = ntinv.redAdd(s).fromRed();
      var l2 = ntinv.redSub(s).fromRed();
      return [l1, l2];
    };
    ShortCurve2.prototype._getEndoBasis = function _getEndoBasis2(lambda) {
      var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
      var u = lambda;
      var v = this.n.clone();
      var x1 = new BN3(1);
      var y1 = new BN3(0);
      var x2 = new BN3(0);
      var y2 = new BN3(1);
      var a0;
      var b0;
      var a1;
      var b1;
      var a2;
      var b2;
      var prevR;
      var i = 0;
      var r;
      var x;
      while (u.cmpn(0) !== 0) {
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
          a0 = prevR.neg();
          b0 = x1;
          a1 = r.neg();
          b1 = x;
        } else if (a1 && ++i === 2) {
          break;
        }
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
      }
      a2 = r.neg();
      b2 = x;
      var len1 = a1.sqr().add(b1.sqr());
      var len2 = a2.sqr().add(b2.sqr());
      if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
      }
      if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
      }
      if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
      }
      return [
        { a: a1, b: b1 },
        { a: a2, b: b2 }
      ];
    };
    ShortCurve2.prototype._endoSplit = function _endoSplit2(k) {
      var basis = this.endo.basis;
      var v1 = basis[0];
      var v2 = basis[1];
      var c1 = v2.b.mul(k).divRound(this.n);
      var c2 = v1.b.neg().mul(k).divRound(this.n);
      var p1 = c1.mul(v1.a);
      var p2 = c2.mul(v2.a);
      var q1 = c1.mul(v1.b);
      var q2 = c2.mul(v2.b);
      var k1 = k.sub(p1).sub(p2);
      var k2 = q1.add(q2).neg();
      return { k1, k2 };
    };
    ShortCurve2.prototype.pointFromX = function pointFromX2(x, odd) {
      x = new BN3(x, 16);
      if (!x.red)
        x = x.toRed(this.red);
      var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();
      return this.point(x, y);
    };
    ShortCurve2.prototype.validate = function validate5(point3) {
      if (point3.inf)
        return true;
      var x = point3.x;
      var y = point3.y;
      var ax = this.a.redMul(x);
      var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
      return y.redSqr().redISub(rhs).cmpn(0) === 0;
    };
    ShortCurve2.prototype._endoWnafMulAdd = function _endoWnafMulAdd2(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }
        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };
    function Point2(curve, x, y, isRed) {
      Base.BasePoint.call(this, curve, "affine");
      if (x === null && y === null) {
        this.x = null;
        this.y = null;
        this.inf = true;
      } else {
        this.x = new BN3(x, 16);
        this.y = new BN3(y, 16);
        if (isRed) {
          this.x.forceRed(this.curve.red);
          this.y.forceRed(this.curve.red);
        }
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        this.inf = false;
      }
    }
    inherits(Point2, Base.BasePoint);
    ShortCurve2.prototype.point = function point3(x, y, isRed) {
      return new Point2(this, x, y, isRed);
    };
    ShortCurve2.prototype.pointFromJSON = function pointFromJSON2(obj, red) {
      return Point2.fromJSON(this, obj, red);
    };
    Point2.prototype._getBeta = function _getBeta3() {
      if (!this.curve.endo)
        return;
      var pre = this.precomputed;
      if (pre && pre.beta)
        return pre.beta;
      var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
      if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
          return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
          beta: null,
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(endoMul)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(endoMul)
          }
        };
      }
      return beta;
    };
    Point2.prototype.toJSON = function toJSON2() {
      if (!this.precomputed)
        return [this.x, this.y];
      return [this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1)
        }
      }];
    };
    Point2.fromJSON = function fromJSON2(curve, obj, red) {
      if (typeof obj === "string")
        obj = JSON.parse(obj);
      var res = curve.point(obj[0], obj[1], red);
      if (!obj[2])
        return res;
      function obj2point(obj2) {
        return curve.point(obj2[0], obj2[1], red);
      }
      var pre = obj[2];
      res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: [res].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: [res].concat(pre.naf.points.map(obj2point))
        }
      };
      return res;
    };
    Point2.prototype.inspect = function inspect4() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    };
    Point2.prototype.isInfinity = function isInfinity3() {
      return this.inf;
    };
    Point2.prototype.add = function add3(p) {
      if (this.inf)
        return p;
      if (p.inf)
        return this;
      if (this.eq(p))
        return this.dbl();
      if (this.neg().eq(p))
        return this.curve.point(null, null);
      if (this.x.cmp(p.x) === 0)
        return this.curve.point(null, null);
      var c = this.y.redSub(p.y);
      if (c.cmpn(0) !== 0)
        c = c.redMul(this.x.redSub(p.x).redInvm());
      var nx = c.redSqr().redISub(this.x).redISub(p.x);
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point2.prototype.dbl = function dbl3() {
      if (this.inf)
        return this;
      var ys1 = this.y.redAdd(this.y);
      if (ys1.cmpn(0) === 0)
        return this.curve.point(null, null);
      var a = this.curve.a;
      var x2 = this.x.redSqr();
      var dyinv = ys1.redInvm();
      var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
      var nx = c.redSqr().redISub(this.x.redAdd(this.x));
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point2.prototype.getX = function getX2() {
      return this.x.fromRed();
    };
    Point2.prototype.getY = function getY2() {
      return this.y.fromRed();
    };
    Point2.prototype.mul = function mul3(k) {
      k = new BN3(k, 16);
      if (this.isInfinity())
        return this;
      else if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else if (this.curve.endo)
        return this.curve._endoWnafMulAdd([this], [k]);
      else
        return this.curve._wnafMul(this, k);
    };
    Point2.prototype.mulAdd = function mulAdd2(k1, p2, k2) {
      var points = [this, p2];
      var coeffs = [k1, k2];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2);
    };
    Point2.prototype.jmulAdd = function jmulAdd2(k1, p2, k2) {
      var points = [this, p2];
      var coeffs = [k1, k2];
      if (this.curve.endo)
        return this.curve._endoWnafMulAdd(points, coeffs, true);
      else
        return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
    };
    Point2.prototype.eq = function eq4(p) {
      return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
    };
    Point2.prototype.neg = function neg3(_precompute) {
      if (this.inf)
        return this;
      var res = this.curve.point(this.x, this.y.redNeg());
      if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
          return p.neg();
        };
        res.precomputed = {
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(negate)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(negate)
          }
        };
      }
      return res;
    };
    Point2.prototype.toJ = function toJ2() {
      if (this.inf)
        return this.curve.jpoint(null, null, null);
      var res = this.curve.jpoint(this.x, this.y, this.curve.one);
      return res;
    };
    function JPoint2(curve, x, y, z) {
      Base.BasePoint.call(this, curve, "jacobian");
      if (x === null && y === null && z === null) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new BN3(0);
      } else {
        this.x = new BN3(x, 16);
        this.y = new BN3(y, 16);
        this.z = new BN3(z, 16);
      }
      if (!this.x.red)
        this.x = this.x.toRed(this.curve.red);
      if (!this.y.red)
        this.y = this.y.toRed(this.curve.red);
      if (!this.z.red)
        this.z = this.z.toRed(this.curve.red);
      this.zOne = this.z === this.curve.one;
    }
    inherits(JPoint2, Base.BasePoint);
    ShortCurve2.prototype.jpoint = function jpoint2(x, y, z) {
      return new JPoint2(this, x, y, z);
    };
    JPoint2.prototype.toP = function toP2() {
      if (this.isInfinity())
        return this.curve.point(null, null);
      var zinv = this.z.redInvm();
      var zinv2 = zinv.redSqr();
      var ax = this.x.redMul(zinv2);
      var ay = this.y.redMul(zinv2).redMul(zinv);
      return this.curve.point(ax, ay);
    };
    JPoint2.prototype.neg = function neg3() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };
    JPoint2.prototype.add = function add3(p) {
      if (this.isInfinity())
        return p;
      if (p.isInfinity())
        return this;
      var pz2 = p.z.redSqr();
      var z2 = this.z.redSqr();
      var u1 = this.x.redMul(pz2);
      var u2 = p.x.redMul(z2);
      var s1 = this.y.redMul(pz2.redMul(p.z));
      var s2 = p.y.redMul(z2.redMul(this.z));
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(p.z).redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint2.prototype.mixedAdd = function mixedAdd2(p) {
      if (this.isInfinity())
        return p.toJ();
      if (p.isInfinity())
        return this;
      var z2 = this.z.redSqr();
      var u1 = this.x;
      var u2 = p.x.redMul(z2);
      var s1 = this.y;
      var s2 = p.y.redMul(z2).redMul(this.z);
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (h.cmpn(0) === 0) {
        if (r.cmpn(0) !== 0)
          return this.curve.jpoint(null, null, null);
        else
          return this.dbl();
      }
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint2.prototype.dblp = function dblp3(pow) {
      if (pow === 0)
        return this;
      if (this.isInfinity())
        return this;
      if (!pow)
        return this.dbl();
      var i;
      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for (i = 0; i < pow; i++)
          r = r.dbl();
        return r;
      }
      var a = this.curve.a;
      var tinv = this.curve.tinv;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jyd = jy.redAdd(jy);
      for (i = 0; i < pow; i++) {
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        if (i + 1 < pow)
          jz4 = jz4.redMul(jyd4);
        jx = nx;
        jz = nz;
        jyd = dny;
      }
      return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
    };
    JPoint2.prototype.dbl = function dbl3() {
      if (this.isInfinity())
        return this;
      if (this.curve.zeroA)
        return this._zeroDbl();
      else if (this.curve.threeA)
        return this._threeDbl();
      else
        return this._dbl();
    };
    JPoint2.prototype._zeroDbl = function _zeroDbl2() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx);
        var t = m.redSqr().redISub(s).redISub(s);
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        nx = t;
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var a = this.x.redSqr();
        var b = this.y.redSqr();
        var c = b.redSqr();
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        var e = a.redAdd(a).redIAdd(a);
        var f = e.redSqr();
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        nx = f.redISub(d).redISub(d);
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint2.prototype._threeDbl = function _threeDbl2() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        var t = m.redSqr().redISub(s).redISub(s);
        nx = t;
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var delta = this.z.redSqr();
        var gamma = this.y.redSqr();
        var beta = this.x.redMul(gamma);
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint2.prototype._dbl = function _dbl2() {
      var a = this.curve.a;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jx2 = jx.redSqr();
      var jy2 = jy.redSqr();
      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
      var jxd4 = jx.redAdd(jx);
      jxd4 = jxd4.redIAdd(jxd4);
      var t1 = jxd4.redMul(jy2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);
      var jyd8 = jy2.redSqr();
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      var ny = c.redMul(t2).redISub(jyd8);
      var nz = jy.redAdd(jy).redMul(jz);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint2.prototype.trpl = function trpl2() {
      if (!this.curve.zeroA)
        return this.dbl().add(this);
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var zz = this.z.redSqr();
      var yyyy = yy.redSqr();
      var m = xx.redAdd(xx).redIAdd(xx);
      var mm = m.redSqr();
      var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      e = e.redIAdd(e);
      e = e.redAdd(e).redIAdd(e);
      e = e.redISub(mm);
      var ee = e.redSqr();
      var t = yyyy.redIAdd(yyyy);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
      var yyu4 = yy.redMul(u);
      yyu4 = yyu4.redIAdd(yyu4);
      yyu4 = yyu4.redIAdd(yyu4);
      var nx = this.x.redMul(ee).redISub(yyu4);
      nx = nx.redIAdd(nx);
      nx = nx.redIAdd(nx);
      var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint2.prototype.mul = function mul3(k, kbase) {
      k = new BN3(k, kbase);
      return this.curve._wnafMul(this, k);
    };
    JPoint2.prototype.eq = function eq4(p) {
      if (p.type === "affine")
        return this.eq(p.toJ());
      if (this === p)
        return true;
      var z2 = this.z.redSqr();
      var pz2 = p.z.redSqr();
      if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
        return false;
      var z3 = z2.redMul(this.z);
      var pz3 = pz2.redMul(p.z);
      return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
    };
    JPoint2.prototype.eqXToP = function eqXToP2(x) {
      var zs = this.z.redSqr();
      var rx = x.toRed(this.curve.red).redMul(zs);
      if (this.x.cmp(rx) === 0)
        return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(zs);
      for (; ; ) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };
    JPoint2.prototype.inspect = function inspect4() {
      if (this.isInfinity())
        return "<EC JPoint Infinity>";
      return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    };
    JPoint2.prototype.isInfinity = function isInfinity3() {
      return this.z.cmpn(0) === 0;
    };
  }
});

// node_modules/elliptic/lib/elliptic/curve/mont.js
var require_mont = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/mont.js"(exports, module) {
    "use strict";
    init_shim();
    var BN3 = require_bn4();
    var inherits = require_inherits_browser();
    var Base = require_base2();
    var utils = require_utils3();
    function MontCurve(conf) {
      Base.call(this, "mont", conf);
      this.a = new BN3(conf.a, 16).toRed(this.red);
      this.b = new BN3(conf.b, 16).toRed(this.red);
      this.i4 = new BN3(4).toRed(this.red).redInvm();
      this.two = new BN3(2).toRed(this.red);
      this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }
    inherits(MontCurve, Base);
    module.exports = MontCurve;
    MontCurve.prototype.validate = function validate5(point3) {
      var x = point3.normalize().x;
      var x2 = x.redSqr();
      var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
      var y = rhs.redSqrt();
      return y.redSqr().cmp(rhs) === 0;
    };
    function Point2(curve, x, z) {
      Base.BasePoint.call(this, curve, "projective");
      if (x === null && z === null) {
        this.x = this.curve.one;
        this.z = this.curve.zero;
      } else {
        this.x = new BN3(x, 16);
        this.z = new BN3(z, 16);
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
      }
    }
    inherits(Point2, Base.BasePoint);
    MontCurve.prototype.decodePoint = function decodePoint2(bytes, enc) {
      return this.point(utils.toArray(bytes, enc), 1);
    };
    MontCurve.prototype.point = function point3(x, z) {
      return new Point2(this, x, z);
    };
    MontCurve.prototype.pointFromJSON = function pointFromJSON2(obj) {
      return Point2.fromJSON(this, obj);
    };
    Point2.prototype.precompute = function precompute2() {
    };
    Point2.prototype._encode = function _encode3() {
      return this.getX().toArray("be", this.curve.p.byteLength());
    };
    Point2.fromJSON = function fromJSON2(curve, obj) {
      return new Point2(curve, obj[0], obj[1] || curve.one);
    };
    Point2.prototype.inspect = function inspect4() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point2.prototype.isInfinity = function isInfinity3() {
      return this.z.cmpn(0) === 0;
    };
    Point2.prototype.dbl = function dbl3() {
      var a = this.x.redAdd(this.z);
      var aa = a.redSqr();
      var b = this.x.redSub(this.z);
      var bb = b.redSqr();
      var c = aa.redSub(bb);
      var nx = aa.redMul(bb);
      var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
      return this.curve.point(nx, nz);
    };
    Point2.prototype.add = function add3() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point2.prototype.diffAdd = function diffAdd(p, diff) {
      var a = this.x.redAdd(this.z);
      var b = this.x.redSub(this.z);
      var c = p.x.redAdd(p.z);
      var d = p.x.redSub(p.z);
      var da = d.redMul(a);
      var cb = c.redMul(b);
      var nx = diff.z.redMul(da.redAdd(cb).redSqr());
      var nz = diff.x.redMul(da.redISub(cb).redSqr());
      return this.curve.point(nx, nz);
    };
    Point2.prototype.mul = function mul3(k) {
      var t = k.clone();
      var a = this;
      var b = this.curve.point(null, null);
      var c = this;
      for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
        bits.push(t.andln(1));
      for (var i = bits.length - 1; i >= 0; i--) {
        if (bits[i] === 0) {
          a = a.diffAdd(b, c);
          b = b.dbl();
        } else {
          b = a.diffAdd(b, c);
          a = a.dbl();
        }
      }
      return b;
    };
    Point2.prototype.mulAdd = function mulAdd2() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point2.prototype.jumlAdd = function jumlAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point2.prototype.eq = function eq4(other) {
      return this.getX().cmp(other.getX()) === 0;
    };
    Point2.prototype.normalize = function normalize() {
      this.x = this.x.redMul(this.z.redInvm());
      this.z = this.curve.one;
      return this;
    };
    Point2.prototype.getX = function getX2() {
      this.normalize();
      return this.x.fromRed();
    };
  }
});

// node_modules/elliptic/lib/elliptic/curve/edwards.js
var require_edwards = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/edwards.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils3();
    var BN3 = require_bn4();
    var inherits = require_inherits_browser();
    var Base = require_base2();
    var assert2 = utils.assert;
    function EdwardsCurve(conf) {
      this.twisted = (conf.a | 0) !== 1;
      this.mOneA = this.twisted && (conf.a | 0) === -1;
      this.extended = this.mOneA;
      Base.call(this, "edwards", conf);
      this.a = new BN3(conf.a, 16).umod(this.red.m);
      this.a = this.a.toRed(this.red);
      this.c = new BN3(conf.c, 16).toRed(this.red);
      this.c2 = this.c.redSqr();
      this.d = new BN3(conf.d, 16).toRed(this.red);
      this.dd = this.d.redAdd(this.d);
      assert2(!this.twisted || this.c.fromRed().cmpn(1) === 0);
      this.oneC = (conf.c | 0) === 1;
    }
    inherits(EdwardsCurve, Base);
    module.exports = EdwardsCurve;
    EdwardsCurve.prototype._mulA = function _mulA(num) {
      if (this.mOneA)
        return num.redNeg();
      else
        return this.a.redMul(num);
    };
    EdwardsCurve.prototype._mulC = function _mulC(num) {
      if (this.oneC)
        return num;
      else
        return this.c.redMul(num);
    };
    EdwardsCurve.prototype.jpoint = function jpoint2(x, y, z, t) {
      return this.point(x, y, z, t);
    };
    EdwardsCurve.prototype.pointFromX = function pointFromX2(x, odd) {
      x = new BN3(x, 16);
      if (!x.red)
        x = x.toRed(this.red);
      var x2 = x.redSqr();
      var rhs = this.c2.redSub(this.a.redMul(x2));
      var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
      var y2 = rhs.redMul(lhs.redInvm());
      var y = y2.redSqrt();
      if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      if (odd && !isOdd || !odd && isOdd)
        y = y.redNeg();
      return this.point(x, y);
    };
    EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
      y = new BN3(y, 16);
      if (!y.red)
        y = y.toRed(this.red);
      var y2 = y.redSqr();
      var lhs = y2.redSub(this.c2);
      var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
      var x2 = lhs.redMul(rhs.redInvm());
      if (x2.cmp(this.zero) === 0) {
        if (odd)
          throw new Error("invalid point");
        else
          return this.point(this.zero, y);
      }
      var x = x2.redSqrt();
      if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      if (x.fromRed().isOdd() !== odd)
        x = x.redNeg();
      return this.point(x, y);
    };
    EdwardsCurve.prototype.validate = function validate5(point3) {
      if (point3.isInfinity())
        return true;
      point3.normalize();
      var x2 = point3.x.redSqr();
      var y2 = point3.y.redSqr();
      var lhs = x2.redMul(this.a).redAdd(y2);
      var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
      return lhs.cmp(rhs) === 0;
    };
    function Point2(curve, x, y, z, t) {
      Base.BasePoint.call(this, curve, "projective");
      if (x === null && y === null && z === null) {
        this.x = this.curve.zero;
        this.y = this.curve.one;
        this.z = this.curve.one;
        this.t = this.curve.zero;
        this.zOne = true;
      } else {
        this.x = new BN3(x, 16);
        this.y = new BN3(y, 16);
        this.z = z ? new BN3(z, 16) : this.curve.one;
        this.t = t && new BN3(t, 16);
        if (!this.x.red)
          this.x = this.x.toRed(this.curve.red);
        if (!this.y.red)
          this.y = this.y.toRed(this.curve.red);
        if (!this.z.red)
          this.z = this.z.toRed(this.curve.red);
        if (this.t && !this.t.red)
          this.t = this.t.toRed(this.curve.red);
        this.zOne = this.z === this.curve.one;
        if (this.curve.extended && !this.t) {
          this.t = this.x.redMul(this.y);
          if (!this.zOne)
            this.t = this.t.redMul(this.z.redInvm());
        }
      }
    }
    inherits(Point2, Base.BasePoint);
    EdwardsCurve.prototype.pointFromJSON = function pointFromJSON2(obj) {
      return Point2.fromJSON(this, obj);
    };
    EdwardsCurve.prototype.point = function point3(x, y, z, t) {
      return new Point2(this, x, y, z, t);
    };
    Point2.fromJSON = function fromJSON2(curve, obj) {
      return new Point2(curve, obj[0], obj[1], obj[2]);
    };
    Point2.prototype.inspect = function inspect4() {
      if (this.isInfinity())
        return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point2.prototype.isInfinity = function isInfinity3() {
      return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
    };
    Point2.prototype._extDbl = function _extDbl() {
      var a = this.x.redSqr();
      var b = this.y.redSqr();
      var c = this.z.redSqr();
      c = c.redIAdd(c);
      var d = this.curve._mulA(a);
      var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
      var g = d.redAdd(b);
      var f = g.redSub(c);
      var h = d.redSub(b);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point2.prototype._projDbl = function _projDbl() {
      var b = this.x.redAdd(this.y).redSqr();
      var c = this.x.redSqr();
      var d = this.y.redSqr();
      var nx;
      var ny;
      var nz;
      var e;
      var h;
      var j;
      if (this.curve.twisted) {
        e = this.curve._mulA(c);
        var f = e.redAdd(d);
        if (this.zOne) {
          nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
          ny = f.redMul(e.redSub(d));
          nz = f.redSqr().redSub(f).redSub(f);
        } else {
          h = this.z.redSqr();
          j = f.redSub(h).redISub(h);
          nx = b.redSub(c).redISub(d).redMul(j);
          ny = f.redMul(e.redSub(d));
          nz = f.redMul(j);
        }
      } else {
        e = c.redAdd(d);
        h = this.curve._mulC(this.z).redSqr();
        j = e.redSub(h).redSub(h);
        nx = this.curve._mulC(b.redISub(e)).redMul(j);
        ny = this.curve._mulC(e).redMul(c.redISub(d));
        nz = e.redMul(j);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point2.prototype.dbl = function dbl3() {
      if (this.isInfinity())
        return this;
      if (this.curve.extended)
        return this._extDbl();
      else
        return this._projDbl();
    };
    Point2.prototype._extAdd = function _extAdd(p) {
      var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
      var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
      var c = this.t.redMul(this.curve.dd).redMul(p.t);
      var d = this.z.redMul(p.z.redAdd(p.z));
      var e = b.redSub(a);
      var f = d.redSub(c);
      var g = d.redAdd(c);
      var h = b.redAdd(a);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point2.prototype._projAdd = function _projAdd(p) {
      var a = this.z.redMul(p.z);
      var b = a.redSqr();
      var c = this.x.redMul(p.x);
      var d = this.y.redMul(p.y);
      var e = this.curve.d.redMul(c).redMul(d);
      var f = b.redSub(e);
      var g = b.redAdd(e);
      var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
      var nx = a.redMul(f).redMul(tmp);
      var ny;
      var nz;
      if (this.curve.twisted) {
        ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
        nz = f.redMul(g);
      } else {
        ny = a.redMul(g).redMul(d.redSub(c));
        nz = this.curve._mulC(f).redMul(g);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point2.prototype.add = function add3(p) {
      if (this.isInfinity())
        return p;
      if (p.isInfinity())
        return this;
      if (this.curve.extended)
        return this._extAdd(p);
      else
        return this._projAdd(p);
    };
    Point2.prototype.mul = function mul3(k) {
      if (this._hasDoubles(k))
        return this.curve._fixedNafMul(this, k);
      else
        return this.curve._wnafMul(this, k);
    };
    Point2.prototype.mulAdd = function mulAdd2(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
    };
    Point2.prototype.jmulAdd = function jmulAdd2(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
    };
    Point2.prototype.normalize = function normalize() {
      if (this.zOne)
        return this;
      var zi = this.z.redInvm();
      this.x = this.x.redMul(zi);
      this.y = this.y.redMul(zi);
      if (this.t)
        this.t = this.t.redMul(zi);
      this.z = this.curve.one;
      this.zOne = true;
      return this;
    };
    Point2.prototype.neg = function neg3() {
      return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
    };
    Point2.prototype.getX = function getX2() {
      this.normalize();
      return this.x.fromRed();
    };
    Point2.prototype.getY = function getY2() {
      this.normalize();
      return this.y.fromRed();
    };
    Point2.prototype.eq = function eq4(other) {
      return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
    };
    Point2.prototype.eqXToP = function eqXToP2(x) {
      var rx = x.toRed(this.curve.red).redMul(this.z);
      if (this.x.cmp(rx) === 0)
        return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(this.z);
      for (; ; ) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0)
          return false;
        rx.redIAdd(t);
        if (this.x.cmp(rx) === 0)
          return true;
      }
    };
    Point2.prototype.toP = Point2.prototype.normalize;
    Point2.prototype.mixedAdd = Point2.prototype.add;
  }
});

// node_modules/elliptic/lib/elliptic/curve/index.js
var require_curve = __commonJS({
  "node_modules/elliptic/lib/elliptic/curve/index.js"(exports) {
    "use strict";
    init_shim();
    var curve = exports;
    curve.base = require_base2();
    curve.short = require_short();
    curve.mont = require_mont();
    curve.edwards = require_edwards();
  }
});

// node_modules/hash.js/lib/hash/utils.js
var require_utils4 = __commonJS({
  "node_modules/hash.js/lib/hash/utils.js"(exports) {
    "use strict";
    init_shim();
    var assert2 = require_minimalistic_assert();
    var inherits = require_inherits_browser();
    exports.inherits = inherits;
    function isSurrogatePair(msg, i) {
      if ((msg.charCodeAt(i) & 64512) !== 55296) {
        return false;
      }
      if (i < 0 || i + 1 >= msg.length) {
        return false;
      }
      return (msg.charCodeAt(i + 1) & 64512) === 56320;
    }
    function toArray(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg === "string") {
        if (!enc) {
          var p = 0;
          for (var i = 0; i < msg.length; i++) {
            var c = msg.charCodeAt(i);
            if (c < 128) {
              res[p++] = c;
            } else if (c < 2048) {
              res[p++] = c >> 6 | 192;
              res[p++] = c & 63 | 128;
            } else if (isSurrogatePair(msg, i)) {
              c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
              res[p++] = c >> 18 | 240;
              res[p++] = c >> 12 & 63 | 128;
              res[p++] = c >> 6 & 63 | 128;
              res[p++] = c & 63 | 128;
            } else {
              res[p++] = c >> 12 | 224;
              res[p++] = c >> 6 & 63 | 128;
              res[p++] = c & 63 | 128;
            }
          }
        } else if (enc === "hex") {
          msg = msg.replace(/[^a-z0-9]+/ig, "");
          if (msg.length % 2 !== 0)
            msg = "0" + msg;
          for (i = 0; i < msg.length; i += 2)
            res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
      } else {
        for (i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
      }
      return res;
    }
    exports.toArray = toArray;
    function toHex2(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    exports.toHex = toHex2;
    function htonl(w) {
      var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
      return res >>> 0;
    }
    exports.htonl = htonl;
    function toHex32(msg, endian) {
      var res = "";
      for (var i = 0; i < msg.length; i++) {
        var w = msg[i];
        if (endian === "little")
          w = htonl(w);
        res += zero8(w.toString(16));
      }
      return res;
    }
    exports.toHex32 = toHex32;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    exports.zero2 = zero2;
    function zero8(word) {
      if (word.length === 7)
        return "0" + word;
      else if (word.length === 6)
        return "00" + word;
      else if (word.length === 5)
        return "000" + word;
      else if (word.length === 4)
        return "0000" + word;
      else if (word.length === 3)
        return "00000" + word;
      else if (word.length === 2)
        return "000000" + word;
      else if (word.length === 1)
        return "0000000" + word;
      else
        return word;
    }
    exports.zero8 = zero8;
    function join32(msg, start, end, endian) {
      var len = end - start;
      assert2(len % 4 === 0);
      var res = new Array(len / 4);
      for (var i = 0, k = start; i < res.length; i++, k += 4) {
        var w;
        if (endian === "big")
          w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
        else
          w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
      }
      return res;
    }
    exports.join32 = join32;
    function split32(msg, endian) {
      var res = new Array(msg.length * 4);
      for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
        var m = msg[i];
        if (endian === "big") {
          res[k] = m >>> 24;
          res[k + 1] = m >>> 16 & 255;
          res[k + 2] = m >>> 8 & 255;
          res[k + 3] = m & 255;
        } else {
          res[k + 3] = m >>> 24;
          res[k + 2] = m >>> 16 & 255;
          res[k + 1] = m >>> 8 & 255;
          res[k] = m & 255;
        }
      }
      return res;
    }
    exports.split32 = split32;
    function rotr32(w, b) {
      return w >>> b | w << 32 - b;
    }
    exports.rotr32 = rotr32;
    function rotl32(w, b) {
      return w << b | w >>> 32 - b;
    }
    exports.rotl32 = rotl32;
    function sum32(a, b) {
      return a + b >>> 0;
    }
    exports.sum32 = sum32;
    function sum32_3(a, b, c) {
      return a + b + c >>> 0;
    }
    exports.sum32_3 = sum32_3;
    function sum32_4(a, b, c, d) {
      return a + b + c + d >>> 0;
    }
    exports.sum32_4 = sum32_4;
    function sum32_5(a, b, c, d, e) {
      return a + b + c + d + e >>> 0;
    }
    exports.sum32_5 = sum32_5;
    function sum64(buf, pos, ah, al) {
      var bh = buf[pos];
      var bl = buf[pos + 1];
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      buf[pos] = hi >>> 0;
      buf[pos + 1] = lo;
    }
    exports.sum64 = sum64;
    function sum64_hi(ah, al, bh, bl) {
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      return hi >>> 0;
    }
    exports.sum64_hi = sum64_hi;
    function sum64_lo(ah, al, bh, bl) {
      var lo = al + bl;
      return lo >>> 0;
    }
    exports.sum64_lo = sum64_lo;
    function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      var hi = ah + bh + ch + dh + carry;
      return hi >>> 0;
    }
    exports.sum64_4_hi = sum64_4_hi;
    function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
      var lo = al + bl + cl + dl;
      return lo >>> 0;
    }
    exports.sum64_4_lo = sum64_4_lo;
    function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      lo = lo + el >>> 0;
      carry += lo < el ? 1 : 0;
      var hi = ah + bh + ch + dh + eh + carry;
      return hi >>> 0;
    }
    exports.sum64_5_hi = sum64_5_hi;
    function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var lo = al + bl + cl + dl + el;
      return lo >>> 0;
    }
    exports.sum64_5_lo = sum64_5_lo;
    function rotr64_hi(ah, al, num) {
      var r = al << 32 - num | ah >>> num;
      return r >>> 0;
    }
    exports.rotr64_hi = rotr64_hi;
    function rotr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.rotr64_lo = rotr64_lo;
    function shr64_hi(ah, al, num) {
      return ah >>> num;
    }
    exports.shr64_hi = shr64_hi;
    function shr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.shr64_lo = shr64_lo;
  }
});

// node_modules/hash.js/lib/hash/common.js
var require_common = __commonJS({
  "node_modules/hash.js/lib/hash/common.js"(exports) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var assert2 = require_minimalistic_assert();
    function BlockHash() {
      this.pending = null;
      this.pendingTotal = 0;
      this.blockSize = this.constructor.blockSize;
      this.outSize = this.constructor.outSize;
      this.hmacStrength = this.constructor.hmacStrength;
      this.padLength = this.constructor.padLength / 8;
      this.endian = "big";
      this._delta8 = this.blockSize / 8;
      this._delta32 = this.blockSize / 32;
    }
    exports.BlockHash = BlockHash;
    BlockHash.prototype.update = function update2(msg, enc) {
      msg = utils.toArray(msg, enc);
      if (!this.pending)
        this.pending = msg;
      else
        this.pending = this.pending.concat(msg);
      this.pendingTotal += msg.length;
      if (this.pending.length >= this._delta8) {
        msg = this.pending;
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        if (this.pending.length === 0)
          this.pending = null;
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for (var i = 0; i < msg.length; i += this._delta32)
          this._update(msg, i, i + this._delta32);
      }
      return this;
    };
    BlockHash.prototype.digest = function digest(enc) {
      this.update(this._pad());
      assert2(this.pending === null);
      return this._digest(enc);
    };
    BlockHash.prototype._pad = function pad() {
      var len = this.pendingTotal;
      var bytes = this._delta8;
      var k = bytes - (len + this.padLength) % bytes;
      var res = new Array(k + this.padLength);
      res[0] = 128;
      for (var i = 1; i < k; i++)
        res[i] = 0;
      len <<= 3;
      if (this.endian === "big") {
        for (var t = 8; t < this.padLength; t++)
          res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len & 255;
      } else {
        res[i++] = len & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 24 & 255;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for (t = 8; t < this.padLength; t++)
          res[i++] = 0;
      }
      return res;
    };
  }
});

// node_modules/hash.js/lib/hash/sha/common.js
var require_common2 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/common.js"(exports) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var rotr32 = utils.rotr32;
    function ft_1(s, x, y, z) {
      if (s === 0)
        return ch32(x, y, z);
      if (s === 1 || s === 3)
        return p32(x, y, z);
      if (s === 2)
        return maj32(x, y, z);
    }
    exports.ft_1 = ft_1;
    function ch32(x, y, z) {
      return x & y ^ ~x & z;
    }
    exports.ch32 = ch32;
    function maj32(x, y, z) {
      return x & y ^ x & z ^ y & z;
    }
    exports.maj32 = maj32;
    function p32(x, y, z) {
      return x ^ y ^ z;
    }
    exports.p32 = p32;
    function s0_256(x) {
      return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
    }
    exports.s0_256 = s0_256;
    function s1_256(x) {
      return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
    }
    exports.s1_256 = s1_256;
    function g0_256(x) {
      return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
    }
    exports.g0_256 = g0_256;
    function g1_256(x) {
      return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
    }
    exports.g1_256 = g1_256;
  }
});

// node_modules/hash.js/lib/hash/sha/1.js
var require__ = __commonJS({
  "node_modules/hash.js/lib/hash/sha/1.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var common = require_common();
    var shaCommon = require_common2();
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_5 = utils.sum32_5;
    var ft_1 = shaCommon.ft_1;
    var BlockHash = common.BlockHash;
    var sha1_K = [
      1518500249,
      1859775393,
      2400959708,
      3395469782
    ];
    function SHA1() {
      if (!(this instanceof SHA1))
        return new SHA1();
      BlockHash.call(this);
      this.h = [
        1732584193,
        4023233417,
        2562383102,
        271733878,
        3285377520
      ];
      this.W = new Array(80);
    }
    utils.inherits(SHA1, BlockHash);
    module.exports = SHA1;
    SHA1.blockSize = 512;
    SHA1.outSize = 160;
    SHA1.hmacStrength = 80;
    SHA1.padLength = 64;
    SHA1.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      for (i = 0; i < W.length; i++) {
        var s = ~~(i / 20);
        var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32(b, 30);
        b = a;
        a = t;
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
    };
    SHA1.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha/256.js
var require__2 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/256.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var common = require_common();
    var shaCommon = require_common2();
    var assert2 = require_minimalistic_assert();
    var sum32 = utils.sum32;
    var sum32_4 = utils.sum32_4;
    var sum32_5 = utils.sum32_5;
    var ch32 = shaCommon.ch32;
    var maj32 = shaCommon.maj32;
    var s0_256 = shaCommon.s0_256;
    var s1_256 = shaCommon.s1_256;
    var g0_256 = shaCommon.g0_256;
    var g1_256 = shaCommon.g1_256;
    var BlockHash = common.BlockHash;
    var sha256_K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ];
    function SHA256() {
      if (!(this instanceof SHA256))
        return new SHA256();
      BlockHash.call(this);
      this.h = [
        1779033703,
        3144134277,
        1013904242,
        2773480762,
        1359893119,
        2600822924,
        528734635,
        1541459225
      ];
      this.k = sha256_K;
      this.W = new Array(64);
    }
    utils.inherits(SHA256, BlockHash);
    module.exports = SHA256;
    SHA256.blockSize = 512;
    SHA256.outSize = 256;
    SHA256.hmacStrength = 192;
    SHA256.padLength = 64;
    SHA256.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i++)
        W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      var f = this.h[5];
      var g = this.h[6];
      var h = this.h[7];
      assert2(this.k.length === W.length);
      for (i = 0; i < W.length; i++) {
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32(T1, T2);
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
      this.h[5] = sum32(this.h[5], f);
      this.h[6] = sum32(this.h[6], g);
      this.h[7] = sum32(this.h[7], h);
    };
    SHA256.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha/224.js
var require__3 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/224.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var SHA256 = require__2();
    function SHA224() {
      if (!(this instanceof SHA224))
        return new SHA224();
      SHA256.call(this);
      this.h = [
        3238371032,
        914150663,
        812702999,
        4144912697,
        4290775857,
        1750603025,
        1694076839,
        3204075428
      ];
    }
    utils.inherits(SHA224, SHA256);
    module.exports = SHA224;
    SHA224.blockSize = 512;
    SHA224.outSize = 224;
    SHA224.hmacStrength = 192;
    SHA224.padLength = 64;
    SHA224.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h.slice(0, 7), "big");
      else
        return utils.split32(this.h.slice(0, 7), "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha/512.js
var require__4 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/512.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var common = require_common();
    var assert2 = require_minimalistic_assert();
    var rotr64_hi = utils.rotr64_hi;
    var rotr64_lo = utils.rotr64_lo;
    var shr64_hi = utils.shr64_hi;
    var shr64_lo = utils.shr64_lo;
    var sum64 = utils.sum64;
    var sum64_hi = utils.sum64_hi;
    var sum64_lo = utils.sum64_lo;
    var sum64_4_hi = utils.sum64_4_hi;
    var sum64_4_lo = utils.sum64_4_lo;
    var sum64_5_hi = utils.sum64_5_hi;
    var sum64_5_lo = utils.sum64_5_lo;
    var BlockHash = common.BlockHash;
    var sha512_K = [
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ];
    function SHA512() {
      if (!(this instanceof SHA512))
        return new SHA512();
      BlockHash.call(this);
      this.h = [
        1779033703,
        4089235720,
        3144134277,
        2227873595,
        1013904242,
        4271175723,
        2773480762,
        1595750129,
        1359893119,
        2917565137,
        2600822924,
        725511199,
        528734635,
        4215389547,
        1541459225,
        327033209
      ];
      this.k = sha512_K;
      this.W = new Array(160);
    }
    utils.inherits(SHA512, BlockHash);
    module.exports = SHA512;
    SHA512.blockSize = 1024;
    SHA512.outSize = 512;
    SHA512.hmacStrength = 192;
    SHA512.padLength = 128;
    SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
      var W = this.W;
      for (var i = 0; i < 32; i++)
        W[i] = msg[start + i];
      for (; i < W.length; i += 2) {
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14];
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32];
        var c3_lo = W[i - 31];
        W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
        W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
      }
    };
    SHA512.prototype._update = function _update(msg, start) {
      this._prepareBlock(msg, start);
      var W = this.W;
      var ah = this.h[0];
      var al = this.h[1];
      var bh = this.h[2];
      var bl = this.h[3];
      var ch = this.h[4];
      var cl = this.h[5];
      var dh = this.h[6];
      var dl = this.h[7];
      var eh = this.h[8];
      var el = this.h[9];
      var fh = this.h[10];
      var fl = this.h[11];
      var gh = this.h[12];
      var gl = this.h[13];
      var hh = this.h[14];
      var hl = this.h[15];
      assert2(this.k.length === W.length);
      for (var i = 0; i < W.length; i += 2) {
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
      }
      sum64(this.h, 0, ah, al);
      sum64(this.h, 2, bh, bl);
      sum64(this.h, 4, ch, cl);
      sum64(this.h, 6, dh, dl);
      sum64(this.h, 8, eh, el);
      sum64(this.h, 10, fh, fl);
      sum64(this.h, 12, gh, gl);
      sum64(this.h, 14, hh, hl);
    };
    SHA512.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "big");
      else
        return utils.split32(this.h, "big");
    };
    function ch64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ ~xh & zh;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function ch64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ ~xl & zl;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function maj64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ xh & zh ^ yh & zh;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function maj64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ xl & zl ^ yl & zl;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 28);
      var c1_hi = rotr64_hi(xl, xh, 2);
      var c2_hi = rotr64_hi(xl, xh, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 28);
      var c1_lo = rotr64_lo(xl, xh, 2);
      var c2_lo = rotr64_lo(xl, xh, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 14);
      var c1_hi = rotr64_hi(xh, xl, 18);
      var c2_hi = rotr64_hi(xl, xh, 9);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function s1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 14);
      var c1_lo = rotr64_lo(xh, xl, 18);
      var c2_lo = rotr64_lo(xl, xh, 9);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 1);
      var c1_hi = rotr64_hi(xh, xl, 8);
      var c2_hi = shr64_hi(xh, xl, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 1);
      var c1_lo = rotr64_lo(xh, xl, 8);
      var c2_lo = shr64_lo(xh, xl, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 19);
      var c1_hi = rotr64_hi(xl, xh, 29);
      var c2_hi = shr64_hi(xh, xl, 6);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      if (r < 0)
        r += 4294967296;
      return r;
    }
    function g1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 19);
      var c1_lo = rotr64_lo(xl, xh, 29);
      var c2_lo = shr64_lo(xh, xl, 6);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      if (r < 0)
        r += 4294967296;
      return r;
    }
  }
});

// node_modules/hash.js/lib/hash/sha/384.js
var require__5 = __commonJS({
  "node_modules/hash.js/lib/hash/sha/384.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var SHA512 = require__4();
    function SHA384() {
      if (!(this instanceof SHA384))
        return new SHA384();
      SHA512.call(this);
      this.h = [
        3418070365,
        3238371032,
        1654270250,
        914150663,
        2438529370,
        812702999,
        355462360,
        4144912697,
        1731405415,
        4290775857,
        2394180231,
        1750603025,
        3675008525,
        1694076839,
        1203062813,
        3204075428
      ];
    }
    utils.inherits(SHA384, SHA512);
    module.exports = SHA384;
    SHA384.blockSize = 1024;
    SHA384.outSize = 384;
    SHA384.hmacStrength = 192;
    SHA384.padLength = 128;
    SHA384.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h.slice(0, 12), "big");
      else
        return utils.split32(this.h.slice(0, 12), "big");
    };
  }
});

// node_modules/hash.js/lib/hash/sha.js
var require_sha3 = __commonJS({
  "node_modules/hash.js/lib/hash/sha.js"(exports) {
    "use strict";
    init_shim();
    exports.sha1 = require__();
    exports.sha224 = require__3();
    exports.sha256 = require__2();
    exports.sha384 = require__5();
    exports.sha512 = require__4();
  }
});

// node_modules/hash.js/lib/hash/ripemd.js
var require_ripemd = __commonJS({
  "node_modules/hash.js/lib/hash/ripemd.js"(exports) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var common = require_common();
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_3 = utils.sum32_3;
    var sum32_4 = utils.sum32_4;
    var BlockHash = common.BlockHash;
    function RIPEMD160() {
      if (!(this instanceof RIPEMD160))
        return new RIPEMD160();
      BlockHash.call(this);
      this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
      this.endian = "little";
    }
    utils.inherits(RIPEMD160, BlockHash);
    exports.ripemd160 = RIPEMD160;
    RIPEMD160.blockSize = 512;
    RIPEMD160.outSize = 160;
    RIPEMD160.hmacStrength = 192;
    RIPEMD160.padLength = 64;
    RIPEMD160.prototype._update = function update2(msg, start) {
      var A = this.h[0];
      var B = this.h[1];
      var C = this.h[2];
      var D = this.h[3];
      var E = this.h[4];
      var Ah = A;
      var Bh = B;
      var Ch = C;
      var Dh = D;
      var Eh = E;
      for (var j = 0; j < 80; j++) {
        var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
      }
      T = sum32_3(this.h[1], C, Dh);
      this.h[1] = sum32_3(this.h[2], D, Eh);
      this.h[2] = sum32_3(this.h[3], E, Ah);
      this.h[3] = sum32_3(this.h[4], A, Bh);
      this.h[4] = sum32_3(this.h[0], B, Ch);
      this.h[0] = T;
    };
    RIPEMD160.prototype._digest = function digest(enc) {
      if (enc === "hex")
        return utils.toHex32(this.h, "little");
      else
        return utils.split32(this.h, "little");
    };
    function f(j, x, y, z) {
      if (j <= 15)
        return x ^ y ^ z;
      else if (j <= 31)
        return x & y | ~x & z;
      else if (j <= 47)
        return (x | ~y) ^ z;
      else if (j <= 63)
        return x & z | y & ~z;
      else
        return x ^ (y | ~z);
    }
    function K(j) {
      if (j <= 15)
        return 0;
      else if (j <= 31)
        return 1518500249;
      else if (j <= 47)
        return 1859775393;
      else if (j <= 63)
        return 2400959708;
      else
        return 2840853838;
    }
    function Kh(j) {
      if (j <= 15)
        return 1352829926;
      else if (j <= 31)
        return 1548603684;
      else if (j <= 47)
        return 1836072691;
      else if (j <= 63)
        return 2053994217;
      else
        return 0;
    }
    var r = [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      7,
      4,
      13,
      1,
      10,
      6,
      15,
      3,
      12,
      0,
      9,
      5,
      2,
      14,
      11,
      8,
      3,
      10,
      14,
      4,
      9,
      15,
      8,
      1,
      2,
      7,
      0,
      6,
      13,
      11,
      5,
      12,
      1,
      9,
      11,
      10,
      0,
      8,
      12,
      4,
      13,
      3,
      7,
      15,
      14,
      5,
      6,
      2,
      4,
      0,
      5,
      9,
      7,
      12,
      2,
      10,
      14,
      1,
      3,
      8,
      11,
      6,
      15,
      13
    ];
    var rh = [
      5,
      14,
      7,
      0,
      9,
      2,
      11,
      4,
      13,
      6,
      15,
      8,
      1,
      10,
      3,
      12,
      6,
      11,
      3,
      7,
      0,
      13,
      5,
      10,
      14,
      15,
      8,
      12,
      4,
      9,
      1,
      2,
      15,
      5,
      1,
      3,
      7,
      14,
      6,
      9,
      11,
      8,
      12,
      2,
      10,
      0,
      4,
      13,
      8,
      6,
      4,
      1,
      3,
      11,
      15,
      0,
      5,
      12,
      2,
      13,
      9,
      7,
      10,
      14,
      12,
      15,
      10,
      4,
      1,
      5,
      8,
      7,
      6,
      2,
      13,
      14,
      0,
      3,
      9,
      11
    ];
    var s = [
      11,
      14,
      15,
      12,
      5,
      8,
      7,
      9,
      11,
      13,
      14,
      15,
      6,
      7,
      9,
      8,
      7,
      6,
      8,
      13,
      11,
      9,
      7,
      15,
      7,
      12,
      15,
      9,
      11,
      7,
      13,
      12,
      11,
      13,
      6,
      7,
      14,
      9,
      13,
      15,
      14,
      8,
      13,
      6,
      5,
      12,
      7,
      5,
      11,
      12,
      14,
      15,
      14,
      15,
      9,
      8,
      9,
      14,
      5,
      6,
      8,
      6,
      5,
      12,
      9,
      15,
      5,
      11,
      6,
      8,
      13,
      12,
      5,
      12,
      13,
      14,
      11,
      8,
      5,
      6
    ];
    var sh = [
      8,
      9,
      9,
      11,
      13,
      15,
      15,
      5,
      7,
      7,
      8,
      11,
      14,
      14,
      12,
      6,
      9,
      13,
      15,
      7,
      12,
      8,
      9,
      11,
      7,
      7,
      12,
      7,
      6,
      15,
      13,
      11,
      9,
      7,
      15,
      11,
      8,
      6,
      6,
      14,
      12,
      13,
      5,
      14,
      13,
      13,
      7,
      5,
      15,
      5,
      8,
      11,
      14,
      14,
      6,
      14,
      6,
      9,
      12,
      9,
      12,
      5,
      15,
      8,
      8,
      5,
      12,
      9,
      12,
      5,
      14,
      6,
      8,
      13,
      6,
      5,
      15,
      13,
      11,
      11
    ];
  }
});

// node_modules/hash.js/lib/hash/hmac.js
var require_hmac = __commonJS({
  "node_modules/hash.js/lib/hash/hmac.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils4();
    var assert2 = require_minimalistic_assert();
    function Hmac(hash3, key2, enc) {
      if (!(this instanceof Hmac))
        return new Hmac(hash3, key2, enc);
      this.Hash = hash3;
      this.blockSize = hash3.blockSize / 8;
      this.outSize = hash3.outSize / 8;
      this.inner = null;
      this.outer = null;
      this._init(utils.toArray(key2, enc));
    }
    module.exports = Hmac;
    Hmac.prototype._init = function init2(key2) {
      if (key2.length > this.blockSize)
        key2 = new this.Hash().update(key2).digest();
      assert2(key2.length <= this.blockSize);
      for (var i = key2.length; i < this.blockSize; i++)
        key2.push(0);
      for (i = 0; i < key2.length; i++)
        key2[i] ^= 54;
      this.inner = new this.Hash().update(key2);
      for (i = 0; i < key2.length; i++)
        key2[i] ^= 106;
      this.outer = new this.Hash().update(key2);
    };
    Hmac.prototype.update = function update2(msg, enc) {
      this.inner.update(msg, enc);
      return this;
    };
    Hmac.prototype.digest = function digest(enc) {
      this.outer.update(this.inner.digest());
      return this.outer.digest(enc);
    };
  }
});

// node_modules/hash.js/lib/hash.js
var require_hash2 = __commonJS({
  "node_modules/hash.js/lib/hash.js"(exports) {
    init_shim();
    var hash3 = exports;
    hash3.utils = require_utils4();
    hash3.common = require_common();
    hash3.sha = require_sha3();
    hash3.ripemd = require_ripemd();
    hash3.hmac = require_hmac();
    hash3.sha1 = hash3.sha.sha1;
    hash3.sha256 = hash3.sha.sha256;
    hash3.sha224 = hash3.sha.sha224;
    hash3.sha384 = hash3.sha.sha384;
    hash3.sha512 = hash3.sha.sha512;
    hash3.ripemd160 = hash3.ripemd.ripemd160;
  }
});

// node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js
var require_secp256k1 = __commonJS({
  "node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js"(exports, module) {
    init_shim();
    module.exports = {
      doubles: {
        step: 4,
        points: [
          [
            "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
            "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
          ],
          [
            "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
            "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
          ],
          [
            "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
            "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
          ],
          [
            "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
            "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
          ],
          [
            "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
            "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
          ],
          [
            "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
            "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
          ],
          [
            "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
            "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
          ],
          [
            "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
            "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
          ],
          [
            "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
            "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
          ],
          [
            "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
            "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
          ],
          [
            "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
            "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
          ],
          [
            "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
            "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
          ],
          [
            "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
            "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
          ],
          [
            "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
            "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
          ],
          [
            "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
            "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
          ],
          [
            "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
            "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
          ],
          [
            "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
            "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
          ],
          [
            "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
            "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
          ],
          [
            "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
            "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
          ],
          [
            "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
            "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
          ],
          [
            "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
            "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
          ],
          [
            "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
            "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
          ],
          [
            "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
            "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
          ],
          [
            "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
            "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
          ],
          [
            "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
            "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
          ],
          [
            "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
            "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
          ],
          [
            "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
            "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
          ],
          [
            "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
            "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
          ],
          [
            "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
            "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
          ],
          [
            "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
            "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
          ],
          [
            "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
            "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
          ],
          [
            "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
            "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
          ],
          [
            "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
            "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
          ],
          [
            "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
            "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
          ],
          [
            "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
            "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
          ],
          [
            "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
            "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
          ],
          [
            "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
            "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
          ],
          [
            "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
            "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
          ],
          [
            "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
            "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
          ],
          [
            "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
            "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
          ],
          [
            "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
            "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
          ],
          [
            "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
            "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
          ],
          [
            "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
            "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
          ],
          [
            "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
            "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
          ],
          [
            "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
            "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
          ],
          [
            "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
            "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
          ],
          [
            "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
            "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
          ],
          [
            "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
            "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
          ],
          [
            "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
            "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
          ],
          [
            "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
            "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
          ],
          [
            "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
            "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
          ],
          [
            "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
            "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
          ],
          [
            "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
            "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
          ],
          [
            "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
            "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
          ],
          [
            "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
            "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
          ],
          [
            "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
            "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
          ],
          [
            "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
            "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
          ],
          [
            "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
            "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
          ],
          [
            "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
            "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
          ],
          [
            "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
            "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
          ],
          [
            "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
            "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
          ],
          [
            "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
            "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
          ],
          [
            "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
            "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
          ],
          [
            "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
            "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
          ],
          [
            "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
            "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
          ]
        ]
      },
      naf: {
        wnd: 7,
        points: [
          [
            "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
            "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
          ],
          [
            "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
            "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
          ],
          [
            "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
            "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
          ],
          [
            "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
            "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
          ],
          [
            "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
            "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
          ],
          [
            "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
            "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
          ],
          [
            "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
            "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
          ],
          [
            "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
            "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
          ],
          [
            "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
            "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
          ],
          [
            "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
            "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
          ],
          [
            "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
            "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
          ],
          [
            "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
            "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
          ],
          [
            "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
            "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
          ],
          [
            "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
            "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
          ],
          [
            "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
            "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
          ],
          [
            "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
            "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
          ],
          [
            "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
            "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
          ],
          [
            "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
            "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
          ],
          [
            "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
            "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
          ],
          [
            "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
            "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
          ],
          [
            "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
            "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
          ],
          [
            "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
            "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
          ],
          [
            "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
            "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
          ],
          [
            "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
            "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
          ],
          [
            "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
            "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
          ],
          [
            "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
            "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
          ],
          [
            "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
            "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
          ],
          [
            "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
            "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
          ],
          [
            "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
            "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
          ],
          [
            "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
            "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
          ],
          [
            "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
            "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
          ],
          [
            "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
            "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
          ],
          [
            "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
            "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
          ],
          [
            "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
            "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
          ],
          [
            "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
            "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
          ],
          [
            "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
            "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
          ],
          [
            "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
            "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
          ],
          [
            "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
            "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
          ],
          [
            "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
            "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
          ],
          [
            "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
            "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
          ],
          [
            "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
            "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
          ],
          [
            "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
            "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
          ],
          [
            "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
            "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
          ],
          [
            "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
            "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
          ],
          [
            "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
            "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
          ],
          [
            "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
            "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
          ],
          [
            "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
            "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
          ],
          [
            "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
            "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
          ],
          [
            "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
            "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
          ],
          [
            "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
            "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
          ],
          [
            "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
            "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
          ],
          [
            "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
            "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
          ],
          [
            "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
            "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
          ],
          [
            "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
            "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
          ],
          [
            "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
            "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
          ],
          [
            "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
            "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
          ],
          [
            "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
            "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
          ],
          [
            "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
            "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
          ],
          [
            "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
            "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
          ],
          [
            "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
            "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
          ],
          [
            "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
            "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
          ],
          [
            "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
            "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
          ],
          [
            "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
            "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
          ],
          [
            "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
            "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
          ],
          [
            "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
            "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
          ],
          [
            "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
            "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
          ],
          [
            "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
            "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
          ],
          [
            "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
            "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
          ],
          [
            "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
            "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
          ],
          [
            "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
            "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
          ],
          [
            "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
            "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
          ],
          [
            "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
            "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
          ],
          [
            "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
            "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
          ],
          [
            "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
            "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
          ],
          [
            "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
            "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
          ],
          [
            "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
            "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
          ],
          [
            "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
            "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
          ],
          [
            "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
            "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
          ],
          [
            "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
            "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
          ],
          [
            "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
            "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
          ],
          [
            "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
            "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
          ],
          [
            "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
            "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
          ],
          [
            "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
            "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
          ],
          [
            "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
            "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
          ],
          [
            "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
            "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
          ],
          [
            "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
            "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
          ],
          [
            "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
            "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
          ],
          [
            "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
            "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
          ],
          [
            "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
            "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
          ],
          [
            "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
            "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
          ],
          [
            "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
            "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
          ],
          [
            "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
            "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
          ],
          [
            "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
            "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
          ],
          [
            "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
            "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
          ],
          [
            "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
            "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
          ],
          [
            "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
            "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
          ],
          [
            "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
            "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
          ],
          [
            "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
            "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
          ],
          [
            "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
            "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
          ],
          [
            "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
            "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
          ],
          [
            "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
            "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
          ],
          [
            "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
            "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
          ],
          [
            "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
            "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
          ],
          [
            "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
            "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
          ],
          [
            "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
            "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
          ],
          [
            "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
            "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
          ],
          [
            "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
            "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
          ],
          [
            "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
            "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
          ],
          [
            "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
            "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
          ],
          [
            "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
            "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
          ],
          [
            "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
            "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
          ],
          [
            "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
            "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
          ],
          [
            "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
            "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
          ],
          [
            "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
            "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
          ],
          [
            "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
            "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
          ],
          [
            "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
            "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
          ],
          [
            "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
            "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
          ],
          [
            "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
            "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
          ],
          [
            "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
            "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
          ],
          [
            "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
            "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
          ],
          [
            "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
            "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
          ],
          [
            "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
            "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
          ],
          [
            "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
            "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
          ],
          [
            "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
            "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
          ],
          [
            "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
            "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
          ],
          [
            "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
            "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
          ],
          [
            "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
            "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
          ]
        ]
      }
    };
  }
});

// node_modules/elliptic/lib/elliptic/curves.js
var require_curves = __commonJS({
  "node_modules/elliptic/lib/elliptic/curves.js"(exports) {
    "use strict";
    init_shim();
    var curves = exports;
    var hash3 = require_hash2();
    var curve = require_curve();
    var utils = require_utils3();
    var assert2 = utils.assert;
    function PresetCurve(options) {
      if (options.type === "short")
        this.curve = new curve.short(options);
      else if (options.type === "edwards")
        this.curve = new curve.edwards(options);
      else
        this.curve = new curve.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;
      assert2(this.g.validate(), "Invalid curve");
      assert2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve2 = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve2
          });
          return curve2;
        }
      });
    }
    defineCurve("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: hash3.sha256,
      gRed: false,
      g: [
        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
      ]
    });
    defineCurve("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: hash3.sha256,
      gRed: false,
      g: [
        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
      ]
    });
    defineCurve("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: hash3.sha256,
      gRed: false,
      g: [
        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
      ]
    });
    defineCurve("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: hash3.sha384,
      gRed: false,
      g: [
        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
      ]
    });
    defineCurve("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: hash3.sha512,
      gRed: false,
      g: [
        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
      ]
    });
    defineCurve("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash3.sha256,
      gRed: false,
      g: [
        "9"
      ]
    });
    defineCurve("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash3.sha256,
      gRed: false,
      g: [
        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
        "6666666666666666666666666666666666666666666666666666666666666658"
      ]
    });
    var pre;
    try {
      pre = require_secp256k1();
    } catch (e) {
      pre = void 0;
    }
    defineCurve("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: hash3.sha256,
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [
        {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        },
        {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        }
      ],
      gRed: false,
      g: [
        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
        pre
      ]
    });
  }
});

// node_modules/hmac-drbg/lib/hmac-drbg.js
var require_hmac_drbg = __commonJS({
  "node_modules/hmac-drbg/lib/hmac-drbg.js"(exports, module) {
    "use strict";
    init_shim();
    var hash3 = require_hash2();
    var utils = require_utils2();
    var assert2 = require_minimalistic_assert();
    function HmacDRBG2(options) {
      if (!(this instanceof HmacDRBG2))
        return new HmacDRBG2(options);
      this.hash = options.hash;
      this.predResist = !!options.predResist;
      this.outLen = this.hash.outSize;
      this.minEntropy = options.minEntropy || this.hash.hmacStrength;
      this._reseed = null;
      this.reseedInterval = null;
      this.K = null;
      this.V = null;
      var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex");
      var nonce = utils.toArray(options.nonce, options.nonceEnc || "hex");
      var pers = utils.toArray(options.pers, options.persEnc || "hex");
      assert2(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
      this._init(entropy, nonce, pers);
    }
    module.exports = HmacDRBG2;
    HmacDRBG2.prototype._init = function init2(entropy, nonce, pers) {
      var seed = entropy.concat(nonce).concat(pers);
      this.K = new Array(this.outLen / 8);
      this.V = new Array(this.outLen / 8);
      for (var i = 0; i < this.V.length; i++) {
        this.K[i] = 0;
        this.V[i] = 1;
      }
      this._update(seed);
      this._reseed = 1;
      this.reseedInterval = 281474976710656;
    };
    HmacDRBG2.prototype._hmac = function hmac2() {
      return new hash3.hmac(this.hash, this.K);
    };
    HmacDRBG2.prototype._update = function update2(seed) {
      var kmac = this._hmac().update(this.V).update([0]);
      if (seed)
        kmac = kmac.update(seed);
      this.K = kmac.digest();
      this.V = this._hmac().update(this.V).digest();
      if (!seed)
        return;
      this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
      this.V = this._hmac().update(this.V).digest();
    };
    HmacDRBG2.prototype.reseed = function reseed2(entropy, entropyEnc, add3, addEnc) {
      if (typeof entropyEnc !== "string") {
        addEnc = add3;
        add3 = entropyEnc;
        entropyEnc = null;
      }
      entropy = utils.toArray(entropy, entropyEnc);
      add3 = utils.toArray(add3, addEnc);
      assert2(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
      this._update(entropy.concat(add3 || []));
      this._reseed = 1;
    };
    HmacDRBG2.prototype.generate = function generate2(len, enc, add3, addEnc) {
      if (this._reseed > this.reseedInterval)
        throw new Error("Reseed is required");
      if (typeof enc !== "string") {
        addEnc = add3;
        add3 = enc;
        enc = null;
      }
      if (add3) {
        add3 = utils.toArray(add3, addEnc || "hex");
        this._update(add3);
      }
      var temp = [];
      while (temp.length < len) {
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
      }
      var res = temp.slice(0, len);
      this._update(add3);
      this._reseed++;
      return utils.encode(res, enc);
    };
  }
});

// node_modules/elliptic/lib/elliptic/ec/key.js
var require_key = __commonJS({
  "node_modules/elliptic/lib/elliptic/ec/key.js"(exports, module) {
    "use strict";
    init_shim();
    var BN3 = require_bn4();
    var utils = require_utils3();
    var assert2 = utils.assert;
    function KeyPair2(ec2, options) {
      this.ec = ec2;
      this.priv = null;
      this.pub = null;
      if (options.priv)
        this._importPrivate(options.priv, options.privEnc);
      if (options.pub)
        this._importPublic(options.pub, options.pubEnc);
    }
    module.exports = KeyPair2;
    KeyPair2.fromPublic = function fromPublic2(ec2, pub, enc) {
      if (pub instanceof KeyPair2)
        return pub;
      return new KeyPair2(ec2, {
        pub,
        pubEnc: enc
      });
    };
    KeyPair2.fromPrivate = function fromPrivate2(ec2, priv, enc) {
      if (priv instanceof KeyPair2)
        return priv;
      return new KeyPair2(ec2, {
        priv,
        privEnc: enc
      });
    };
    KeyPair2.prototype.validate = function validate5() {
      var pub = this.getPublic();
      if (pub.isInfinity())
        return { result: false, reason: "Invalid public key" };
      if (!pub.validate())
        return { result: false, reason: "Public key is not a point" };
      if (!pub.mul(this.ec.curve.n).isInfinity())
        return { result: false, reason: "Public key * N != O" };
      return { result: true, reason: null };
    };
    KeyPair2.prototype.getPublic = function getPublic2(compact, enc) {
      if (typeof compact === "string") {
        enc = compact;
        compact = null;
      }
      if (!this.pub)
        this.pub = this.ec.g.mul(this.priv);
      if (!enc)
        return this.pub;
      return this.pub.encode(enc, compact);
    };
    KeyPair2.prototype.getPrivate = function getPrivate2(enc) {
      if (enc === "hex")
        return this.priv.toString(16, 2);
      else
        return this.priv;
    };
    KeyPair2.prototype._importPrivate = function _importPrivate2(key2, enc) {
      this.priv = new BN3(key2, enc || 16);
      this.priv = this.priv.umod(this.ec.curve.n);
    };
    KeyPair2.prototype._importPublic = function _importPublic2(key2, enc) {
      if (key2.x || key2.y) {
        if (this.ec.curve.type === "mont") {
          assert2(key2.x, "Need x coordinate");
        } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
          assert2(key2.x && key2.y, "Need both x and y coordinate");
        }
        this.pub = this.ec.curve.point(key2.x, key2.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(key2, enc);
    };
    KeyPair2.prototype.derive = function derive2(pub) {
      if (!pub.validate()) {
        assert2(pub.validate(), "public point not validated");
      }
      return pub.mul(this.priv).getX();
    };
    KeyPair2.prototype.sign = function sign3(msg, enc, options) {
      return this.ec.sign(msg, this, enc, options);
    };
    KeyPair2.prototype.verify = function verify3(msg, signature2) {
      return this.ec.verify(msg, signature2, this);
    };
    KeyPair2.prototype.inspect = function inspect4() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  }
});

// node_modules/elliptic/lib/elliptic/ec/signature.js
var require_signature = __commonJS({
  "node_modules/elliptic/lib/elliptic/ec/signature.js"(exports, module) {
    "use strict";
    init_shim();
    var BN3 = require_bn4();
    var utils = require_utils3();
    var assert2 = utils.assert;
    function Signature2(options, enc) {
      if (options instanceof Signature2)
        return options;
      if (this._importDER(options, enc))
        return;
      assert2(options.r && options.s, "Signature without r or s");
      this.r = new BN3(options.r, 16);
      this.s = new BN3(options.s, 16);
      if (options.recoveryParam === void 0)
        this.recoveryParam = null;
      else
        this.recoveryParam = options.recoveryParam;
    }
    module.exports = Signature2;
    function Position2() {
      this.place = 0;
    }
    function getLength2(buf, p) {
      var initial = buf[p.place++];
      if (!(initial & 128)) {
        return initial;
      }
      var octetLen = initial & 15;
      if (octetLen === 0 || octetLen > 4) {
        return false;
      }
      var val = 0;
      for (var i = 0, off = p.place; i < octetLen; i++, off++) {
        val <<= 8;
        val |= buf[off];
        val >>>= 0;
      }
      if (val <= 127) {
        return false;
      }
      p.place = off;
      return val;
    }
    function rmPadding2(buf) {
      var i = 0;
      var len = buf.length - 1;
      while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
        i++;
      }
      if (i === 0) {
        return buf;
      }
      return buf.slice(i);
    }
    Signature2.prototype._importDER = function _importDER2(data, enc) {
      data = utils.toArray(data, enc);
      var p = new Position2();
      if (data[p.place++] !== 48) {
        return false;
      }
      var len = getLength2(data, p);
      if (len === false) {
        return false;
      }
      if (len + p.place !== data.length) {
        return false;
      }
      if (data[p.place++] !== 2) {
        return false;
      }
      var rlen = getLength2(data, p);
      if (rlen === false) {
        return false;
      }
      var r = data.slice(p.place, rlen + p.place);
      p.place += rlen;
      if (data[p.place++] !== 2) {
        return false;
      }
      var slen = getLength2(data, p);
      if (slen === false) {
        return false;
      }
      if (data.length !== slen + p.place) {
        return false;
      }
      var s = data.slice(p.place, slen + p.place);
      if (r[0] === 0) {
        if (r[1] & 128) {
          r = r.slice(1);
        } else {
          return false;
        }
      }
      if (s[0] === 0) {
        if (s[1] & 128) {
          s = s.slice(1);
        } else {
          return false;
        }
      }
      this.r = new BN3(r);
      this.s = new BN3(s);
      this.recoveryParam = null;
      return true;
    };
    function constructLength2(arr, len) {
      if (len < 128) {
        arr.push(len);
        return;
      }
      var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
      arr.push(octets | 128);
      while (--octets) {
        arr.push(len >>> (octets << 3) & 255);
      }
      arr.push(len);
    }
    Signature2.prototype.toDER = function toDER2(enc) {
      var r = this.r.toArray();
      var s = this.s.toArray();
      if (r[0] & 128)
        r = [0].concat(r);
      if (s[0] & 128)
        s = [0].concat(s);
      r = rmPadding2(r);
      s = rmPadding2(s);
      while (!s[0] && !(s[1] & 128)) {
        s = s.slice(1);
      }
      var arr = [2];
      constructLength2(arr, r.length);
      arr = arr.concat(r);
      arr.push(2);
      constructLength2(arr, s.length);
      var backHalf = arr.concat(s);
      var res = [48];
      constructLength2(res, backHalf.length);
      res = res.concat(backHalf);
      return utils.encode(res, enc);
    };
  }
});

// node_modules/elliptic/lib/elliptic/ec/index.js
var require_ec = __commonJS({
  "node_modules/elliptic/lib/elliptic/ec/index.js"(exports, module) {
    "use strict";
    init_shim();
    var BN3 = require_bn4();
    var HmacDRBG2 = require_hmac_drbg();
    var utils = require_utils3();
    var curves = require_curves();
    var rand2 = require_brorand();
    var assert2 = utils.assert;
    var KeyPair2 = require_key();
    var Signature2 = require_signature();
    function EC2(options) {
      if (!(this instanceof EC2))
        return new EC2(options);
      if (typeof options === "string") {
        assert2(Object.prototype.hasOwnProperty.call(curves, options), "Unknown curve " + options);
        options = curves[options];
      }
      if (options instanceof curves.PresetCurve)
        options = { curve: options };
      this.curve = options.curve.curve;
      this.n = this.curve.n;
      this.nh = this.n.ushrn(1);
      this.g = this.curve.g;
      this.g = options.curve.g;
      this.g.precompute(options.curve.n.bitLength() + 1);
      this.hash = options.hash || options.curve.hash;
    }
    module.exports = EC2;
    EC2.prototype.keyPair = function keyPair2(options) {
      return new KeyPair2(this, options);
    };
    EC2.prototype.keyFromPrivate = function keyFromPrivate2(priv, enc) {
      return KeyPair2.fromPrivate(this, priv, enc);
    };
    EC2.prototype.keyFromPublic = function keyFromPublic2(pub, enc) {
      return KeyPair2.fromPublic(this, pub, enc);
    };
    EC2.prototype.genKeyPair = function genKeyPair2(options) {
      if (!options)
        options = {};
      var drbg = new HmacDRBG2({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || "utf8",
        entropy: options.entropy || rand2(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || "utf8",
        nonce: this.n.toArray()
      });
      var bytes = this.n.byteLength();
      var ns2 = this.n.sub(new BN3(2));
      for (; ; ) {
        var priv = new BN3(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0)
          continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
      }
    };
    EC2.prototype._truncateToN = function _truncateToN2(msg, truncOnly) {
      var delta = msg.byteLength() * 8 - this.n.bitLength();
      if (delta > 0)
        msg = msg.ushrn(delta);
      if (!truncOnly && msg.cmp(this.n) >= 0)
        return msg.sub(this.n);
      else
        return msg;
    };
    EC2.prototype.sign = function sign3(msg, key2, enc, options) {
      if (typeof enc === "object") {
        options = enc;
        enc = null;
      }
      if (!options)
        options = {};
      key2 = this.keyFromPrivate(key2, enc);
      msg = this._truncateToN(new BN3(msg, 16));
      var bytes = this.n.byteLength();
      var bkey = key2.getPrivate().toArray("be", bytes);
      var nonce = msg.toArray("be", bytes);
      var drbg = new HmacDRBG2({
        hash: this.hash,
        entropy: bkey,
        nonce,
        pers: options.pers,
        persEnc: options.persEnc || "utf8"
      });
      var ns1 = this.n.sub(new BN3(1));
      for (var iter = 0; ; iter++) {
        var k = options.k ? options.k(iter) : new BN3(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
          continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity())
          continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (r.cmpn(0) === 0)
          continue;
        var s = k.invm(this.n).mul(r.mul(key2.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (s.cmpn(0) === 0)
          continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
        if (options.canonical && s.cmp(this.nh) > 0) {
          s = this.n.sub(s);
          recoveryParam ^= 1;
        }
        return new Signature2({ r, s, recoveryParam });
      }
    };
    EC2.prototype.verify = function verify3(msg, signature2, key2, enc) {
      msg = this._truncateToN(new BN3(msg, 16));
      key2 = this.keyFromPublic(key2, enc);
      signature2 = new Signature2(signature2, "hex");
      var r = signature2.r;
      var s = signature2.s;
      if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
        return false;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
        return false;
      var sinv = s.invm(this.n);
      var u1 = sinv.mul(msg).umod(this.n);
      var u2 = sinv.mul(r).umod(this.n);
      var p;
      if (!this.curve._maxwellTrick) {
        p = this.g.mulAdd(u1, key2.getPublic(), u2);
        if (p.isInfinity())
          return false;
        return p.getX().umod(this.n).cmp(r) === 0;
      }
      p = this.g.jmulAdd(u1, key2.getPublic(), u2);
      if (p.isInfinity())
        return false;
      return p.eqXToP(r);
    };
    EC2.prototype.recoverPubKey = function(msg, signature2, j, enc) {
      assert2((3 & j) === j, "The recovery param is more than two bits");
      signature2 = new Signature2(signature2, enc);
      var n = this.n;
      var e = new BN3(msg);
      var r = signature2.r;
      var s = signature2.s;
      var isYOdd = j & 1;
      var isSecondKey = j >> 1;
      if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
        throw new Error("Unable to find sencond key candinate");
      if (isSecondKey)
        r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
      else
        r = this.curve.pointFromX(r, isYOdd);
      var rInv = signature2.r.invm(n);
      var s1 = n.sub(e).mul(rInv).umod(n);
      var s2 = s.mul(rInv).umod(n);
      return this.g.mulAdd(s1, r, s2);
    };
    EC2.prototype.getKeyRecoveryParam = function(e, signature2, Q, enc) {
      signature2 = new Signature2(signature2, enc);
      if (signature2.recoveryParam !== null)
        return signature2.recoveryParam;
      for (var i = 0; i < 4; i++) {
        var Qprime;
        try {
          Qprime = this.recoverPubKey(e, signature2, i);
        } catch (e2) {
          continue;
        }
        if (Qprime.eq(Q))
          return i;
      }
      throw new Error("Unable to find valid recovery factor");
    };
  }
});

// node_modules/elliptic/lib/elliptic/eddsa/key.js
var require_key2 = __commonJS({
  "node_modules/elliptic/lib/elliptic/eddsa/key.js"(exports, module) {
    "use strict";
    init_shim();
    var utils = require_utils3();
    var assert2 = utils.assert;
    var parseBytes = utils.parseBytes;
    var cachedProperty = utils.cachedProperty;
    function KeyPair2(eddsa, params) {
      this.eddsa = eddsa;
      this._secret = parseBytes(params.secret);
      if (eddsa.isPoint(params.pub))
        this._pub = params.pub;
      else
        this._pubBytes = parseBytes(params.pub);
    }
    KeyPair2.fromPublic = function fromPublic2(eddsa, pub) {
      if (pub instanceof KeyPair2)
        return pub;
      return new KeyPair2(eddsa, { pub });
    };
    KeyPair2.fromSecret = function fromSecret(eddsa, secret) {
      if (secret instanceof KeyPair2)
        return secret;
      return new KeyPair2(eddsa, { secret });
    };
    KeyPair2.prototype.secret = function secret() {
      return this._secret;
    };
    cachedProperty(KeyPair2, "pubBytes", function pubBytes() {
      return this.eddsa.encodePoint(this.pub());
    });
    cachedProperty(KeyPair2, "pub", function pub() {
      if (this._pubBytes)
        return this.eddsa.decodePoint(this._pubBytes);
      return this.eddsa.g.mul(this.priv());
    });
    cachedProperty(KeyPair2, "privBytes", function privBytes() {
      var eddsa = this.eddsa;
      var hash3 = this.hash();
      var lastIx = eddsa.encodingLength - 1;
      var a = hash3.slice(0, eddsa.encodingLength);
      a[0] &= 248;
      a[lastIx] &= 127;
      a[lastIx] |= 64;
      return a;
    });
    cachedProperty(KeyPair2, "priv", function priv() {
      return this.eddsa.decodeInt(this.privBytes());
    });
    cachedProperty(KeyPair2, "hash", function hash3() {
      return this.eddsa.hash().update(this.secret()).digest();
    });
    cachedProperty(KeyPair2, "messagePrefix", function messagePrefix2() {
      return this.hash().slice(this.eddsa.encodingLength);
    });
    KeyPair2.prototype.sign = function sign3(message) {
      assert2(this._secret, "KeyPair can only verify");
      return this.eddsa.sign(message, this);
    };
    KeyPair2.prototype.verify = function verify3(message, sig) {
      return this.eddsa.verify(message, sig, this);
    };
    KeyPair2.prototype.getSecret = function getSecret(enc) {
      assert2(this._secret, "KeyPair is public only");
      return utils.encode(this.secret(), enc);
    };
    KeyPair2.prototype.getPublic = function getPublic2(enc) {
      return utils.encode(this.pubBytes(), enc);
    };
    module.exports = KeyPair2;
  }
});

// node_modules/elliptic/lib/elliptic/eddsa/signature.js
var require_signature2 = __commonJS({
  "node_modules/elliptic/lib/elliptic/eddsa/signature.js"(exports, module) {
    "use strict";
    init_shim();
    var BN3 = require_bn4();
    var utils = require_utils3();
    var assert2 = utils.assert;
    var cachedProperty = utils.cachedProperty;
    var parseBytes = utils.parseBytes;
    function Signature2(eddsa, sig) {
      this.eddsa = eddsa;
      if (typeof sig !== "object")
        sig = parseBytes(sig);
      if (Array.isArray(sig)) {
        sig = {
          R: sig.slice(0, eddsa.encodingLength),
          S: sig.slice(eddsa.encodingLength)
        };
      }
      assert2(sig.R && sig.S, "Signature without R or S");
      if (eddsa.isPoint(sig.R))
        this._R = sig.R;
      if (sig.S instanceof BN3)
        this._S = sig.S;
      this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
      this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
    }
    cachedProperty(Signature2, "S", function S() {
      return this.eddsa.decodeInt(this.Sencoded());
    });
    cachedProperty(Signature2, "R", function R() {
      return this.eddsa.decodePoint(this.Rencoded());
    });
    cachedProperty(Signature2, "Rencoded", function Rencoded() {
      return this.eddsa.encodePoint(this.R());
    });
    cachedProperty(Signature2, "Sencoded", function Sencoded() {
      return this.eddsa.encodeInt(this.S());
    });
    Signature2.prototype.toBytes = function toBytes() {
      return this.Rencoded().concat(this.Sencoded());
    };
    Signature2.prototype.toHex = function toHex2() {
      return utils.encode(this.toBytes(), "hex").toUpperCase();
    };
    module.exports = Signature2;
  }
});

// node_modules/elliptic/lib/elliptic/eddsa/index.js
var require_eddsa = __commonJS({
  "node_modules/elliptic/lib/elliptic/eddsa/index.js"(exports, module) {
    "use strict";
    init_shim();
    var hash3 = require_hash2();
    var curves = require_curves();
    var utils = require_utils3();
    var assert2 = utils.assert;
    var parseBytes = utils.parseBytes;
    var KeyPair2 = require_key2();
    var Signature2 = require_signature2();
    function EDDSA(curve) {
      assert2(curve === "ed25519", "only tested with ed25519 so far");
      if (!(this instanceof EDDSA))
        return new EDDSA(curve);
      curve = curves[curve].curve;
      this.curve = curve;
      this.g = curve.g;
      this.g.precompute(curve.n.bitLength() + 1);
      this.pointClass = curve.point().constructor;
      this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
      this.hash = hash3.sha512;
    }
    module.exports = EDDSA;
    EDDSA.prototype.sign = function sign3(message, secret) {
      message = parseBytes(message);
      var key2 = this.keyFromSecret(secret);
      var r = this.hashInt(key2.messagePrefix(), message);
      var R = this.g.mul(r);
      var Rencoded = this.encodePoint(R);
      var s_ = this.hashInt(Rencoded, key2.pubBytes(), message).mul(key2.priv());
      var S = r.add(s_).umod(this.curve.n);
      return this.makeSignature({ R, S, Rencoded });
    };
    EDDSA.prototype.verify = function verify3(message, sig, pub) {
      message = parseBytes(message);
      sig = this.makeSignature(sig);
      var key2 = this.keyFromPublic(pub);
      var h = this.hashInt(sig.Rencoded(), key2.pubBytes(), message);
      var SG = this.g.mul(sig.S());
      var RplusAh = sig.R().add(key2.pub().mul(h));
      return RplusAh.eq(SG);
    };
    EDDSA.prototype.hashInt = function hashInt() {
      var hash4 = this.hash();
      for (var i = 0; i < arguments.length; i++)
        hash4.update(arguments[i]);
      return utils.intFromLE(hash4.digest()).umod(this.curve.n);
    };
    EDDSA.prototype.keyFromPublic = function keyFromPublic2(pub) {
      return KeyPair2.fromPublic(this, pub);
    };
    EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
      return KeyPair2.fromSecret(this, secret);
    };
    EDDSA.prototype.makeSignature = function makeSignature(sig) {
      if (sig instanceof Signature2)
        return sig;
      return new Signature2(this, sig);
    };
    EDDSA.prototype.encodePoint = function encodePoint(point3) {
      var enc = point3.getY().toArray("le", this.encodingLength);
      enc[this.encodingLength - 1] |= point3.getX().isOdd() ? 128 : 0;
      return enc;
    };
    EDDSA.prototype.decodePoint = function decodePoint2(bytes) {
      bytes = utils.parseBytes(bytes);
      var lastIx = bytes.length - 1;
      var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~128);
      var xIsOdd = (bytes[lastIx] & 128) !== 0;
      var y = utils.intFromLE(normed);
      return this.curve.pointFromY(y, xIsOdd);
    };
    EDDSA.prototype.encodeInt = function encodeInt(num) {
      return num.toArray("le", this.encodingLength);
    };
    EDDSA.prototype.decodeInt = function decodeInt(bytes) {
      return utils.intFromLE(bytes);
    };
    EDDSA.prototype.isPoint = function isPoint(val) {
      return val instanceof this.pointClass;
    };
  }
});

// node_modules/elliptic/lib/elliptic.js
var require_elliptic = __commonJS({
  "node_modules/elliptic/lib/elliptic.js"(exports) {
    "use strict";
    init_shim();
    var elliptic = exports;
    elliptic.version = require_package().version;
    elliptic.utils = require_utils3();
    elliptic.rand = require_brorand();
    elliptic.curve = require_curve();
    elliptic.curves = require_curves();
    elliptic.ec = require_ec();
    elliptic.eddsa = require_eddsa();
  }
});

// node_modules/asn1.js/node_modules/bn.js/lib/bn.js
var require_bn5 = __commonJS({
  "node_modules/asn1.js/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/safer-buffer/safer.js
var require_safer = __commonJS({
  "node_modules/safer-buffer/safer.js"(exports, module) {
    "use strict";
    init_shim();
    var buffer = require_buffer();
    var Buffer3 = buffer.Buffer;
    var safer = {};
    var key2;
    for (key2 in buffer) {
      if (!buffer.hasOwnProperty(key2))
        continue;
      if (key2 === "SlowBuffer" || key2 === "Buffer")
        continue;
      safer[key2] = buffer[key2];
    }
    var Safer = safer.Buffer = {};
    for (key2 in Buffer3) {
      if (!Buffer3.hasOwnProperty(key2))
        continue;
      if (key2 === "allocUnsafe" || key2 === "allocUnsafeSlow")
        continue;
      Safer[key2] = Buffer3[key2];
    }
    safer.Buffer.prototype = Buffer3.prototype;
    if (!Safer.from || Safer.from === Uint8Array.from) {
      Safer.from = function(value, encodingOrOffset, length) {
        if (typeof value === "number") {
          throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value);
        }
        if (value && typeof value.length === "undefined") {
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
        }
        return Buffer3(value, encodingOrOffset, length);
      };
    }
    if (!Safer.alloc) {
      Safer.alloc = function(size, fill, encoding) {
        if (typeof size !== "number") {
          throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size);
        }
        if (size < 0 || size >= 2 * (1 << 30)) {
          throw new RangeError('The value "' + size + '" is invalid for option "size"');
        }
        var buf = Buffer3(size);
        if (!fill || fill.length === 0) {
          buf.fill(0);
        } else if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
        return buf;
      };
    }
    if (!safer.kStringMaxLength) {
      try {
        safer.kStringMaxLength = process.binding("buffer").kStringMaxLength;
      } catch (e) {
      }
    }
    if (!safer.constants) {
      safer.constants = {
        MAX_LENGTH: safer.kMaxLength
      };
      if (safer.kStringMaxLength) {
        safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;
      }
    }
    module.exports = safer;
  }
});

// node_modules/asn1.js/lib/asn1/base/reporter.js
var require_reporter = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/reporter.js"(exports) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    function Reporter(options) {
      this._reporterState = {
        obj: null,
        path: [],
        options: options || {},
        errors: []
      };
    }
    exports.Reporter = Reporter;
    Reporter.prototype.isError = function isError(obj) {
      return obj instanceof ReporterError;
    };
    Reporter.prototype.save = function save() {
      const state = this._reporterState;
      return { obj: state.obj, pathLen: state.path.length };
    };
    Reporter.prototype.restore = function restore(data) {
      const state = this._reporterState;
      state.obj = data.obj;
      state.path = state.path.slice(0, data.pathLen);
    };
    Reporter.prototype.enterKey = function enterKey(key2) {
      return this._reporterState.path.push(key2);
    };
    Reporter.prototype.exitKey = function exitKey(index) {
      const state = this._reporterState;
      state.path = state.path.slice(0, index - 1);
    };
    Reporter.prototype.leaveKey = function leaveKey(index, key2, value) {
      const state = this._reporterState;
      this.exitKey(index);
      if (state.obj !== null)
        state.obj[key2] = value;
    };
    Reporter.prototype.path = function path() {
      return this._reporterState.path.join("/");
    };
    Reporter.prototype.enterObject = function enterObject() {
      const state = this._reporterState;
      const prev = state.obj;
      state.obj = {};
      return prev;
    };
    Reporter.prototype.leaveObject = function leaveObject(prev) {
      const state = this._reporterState;
      const now = state.obj;
      state.obj = prev;
      return now;
    };
    Reporter.prototype.error = function error(msg) {
      let err;
      const state = this._reporterState;
      const inherited = msg instanceof ReporterError;
      if (inherited) {
        err = msg;
      } else {
        err = new ReporterError(state.path.map(function(elem) {
          return "[" + JSON.stringify(elem) + "]";
        }).join(""), msg.message || msg, msg.stack);
      }
      if (!state.options.partial)
        throw err;
      if (!inherited)
        state.errors.push(err);
      return err;
    };
    Reporter.prototype.wrapResult = function wrapResult(result) {
      const state = this._reporterState;
      if (!state.options.partial)
        return result;
      return {
        result: this.isError(result) ? null : result,
        errors: state.errors
      };
    };
    function ReporterError(path, msg) {
      this.path = path;
      this.rethrow(msg);
    }
    inherits(ReporterError, Error);
    ReporterError.prototype.rethrow = function rethrow(msg) {
      this.message = msg + " at: " + (this.path || "(shallow)");
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, ReporterError);
      if (!this.stack) {
        try {
          throw new Error(this.message);
        } catch (e) {
          this.stack = e.stack;
        }
      }
      return this;
    };
  }
});

// node_modules/asn1.js/lib/asn1/base/buffer.js
var require_buffer3 = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/buffer.js"(exports) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var Reporter = require_reporter().Reporter;
    var Buffer3 = require_safer().Buffer;
    function DecoderBuffer(base2, options) {
      Reporter.call(this, options);
      if (!Buffer3.isBuffer(base2)) {
        this.error("Input not Buffer");
        return;
      }
      this.base = base2;
      this.offset = 0;
      this.length = base2.length;
    }
    inherits(DecoderBuffer, Reporter);
    exports.DecoderBuffer = DecoderBuffer;
    DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
      if (data instanceof DecoderBuffer) {
        return true;
      }
      const isCompatible = typeof data === "object" && Buffer3.isBuffer(data.base) && data.constructor.name === "DecoderBuffer" && typeof data.offset === "number" && typeof data.length === "number" && typeof data.save === "function" && typeof data.restore === "function" && typeof data.isEmpty === "function" && typeof data.readUInt8 === "function" && typeof data.skip === "function" && typeof data.raw === "function";
      return isCompatible;
    };
    DecoderBuffer.prototype.save = function save() {
      return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
    };
    DecoderBuffer.prototype.restore = function restore(save) {
      const res = new DecoderBuffer(this.base);
      res.offset = save.offset;
      res.length = this.offset;
      this.offset = save.offset;
      Reporter.prototype.restore.call(this, save.reporter);
      return res;
    };
    DecoderBuffer.prototype.isEmpty = function isEmpty() {
      return this.offset === this.length;
    };
    DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
      if (this.offset + 1 <= this.length)
        return this.base.readUInt8(this.offset++, true);
      else
        return this.error(fail || "DecoderBuffer overrun");
    };
    DecoderBuffer.prototype.skip = function skip(bytes, fail) {
      if (!(this.offset + bytes <= this.length))
        return this.error(fail || "DecoderBuffer overrun");
      const res = new DecoderBuffer(this.base);
      res._reporterState = this._reporterState;
      res.offset = this.offset;
      res.length = this.offset + bytes;
      this.offset += bytes;
      return res;
    };
    DecoderBuffer.prototype.raw = function raw(save) {
      return this.base.slice(save ? save.offset : this.offset, this.length);
    };
    function EncoderBuffer(value, reporter) {
      if (Array.isArray(value)) {
        this.length = 0;
        this.value = value.map(function(item) {
          if (!EncoderBuffer.isEncoderBuffer(item))
            item = new EncoderBuffer(item, reporter);
          this.length += item.length;
          return item;
        }, this);
      } else if (typeof value === "number") {
        if (!(0 <= value && value <= 255))
          return reporter.error("non-byte EncoderBuffer value");
        this.value = value;
        this.length = 1;
      } else if (typeof value === "string") {
        this.value = value;
        this.length = Buffer3.byteLength(value);
      } else if (Buffer3.isBuffer(value)) {
        this.value = value;
        this.length = value.length;
      } else {
        return reporter.error("Unsupported type: " + typeof value);
      }
    }
    exports.EncoderBuffer = EncoderBuffer;
    EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
      if (data instanceof EncoderBuffer) {
        return true;
      }
      const isCompatible = typeof data === "object" && data.constructor.name === "EncoderBuffer" && typeof data.length === "number" && typeof data.join === "function";
      return isCompatible;
    };
    EncoderBuffer.prototype.join = function join(out, offset) {
      if (!out)
        out = Buffer3.alloc(this.length);
      if (!offset)
        offset = 0;
      if (this.length === 0)
        return out;
      if (Array.isArray(this.value)) {
        this.value.forEach(function(item) {
          item.join(out, offset);
          offset += item.length;
        });
      } else {
        if (typeof this.value === "number")
          out[offset] = this.value;
        else if (typeof this.value === "string")
          out.write(this.value, offset);
        else if (Buffer3.isBuffer(this.value))
          this.value.copy(out, offset);
        offset += this.length;
      }
      return out;
    };
  }
});

// node_modules/asn1.js/lib/asn1/base/node.js
var require_node = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/node.js"(exports, module) {
    "use strict";
    init_shim();
    var Reporter = require_reporter().Reporter;
    var EncoderBuffer = require_buffer3().EncoderBuffer;
    var DecoderBuffer = require_buffer3().DecoderBuffer;
    var assert2 = require_minimalistic_assert();
    var tags = [
      "seq",
      "seqof",
      "set",
      "setof",
      "objid",
      "bool",
      "gentime",
      "utctime",
      "null_",
      "enum",
      "int",
      "objDesc",
      "bitstr",
      "bmpstr",
      "charstr",
      "genstr",
      "graphstr",
      "ia5str",
      "iso646str",
      "numstr",
      "octstr",
      "printstr",
      "t61str",
      "unistr",
      "utf8str",
      "videostr"
    ];
    var methods = [
      "key",
      "obj",
      "use",
      "optional",
      "explicit",
      "implicit",
      "def",
      "choice",
      "any",
      "contains"
    ].concat(tags);
    var overrided = [
      "_peekTag",
      "_decodeTag",
      "_use",
      "_decodeStr",
      "_decodeObjid",
      "_decodeTime",
      "_decodeNull",
      "_decodeInt",
      "_decodeBool",
      "_decodeList",
      "_encodeComposite",
      "_encodeStr",
      "_encodeObjid",
      "_encodeTime",
      "_encodeNull",
      "_encodeInt",
      "_encodeBool"
    ];
    function Node(enc, parent, name) {
      const state = {};
      this._baseState = state;
      state.name = name;
      state.enc = enc;
      state.parent = parent || null;
      state.children = null;
      state.tag = null;
      state.args = null;
      state.reverseArgs = null;
      state.choice = null;
      state.optional = false;
      state.any = false;
      state.obj = false;
      state.use = null;
      state.useDecoder = null;
      state.key = null;
      state["default"] = null;
      state.explicit = null;
      state.implicit = null;
      state.contains = null;
      if (!state.parent) {
        state.children = [];
        this._wrap();
      }
    }
    module.exports = Node;
    var stateProps = [
      "enc",
      "parent",
      "children",
      "tag",
      "args",
      "reverseArgs",
      "choice",
      "optional",
      "any",
      "obj",
      "use",
      "alteredUse",
      "key",
      "default",
      "explicit",
      "implicit",
      "contains"
    ];
    Node.prototype.clone = function clone() {
      const state = this._baseState;
      const cstate = {};
      stateProps.forEach(function(prop) {
        cstate[prop] = state[prop];
      });
      const res = new this.constructor(cstate.parent);
      res._baseState = cstate;
      return res;
    };
    Node.prototype._wrap = function wrap() {
      const state = this._baseState;
      methods.forEach(function(method) {
        this[method] = function _wrappedMethod() {
          const clone = new this.constructor(this);
          state.children.push(clone);
          return clone[method].apply(clone, arguments);
        };
      }, this);
    };
    Node.prototype._init = function init2(body) {
      const state = this._baseState;
      assert2(state.parent === null);
      body.call(this);
      state.children = state.children.filter(function(child) {
        return child._baseState.parent === this;
      }, this);
      assert2.equal(state.children.length, 1, "Root node can have only one child");
    };
    Node.prototype._useArgs = function useArgs(args) {
      const state = this._baseState;
      const children = args.filter(function(arg) {
        return arg instanceof this.constructor;
      }, this);
      args = args.filter(function(arg) {
        return !(arg instanceof this.constructor);
      }, this);
      if (children.length !== 0) {
        assert2(state.children === null);
        state.children = children;
        children.forEach(function(child) {
          child._baseState.parent = this;
        }, this);
      }
      if (args.length !== 0) {
        assert2(state.args === null);
        state.args = args;
        state.reverseArgs = args.map(function(arg) {
          if (typeof arg !== "object" || arg.constructor !== Object)
            return arg;
          const res = {};
          Object.keys(arg).forEach(function(key2) {
            if (key2 == (key2 | 0))
              key2 |= 0;
            const value = arg[key2];
            res[value] = key2;
          });
          return res;
        });
      }
    };
    overrided.forEach(function(method) {
      Node.prototype[method] = function _overrided() {
        const state = this._baseState;
        throw new Error(method + " not implemented for encoding: " + state.enc);
      };
    });
    tags.forEach(function(tag) {
      Node.prototype[tag] = function _tagMethod() {
        const state = this._baseState;
        const args = Array.prototype.slice.call(arguments);
        assert2(state.tag === null);
        state.tag = tag;
        this._useArgs(args);
        return this;
      };
    });
    Node.prototype.use = function use(item) {
      assert2(item);
      const state = this._baseState;
      assert2(state.use === null);
      state.use = item;
      return this;
    };
    Node.prototype.optional = function optional() {
      const state = this._baseState;
      state.optional = true;
      return this;
    };
    Node.prototype.def = function def(val) {
      const state = this._baseState;
      assert2(state["default"] === null);
      state["default"] = val;
      state.optional = true;
      return this;
    };
    Node.prototype.explicit = function explicit(num) {
      const state = this._baseState;
      assert2(state.explicit === null && state.implicit === null);
      state.explicit = num;
      return this;
    };
    Node.prototype.implicit = function implicit(num) {
      const state = this._baseState;
      assert2(state.explicit === null && state.implicit === null);
      state.implicit = num;
      return this;
    };
    Node.prototype.obj = function obj() {
      const state = this._baseState;
      const args = Array.prototype.slice.call(arguments);
      state.obj = true;
      if (args.length !== 0)
        this._useArgs(args);
      return this;
    };
    Node.prototype.key = function key2(newKey) {
      const state = this._baseState;
      assert2(state.key === null);
      state.key = newKey;
      return this;
    };
    Node.prototype.any = function any() {
      const state = this._baseState;
      state.any = true;
      return this;
    };
    Node.prototype.choice = function choice(obj) {
      const state = this._baseState;
      assert2(state.choice === null);
      state.choice = obj;
      this._useArgs(Object.keys(obj).map(function(key2) {
        return obj[key2];
      }));
      return this;
    };
    Node.prototype.contains = function contains(item) {
      const state = this._baseState;
      assert2(state.use === null);
      state.contains = item;
      return this;
    };
    Node.prototype._decode = function decode2(input, options) {
      const state = this._baseState;
      if (state.parent === null)
        return input.wrapResult(state.children[0]._decode(input, options));
      let result = state["default"];
      let present = true;
      let prevKey = null;
      if (state.key !== null)
        prevKey = input.enterKey(state.key);
      if (state.optional) {
        let tag = null;
        if (state.explicit !== null)
          tag = state.explicit;
        else if (state.implicit !== null)
          tag = state.implicit;
        else if (state.tag !== null)
          tag = state.tag;
        if (tag === null && !state.any) {
          const save = input.save();
          try {
            if (state.choice === null)
              this._decodeGeneric(state.tag, input, options);
            else
              this._decodeChoice(input, options);
            present = true;
          } catch (e) {
            present = false;
          }
          input.restore(save);
        } else {
          present = this._peekTag(input, tag, state.any);
          if (input.isError(present))
            return present;
        }
      }
      let prevObj;
      if (state.obj && present)
        prevObj = input.enterObject();
      if (present) {
        if (state.explicit !== null) {
          const explicit = this._decodeTag(input, state.explicit);
          if (input.isError(explicit))
            return explicit;
          input = explicit;
        }
        const start = input.offset;
        if (state.use === null && state.choice === null) {
          let save;
          if (state.any)
            save = input.save();
          const body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);
          if (input.isError(body))
            return body;
          if (state.any)
            result = input.raw(save);
          else
            input = body;
        }
        if (options && options.track && state.tag !== null)
          options.track(input.path(), start, input.length, "tagged");
        if (options && options.track && state.tag !== null)
          options.track(input.path(), input.offset, input.length, "content");
        if (state.any) {
        } else if (state.choice === null) {
          result = this._decodeGeneric(state.tag, input, options);
        } else {
          result = this._decodeChoice(input, options);
        }
        if (input.isError(result))
          return result;
        if (!state.any && state.choice === null && state.children !== null) {
          state.children.forEach(function decodeChildren(child) {
            child._decode(input, options);
          });
        }
        if (state.contains && (state.tag === "octstr" || state.tag === "bitstr")) {
          const data = new DecoderBuffer(result);
          result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
        }
      }
      if (state.obj && present)
        result = input.leaveObject(prevObj);
      if (state.key !== null && (result !== null || present === true))
        input.leaveKey(prevKey, state.key, result);
      else if (prevKey !== null)
        input.exitKey(prevKey);
      return result;
    };
    Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
      const state = this._baseState;
      if (tag === "seq" || tag === "set")
        return null;
      if (tag === "seqof" || tag === "setof")
        return this._decodeList(input, tag, state.args[0], options);
      else if (/str$/.test(tag))
        return this._decodeStr(input, tag, options);
      else if (tag === "objid" && state.args)
        return this._decodeObjid(input, state.args[0], state.args[1], options);
      else if (tag === "objid")
        return this._decodeObjid(input, null, null, options);
      else if (tag === "gentime" || tag === "utctime")
        return this._decodeTime(input, tag, options);
      else if (tag === "null_")
        return this._decodeNull(input, options);
      else if (tag === "bool")
        return this._decodeBool(input, options);
      else if (tag === "objDesc")
        return this._decodeStr(input, tag, options);
      else if (tag === "int" || tag === "enum")
        return this._decodeInt(input, state.args && state.args[0], options);
      if (state.use !== null) {
        return this._getUse(state.use, input._reporterState.obj)._decode(input, options);
      } else {
        return input.error("unknown tag: " + tag);
      }
    };
    Node.prototype._getUse = function _getUse(entity, obj) {
      const state = this._baseState;
      state.useDecoder = this._use(entity, obj);
      assert2(state.useDecoder._baseState.parent === null);
      state.useDecoder = state.useDecoder._baseState.children[0];
      if (state.implicit !== state.useDecoder._baseState.implicit) {
        state.useDecoder = state.useDecoder.clone();
        state.useDecoder._baseState.implicit = state.implicit;
      }
      return state.useDecoder;
    };
    Node.prototype._decodeChoice = function decodeChoice(input, options) {
      const state = this._baseState;
      let result = null;
      let match = false;
      Object.keys(state.choice).some(function(key2) {
        const save = input.save();
        const node = state.choice[key2];
        try {
          const value = node._decode(input, options);
          if (input.isError(value))
            return false;
          result = { type: key2, value };
          match = true;
        } catch (e) {
          input.restore(save);
          return false;
        }
        return true;
      }, this);
      if (!match)
        return input.error("Choice not matched");
      return result;
    };
    Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
      return new EncoderBuffer(data, this.reporter);
    };
    Node.prototype._encode = function encode3(data, reporter, parent) {
      const state = this._baseState;
      if (state["default"] !== null && state["default"] === data)
        return;
      const result = this._encodeValue(data, reporter, parent);
      if (result === void 0)
        return;
      if (this._skipDefault(result, reporter, parent))
        return;
      return result;
    };
    Node.prototype._encodeValue = function encode3(data, reporter, parent) {
      const state = this._baseState;
      if (state.parent === null)
        return state.children[0]._encode(data, reporter || new Reporter());
      let result = null;
      this.reporter = reporter;
      if (state.optional && data === void 0) {
        if (state["default"] !== null)
          data = state["default"];
        else
          return;
      }
      let content = null;
      let primitive = false;
      if (state.any) {
        result = this._createEncoderBuffer(data);
      } else if (state.choice) {
        result = this._encodeChoice(data, reporter);
      } else if (state.contains) {
        content = this._getUse(state.contains, parent)._encode(data, reporter);
        primitive = true;
      } else if (state.children) {
        content = state.children.map(function(child) {
          if (child._baseState.tag === "null_")
            return child._encode(null, reporter, data);
          if (child._baseState.key === null)
            return reporter.error("Child should have a key");
          const prevKey = reporter.enterKey(child._baseState.key);
          if (typeof data !== "object")
            return reporter.error("Child expected, but input is not object");
          const res = child._encode(data[child._baseState.key], reporter, data);
          reporter.leaveKey(prevKey);
          return res;
        }, this).filter(function(child) {
          return child;
        });
        content = this._createEncoderBuffer(content);
      } else {
        if (state.tag === "seqof" || state.tag === "setof") {
          if (!(state.args && state.args.length === 1))
            return reporter.error("Too many args for : " + state.tag);
          if (!Array.isArray(data))
            return reporter.error("seqof/setof, but data is not Array");
          const child = this.clone();
          child._baseState.implicit = null;
          content = this._createEncoderBuffer(data.map(function(item) {
            const state2 = this._baseState;
            return this._getUse(state2.args[0], data)._encode(item, reporter);
          }, child));
        } else if (state.use !== null) {
          result = this._getUse(state.use, parent)._encode(data, reporter);
        } else {
          content = this._encodePrimitive(state.tag, data);
          primitive = true;
        }
      }
      if (!state.any && state.choice === null) {
        const tag = state.implicit !== null ? state.implicit : state.tag;
        const cls = state.implicit === null ? "universal" : "context";
        if (tag === null) {
          if (state.use === null)
            reporter.error("Tag could be omitted only for .use()");
        } else {
          if (state.use === null)
            result = this._encodeComposite(tag, primitive, cls, content);
        }
      }
      if (state.explicit !== null)
        result = this._encodeComposite(state.explicit, false, "context", result);
      return result;
    };
    Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
      const state = this._baseState;
      const node = state.choice[data.type];
      if (!node) {
        assert2(false, data.type + " not found in " + JSON.stringify(Object.keys(state.choice)));
      }
      return node._encode(data.value, reporter);
    };
    Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
      const state = this._baseState;
      if (/str$/.test(tag))
        return this._encodeStr(data, tag);
      else if (tag === "objid" && state.args)
        return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
      else if (tag === "objid")
        return this._encodeObjid(data, null, null);
      else if (tag === "gentime" || tag === "utctime")
        return this._encodeTime(data, tag);
      else if (tag === "null_")
        return this._encodeNull();
      else if (tag === "int" || tag === "enum")
        return this._encodeInt(data, state.args && state.reverseArgs[0]);
      else if (tag === "bool")
        return this._encodeBool(data);
      else if (tag === "objDesc")
        return this._encodeStr(data, tag);
      else
        throw new Error("Unsupported tag: " + tag);
    };
    Node.prototype._isNumstr = function isNumstr(str) {
      return /^[0-9 ]*$/.test(str);
    };
    Node.prototype._isPrintstr = function isPrintstr(str) {
      return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
    };
  }
});

// node_modules/asn1.js/lib/asn1/constants/der.js
var require_der = __commonJS({
  "node_modules/asn1.js/lib/asn1/constants/der.js"(exports) {
    "use strict";
    init_shim();
    function reverse(map) {
      const res = {};
      Object.keys(map).forEach(function(key2) {
        if ((key2 | 0) == key2)
          key2 = key2 | 0;
        const value = map[key2];
        res[value] = key2;
      });
      return res;
    }
    exports.tagClass = {
      0: "universal",
      1: "application",
      2: "context",
      3: "private"
    };
    exports.tagClassByName = reverse(exports.tagClass);
    exports.tag = {
      0: "end",
      1: "bool",
      2: "int",
      3: "bitstr",
      4: "octstr",
      5: "null_",
      6: "objid",
      7: "objDesc",
      8: "external",
      9: "real",
      10: "enum",
      11: "embed",
      12: "utf8str",
      13: "relativeOid",
      16: "seq",
      17: "set",
      18: "numstr",
      19: "printstr",
      20: "t61str",
      21: "videostr",
      22: "ia5str",
      23: "utctime",
      24: "gentime",
      25: "graphstr",
      26: "iso646str",
      27: "genstr",
      28: "unistr",
      29: "charstr",
      30: "bmpstr"
    };
    exports.tagByName = reverse(exports.tag);
  }
});

// node_modules/asn1.js/lib/asn1/encoders/der.js
var require_der2 = __commonJS({
  "node_modules/asn1.js/lib/asn1/encoders/der.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var Buffer3 = require_safer().Buffer;
    var Node = require_node();
    var der = require_der();
    function DEREncoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DEREncoder;
    DEREncoder.prototype.encode = function encode3(data, reporter) {
      return this.tree._encode(data, reporter).join();
    };
    function DERNode(parent) {
      Node.call(this, "der", parent);
    }
    inherits(DERNode, Node);
    DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {
      const encodedTag = encodeTag(tag, primitive, cls, this.reporter);
      if (content.length < 128) {
        const header2 = Buffer3.alloc(2);
        header2[0] = encodedTag;
        header2[1] = content.length;
        return this._createEncoderBuffer([header2, content]);
      }
      let lenOctets = 1;
      for (let i = content.length; i >= 256; i >>= 8)
        lenOctets++;
      const header = Buffer3.alloc(1 + 1 + lenOctets);
      header[0] = encodedTag;
      header[1] = 128 | lenOctets;
      for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
        header[i] = j & 255;
      return this._createEncoderBuffer([header, content]);
    };
    DERNode.prototype._encodeStr = function encodeStr(str, tag) {
      if (tag === "bitstr") {
        return this._createEncoderBuffer([str.unused | 0, str.data]);
      } else if (tag === "bmpstr") {
        const buf = Buffer3.alloc(str.length * 2);
        for (let i = 0; i < str.length; i++) {
          buf.writeUInt16BE(str.charCodeAt(i), i * 2);
        }
        return this._createEncoderBuffer(buf);
      } else if (tag === "numstr") {
        if (!this._isNumstr(str)) {
          return this.reporter.error("Encoding of string type: numstr supports only digits and space");
        }
        return this._createEncoderBuffer(str);
      } else if (tag === "printstr") {
        if (!this._isPrintstr(str)) {
          return this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark");
        }
        return this._createEncoderBuffer(str);
      } else if (/str$/.test(tag)) {
        return this._createEncoderBuffer(str);
      } else if (tag === "objDesc") {
        return this._createEncoderBuffer(str);
      } else {
        return this.reporter.error("Encoding of string type: " + tag + " unsupported");
      }
    };
    DERNode.prototype._encodeObjid = function encodeObjid(id2, values, relative) {
      if (typeof id2 === "string") {
        if (!values)
          return this.reporter.error("string objid given, but no values map found");
        if (!values.hasOwnProperty(id2))
          return this.reporter.error("objid not found in values map");
        id2 = values[id2].split(/[\s.]+/g);
        for (let i = 0; i < id2.length; i++)
          id2[i] |= 0;
      } else if (Array.isArray(id2)) {
        id2 = id2.slice();
        for (let i = 0; i < id2.length; i++)
          id2[i] |= 0;
      }
      if (!Array.isArray(id2)) {
        return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(id2));
      }
      if (!relative) {
        if (id2[1] >= 40)
          return this.reporter.error("Second objid identifier OOB");
        id2.splice(0, 2, id2[0] * 40 + id2[1]);
      }
      let size = 0;
      for (let i = 0; i < id2.length; i++) {
        let ident = id2[i];
        for (size++; ident >= 128; ident >>= 7)
          size++;
      }
      const objid = Buffer3.alloc(size);
      let offset = objid.length - 1;
      for (let i = id2.length - 1; i >= 0; i--) {
        let ident = id2[i];
        objid[offset--] = ident & 127;
        while ((ident >>= 7) > 0)
          objid[offset--] = 128 | ident & 127;
      }
      return this._createEncoderBuffer(objid);
    };
    function two(num) {
      if (num < 10)
        return "0" + num;
      else
        return num;
    }
    DERNode.prototype._encodeTime = function encodeTime(time, tag) {
      let str;
      const date = new Date(time);
      if (tag === "gentime") {
        str = [
          two(date.getUTCFullYear()),
          two(date.getUTCMonth() + 1),
          two(date.getUTCDate()),
          two(date.getUTCHours()),
          two(date.getUTCMinutes()),
          two(date.getUTCSeconds()),
          "Z"
        ].join("");
      } else if (tag === "utctime") {
        str = [
          two(date.getUTCFullYear() % 100),
          two(date.getUTCMonth() + 1),
          two(date.getUTCDate()),
          two(date.getUTCHours()),
          two(date.getUTCMinutes()),
          two(date.getUTCSeconds()),
          "Z"
        ].join("");
      } else {
        this.reporter.error("Encoding " + tag + " time is not supported yet");
      }
      return this._encodeStr(str, "octstr");
    };
    DERNode.prototype._encodeNull = function encodeNull() {
      return this._createEncoderBuffer("");
    };
    DERNode.prototype._encodeInt = function encodeInt(num, values) {
      if (typeof num === "string") {
        if (!values)
          return this.reporter.error("String int or enum given, but no values map");
        if (!values.hasOwnProperty(num)) {
          return this.reporter.error("Values map doesn't contain: " + JSON.stringify(num));
        }
        num = values[num];
      }
      if (typeof num !== "number" && !Buffer3.isBuffer(num)) {
        const numArray = num.toArray();
        if (!num.sign && numArray[0] & 128) {
          numArray.unshift(0);
        }
        num = Buffer3.from(numArray);
      }
      if (Buffer3.isBuffer(num)) {
        let size2 = num.length;
        if (num.length === 0)
          size2++;
        const out2 = Buffer3.alloc(size2);
        num.copy(out2);
        if (num.length === 0)
          out2[0] = 0;
        return this._createEncoderBuffer(out2);
      }
      if (num < 128)
        return this._createEncoderBuffer(num);
      if (num < 256)
        return this._createEncoderBuffer([0, num]);
      let size = 1;
      for (let i = num; i >= 256; i >>= 8)
        size++;
      const out = new Array(size);
      for (let i = out.length - 1; i >= 0; i--) {
        out[i] = num & 255;
        num >>= 8;
      }
      if (out[0] & 128) {
        out.unshift(0);
      }
      return this._createEncoderBuffer(Buffer3.from(out));
    };
    DERNode.prototype._encodeBool = function encodeBool(value) {
      return this._createEncoderBuffer(value ? 255 : 0);
    };
    DERNode.prototype._use = function use(entity, obj) {
      if (typeof entity === "function")
        entity = entity(obj);
      return entity._getEncoder("der").tree;
    };
    DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
      const state = this._baseState;
      let i;
      if (state["default"] === null)
        return false;
      const data = dataBuffer.join();
      if (state.defaultBuffer === void 0)
        state.defaultBuffer = this._encodeValue(state["default"], reporter, parent).join();
      if (data.length !== state.defaultBuffer.length)
        return false;
      for (i = 0; i < data.length; i++)
        if (data[i] !== state.defaultBuffer[i])
          return false;
      return true;
    };
    function encodeTag(tag, primitive, cls, reporter) {
      let res;
      if (tag === "seqof")
        tag = "seq";
      else if (tag === "setof")
        tag = "set";
      if (der.tagByName.hasOwnProperty(tag))
        res = der.tagByName[tag];
      else if (typeof tag === "number" && (tag | 0) === tag)
        res = tag;
      else
        return reporter.error("Unknown tag: " + tag);
      if (res >= 31)
        return reporter.error("Multi-octet tag encoding unsupported");
      if (!primitive)
        res |= 32;
      res |= der.tagClassByName[cls || "universal"] << 6;
      return res;
    }
  }
});

// node_modules/asn1.js/lib/asn1/encoders/pem.js
var require_pem = __commonJS({
  "node_modules/asn1.js/lib/asn1/encoders/pem.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var DEREncoder = require_der2();
    function PEMEncoder(entity) {
      DEREncoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMEncoder, DEREncoder);
    module.exports = PEMEncoder;
    PEMEncoder.prototype.encode = function encode3(data, options) {
      const buf = DEREncoder.prototype.encode.call(this, data);
      const p = buf.toString("base64");
      const out = ["-----BEGIN " + options.label + "-----"];
      for (let i = 0; i < p.length; i += 64)
        out.push(p.slice(i, i + 64));
      out.push("-----END " + options.label + "-----");
      return out.join("\n");
    };
  }
});

// node_modules/asn1.js/lib/asn1/encoders/index.js
var require_encoders = __commonJS({
  "node_modules/asn1.js/lib/asn1/encoders/index.js"(exports) {
    "use strict";
    init_shim();
    var encoders = exports;
    encoders.der = require_der2();
    encoders.pem = require_pem();
  }
});

// node_modules/asn1.js/lib/asn1/decoders/der.js
var require_der3 = __commonJS({
  "node_modules/asn1.js/lib/asn1/decoders/der.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var bignum = require_bn5();
    var DecoderBuffer = require_buffer3().DecoderBuffer;
    var Node = require_node();
    var der = require_der();
    function DERDecoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DERDecoder;
    DERDecoder.prototype.decode = function decode2(data, options) {
      if (!DecoderBuffer.isDecoderBuffer(data)) {
        data = new DecoderBuffer(data, options);
      }
      return this.tree._decode(data, options);
    };
    function DERNode(parent) {
      Node.call(this, "der", parent);
    }
    inherits(DERNode, Node);
    DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
      if (buffer.isEmpty())
        return false;
      const state = buffer.save();
      const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
      if (buffer.isError(decodedTag))
        return decodedTag;
      buffer.restore(state);
      return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + "of" === tag || any;
    };
    DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
      const decodedTag = derDecodeTag(buffer, 'Failed to decode tag of "' + tag + '"');
      if (buffer.isError(decodedTag))
        return decodedTag;
      let len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of "' + tag + '"');
      if (buffer.isError(len))
        return len;
      if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + "of" !== tag) {
        return buffer.error('Failed to match tag: "' + tag + '"');
      }
      if (decodedTag.primitive || len !== null)
        return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
      const state = buffer.save();
      const res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: "' + this.tag + '"');
      if (buffer.isError(res))
        return res;
      len = buffer.offset - state.offset;
      buffer.restore(state);
      return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
    };
    DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
      for (; ; ) {
        const tag = derDecodeTag(buffer, fail);
        if (buffer.isError(tag))
          return tag;
        const len = derDecodeLen(buffer, tag.primitive, fail);
        if (buffer.isError(len))
          return len;
        let res;
        if (tag.primitive || len !== null)
          res = buffer.skip(len);
        else
          res = this._skipUntilEnd(buffer, fail);
        if (buffer.isError(res))
          return res;
        if (tag.tagStr === "end")
          break;
      }
    };
    DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {
      const result = [];
      while (!buffer.isEmpty()) {
        const possibleEnd = this._peekTag(buffer, "end");
        if (buffer.isError(possibleEnd))
          return possibleEnd;
        const res = decoder.decode(buffer, "der", options);
        if (buffer.isError(res) && possibleEnd)
          break;
        result.push(res);
      }
      return result;
    };
    DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
      if (tag === "bitstr") {
        const unused = buffer.readUInt8();
        if (buffer.isError(unused))
          return unused;
        return { unused, data: buffer.raw() };
      } else if (tag === "bmpstr") {
        const raw = buffer.raw();
        if (raw.length % 2 === 1)
          return buffer.error("Decoding of string type: bmpstr length mismatch");
        let str = "";
        for (let i = 0; i < raw.length / 2; i++) {
          str += String.fromCharCode(raw.readUInt16BE(i * 2));
        }
        return str;
      } else if (tag === "numstr") {
        const numstr = buffer.raw().toString("ascii");
        if (!this._isNumstr(numstr)) {
          return buffer.error("Decoding of string type: numstr unsupported characters");
        }
        return numstr;
      } else if (tag === "octstr") {
        return buffer.raw();
      } else if (tag === "objDesc") {
        return buffer.raw();
      } else if (tag === "printstr") {
        const printstr = buffer.raw().toString("ascii");
        if (!this._isPrintstr(printstr)) {
          return buffer.error("Decoding of string type: printstr unsupported characters");
        }
        return printstr;
      } else if (/str$/.test(tag)) {
        return buffer.raw().toString();
      } else {
        return buffer.error("Decoding of string type: " + tag + " unsupported");
      }
    };
    DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
      let result;
      const identifiers = [];
      let ident = 0;
      let subident = 0;
      while (!buffer.isEmpty()) {
        subident = buffer.readUInt8();
        ident <<= 7;
        ident |= subident & 127;
        if ((subident & 128) === 0) {
          identifiers.push(ident);
          ident = 0;
        }
      }
      if (subident & 128)
        identifiers.push(ident);
      const first = identifiers[0] / 40 | 0;
      const second = identifiers[0] % 40;
      if (relative)
        result = identifiers;
      else
        result = [first, second].concat(identifiers.slice(1));
      if (values) {
        let tmp = values[result.join(" ")];
        if (tmp === void 0)
          tmp = values[result.join(".")];
        if (tmp !== void 0)
          result = tmp;
      }
      return result;
    };
    DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
      const str = buffer.raw().toString();
      let year;
      let mon;
      let day;
      let hour;
      let min;
      let sec;
      if (tag === "gentime") {
        year = str.slice(0, 4) | 0;
        mon = str.slice(4, 6) | 0;
        day = str.slice(6, 8) | 0;
        hour = str.slice(8, 10) | 0;
        min = str.slice(10, 12) | 0;
        sec = str.slice(12, 14) | 0;
      } else if (tag === "utctime") {
        year = str.slice(0, 2) | 0;
        mon = str.slice(2, 4) | 0;
        day = str.slice(4, 6) | 0;
        hour = str.slice(6, 8) | 0;
        min = str.slice(8, 10) | 0;
        sec = str.slice(10, 12) | 0;
        if (year < 70)
          year = 2e3 + year;
        else
          year = 1900 + year;
      } else {
        return buffer.error("Decoding " + tag + " time is not supported yet");
      }
      return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
    };
    DERNode.prototype._decodeNull = function decodeNull() {
      return null;
    };
    DERNode.prototype._decodeBool = function decodeBool(buffer) {
      const res = buffer.readUInt8();
      if (buffer.isError(res))
        return res;
      else
        return res !== 0;
    };
    DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
      const raw = buffer.raw();
      let res = new bignum(raw);
      if (values)
        res = values[res.toString(10)] || res;
      return res;
    };
    DERNode.prototype._use = function use(entity, obj) {
      if (typeof entity === "function")
        entity = entity(obj);
      return entity._getDecoder("der").tree;
    };
    function derDecodeTag(buf, fail) {
      let tag = buf.readUInt8(fail);
      if (buf.isError(tag))
        return tag;
      const cls = der.tagClass[tag >> 6];
      const primitive = (tag & 32) === 0;
      if ((tag & 31) === 31) {
        let oct = tag;
        tag = 0;
        while ((oct & 128) === 128) {
          oct = buf.readUInt8(fail);
          if (buf.isError(oct))
            return oct;
          tag <<= 7;
          tag |= oct & 127;
        }
      } else {
        tag &= 31;
      }
      const tagStr = der.tag[tag];
      return {
        cls,
        primitive,
        tag,
        tagStr
      };
    }
    function derDecodeLen(buf, primitive, fail) {
      let len = buf.readUInt8(fail);
      if (buf.isError(len))
        return len;
      if (!primitive && len === 128)
        return null;
      if ((len & 128) === 0) {
        return len;
      }
      const num = len & 127;
      if (num > 4)
        return buf.error("length octect is too long");
      len = 0;
      for (let i = 0; i < num; i++) {
        len <<= 8;
        const j = buf.readUInt8(fail);
        if (buf.isError(j))
          return j;
        len |= j;
      }
      return len;
    }
  }
});

// node_modules/asn1.js/lib/asn1/decoders/pem.js
var require_pem2 = __commonJS({
  "node_modules/asn1.js/lib/asn1/decoders/pem.js"(exports, module) {
    "use strict";
    init_shim();
    var inherits = require_inherits_browser();
    var Buffer3 = require_safer().Buffer;
    var DERDecoder = require_der3();
    function PEMDecoder(entity) {
      DERDecoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMDecoder, DERDecoder);
    module.exports = PEMDecoder;
    PEMDecoder.prototype.decode = function decode2(data, options) {
      const lines = data.toString().split(/[\r\n]+/g);
      const label = options.label.toUpperCase();
      const re = /^-----(BEGIN|END) ([^-]+)-----$/;
      let start = -1;
      let end = -1;
      for (let i = 0; i < lines.length; i++) {
        const match = lines[i].match(re);
        if (match === null)
          continue;
        if (match[2] !== label)
          continue;
        if (start === -1) {
          if (match[1] !== "BEGIN")
            break;
          start = i;
        } else {
          if (match[1] !== "END")
            break;
          end = i;
          break;
        }
      }
      if (start === -1 || end === -1)
        throw new Error("PEM section not found for: " + label);
      const base64 = lines.slice(start + 1, end).join("");
      base64.replace(/[^a-z0-9+/=]+/gi, "");
      const input = Buffer3.from(base64, "base64");
      return DERDecoder.prototype.decode.call(this, input, options);
    };
  }
});

// node_modules/asn1.js/lib/asn1/decoders/index.js
var require_decoders = __commonJS({
  "node_modules/asn1.js/lib/asn1/decoders/index.js"(exports) {
    "use strict";
    init_shim();
    var decoders = exports;
    decoders.der = require_der3();
    decoders.pem = require_pem2();
  }
});

// node_modules/asn1.js/lib/asn1/api.js
var require_api = __commonJS({
  "node_modules/asn1.js/lib/asn1/api.js"(exports) {
    "use strict";
    init_shim();
    var encoders = require_encoders();
    var decoders = require_decoders();
    var inherits = require_inherits_browser();
    var api = exports;
    api.define = function define2(name, body) {
      return new Entity(name, body);
    };
    function Entity(name, body) {
      this.name = name;
      this.body = body;
      this.decoders = {};
      this.encoders = {};
    }
    Entity.prototype._createNamed = function createNamed(Base) {
      const name = this.name;
      function Generated(entity) {
        this._initNamed(entity, name);
      }
      inherits(Generated, Base);
      Generated.prototype._initNamed = function _initNamed(entity, name2) {
        Base.call(this, entity, name2);
      };
      return new Generated(this);
    };
    Entity.prototype._getDecoder = function _getDecoder(enc) {
      enc = enc || "der";
      if (!this.decoders.hasOwnProperty(enc))
        this.decoders[enc] = this._createNamed(decoders[enc]);
      return this.decoders[enc];
    };
    Entity.prototype.decode = function decode2(data, enc, options) {
      return this._getDecoder(enc).decode(data, options);
    };
    Entity.prototype._getEncoder = function _getEncoder(enc) {
      enc = enc || "der";
      if (!this.encoders.hasOwnProperty(enc))
        this.encoders[enc] = this._createNamed(encoders[enc]);
      return this.encoders[enc];
    };
    Entity.prototype.encode = function encode3(data, enc, reporter) {
      return this._getEncoder(enc).encode(data, reporter);
    };
  }
});

// node_modules/asn1.js/lib/asn1/base/index.js
var require_base3 = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/index.js"(exports) {
    "use strict";
    init_shim();
    var base2 = exports;
    base2.Reporter = require_reporter().Reporter;
    base2.DecoderBuffer = require_buffer3().DecoderBuffer;
    base2.EncoderBuffer = require_buffer3().EncoderBuffer;
    base2.Node = require_node();
  }
});

// node_modules/asn1.js/lib/asn1/constants/index.js
var require_constants = __commonJS({
  "node_modules/asn1.js/lib/asn1/constants/index.js"(exports) {
    "use strict";
    init_shim();
    var constants = exports;
    constants._reverse = function reverse(map) {
      const res = {};
      Object.keys(map).forEach(function(key2) {
        if ((key2 | 0) == key2)
          key2 = key2 | 0;
        const value = map[key2];
        res[value] = key2;
      });
      return res;
    };
    constants.der = require_der();
  }
});

// node_modules/asn1.js/lib/asn1.js
var require_asn1 = __commonJS({
  "node_modules/asn1.js/lib/asn1.js"(exports) {
    "use strict";
    init_shim();
    var asn1 = exports;
    asn1.bignum = require_bn5();
    asn1.define = require_api().define;
    asn1.base = require_base3();
    asn1.constants = require_constants();
    asn1.decoders = require_decoders();
    asn1.encoders = require_encoders();
  }
});

// node_modules/parse-asn1/certificate.js
var require_certificate = __commonJS({
  "node_modules/parse-asn1/certificate.js"(exports, module) {
    "use strict";
    init_shim();
    var asn = require_asn1();
    var Time = asn.define("Time", function() {
      this.choice({
        utcTime: this.utctime(),
        generalTime: this.gentime()
      });
    });
    var AttributeTypeValue = asn.define("AttributeTypeValue", function() {
      this.seq().obj(this.key("type").objid(), this.key("value").any());
    });
    var AlgorithmIdentifier = asn.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
    });
    var SubjectPublicKeyInfo = asn.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
    });
    var RelativeDistinguishedName = asn.define("RelativeDistinguishedName", function() {
      this.setof(AttributeTypeValue);
    });
    var RDNSequence = asn.define("RDNSequence", function() {
      this.seqof(RelativeDistinguishedName);
    });
    var Name = asn.define("Name", function() {
      this.choice({
        rdnSequence: this.use(RDNSequence)
      });
    });
    var Validity = asn.define("Validity", function() {
      this.seq().obj(this.key("notBefore").use(Time), this.key("notAfter").use(Time));
    });
    var Extension = asn.define("Extension", function() {
      this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
    });
    var TBSCertificate = asn.define("TBSCertificate", function() {
      this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(AlgorithmIdentifier), this.key("issuer").use(Name), this.key("validity").use(Validity), this.key("subject").use(Name), this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(Extension).optional());
    });
    var X509Certificate = asn.define("X509Certificate", function() {
      this.seq().obj(this.key("tbsCertificate").use(TBSCertificate), this.key("signatureAlgorithm").use(AlgorithmIdentifier), this.key("signatureValue").bitstr());
    });
    module.exports = X509Certificate;
  }
});

// node_modules/parse-asn1/asn1.js
var require_asn12 = __commonJS({
  "node_modules/parse-asn1/asn1.js"(exports) {
    "use strict";
    init_shim();
    var asn1 = require_asn1();
    exports.certificate = require_certificate();
    var RSAPrivateKey = asn1.define("RSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
    });
    exports.RSAPrivateKey = RSAPrivateKey;
    var RSAPublicKey = asn1.define("RSAPublicKey", function() {
      this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
    });
    exports.RSAPublicKey = RSAPublicKey;
    var PublicKey = asn1.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
    });
    exports.PublicKey = PublicKey;
    var AlgorithmIdentifier = asn1.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
    });
    var PrivateKeyInfo = asn1.define("PrivateKeyInfo", function() {
      this.seq().obj(this.key("version").int(), this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPrivateKey").octstr());
    });
    exports.PrivateKey = PrivateKeyInfo;
    var EncryptedPrivateKeyInfo = asn1.define("EncryptedPrivateKeyInfo", function() {
      this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
    });
    exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
    var DSAPrivateKey = asn1.define("DSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
    });
    exports.DSAPrivateKey = DSAPrivateKey;
    exports.DSAparam = asn1.define("DSAparam", function() {
      this.int();
    });
    var ECPrivateKey = asn1.define("ECPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(ECParameters), this.key("publicKey").optional().explicit(1).bitstr());
    });
    exports.ECPrivateKey = ECPrivateKey;
    var ECParameters = asn1.define("ECParameters", function() {
      this.choice({
        namedCurve: this.objid()
      });
    });
    exports.signature = asn1.define("signature", function() {
      this.seq().obj(this.key("r").int(), this.key("s").int());
    });
  }
});

// node_modules/parse-asn1/aesid.json
var require_aesid = __commonJS({
  "node_modules/parse-asn1/aesid.json"(exports, module) {
    module.exports = {
      "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
      "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
      "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
      "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
      "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
      "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
      "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
      "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
      "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
      "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
      "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
      "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
    };
  }
});

// node_modules/parse-asn1/fixProc.js
var require_fixProc = __commonJS({
  "node_modules/parse-asn1/fixProc.js"(exports, module) {
    init_shim();
    var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m;
    var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;
    var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m;
    var evp = require_evp_bytestokey();
    var ciphers = require_browser7();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = function(okey, password) {
      var key2 = okey.toString();
      var match = key2.match(findProc);
      var decrypted;
      if (!match) {
        var match2 = key2.match(fullRegex);
        decrypted = Buffer3.from(match2[2].replace(/[\r\n]/g, ""), "base64");
      } else {
        var suite = "aes" + match[1];
        var iv = Buffer3.from(match[2], "hex");
        var cipherText = Buffer3.from(match[3].replace(/[\r\n]/g, ""), "base64");
        var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;
        var out = [];
        var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
        out.push(cipher.update(cipherText));
        out.push(cipher.final());
        decrypted = Buffer3.concat(out);
      }
      var tag = key2.match(startRegex)[1];
      return {
        tag,
        data: decrypted
      };
    };
  }
});

// node_modules/parse-asn1/index.js
var require_parse_asn1 = __commonJS({
  "node_modules/parse-asn1/index.js"(exports, module) {
    init_shim();
    var asn1 = require_asn12();
    var aesid = require_aesid();
    var fixProc = require_fixProc();
    var ciphers = require_browser7();
    var compat = require_browser6();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = parseKeys;
    function parseKeys(buffer) {
      var password;
      if (typeof buffer === "object" && !Buffer3.isBuffer(buffer)) {
        password = buffer.passphrase;
        buffer = buffer.key;
      }
      if (typeof buffer === "string") {
        buffer = Buffer3.from(buffer);
      }
      var stripped = fixProc(buffer, password);
      var type = stripped.tag;
      var data = stripped.data;
      var subtype, ndata;
      switch (type) {
        case "CERTIFICATE":
          ndata = asn1.certificate.decode(data, "der").tbsCertificate.subjectPublicKeyInfo;
        case "PUBLIC KEY":
          if (!ndata) {
            ndata = asn1.PublicKey.decode(data, "der");
          }
          subtype = ndata.algorithm.algorithm.join(".");
          switch (subtype) {
            case "1.2.840.113549.1.1.1":
              return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, "der");
            case "1.2.840.10045.2.1":
              ndata.subjectPrivateKey = ndata.subjectPublicKey;
              return {
                type: "ec",
                data: ndata
              };
            case "1.2.840.10040.4.1":
              ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, "der");
              return {
                type: "dsa",
                data: ndata.algorithm.params
              };
            default:
              throw new Error("unknown key id " + subtype);
          }
        case "ENCRYPTED PRIVATE KEY":
          data = asn1.EncryptedPrivateKey.decode(data, "der");
          data = decrypt3(data, password);
        case "PRIVATE KEY":
          ndata = asn1.PrivateKey.decode(data, "der");
          subtype = ndata.algorithm.algorithm.join(".");
          switch (subtype) {
            case "1.2.840.113549.1.1.1":
              return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, "der");
            case "1.2.840.10045.2.1":
              return {
                curve: ndata.algorithm.curve,
                privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, "der").privateKey
              };
            case "1.2.840.10040.4.1":
              ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, "der");
              return {
                type: "dsa",
                params: ndata.algorithm.params
              };
            default:
              throw new Error("unknown key id " + subtype);
          }
        case "RSA PUBLIC KEY":
          return asn1.RSAPublicKey.decode(data, "der");
        case "RSA PRIVATE KEY":
          return asn1.RSAPrivateKey.decode(data, "der");
        case "DSA PRIVATE KEY":
          return {
            type: "dsa",
            params: asn1.DSAPrivateKey.decode(data, "der")
          };
        case "EC PRIVATE KEY":
          data = asn1.ECPrivateKey.decode(data, "der");
          return {
            curve: data.parameters.value,
            privateKey: data.privateKey
          };
        default:
          throw new Error("unknown key type " + type);
      }
    }
    parseKeys.signature = asn1.signature;
    function decrypt3(data, password) {
      var salt = data.algorithm.decrypt.kde.kdeparams.salt;
      var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);
      var algo = aesid[data.algorithm.decrypt.cipher.algo.join(".")];
      var iv = data.algorithm.decrypt.cipher.iv;
      var cipherText = data.subjectPrivateKey;
      var keylen = parseInt(algo.split("-")[1], 10) / 8;
      var key2 = compat.pbkdf2Sync(password, salt, iters, keylen, "sha1");
      var cipher = ciphers.createDecipheriv(algo, key2, iv);
      var out = [];
      out.push(cipher.update(cipherText));
      out.push(cipher.final());
      return Buffer3.concat(out);
    }
  }
});

// node_modules/browserify-sign/browser/curves.json
var require_curves2 = __commonJS({
  "node_modules/browserify-sign/browser/curves.json"(exports, module) {
    module.exports = {
      "1.3.132.0.10": "secp256k1",
      "1.3.132.0.33": "p224",
      "1.2.840.10045.3.1.1": "p192",
      "1.2.840.10045.3.1.7": "p256",
      "1.3.132.0.34": "p384",
      "1.3.132.0.35": "p521"
    };
  }
});

// node_modules/browserify-sign/browser/sign.js
var require_sign = __commonJS({
  "node_modules/browserify-sign/browser/sign.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var createHmac = require_browser5();
    var crt = require_browserify_rsa();
    var EC2 = require_elliptic().ec;
    var BN3 = require_bn3();
    var parseKeys = require_parse_asn1();
    var curves = require_curves2();
    function sign3(hash3, key2, hashType, signType, tag) {
      var priv = parseKeys(key2);
      if (priv.curve) {
        if (signType !== "ecdsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong private key type");
        return ecSign(hash3, priv);
      } else if (priv.type === "dsa") {
        if (signType !== "dsa")
          throw new Error("wrong private key type");
        return dsaSign(hash3, priv, hashType);
      } else {
        if (signType !== "rsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong private key type");
      }
      hash3 = Buffer3.concat([tag, hash3]);
      var len = priv.modulus.byteLength();
      var pad = [0, 1];
      while (hash3.length + pad.length + 1 < len)
        pad.push(255);
      pad.push(0);
      var i = -1;
      while (++i < hash3.length)
        pad.push(hash3[i]);
      var out = crt(pad, priv);
      return out;
    }
    function ecSign(hash3, priv) {
      var curveId = curves[priv.curve.join(".")];
      if (!curveId)
        throw new Error("unknown curve " + priv.curve.join("."));
      var curve = new EC2(curveId);
      var key2 = curve.keyFromPrivate(priv.privateKey);
      var out = key2.sign(hash3);
      return Buffer3.from(out.toDER());
    }
    function dsaSign(hash3, priv, algo) {
      var x = priv.params.priv_key;
      var p = priv.params.p;
      var q = priv.params.q;
      var g = priv.params.g;
      var r = new BN3(0);
      var k;
      var H = bits2int(hash3, q).mod(q);
      var s = false;
      var kv = getKey(x, q, hash3, algo);
      while (s === false) {
        k = makeKey(q, kv, algo);
        r = makeR(g, k, p, q);
        s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
        if (s.cmpn(0) === 0) {
          s = false;
          r = new BN3(0);
        }
      }
      return toDER2(r, s);
    }
    function toDER2(r, s) {
      r = r.toArray();
      s = s.toArray();
      if (r[0] & 128)
        r = [0].concat(r);
      if (s[0] & 128)
        s = [0].concat(s);
      var total = r.length + s.length + 4;
      var res = [48, total, 2, r.length];
      res = res.concat(r, [2, s.length], s);
      return Buffer3.from(res);
    }
    function getKey(x, q, hash3, algo) {
      x = Buffer3.from(x.toArray());
      if (x.length < q.byteLength()) {
        var zeros = Buffer3.alloc(q.byteLength() - x.length);
        x = Buffer3.concat([zeros, x]);
      }
      var hlen = hash3.length;
      var hbits = bits2octets(hash3, q);
      var v = Buffer3.alloc(hlen);
      v.fill(1);
      var k = Buffer3.alloc(hlen);
      k = createHmac(algo, k).update(v).update(Buffer3.from([0])).update(x).update(hbits).digest();
      v = createHmac(algo, k).update(v).digest();
      k = createHmac(algo, k).update(v).update(Buffer3.from([1])).update(x).update(hbits).digest();
      v = createHmac(algo, k).update(v).digest();
      return { k, v };
    }
    function bits2int(obits, q) {
      var bits = new BN3(obits);
      var shift = (obits.length << 3) - q.bitLength();
      if (shift > 0)
        bits.ishrn(shift);
      return bits;
    }
    function bits2octets(bits, q) {
      bits = bits2int(bits, q);
      bits = bits.mod(q);
      var out = Buffer3.from(bits.toArray());
      if (out.length < q.byteLength()) {
        var zeros = Buffer3.alloc(q.byteLength() - out.length);
        out = Buffer3.concat([zeros, out]);
      }
      return out;
    }
    function makeKey(q, kv, algo) {
      var t;
      var k;
      do {
        t = Buffer3.alloc(0);
        while (t.length * 8 < q.bitLength()) {
          kv.v = createHmac(algo, kv.k).update(kv.v).digest();
          t = Buffer3.concat([t, kv.v]);
        }
        k = bits2int(t, q);
        kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer3.from([0])).digest();
        kv.v = createHmac(algo, kv.k).update(kv.v).digest();
      } while (k.cmp(q) !== -1);
      return k;
    }
    function makeR(g, k, p, q) {
      return g.toRed(BN3.mont(p)).redPow(k).fromRed().mod(q);
    }
    module.exports = sign3;
    module.exports.getKey = getKey;
    module.exports.makeKey = makeKey;
  }
});

// node_modules/browserify-sign/browser/verify.js
var require_verify = __commonJS({
  "node_modules/browserify-sign/browser/verify.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var BN3 = require_bn3();
    var EC2 = require_elliptic().ec;
    var parseKeys = require_parse_asn1();
    var curves = require_curves2();
    function verify3(sig, hash3, key2, signType, tag) {
      var pub = parseKeys(key2);
      if (pub.type === "ec") {
        if (signType !== "ecdsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong public key type");
        return ecVerify(sig, hash3, pub);
      } else if (pub.type === "dsa") {
        if (signType !== "dsa")
          throw new Error("wrong public key type");
        return dsaVerify(sig, hash3, pub);
      } else {
        if (signType !== "rsa" && signType !== "ecdsa/rsa")
          throw new Error("wrong public key type");
      }
      hash3 = Buffer3.concat([tag, hash3]);
      var len = pub.modulus.byteLength();
      var pad = [1];
      var padNum = 0;
      while (hash3.length + pad.length + 2 < len) {
        pad.push(255);
        padNum++;
      }
      pad.push(0);
      var i = -1;
      while (++i < hash3.length) {
        pad.push(hash3[i]);
      }
      pad = Buffer3.from(pad);
      var red = BN3.mont(pub.modulus);
      sig = new BN3(sig).toRed(red);
      sig = sig.redPow(new BN3(pub.publicExponent));
      sig = Buffer3.from(sig.fromRed().toArray());
      var out = padNum < 8 ? 1 : 0;
      len = Math.min(sig.length, pad.length);
      if (sig.length !== pad.length)
        out = 1;
      i = -1;
      while (++i < len)
        out |= sig[i] ^ pad[i];
      return out === 0;
    }
    function ecVerify(sig, hash3, pub) {
      var curveId = curves[pub.data.algorithm.curve.join(".")];
      if (!curveId)
        throw new Error("unknown curve " + pub.data.algorithm.curve.join("."));
      var curve = new EC2(curveId);
      var pubkey = pub.data.subjectPrivateKey.data;
      return curve.verify(hash3, sig, pubkey);
    }
    function dsaVerify(sig, hash3, pub) {
      var p = pub.data.p;
      var q = pub.data.q;
      var g = pub.data.g;
      var y = pub.data.pub_key;
      var unpacked = parseKeys.signature.decode(sig, "der");
      var s = unpacked.s;
      var r = unpacked.r;
      checkValue(s, q);
      checkValue(r, q);
      var montp = BN3.mont(p);
      var w = s.invm(q);
      var v = g.toRed(montp).redPow(new BN3(hash3).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);
      return v.cmp(r) === 0;
    }
    function checkValue(b, q) {
      if (b.cmpn(0) <= 0)
        throw new Error("invalid sig");
      if (b.cmp(q) >= q)
        throw new Error("invalid sig");
    }
    module.exports = verify3;
  }
});

// node_modules/browserify-sign/browser/index.js
var require_browser10 = __commonJS({
  "node_modules/browserify-sign/browser/index.js"(exports, module) {
    init_shim();
    var Buffer3 = require_safe_buffer().Buffer;
    var createHash = require_browser3();
    var stream = require_readable_browser2();
    var inherits = require_inherits_browser();
    var sign3 = require_sign();
    var verify3 = require_verify();
    var algorithms = require_algorithms();
    Object.keys(algorithms).forEach(function(key2) {
      algorithms[key2].id = Buffer3.from(algorithms[key2].id, "hex");
      algorithms[key2.toLowerCase()] = algorithms[key2];
    });
    function Sign(algorithm) {
      stream.Writable.call(this);
      var data = algorithms[algorithm];
      if (!data)
        throw new Error("Unknown message digest");
      this._hashType = data.hash;
      this._hash = createHash(data.hash);
      this._tag = data.id;
      this._signType = data.sign;
    }
    inherits(Sign, stream.Writable);
    Sign.prototype._write = function _write(data, _, done) {
      this._hash.update(data);
      done();
    };
    Sign.prototype.update = function update2(data, enc) {
      if (typeof data === "string")
        data = Buffer3.from(data, enc);
      this._hash.update(data);
      return this;
    };
    Sign.prototype.sign = function signMethod(key2, enc) {
      this.end();
      var hash3 = this._hash.digest();
      var sig = sign3(hash3, key2, this._hashType, this._signType, this._tag);
      return enc ? sig.toString(enc) : sig;
    };
    function Verify(algorithm) {
      stream.Writable.call(this);
      var data = algorithms[algorithm];
      if (!data)
        throw new Error("Unknown message digest");
      this._hash = createHash(data.hash);
      this._tag = data.id;
      this._signType = data.sign;
    }
    inherits(Verify, stream.Writable);
    Verify.prototype._write = function _write(data, _, done) {
      this._hash.update(data);
      done();
    };
    Verify.prototype.update = function update2(data, enc) {
      if (typeof data === "string")
        data = Buffer3.from(data, enc);
      this._hash.update(data);
      return this;
    };
    Verify.prototype.verify = function verifyMethod(key2, sig, enc) {
      if (typeof sig === "string")
        sig = Buffer3.from(sig, enc);
      this.end();
      var hash3 = this._hash.digest();
      return verify3(sig, hash3, key2, this._signType, this._tag);
    };
    function createSign(algorithm) {
      return new Sign(algorithm);
    }
    function createVerify(algorithm) {
      return new Verify(algorithm);
    }
    module.exports = {
      Sign: createSign,
      Verify: createVerify,
      createSign,
      createVerify
    };
  }
});

// node_modules/create-ecdh/node_modules/bn.js/lib/bn.js
var require_bn6 = __commonJS({
  "node_modules/create-ecdh/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/create-ecdh/browser.js
var require_browser11 = __commonJS({
  "node_modules/create-ecdh/browser.js"(exports, module) {
    init_shim();
    var elliptic = require_elliptic();
    var BN3 = require_bn6();
    module.exports = function createECDH(curve) {
      return new ECDH(curve);
    };
    var aliases = {
      secp256k1: {
        name: "secp256k1",
        byteLength: 32
      },
      secp224r1: {
        name: "p224",
        byteLength: 28
      },
      prime256v1: {
        name: "p256",
        byteLength: 32
      },
      prime192v1: {
        name: "p192",
        byteLength: 24
      },
      ed25519: {
        name: "ed25519",
        byteLength: 32
      },
      secp384r1: {
        name: "p384",
        byteLength: 48
      },
      secp521r1: {
        name: "p521",
        byteLength: 66
      }
    };
    aliases.p224 = aliases.secp224r1;
    aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
    aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
    aliases.p384 = aliases.secp384r1;
    aliases.p521 = aliases.secp521r1;
    function ECDH(curve) {
      this.curveType = aliases[curve];
      if (!this.curveType) {
        this.curveType = {
          name: curve
        };
      }
      this.curve = new elliptic.ec(this.curveType.name);
      this.keys = void 0;
    }
    ECDH.prototype.generateKeys = function(enc, format) {
      this.keys = this.curve.genKeyPair();
      return this.getPublicKey(enc, format);
    };
    ECDH.prototype.computeSecret = function(other, inenc, enc) {
      inenc = inenc || "utf8";
      if (!Buffer2.isBuffer(other)) {
        other = new Buffer2(other, inenc);
      }
      var otherPub = this.curve.keyFromPublic(other).getPublic();
      var out = otherPub.mul(this.keys.getPrivate()).getX();
      return formatReturnValue(out, enc, this.curveType.byteLength);
    };
    ECDH.prototype.getPublicKey = function(enc, format) {
      var key2 = this.keys.getPublic(format === "compressed", true);
      if (format === "hybrid") {
        if (key2[key2.length - 1] % 2) {
          key2[0] = 7;
        } else {
          key2[0] = 6;
        }
      }
      return formatReturnValue(key2, enc);
    };
    ECDH.prototype.getPrivateKey = function(enc) {
      return formatReturnValue(this.keys.getPrivate(), enc);
    };
    ECDH.prototype.setPublicKey = function(pub, enc) {
      enc = enc || "utf8";
      if (!Buffer2.isBuffer(pub)) {
        pub = new Buffer2(pub, enc);
      }
      this.keys._importPublic(pub);
      return this;
    };
    ECDH.prototype.setPrivateKey = function(priv, enc) {
      enc = enc || "utf8";
      if (!Buffer2.isBuffer(priv)) {
        priv = new Buffer2(priv, enc);
      }
      var _priv = new BN3(priv);
      _priv = _priv.toString(16);
      this.keys = this.curve.genKeyPair();
      this.keys._importPrivate(_priv);
      return this;
    };
    function formatReturnValue(bn, enc, len) {
      if (!Array.isArray(bn)) {
        bn = bn.toArray();
      }
      var buf = new Buffer2(bn);
      if (len && buf.length < len) {
        var zeros = new Buffer2(len - buf.length);
        zeros.fill(0);
        buf = Buffer2.concat([zeros, buf]);
      }
      if (!enc) {
        return buf;
      } else {
        return buf.toString(enc);
      }
    }
  }
});

// node_modules/public-encrypt/mgf.js
var require_mgf = __commonJS({
  "node_modules/public-encrypt/mgf.js"(exports, module) {
    init_shim();
    var createHash = require_browser3();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = function(seed, len) {
      var t = Buffer3.alloc(0);
      var i = 0;
      var c;
      while (t.length < len) {
        c = i2ops(i++);
        t = Buffer3.concat([t, createHash("sha1").update(seed).update(c).digest()]);
      }
      return t.slice(0, len);
    };
    function i2ops(c) {
      var out = Buffer3.allocUnsafe(4);
      out.writeUInt32BE(c, 0);
      return out;
    }
  }
});

// node_modules/public-encrypt/xor.js
var require_xor = __commonJS({
  "node_modules/public-encrypt/xor.js"(exports, module) {
    init_shim();
    module.exports = function xor(a, b) {
      var len = a.length;
      var i = -1;
      while (++i < len) {
        a[i] ^= b[i];
      }
      return a;
    };
  }
});

// node_modules/public-encrypt/node_modules/bn.js/lib/bn.js
var require_bn7 = __commonJS({
  "node_modules/public-encrypt/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/public-encrypt/withPublic.js
var require_withPublic = __commonJS({
  "node_modules/public-encrypt/withPublic.js"(exports, module) {
    init_shim();
    var BN3 = require_bn7();
    var Buffer3 = require_safe_buffer().Buffer;
    function withPublic(paddedMsg, key2) {
      return Buffer3.from(paddedMsg.toRed(BN3.mont(key2.modulus)).redPow(new BN3(key2.publicExponent)).fromRed().toArray());
    }
    module.exports = withPublic;
  }
});

// node_modules/public-encrypt/publicEncrypt.js
var require_publicEncrypt = __commonJS({
  "node_modules/public-encrypt/publicEncrypt.js"(exports, module) {
    init_shim();
    var parseKeys = require_parse_asn1();
    var randomBytes2 = require_browser4();
    var createHash = require_browser3();
    var mgf = require_mgf();
    var xor = require_xor();
    var BN3 = require_bn7();
    var withPublic = require_withPublic();
    var crt = require_browserify_rsa();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = function publicEncrypt(publicKey, msg, reverse) {
      var padding2;
      if (publicKey.padding) {
        padding2 = publicKey.padding;
      } else if (reverse) {
        padding2 = 1;
      } else {
        padding2 = 4;
      }
      var key2 = parseKeys(publicKey);
      var paddedMsg;
      if (padding2 === 4) {
        paddedMsg = oaep(key2, msg);
      } else if (padding2 === 1) {
        paddedMsg = pkcs1(key2, msg, reverse);
      } else if (padding2 === 3) {
        paddedMsg = new BN3(msg);
        if (paddedMsg.cmp(key2.modulus) >= 0) {
          throw new Error("data too long for modulus");
        }
      } else {
        throw new Error("unknown padding");
      }
      if (reverse) {
        return crt(paddedMsg, key2);
      } else {
        return withPublic(paddedMsg, key2);
      }
    };
    function oaep(key2, msg) {
      var k = key2.modulus.byteLength();
      var mLen = msg.length;
      var iHash = createHash("sha1").update(Buffer3.alloc(0)).digest();
      var hLen = iHash.length;
      var hLen2 = 2 * hLen;
      if (mLen > k - hLen2 - 2) {
        throw new Error("message too long");
      }
      var ps = Buffer3.alloc(k - mLen - hLen2 - 2);
      var dblen = k - hLen - 1;
      var seed = randomBytes2(hLen);
      var maskedDb = xor(Buffer3.concat([iHash, ps, Buffer3.alloc(1, 1), msg], dblen), mgf(seed, dblen));
      var maskedSeed = xor(seed, mgf(maskedDb, hLen));
      return new BN3(Buffer3.concat([Buffer3.alloc(1), maskedSeed, maskedDb], k));
    }
    function pkcs1(key2, msg, reverse) {
      var mLen = msg.length;
      var k = key2.modulus.byteLength();
      if (mLen > k - 11) {
        throw new Error("message too long");
      }
      var ps;
      if (reverse) {
        ps = Buffer3.alloc(k - mLen - 3, 255);
      } else {
        ps = nonZero(k - mLen - 3);
      }
      return new BN3(Buffer3.concat([Buffer3.from([0, reverse ? 1 : 2]), ps, Buffer3.alloc(1), msg], k));
    }
    function nonZero(len) {
      var out = Buffer3.allocUnsafe(len);
      var i = 0;
      var cache = randomBytes2(len * 2);
      var cur = 0;
      var num;
      while (i < len) {
        if (cur === cache.length) {
          cache = randomBytes2(len * 2);
          cur = 0;
        }
        num = cache[cur++];
        if (num) {
          out[i++] = num;
        }
      }
      return out;
    }
  }
});

// node_modules/public-encrypt/privateDecrypt.js
var require_privateDecrypt = __commonJS({
  "node_modules/public-encrypt/privateDecrypt.js"(exports, module) {
    init_shim();
    var parseKeys = require_parse_asn1();
    var mgf = require_mgf();
    var xor = require_xor();
    var BN3 = require_bn7();
    var crt = require_browserify_rsa();
    var createHash = require_browser3();
    var withPublic = require_withPublic();
    var Buffer3 = require_safe_buffer().Buffer;
    module.exports = function privateDecrypt(privateKey, enc, reverse) {
      var padding2;
      if (privateKey.padding) {
        padding2 = privateKey.padding;
      } else if (reverse) {
        padding2 = 1;
      } else {
        padding2 = 4;
      }
      var key2 = parseKeys(privateKey);
      var k = key2.modulus.byteLength();
      if (enc.length > k || new BN3(enc).cmp(key2.modulus) >= 0) {
        throw new Error("decryption error");
      }
      var msg;
      if (reverse) {
        msg = withPublic(new BN3(enc), key2);
      } else {
        msg = crt(enc, key2);
      }
      var zBuffer = Buffer3.alloc(k - msg.length);
      msg = Buffer3.concat([zBuffer, msg], k);
      if (padding2 === 4) {
        return oaep(key2, msg);
      } else if (padding2 === 1) {
        return pkcs1(key2, msg, reverse);
      } else if (padding2 === 3) {
        return msg;
      } else {
        throw new Error("unknown padding");
      }
    };
    function oaep(key2, msg) {
      var k = key2.modulus.byteLength();
      var iHash = createHash("sha1").update(Buffer3.alloc(0)).digest();
      var hLen = iHash.length;
      if (msg[0] !== 0) {
        throw new Error("decryption error");
      }
      var maskedSeed = msg.slice(1, hLen + 1);
      var maskedDb = msg.slice(hLen + 1);
      var seed = xor(maskedSeed, mgf(maskedDb, hLen));
      var db = xor(maskedDb, mgf(seed, k - hLen - 1));
      if (compare(iHash, db.slice(0, hLen))) {
        throw new Error("decryption error");
      }
      var i = hLen;
      while (db[i] === 0) {
        i++;
      }
      if (db[i++] !== 1) {
        throw new Error("decryption error");
      }
      return db.slice(i);
    }
    function pkcs1(key2, msg, reverse) {
      var p1 = msg.slice(0, 2);
      var i = 2;
      var status = 0;
      while (msg[i++] !== 0) {
        if (i >= msg.length) {
          status++;
          break;
        }
      }
      var ps = msg.slice(2, i - 1);
      if (p1.toString("hex") !== "0002" && !reverse || p1.toString("hex") !== "0001" && reverse) {
        status++;
      }
      if (ps.length < 8) {
        status++;
      }
      if (status) {
        throw new Error("decryption error");
      }
      return msg.slice(i);
    }
    function compare(a, b) {
      a = Buffer3.from(a);
      b = Buffer3.from(b);
      var dif = 0;
      var len = a.length;
      if (a.length !== b.length) {
        dif++;
        len = Math.min(a.length, b.length);
      }
      var i = -1;
      while (++i < len) {
        dif += a[i] ^ b[i];
      }
      return dif;
    }
  }
});

// node_modules/public-encrypt/browser.js
var require_browser12 = __commonJS({
  "node_modules/public-encrypt/browser.js"(exports) {
    init_shim();
    exports.publicEncrypt = require_publicEncrypt();
    exports.privateDecrypt = require_privateDecrypt();
    exports.privateEncrypt = function privateEncrypt(key2, buf) {
      return exports.publicEncrypt(key2, buf, true);
    };
    exports.publicDecrypt = function publicDecrypt(key2, buf) {
      return exports.privateDecrypt(key2, buf, true);
    };
  }
});

// node_modules/randomfill/browser.js
var require_browser13 = __commonJS({
  "node_modules/randomfill/browser.js"(exports) {
    "use strict";
    init_shim();
    function oldBrowser() {
      throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
    }
    var safeBuffer = require_safe_buffer();
    var randombytes = require_browser4();
    var Buffer3 = safeBuffer.Buffer;
    var kBufferMaxLength = safeBuffer.kMaxLength;
    var crypto2 = window.crypto || window.msCrypto;
    var kMaxUint32 = Math.pow(2, 32) - 1;
    function assertOffset(offset, length) {
      if (typeof offset !== "number" || offset !== offset) {
        throw new TypeError("offset must be a number");
      }
      if (offset > kMaxUint32 || offset < 0) {
        throw new TypeError("offset must be a uint32");
      }
      if (offset > kBufferMaxLength || offset > length) {
        throw new RangeError("offset out of range");
      }
    }
    function assertSize(size, offset, length) {
      if (typeof size !== "number" || size !== size) {
        throw new TypeError("size must be a number");
      }
      if (size > kMaxUint32 || size < 0) {
        throw new TypeError("size must be a uint32");
      }
      if (size + offset > length || size > kBufferMaxLength) {
        throw new RangeError("buffer too small");
      }
    }
    if (crypto2 && crypto2.getRandomValues || !process.browser) {
      exports.randomFill = randomFill;
      exports.randomFillSync = randomFillSync;
    } else {
      exports.randomFill = oldBrowser;
      exports.randomFillSync = oldBrowser;
    }
    function randomFill(buf, offset, size, cb) {
      if (!Buffer3.isBuffer(buf) && !(buf instanceof window.Uint8Array)) {
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      }
      if (typeof offset === "function") {
        cb = offset;
        offset = 0;
        size = buf.length;
      } else if (typeof size === "function") {
        cb = size;
        size = buf.length - offset;
      } else if (typeof cb !== "function") {
        throw new TypeError('"cb" argument must be a function');
      }
      assertOffset(offset, buf.length);
      assertSize(size, offset, buf.length);
      return actualFill(buf, offset, size, cb);
    }
    function actualFill(buf, offset, size, cb) {
      if (process.browser) {
        var ourBuf = buf.buffer;
        var uint = new Uint8Array(ourBuf, offset, size);
        crypto2.getRandomValues(uint);
        if (cb) {
          process.nextTick(function() {
            cb(null, buf);
          });
          return;
        }
        return buf;
      }
      if (cb) {
        randombytes(size, function(err, bytes2) {
          if (err) {
            return cb(err);
          }
          bytes2.copy(buf, offset);
          cb(null, buf);
        });
        return;
      }
      var bytes = randombytes(size);
      bytes.copy(buf, offset);
      return buf;
    }
    function randomFillSync(buf, offset, size) {
      if (typeof offset === "undefined") {
        offset = 0;
      }
      if (!Buffer3.isBuffer(buf) && !(buf instanceof window.Uint8Array)) {
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      }
      assertOffset(offset, buf.length);
      if (size === void 0)
        size = buf.length - offset;
      assertSize(size, offset, buf.length);
      return actualFill(buf, offset, size);
    }
  }
});

// node_modules/crypto-browserify/index.js
var require_crypto_browserify = __commonJS({
  "node_modules/crypto-browserify/index.js"(exports) {
    "use strict";
    init_shim();
    exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require_browser4();
    exports.createHash = exports.Hash = require_browser3();
    exports.createHmac = exports.Hmac = require_browser5();
    var algos = require_algos();
    var algoKeys = Object.keys(algos);
    var hashes = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(algoKeys);
    exports.getHashes = function() {
      return hashes;
    };
    var p = require_browser6();
    exports.pbkdf2 = p.pbkdf2;
    exports.pbkdf2Sync = p.pbkdf2Sync;
    var aes3 = require_browser8();
    exports.Cipher = aes3.Cipher;
    exports.createCipher = aes3.createCipher;
    exports.Cipheriv = aes3.Cipheriv;
    exports.createCipheriv = aes3.createCipheriv;
    exports.Decipher = aes3.Decipher;
    exports.createDecipher = aes3.createDecipher;
    exports.Decipheriv = aes3.Decipheriv;
    exports.createDecipheriv = aes3.createDecipheriv;
    exports.getCiphers = aes3.getCiphers;
    exports.listCiphers = aes3.listCiphers;
    var dh = require_browser9();
    exports.DiffieHellmanGroup = dh.DiffieHellmanGroup;
    exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;
    exports.getDiffieHellman = dh.getDiffieHellman;
    exports.createDiffieHellman = dh.createDiffieHellman;
    exports.DiffieHellman = dh.DiffieHellman;
    var sign3 = require_browser10();
    exports.createSign = sign3.createSign;
    exports.Sign = sign3.Sign;
    exports.createVerify = sign3.createVerify;
    exports.Verify = sign3.Verify;
    exports.createECDH = require_browser11();
    var publicEncrypt = require_browser12();
    exports.publicEncrypt = publicEncrypt.publicEncrypt;
    exports.privateEncrypt = publicEncrypt.privateEncrypt;
    exports.publicDecrypt = publicEncrypt.publicDecrypt;
    exports.privateDecrypt = publicEncrypt.privateDecrypt;
    var rf = require_browser13();
    exports.randomFill = rf.randomFill;
    exports.randomFillSync = rf.randomFillSync;
    exports.createCredentials = function() {
      throw new Error([
        "sorry, createCredentials is not implemented yet",
        "we accept pull requests",
        "https://github.com/crypto-browserify/crypto-browserify"
      ].join("\n"));
    };
    exports.constants = {
      "DH_CHECK_P_NOT_SAFE_PRIME": 2,
      "DH_CHECK_P_NOT_PRIME": 1,
      "DH_UNABLE_TO_CHECK_GENERATOR": 4,
      "DH_NOT_SUITABLE_GENERATOR": 8,
      "NPN_ENABLED": 1,
      "ALPN_ENABLED": 1,
      "RSA_PKCS1_PADDING": 1,
      "RSA_SSLV23_PADDING": 2,
      "RSA_NO_PADDING": 3,
      "RSA_PKCS1_OAEP_PADDING": 4,
      "RSA_X931_PADDING": 5,
      "RSA_PKCS1_PSS_PADDING": 6,
      "POINT_CONVERSION_COMPRESSED": 2,
      "POINT_CONVERSION_UNCOMPRESSED": 4,
      "POINT_CONVERSION_HYBRID": 6
    };
  }
});

// node_modules/bip39-light/wordlists/english.json
var require_english = __commonJS({
  "node_modules/bip39-light/wordlists/english.json"(exports, module) {
    module.exports = [
      "abandon",
      "ability",
      "able",
      "about",
      "above",
      "absent",
      "absorb",
      "abstract",
      "absurd",
      "abuse",
      "access",
      "accident",
      "account",
      "accuse",
      "achieve",
      "acid",
      "acoustic",
      "acquire",
      "across",
      "act",
      "action",
      "actor",
      "actress",
      "actual",
      "adapt",
      "add",
      "addict",
      "address",
      "adjust",
      "admit",
      "adult",
      "advance",
      "advice",
      "aerobic",
      "affair",
      "afford",
      "afraid",
      "again",
      "age",
      "agent",
      "agree",
      "ahead",
      "aim",
      "air",
      "airport",
      "aisle",
      "alarm",
      "album",
      "alcohol",
      "alert",
      "alien",
      "all",
      "alley",
      "allow",
      "almost",
      "alone",
      "alpha",
      "already",
      "also",
      "alter",
      "always",
      "amateur",
      "amazing",
      "among",
      "amount",
      "amused",
      "analyst",
      "anchor",
      "ancient",
      "anger",
      "angle",
      "angry",
      "animal",
      "ankle",
      "announce",
      "annual",
      "another",
      "answer",
      "antenna",
      "antique",
      "anxiety",
      "any",
      "apart",
      "apology",
      "appear",
      "apple",
      "approve",
      "april",
      "arch",
      "arctic",
      "area",
      "arena",
      "argue",
      "arm",
      "armed",
      "armor",
      "army",
      "around",
      "arrange",
      "arrest",
      "arrive",
      "arrow",
      "art",
      "artefact",
      "artist",
      "artwork",
      "ask",
      "aspect",
      "assault",
      "asset",
      "assist",
      "assume",
      "asthma",
      "athlete",
      "atom",
      "attack",
      "attend",
      "attitude",
      "attract",
      "auction",
      "audit",
      "august",
      "aunt",
      "author",
      "auto",
      "autumn",
      "average",
      "avocado",
      "avoid",
      "awake",
      "aware",
      "away",
      "awesome",
      "awful",
      "awkward",
      "axis",
      "baby",
      "bachelor",
      "bacon",
      "badge",
      "bag",
      "balance",
      "balcony",
      "ball",
      "bamboo",
      "banana",
      "banner",
      "bar",
      "barely",
      "bargain",
      "barrel",
      "base",
      "basic",
      "basket",
      "battle",
      "beach",
      "bean",
      "beauty",
      "because",
      "become",
      "beef",
      "before",
      "begin",
      "behave",
      "behind",
      "believe",
      "below",
      "belt",
      "bench",
      "benefit",
      "best",
      "betray",
      "better",
      "between",
      "beyond",
      "bicycle",
      "bid",
      "bike",
      "bind",
      "biology",
      "bird",
      "birth",
      "bitter",
      "black",
      "blade",
      "blame",
      "blanket",
      "blast",
      "bleak",
      "bless",
      "blind",
      "blood",
      "blossom",
      "blouse",
      "blue",
      "blur",
      "blush",
      "board",
      "boat",
      "body",
      "boil",
      "bomb",
      "bone",
      "bonus",
      "book",
      "boost",
      "border",
      "boring",
      "borrow",
      "boss",
      "bottom",
      "bounce",
      "box",
      "boy",
      "bracket",
      "brain",
      "brand",
      "brass",
      "brave",
      "bread",
      "breeze",
      "brick",
      "bridge",
      "brief",
      "bright",
      "bring",
      "brisk",
      "broccoli",
      "broken",
      "bronze",
      "broom",
      "brother",
      "brown",
      "brush",
      "bubble",
      "buddy",
      "budget",
      "buffalo",
      "build",
      "bulb",
      "bulk",
      "bullet",
      "bundle",
      "bunker",
      "burden",
      "burger",
      "burst",
      "bus",
      "business",
      "busy",
      "butter",
      "buyer",
      "buzz",
      "cabbage",
      "cabin",
      "cable",
      "cactus",
      "cage",
      "cake",
      "call",
      "calm",
      "camera",
      "camp",
      "can",
      "canal",
      "cancel",
      "candy",
      "cannon",
      "canoe",
      "canvas",
      "canyon",
      "capable",
      "capital",
      "captain",
      "car",
      "carbon",
      "card",
      "cargo",
      "carpet",
      "carry",
      "cart",
      "case",
      "cash",
      "casino",
      "castle",
      "casual",
      "cat",
      "catalog",
      "catch",
      "category",
      "cattle",
      "caught",
      "cause",
      "caution",
      "cave",
      "ceiling",
      "celery",
      "cement",
      "census",
      "century",
      "cereal",
      "certain",
      "chair",
      "chalk",
      "champion",
      "change",
      "chaos",
      "chapter",
      "charge",
      "chase",
      "chat",
      "cheap",
      "check",
      "cheese",
      "chef",
      "cherry",
      "chest",
      "chicken",
      "chief",
      "child",
      "chimney",
      "choice",
      "choose",
      "chronic",
      "chuckle",
      "chunk",
      "churn",
      "cigar",
      "cinnamon",
      "circle",
      "citizen",
      "city",
      "civil",
      "claim",
      "clap",
      "clarify",
      "claw",
      "clay",
      "clean",
      "clerk",
      "clever",
      "click",
      "client",
      "cliff",
      "climb",
      "clinic",
      "clip",
      "clock",
      "clog",
      "close",
      "cloth",
      "cloud",
      "clown",
      "club",
      "clump",
      "cluster",
      "clutch",
      "coach",
      "coast",
      "coconut",
      "code",
      "coffee",
      "coil",
      "coin",
      "collect",
      "color",
      "column",
      "combine",
      "come",
      "comfort",
      "comic",
      "common",
      "company",
      "concert",
      "conduct",
      "confirm",
      "congress",
      "connect",
      "consider",
      "control",
      "convince",
      "cook",
      "cool",
      "copper",
      "copy",
      "coral",
      "core",
      "corn",
      "correct",
      "cost",
      "cotton",
      "couch",
      "country",
      "couple",
      "course",
      "cousin",
      "cover",
      "coyote",
      "crack",
      "cradle",
      "craft",
      "cram",
      "crane",
      "crash",
      "crater",
      "crawl",
      "crazy",
      "cream",
      "credit",
      "creek",
      "crew",
      "cricket",
      "crime",
      "crisp",
      "critic",
      "crop",
      "cross",
      "crouch",
      "crowd",
      "crucial",
      "cruel",
      "cruise",
      "crumble",
      "crunch",
      "crush",
      "cry",
      "crystal",
      "cube",
      "culture",
      "cup",
      "cupboard",
      "curious",
      "current",
      "curtain",
      "curve",
      "cushion",
      "custom",
      "cute",
      "cycle",
      "dad",
      "damage",
      "damp",
      "dance",
      "danger",
      "daring",
      "dash",
      "daughter",
      "dawn",
      "day",
      "deal",
      "debate",
      "debris",
      "decade",
      "december",
      "decide",
      "decline",
      "decorate",
      "decrease",
      "deer",
      "defense",
      "define",
      "defy",
      "degree",
      "delay",
      "deliver",
      "demand",
      "demise",
      "denial",
      "dentist",
      "deny",
      "depart",
      "depend",
      "deposit",
      "depth",
      "deputy",
      "derive",
      "describe",
      "desert",
      "design",
      "desk",
      "despair",
      "destroy",
      "detail",
      "detect",
      "develop",
      "device",
      "devote",
      "diagram",
      "dial",
      "diamond",
      "diary",
      "dice",
      "diesel",
      "diet",
      "differ",
      "digital",
      "dignity",
      "dilemma",
      "dinner",
      "dinosaur",
      "direct",
      "dirt",
      "disagree",
      "discover",
      "disease",
      "dish",
      "dismiss",
      "disorder",
      "display",
      "distance",
      "divert",
      "divide",
      "divorce",
      "dizzy",
      "doctor",
      "document",
      "dog",
      "doll",
      "dolphin",
      "domain",
      "donate",
      "donkey",
      "donor",
      "door",
      "dose",
      "double",
      "dove",
      "draft",
      "dragon",
      "drama",
      "drastic",
      "draw",
      "dream",
      "dress",
      "drift",
      "drill",
      "drink",
      "drip",
      "drive",
      "drop",
      "drum",
      "dry",
      "duck",
      "dumb",
      "dune",
      "during",
      "dust",
      "dutch",
      "duty",
      "dwarf",
      "dynamic",
      "eager",
      "eagle",
      "early",
      "earn",
      "earth",
      "easily",
      "east",
      "easy",
      "echo",
      "ecology",
      "economy",
      "edge",
      "edit",
      "educate",
      "effort",
      "egg",
      "eight",
      "either",
      "elbow",
      "elder",
      "electric",
      "elegant",
      "element",
      "elephant",
      "elevator",
      "elite",
      "else",
      "embark",
      "embody",
      "embrace",
      "emerge",
      "emotion",
      "employ",
      "empower",
      "empty",
      "enable",
      "enact",
      "end",
      "endless",
      "endorse",
      "enemy",
      "energy",
      "enforce",
      "engage",
      "engine",
      "enhance",
      "enjoy",
      "enlist",
      "enough",
      "enrich",
      "enroll",
      "ensure",
      "enter",
      "entire",
      "entry",
      "envelope",
      "episode",
      "equal",
      "equip",
      "era",
      "erase",
      "erode",
      "erosion",
      "error",
      "erupt",
      "escape",
      "essay",
      "essence",
      "estate",
      "eternal",
      "ethics",
      "evidence",
      "evil",
      "evoke",
      "evolve",
      "exact",
      "example",
      "excess",
      "exchange",
      "excite",
      "exclude",
      "excuse",
      "execute",
      "exercise",
      "exhaust",
      "exhibit",
      "exile",
      "exist",
      "exit",
      "exotic",
      "expand",
      "expect",
      "expire",
      "explain",
      "expose",
      "express",
      "extend",
      "extra",
      "eye",
      "eyebrow",
      "fabric",
      "face",
      "faculty",
      "fade",
      "faint",
      "faith",
      "fall",
      "false",
      "fame",
      "family",
      "famous",
      "fan",
      "fancy",
      "fantasy",
      "farm",
      "fashion",
      "fat",
      "fatal",
      "father",
      "fatigue",
      "fault",
      "favorite",
      "feature",
      "february",
      "federal",
      "fee",
      "feed",
      "feel",
      "female",
      "fence",
      "festival",
      "fetch",
      "fever",
      "few",
      "fiber",
      "fiction",
      "field",
      "figure",
      "file",
      "film",
      "filter",
      "final",
      "find",
      "fine",
      "finger",
      "finish",
      "fire",
      "firm",
      "first",
      "fiscal",
      "fish",
      "fit",
      "fitness",
      "fix",
      "flag",
      "flame",
      "flash",
      "flat",
      "flavor",
      "flee",
      "flight",
      "flip",
      "float",
      "flock",
      "floor",
      "flower",
      "fluid",
      "flush",
      "fly",
      "foam",
      "focus",
      "fog",
      "foil",
      "fold",
      "follow",
      "food",
      "foot",
      "force",
      "forest",
      "forget",
      "fork",
      "fortune",
      "forum",
      "forward",
      "fossil",
      "foster",
      "found",
      "fox",
      "fragile",
      "frame",
      "frequent",
      "fresh",
      "friend",
      "fringe",
      "frog",
      "front",
      "frost",
      "frown",
      "frozen",
      "fruit",
      "fuel",
      "fun",
      "funny",
      "furnace",
      "fury",
      "future",
      "gadget",
      "gain",
      "galaxy",
      "gallery",
      "game",
      "gap",
      "garage",
      "garbage",
      "garden",
      "garlic",
      "garment",
      "gas",
      "gasp",
      "gate",
      "gather",
      "gauge",
      "gaze",
      "general",
      "genius",
      "genre",
      "gentle",
      "genuine",
      "gesture",
      "ghost",
      "giant",
      "gift",
      "giggle",
      "ginger",
      "giraffe",
      "girl",
      "give",
      "glad",
      "glance",
      "glare",
      "glass",
      "glide",
      "glimpse",
      "globe",
      "gloom",
      "glory",
      "glove",
      "glow",
      "glue",
      "goat",
      "goddess",
      "gold",
      "good",
      "goose",
      "gorilla",
      "gospel",
      "gossip",
      "govern",
      "gown",
      "grab",
      "grace",
      "grain",
      "grant",
      "grape",
      "grass",
      "gravity",
      "great",
      "green",
      "grid",
      "grief",
      "grit",
      "grocery",
      "group",
      "grow",
      "grunt",
      "guard",
      "guess",
      "guide",
      "guilt",
      "guitar",
      "gun",
      "gym",
      "habit",
      "hair",
      "half",
      "hammer",
      "hamster",
      "hand",
      "happy",
      "harbor",
      "hard",
      "harsh",
      "harvest",
      "hat",
      "have",
      "hawk",
      "hazard",
      "head",
      "health",
      "heart",
      "heavy",
      "hedgehog",
      "height",
      "hello",
      "helmet",
      "help",
      "hen",
      "hero",
      "hidden",
      "high",
      "hill",
      "hint",
      "hip",
      "hire",
      "history",
      "hobby",
      "hockey",
      "hold",
      "hole",
      "holiday",
      "hollow",
      "home",
      "honey",
      "hood",
      "hope",
      "horn",
      "horror",
      "horse",
      "hospital",
      "host",
      "hotel",
      "hour",
      "hover",
      "hub",
      "huge",
      "human",
      "humble",
      "humor",
      "hundred",
      "hungry",
      "hunt",
      "hurdle",
      "hurry",
      "hurt",
      "husband",
      "hybrid",
      "ice",
      "icon",
      "idea",
      "identify",
      "idle",
      "ignore",
      "ill",
      "illegal",
      "illness",
      "image",
      "imitate",
      "immense",
      "immune",
      "impact",
      "impose",
      "improve",
      "impulse",
      "inch",
      "include",
      "income",
      "increase",
      "index",
      "indicate",
      "indoor",
      "industry",
      "infant",
      "inflict",
      "inform",
      "inhale",
      "inherit",
      "initial",
      "inject",
      "injury",
      "inmate",
      "inner",
      "innocent",
      "input",
      "inquiry",
      "insane",
      "insect",
      "inside",
      "inspire",
      "install",
      "intact",
      "interest",
      "into",
      "invest",
      "invite",
      "involve",
      "iron",
      "island",
      "isolate",
      "issue",
      "item",
      "ivory",
      "jacket",
      "jaguar",
      "jar",
      "jazz",
      "jealous",
      "jeans",
      "jelly",
      "jewel",
      "job",
      "join",
      "joke",
      "journey",
      "joy",
      "judge",
      "juice",
      "jump",
      "jungle",
      "junior",
      "junk",
      "just",
      "kangaroo",
      "keen",
      "keep",
      "ketchup",
      "key",
      "kick",
      "kid",
      "kidney",
      "kind",
      "kingdom",
      "kiss",
      "kit",
      "kitchen",
      "kite",
      "kitten",
      "kiwi",
      "knee",
      "knife",
      "knock",
      "know",
      "lab",
      "label",
      "labor",
      "ladder",
      "lady",
      "lake",
      "lamp",
      "language",
      "laptop",
      "large",
      "later",
      "latin",
      "laugh",
      "laundry",
      "lava",
      "law",
      "lawn",
      "lawsuit",
      "layer",
      "lazy",
      "leader",
      "leaf",
      "learn",
      "leave",
      "lecture",
      "left",
      "leg",
      "legal",
      "legend",
      "leisure",
      "lemon",
      "lend",
      "length",
      "lens",
      "leopard",
      "lesson",
      "letter",
      "level",
      "liar",
      "liberty",
      "library",
      "license",
      "life",
      "lift",
      "light",
      "like",
      "limb",
      "limit",
      "link",
      "lion",
      "liquid",
      "list",
      "little",
      "live",
      "lizard",
      "load",
      "loan",
      "lobster",
      "local",
      "lock",
      "logic",
      "lonely",
      "long",
      "loop",
      "lottery",
      "loud",
      "lounge",
      "love",
      "loyal",
      "lucky",
      "luggage",
      "lumber",
      "lunar",
      "lunch",
      "luxury",
      "lyrics",
      "machine",
      "mad",
      "magic",
      "magnet",
      "maid",
      "mail",
      "main",
      "major",
      "make",
      "mammal",
      "man",
      "manage",
      "mandate",
      "mango",
      "mansion",
      "manual",
      "maple",
      "marble",
      "march",
      "margin",
      "marine",
      "market",
      "marriage",
      "mask",
      "mass",
      "master",
      "match",
      "material",
      "math",
      "matrix",
      "matter",
      "maximum",
      "maze",
      "meadow",
      "mean",
      "measure",
      "meat",
      "mechanic",
      "medal",
      "media",
      "melody",
      "melt",
      "member",
      "memory",
      "mention",
      "menu",
      "mercy",
      "merge",
      "merit",
      "merry",
      "mesh",
      "message",
      "metal",
      "method",
      "middle",
      "midnight",
      "milk",
      "million",
      "mimic",
      "mind",
      "minimum",
      "minor",
      "minute",
      "miracle",
      "mirror",
      "misery",
      "miss",
      "mistake",
      "mix",
      "mixed",
      "mixture",
      "mobile",
      "model",
      "modify",
      "mom",
      "moment",
      "monitor",
      "monkey",
      "monster",
      "month",
      "moon",
      "moral",
      "more",
      "morning",
      "mosquito",
      "mother",
      "motion",
      "motor",
      "mountain",
      "mouse",
      "move",
      "movie",
      "much",
      "muffin",
      "mule",
      "multiply",
      "muscle",
      "museum",
      "mushroom",
      "music",
      "must",
      "mutual",
      "myself",
      "mystery",
      "myth",
      "naive",
      "name",
      "napkin",
      "narrow",
      "nasty",
      "nation",
      "nature",
      "near",
      "neck",
      "need",
      "negative",
      "neglect",
      "neither",
      "nephew",
      "nerve",
      "nest",
      "net",
      "network",
      "neutral",
      "never",
      "news",
      "next",
      "nice",
      "night",
      "noble",
      "noise",
      "nominee",
      "noodle",
      "normal",
      "north",
      "nose",
      "notable",
      "note",
      "nothing",
      "notice",
      "novel",
      "now",
      "nuclear",
      "number",
      "nurse",
      "nut",
      "oak",
      "obey",
      "object",
      "oblige",
      "obscure",
      "observe",
      "obtain",
      "obvious",
      "occur",
      "ocean",
      "october",
      "odor",
      "off",
      "offer",
      "office",
      "often",
      "oil",
      "okay",
      "old",
      "olive",
      "olympic",
      "omit",
      "once",
      "one",
      "onion",
      "online",
      "only",
      "open",
      "opera",
      "opinion",
      "oppose",
      "option",
      "orange",
      "orbit",
      "orchard",
      "order",
      "ordinary",
      "organ",
      "orient",
      "original",
      "orphan",
      "ostrich",
      "other",
      "outdoor",
      "outer",
      "output",
      "outside",
      "oval",
      "oven",
      "over",
      "own",
      "owner",
      "oxygen",
      "oyster",
      "ozone",
      "pact",
      "paddle",
      "page",
      "pair",
      "palace",
      "palm",
      "panda",
      "panel",
      "panic",
      "panther",
      "paper",
      "parade",
      "parent",
      "park",
      "parrot",
      "party",
      "pass",
      "patch",
      "path",
      "patient",
      "patrol",
      "pattern",
      "pause",
      "pave",
      "payment",
      "peace",
      "peanut",
      "pear",
      "peasant",
      "pelican",
      "pen",
      "penalty",
      "pencil",
      "people",
      "pepper",
      "perfect",
      "permit",
      "person",
      "pet",
      "phone",
      "photo",
      "phrase",
      "physical",
      "piano",
      "picnic",
      "picture",
      "piece",
      "pig",
      "pigeon",
      "pill",
      "pilot",
      "pink",
      "pioneer",
      "pipe",
      "pistol",
      "pitch",
      "pizza",
      "place",
      "planet",
      "plastic",
      "plate",
      "play",
      "please",
      "pledge",
      "pluck",
      "plug",
      "plunge",
      "poem",
      "poet",
      "point",
      "polar",
      "pole",
      "police",
      "pond",
      "pony",
      "pool",
      "popular",
      "portion",
      "position",
      "possible",
      "post",
      "potato",
      "pottery",
      "poverty",
      "powder",
      "power",
      "practice",
      "praise",
      "predict",
      "prefer",
      "prepare",
      "present",
      "pretty",
      "prevent",
      "price",
      "pride",
      "primary",
      "print",
      "priority",
      "prison",
      "private",
      "prize",
      "problem",
      "process",
      "produce",
      "profit",
      "program",
      "project",
      "promote",
      "proof",
      "property",
      "prosper",
      "protect",
      "proud",
      "provide",
      "public",
      "pudding",
      "pull",
      "pulp",
      "pulse",
      "pumpkin",
      "punch",
      "pupil",
      "puppy",
      "purchase",
      "purity",
      "purpose",
      "purse",
      "push",
      "put",
      "puzzle",
      "pyramid",
      "quality",
      "quantum",
      "quarter",
      "question",
      "quick",
      "quit",
      "quiz",
      "quote",
      "rabbit",
      "raccoon",
      "race",
      "rack",
      "radar",
      "radio",
      "rail",
      "rain",
      "raise",
      "rally",
      "ramp",
      "ranch",
      "random",
      "range",
      "rapid",
      "rare",
      "rate",
      "rather",
      "raven",
      "raw",
      "razor",
      "ready",
      "real",
      "reason",
      "rebel",
      "rebuild",
      "recall",
      "receive",
      "recipe",
      "record",
      "recycle",
      "reduce",
      "reflect",
      "reform",
      "refuse",
      "region",
      "regret",
      "regular",
      "reject",
      "relax",
      "release",
      "relief",
      "rely",
      "remain",
      "remember",
      "remind",
      "remove",
      "render",
      "renew",
      "rent",
      "reopen",
      "repair",
      "repeat",
      "replace",
      "report",
      "require",
      "rescue",
      "resemble",
      "resist",
      "resource",
      "response",
      "result",
      "retire",
      "retreat",
      "return",
      "reunion",
      "reveal",
      "review",
      "reward",
      "rhythm",
      "rib",
      "ribbon",
      "rice",
      "rich",
      "ride",
      "ridge",
      "rifle",
      "right",
      "rigid",
      "ring",
      "riot",
      "ripple",
      "risk",
      "ritual",
      "rival",
      "river",
      "road",
      "roast",
      "robot",
      "robust",
      "rocket",
      "romance",
      "roof",
      "rookie",
      "room",
      "rose",
      "rotate",
      "rough",
      "round",
      "route",
      "royal",
      "rubber",
      "rude",
      "rug",
      "rule",
      "run",
      "runway",
      "rural",
      "sad",
      "saddle",
      "sadness",
      "safe",
      "sail",
      "salad",
      "salmon",
      "salon",
      "salt",
      "salute",
      "same",
      "sample",
      "sand",
      "satisfy",
      "satoshi",
      "sauce",
      "sausage",
      "save",
      "say",
      "scale",
      "scan",
      "scare",
      "scatter",
      "scene",
      "scheme",
      "school",
      "science",
      "scissors",
      "scorpion",
      "scout",
      "scrap",
      "screen",
      "script",
      "scrub",
      "sea",
      "search",
      "season",
      "seat",
      "second",
      "secret",
      "section",
      "security",
      "seed",
      "seek",
      "segment",
      "select",
      "sell",
      "seminar",
      "senior",
      "sense",
      "sentence",
      "series",
      "service",
      "session",
      "settle",
      "setup",
      "seven",
      "shadow",
      "shaft",
      "shallow",
      "share",
      "shed",
      "shell",
      "sheriff",
      "shield",
      "shift",
      "shine",
      "ship",
      "shiver",
      "shock",
      "shoe",
      "shoot",
      "shop",
      "short",
      "shoulder",
      "shove",
      "shrimp",
      "shrug",
      "shuffle",
      "shy",
      "sibling",
      "sick",
      "side",
      "siege",
      "sight",
      "sign",
      "silent",
      "silk",
      "silly",
      "silver",
      "similar",
      "simple",
      "since",
      "sing",
      "siren",
      "sister",
      "situate",
      "six",
      "size",
      "skate",
      "sketch",
      "ski",
      "skill",
      "skin",
      "skirt",
      "skull",
      "slab",
      "slam",
      "sleep",
      "slender",
      "slice",
      "slide",
      "slight",
      "slim",
      "slogan",
      "slot",
      "slow",
      "slush",
      "small",
      "smart",
      "smile",
      "smoke",
      "smooth",
      "snack",
      "snake",
      "snap",
      "sniff",
      "snow",
      "soap",
      "soccer",
      "social",
      "sock",
      "soda",
      "soft",
      "solar",
      "soldier",
      "solid",
      "solution",
      "solve",
      "someone",
      "song",
      "soon",
      "sorry",
      "sort",
      "soul",
      "sound",
      "soup",
      "source",
      "south",
      "space",
      "spare",
      "spatial",
      "spawn",
      "speak",
      "special",
      "speed",
      "spell",
      "spend",
      "sphere",
      "spice",
      "spider",
      "spike",
      "spin",
      "spirit",
      "split",
      "spoil",
      "sponsor",
      "spoon",
      "sport",
      "spot",
      "spray",
      "spread",
      "spring",
      "spy",
      "square",
      "squeeze",
      "squirrel",
      "stable",
      "stadium",
      "staff",
      "stage",
      "stairs",
      "stamp",
      "stand",
      "start",
      "state",
      "stay",
      "steak",
      "steel",
      "stem",
      "step",
      "stereo",
      "stick",
      "still",
      "sting",
      "stock",
      "stomach",
      "stone",
      "stool",
      "story",
      "stove",
      "strategy",
      "street",
      "strike",
      "strong",
      "struggle",
      "student",
      "stuff",
      "stumble",
      "style",
      "subject",
      "submit",
      "subway",
      "success",
      "such",
      "sudden",
      "suffer",
      "sugar",
      "suggest",
      "suit",
      "summer",
      "sun",
      "sunny",
      "sunset",
      "super",
      "supply",
      "supreme",
      "sure",
      "surface",
      "surge",
      "surprise",
      "surround",
      "survey",
      "suspect",
      "sustain",
      "swallow",
      "swamp",
      "swap",
      "swarm",
      "swear",
      "sweet",
      "swift",
      "swim",
      "swing",
      "switch",
      "sword",
      "symbol",
      "symptom",
      "syrup",
      "system",
      "table",
      "tackle",
      "tag",
      "tail",
      "talent",
      "talk",
      "tank",
      "tape",
      "target",
      "task",
      "taste",
      "tattoo",
      "taxi",
      "teach",
      "team",
      "tell",
      "ten",
      "tenant",
      "tennis",
      "tent",
      "term",
      "test",
      "text",
      "thank",
      "that",
      "theme",
      "then",
      "theory",
      "there",
      "they",
      "thing",
      "this",
      "thought",
      "three",
      "thrive",
      "throw",
      "thumb",
      "thunder",
      "ticket",
      "tide",
      "tiger",
      "tilt",
      "timber",
      "time",
      "tiny",
      "tip",
      "tired",
      "tissue",
      "title",
      "toast",
      "tobacco",
      "today",
      "toddler",
      "toe",
      "together",
      "toilet",
      "token",
      "tomato",
      "tomorrow",
      "tone",
      "tongue",
      "tonight",
      "tool",
      "tooth",
      "top",
      "topic",
      "topple",
      "torch",
      "tornado",
      "tortoise",
      "toss",
      "total",
      "tourist",
      "toward",
      "tower",
      "town",
      "toy",
      "track",
      "trade",
      "traffic",
      "tragic",
      "train",
      "transfer",
      "trap",
      "trash",
      "travel",
      "tray",
      "treat",
      "tree",
      "trend",
      "trial",
      "tribe",
      "trick",
      "trigger",
      "trim",
      "trip",
      "trophy",
      "trouble",
      "truck",
      "true",
      "truly",
      "trumpet",
      "trust",
      "truth",
      "try",
      "tube",
      "tuition",
      "tumble",
      "tuna",
      "tunnel",
      "turkey",
      "turn",
      "turtle",
      "twelve",
      "twenty",
      "twice",
      "twin",
      "twist",
      "two",
      "type",
      "typical",
      "ugly",
      "umbrella",
      "unable",
      "unaware",
      "uncle",
      "uncover",
      "under",
      "undo",
      "unfair",
      "unfold",
      "unhappy",
      "uniform",
      "unique",
      "unit",
      "universe",
      "unknown",
      "unlock",
      "until",
      "unusual",
      "unveil",
      "update",
      "upgrade",
      "uphold",
      "upon",
      "upper",
      "upset",
      "urban",
      "urge",
      "usage",
      "use",
      "used",
      "useful",
      "useless",
      "usual",
      "utility",
      "vacant",
      "vacuum",
      "vague",
      "valid",
      "valley",
      "valve",
      "van",
      "vanish",
      "vapor",
      "various",
      "vast",
      "vault",
      "vehicle",
      "velvet",
      "vendor",
      "venture",
      "venue",
      "verb",
      "verify",
      "version",
      "very",
      "vessel",
      "veteran",
      "viable",
      "vibrant",
      "vicious",
      "victory",
      "video",
      "view",
      "village",
      "vintage",
      "violin",
      "virtual",
      "virus",
      "visa",
      "visit",
      "visual",
      "vital",
      "vivid",
      "vocal",
      "voice",
      "void",
      "volcano",
      "volume",
      "vote",
      "voyage",
      "wage",
      "wagon",
      "wait",
      "walk",
      "wall",
      "walnut",
      "want",
      "warfare",
      "warm",
      "warrior",
      "wash",
      "wasp",
      "waste",
      "water",
      "wave",
      "way",
      "wealth",
      "weapon",
      "wear",
      "weasel",
      "weather",
      "web",
      "wedding",
      "weekend",
      "weird",
      "welcome",
      "west",
      "wet",
      "whale",
      "what",
      "wheat",
      "wheel",
      "when",
      "where",
      "whip",
      "whisper",
      "wide",
      "width",
      "wife",
      "wild",
      "will",
      "win",
      "window",
      "wine",
      "wing",
      "wink",
      "winner",
      "winter",
      "wire",
      "wisdom",
      "wise",
      "wish",
      "witness",
      "wolf",
      "woman",
      "wonder",
      "wood",
      "wool",
      "word",
      "work",
      "world",
      "worry",
      "worth",
      "wrap",
      "wreck",
      "wrestle",
      "wrist",
      "write",
      "wrong",
      "yard",
      "year",
      "yellow",
      "you",
      "young",
      "youth",
      "zebra",
      "zero",
      "zone",
      "zoo"
    ];
  }
});

// node_modules/bip39-light/index.js
var require_bip39_light = __commonJS({
  "node_modules/bip39-light/index.js"(exports, module) {
    init_shim();
    var randomBytes2;
    if (typeof window !== "undefined" && window.crypto) {
      randomBytes2 = function(len) {
        var array = new Uint32Array(len);
        return Buffer2.from(window.crypto.getRandomValues(array));
      };
    } else {
      randomBytes2 = require_crypto_browserify().randomBytes;
    }
    var createHash = require_browser3();
    var pbkdf23 = require_browser6().pbkdf2Sync;
    var ENGLISH_WORDLIST = require_english();
    var DEFAULT_WORDLIST = ENGLISH_WORDLIST;
    var INVALID_MNEMONIC = "Invalid mnemonic";
    var INVALID_ENTROPY = "Invalid entropy";
    var INVALID_CHECKSUM = "Invalid mnemonic checksum";
    function lpad(str, padString, length) {
      while (str.length < length)
        str = padString + str;
      return str;
    }
    function binaryToByte(bin) {
      return parseInt(bin, 2);
    }
    function bytesToBinary(bytes) {
      return bytes.map(function(x) {
        return lpad(x.toString(2), "0", 8);
      }).join("");
    }
    function deriveChecksumBits(entropyBuffer) {
      var ENT = entropyBuffer.length * 8;
      var CS = ENT / 32;
      var hash3 = createHash("sha256").update(entropyBuffer).digest();
      return bytesToBinary([].slice.call(hash3)).slice(0, CS);
    }
    function salt(password) {
      return "mnemonic" + (password || "");
    }
    function mnemonicToSeed3(mnemonic, password) {
      var mnemonicBuffer = Buffer2.from(mnemonic, "utf8");
      var saltBuffer = Buffer2.from(salt(password), "utf8");
      return pbkdf23(mnemonicBuffer, saltBuffer, 2048, 64, "sha512");
    }
    function mnemonicToSeedHex(mnemonic, password) {
      return mnemonicToSeed3(mnemonic, password).toString("hex");
    }
    function mnemonicToEntropy2(mnemonic, wordlist2) {
      wordlist2 = wordlist2 || DEFAULT_WORDLIST;
      var words2 = mnemonic.split(" ");
      if (words2.length % 3 !== 0)
        throw new Error(INVALID_MNEMONIC);
      var bits = words2.map(function(word) {
        var index = wordlist2.indexOf(word);
        if (index === -1)
          throw new Error(INVALID_MNEMONIC);
        return lpad(index.toString(2), "0", 11);
      }).join("");
      var dividerIndex = Math.floor(bits.length / 33) * 32;
      var entropyBits = bits.slice(0, dividerIndex);
      var checksumBits = bits.slice(dividerIndex);
      var entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);
      if (entropyBytes.length < 16)
        throw new Error(INVALID_ENTROPY);
      if (entropyBytes.length > 32)
        throw new Error(INVALID_ENTROPY);
      if (entropyBytes.length % 4 !== 0)
        throw new Error(INVALID_ENTROPY);
      var entropy = Buffer2.from(entropyBytes);
      var newChecksum = deriveChecksumBits(entropy);
      if (newChecksum !== checksumBits)
        throw new Error(INVALID_CHECKSUM);
      return entropy.toString("hex");
    }
    function entropyToMnemonic2(entropy, wordlist2) {
      if (!Buffer2.isBuffer(entropy))
        entropy = Buffer2.from(entropy, "hex");
      wordlist2 = wordlist2 || DEFAULT_WORDLIST;
      if (entropy.length < 16)
        throw new TypeError(INVALID_ENTROPY);
      if (entropy.length > 32)
        throw new TypeError(INVALID_ENTROPY);
      if (entropy.length % 4 !== 0)
        throw new TypeError(INVALID_ENTROPY);
      var entropyBits = bytesToBinary([].slice.call(entropy));
      var checksumBits = deriveChecksumBits(entropy);
      var bits = entropyBits + checksumBits;
      var chunks = bits.match(/(.{1,11})/g);
      var words2 = chunks.map(function(binary) {
        var index = binaryToByte(binary);
        return wordlist2[index];
      });
      return words2.join(" ");
    }
    function generateMnemonic2(strength, rng, wordlist2) {
      strength = strength || 128;
      if (strength % 32 !== 0)
        throw new TypeError(INVALID_ENTROPY);
      rng = rng || randomBytes2;
      return entropyToMnemonic2(rng(strength / 8), wordlist2);
    }
    function validateMnemonic2(mnemonic, wordlist2) {
      try {
        mnemonicToEntropy2(mnemonic, wordlist2);
      } catch (e) {
        return false;
      }
      return true;
    }
    module.exports = {
      mnemonicToSeed: mnemonicToSeed3,
      mnemonicToSeedHex,
      mnemonicToEntropy: mnemonicToEntropy2,
      entropyToMnemonic: entropyToMnemonic2,
      generateMnemonic: generateMnemonic2,
      validateMnemonic: validateMnemonic2,
      wordlists: {
        EN: ENGLISH_WORDLIST
      }
    };
  }
});

// node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js
var require_bn8 = __commonJS({
  "node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/js-sha3/src/sha3.js
var require_sha32 = __commonJS({
  "node_modules/js-sha3/src/sha3.js"(exports, module) {
    init_shim();
    (function() {
      "use strict";
      var INPUT_ERROR = "input is invalid type";
      var FINALIZE_ERROR = "finalize already called";
      var WINDOW = typeof window === "object";
      var root = WINDOW ? window : {};
      if (root.JS_SHA3_NO_WINDOW) {
        WINDOW = false;
      }
      var WEB_WORKER = !WINDOW && typeof self === "object";
      var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
      if (NODE_JS) {
        root = window;
      } else if (WEB_WORKER) {
        root = self;
      }
      var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === "object" && module.exports;
      var AMD = typeof define === "function" && define.amd;
      var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
      var HEX_CHARS = "0123456789abcdef".split("");
      var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
      var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
      var KECCAK_PADDING = [1, 256, 65536, 16777216];
      var PADDING = [6, 1536, 393216, 100663296];
      var SHIFT = [0, 8, 16, 24];
      var RC = [
        1,
        0,
        32898,
        0,
        32906,
        2147483648,
        2147516416,
        2147483648,
        32907,
        0,
        2147483649,
        0,
        2147516545,
        2147483648,
        32777,
        2147483648,
        138,
        0,
        136,
        0,
        2147516425,
        0,
        2147483658,
        0,
        2147516555,
        0,
        139,
        2147483648,
        32905,
        2147483648,
        32771,
        2147483648,
        32770,
        2147483648,
        128,
        2147483648,
        32778,
        0,
        2147483658,
        2147483648,
        2147516545,
        2147483648,
        32896,
        2147483648,
        2147483649,
        0,
        2147516424,
        2147483648
      ];
      var BITS = [224, 256, 384, 512];
      var SHAKE_BITS = [128, 256];
      var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
      var CSHAKE_BYTEPAD = {
        "128": 168,
        "256": 136
      };
      if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
        Array.isArray = function(obj) {
          return Object.prototype.toString.call(obj) === "[object Array]";
        };
      }
      if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
        ArrayBuffer.isView = function(obj) {
          return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
        };
      }
      var createOutputMethod = function(bits2, padding2, outputType) {
        return function(message) {
          return new Keccak(bits2, padding2, bits2).update(message)[outputType]();
        };
      };
      var createShakeOutputMethod = function(bits2, padding2, outputType) {
        return function(message, outputBits) {
          return new Keccak(bits2, padding2, outputBits).update(message)[outputType]();
        };
      };
      var createCshakeOutputMethod = function(bits2, padding2, outputType) {
        return function(message, outputBits, n, s) {
          return methods["cshake" + bits2].update(message, outputBits, n, s)[outputType]();
        };
      };
      var createKmacOutputMethod = function(bits2, padding2, outputType) {
        return function(key2, message, outputBits, s) {
          return methods["kmac" + bits2].update(key2, message, outputBits, s)[outputType]();
        };
      };
      var createOutputMethods = function(method, createMethod2, bits2, padding2) {
        for (var i2 = 0; i2 < OUTPUT_TYPES.length; ++i2) {
          var type = OUTPUT_TYPES[i2];
          method[type] = createMethod2(bits2, padding2, type);
        }
        return method;
      };
      var createMethod = function(bits2, padding2) {
        var method = createOutputMethod(bits2, padding2, "hex");
        method.create = function() {
          return new Keccak(bits2, padding2, bits2);
        };
        method.update = function(message) {
          return method.create().update(message);
        };
        return createOutputMethods(method, createOutputMethod, bits2, padding2);
      };
      var createShakeMethod = function(bits2, padding2) {
        var method = createShakeOutputMethod(bits2, padding2, "hex");
        method.create = function(outputBits) {
          return new Keccak(bits2, padding2, outputBits);
        };
        method.update = function(message, outputBits) {
          return method.create(outputBits).update(message);
        };
        return createOutputMethods(method, createShakeOutputMethod, bits2, padding2);
      };
      var createCshakeMethod = function(bits2, padding2) {
        var w = CSHAKE_BYTEPAD[bits2];
        var method = createCshakeOutputMethod(bits2, padding2, "hex");
        method.create = function(outputBits, n, s) {
          if (!n && !s) {
            return methods["shake" + bits2].create(outputBits);
          } else {
            return new Keccak(bits2, padding2, outputBits).bytepad([n, s], w);
          }
        };
        method.update = function(message, outputBits, n, s) {
          return method.create(outputBits, n, s).update(message);
        };
        return createOutputMethods(method, createCshakeOutputMethod, bits2, padding2);
      };
      var createKmacMethod = function(bits2, padding2) {
        var w = CSHAKE_BYTEPAD[bits2];
        var method = createKmacOutputMethod(bits2, padding2, "hex");
        method.create = function(key2, outputBits, s) {
          return new Kmac(bits2, padding2, outputBits).bytepad(["KMAC", s], w).bytepad([key2], w);
        };
        method.update = function(key2, message, outputBits, s) {
          return method.create(key2, outputBits, s).update(message);
        };
        return createOutputMethods(method, createKmacOutputMethod, bits2, padding2);
      };
      var algorithms = [
        { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
        { name: "sha3", padding: PADDING, bits: BITS, createMethod },
        { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
        { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
        { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
      ];
      var methods = {}, methodNames = [];
      for (var i = 0; i < algorithms.length; ++i) {
        var algorithm = algorithms[i];
        var bits = algorithm.bits;
        for (var j = 0; j < bits.length; ++j) {
          var methodName = algorithm.name + "_" + bits[j];
          methodNames.push(methodName);
          methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
          if (algorithm.name !== "sha3") {
            var newMethodName = algorithm.name + bits[j];
            methodNames.push(newMethodName);
            methods[newMethodName] = methods[methodName];
          }
        }
      }
      function Keccak(bits2, padding2, outputBits) {
        this.blocks = [];
        this.s = [];
        this.padding = padding2;
        this.outputBits = outputBits;
        this.reset = true;
        this.finalized = false;
        this.block = 0;
        this.start = 0;
        this.blockCount = 1600 - (bits2 << 1) >> 5;
        this.byteCount = this.blockCount << 2;
        this.outputBlocks = outputBits >> 5;
        this.extraBytes = (outputBits & 31) >> 3;
        for (var i2 = 0; i2 < 50; ++i2) {
          this.s[i2] = 0;
        }
      }
      Keccak.prototype.update = function(message) {
        if (this.finalized) {
          throw new Error(FINALIZE_ERROR);
        }
        var notString, type = typeof message;
        if (type !== "string") {
          if (type === "object") {
            if (message === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
              message = new Uint8Array(message);
            } else if (!Array.isArray(message)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index = 0, s = this.s, i2, code;
        while (index < length) {
          if (this.reset) {
            this.reset = false;
            blocks[0] = this.block;
            for (i2 = 1; i2 < blockCount + 1; ++i2) {
              blocks[i2] = 0;
            }
          }
          if (notString) {
            for (i2 = this.start; index < length && i2 < byteCount; ++index) {
              blocks[i2 >> 2] |= message[index] << SHIFT[i2++ & 3];
            }
          } else {
            for (i2 = this.start; index < length && i2 < byteCount; ++index) {
              code = message.charCodeAt(index);
              if (code < 128) {
                blocks[i2 >> 2] |= code << SHIFT[i2++ & 3];
              } else if (code < 2048) {
                blocks[i2 >> 2] |= (192 | code >> 6) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
              } else if (code < 55296 || code >= 57344) {
                blocks[i2 >> 2] |= (224 | code >> 12) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
              } else {
                code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);
                blocks[i2 >> 2] |= (240 | code >> 18) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
              }
            }
          }
          this.lastByteIndex = i2;
          if (i2 >= byteCount) {
            this.start = i2 - byteCount;
            this.block = blocks[blockCount];
            for (i2 = 0; i2 < blockCount; ++i2) {
              s[i2] ^= blocks[i2];
            }
            f(s);
            this.reset = true;
          } else {
            this.start = i2;
          }
        }
        return this;
      };
      Keccak.prototype.encode = function(x, right) {
        var o = x & 255, n = 1;
        var bytes = [o];
        x = x >> 8;
        o = x & 255;
        while (o > 0) {
          bytes.unshift(o);
          x = x >> 8;
          o = x & 255;
          ++n;
        }
        if (right) {
          bytes.push(n);
        } else {
          bytes.unshift(n);
        }
        this.update(bytes);
        return bytes.length;
      };
      Keccak.prototype.encodeString = function(str) {
        var notString, type = typeof str;
        if (type !== "string") {
          if (type === "object") {
            if (str === null) {
              throw new Error(INPUT_ERROR);
            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
              str = new Uint8Array(str);
            } else if (!Array.isArray(str)) {
              if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                throw new Error(INPUT_ERROR);
              }
            }
          } else {
            throw new Error(INPUT_ERROR);
          }
          notString = true;
        }
        var bytes = 0, length = str.length;
        if (notString) {
          bytes = length;
        } else {
          for (var i2 = 0; i2 < str.length; ++i2) {
            var code = str.charCodeAt(i2);
            if (code < 128) {
              bytes += 1;
            } else if (code < 2048) {
              bytes += 2;
            } else if (code < 55296 || code >= 57344) {
              bytes += 3;
            } else {
              code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i2) & 1023);
              bytes += 4;
            }
          }
        }
        bytes += this.encode(bytes * 8);
        this.update(str);
        return bytes;
      };
      Keccak.prototype.bytepad = function(strs, w) {
        var bytes = this.encode(w);
        for (var i2 = 0; i2 < strs.length; ++i2) {
          bytes += this.encodeString(strs[i2]);
        }
        var paddingBytes = w - bytes % w;
        var zeros = [];
        zeros.length = paddingBytes;
        this.update(zeros);
        return this;
      };
      Keccak.prototype.finalize = function() {
        if (this.finalized) {
          return;
        }
        this.finalized = true;
        var blocks = this.blocks, i2 = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
        blocks[i2 >> 2] |= this.padding[i2 & 3];
        if (this.lastByteIndex === this.byteCount) {
          blocks[0] = blocks[blockCount];
          for (i2 = 1; i2 < blockCount + 1; ++i2) {
            blocks[i2] = 0;
          }
        }
        blocks[blockCount - 1] |= 2147483648;
        for (i2 = 0; i2 < blockCount; ++i2) {
          s[i2] ^= blocks[i2];
        }
        f(s);
      };
      Keccak.prototype.toString = Keccak.prototype.hex = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
        var hex = "", block;
        while (j2 < outputBlocks) {
          for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
            block = s[i2];
            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
          }
          if (j2 % blockCount === 0) {
            f(s);
            i2 = 0;
          }
        }
        if (extraBytes) {
          block = s[i2];
          hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
          if (extraBytes > 1) {
            hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
          }
          if (extraBytes > 2) {
            hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
          }
        }
        return hex;
      };
      Keccak.prototype.arrayBuffer = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
        var bytes = this.outputBits >> 3;
        var buffer;
        if (extraBytes) {
          buffer = new ArrayBuffer(outputBlocks + 1 << 2);
        } else {
          buffer = new ArrayBuffer(bytes);
        }
        var array = new Uint32Array(buffer);
        while (j2 < outputBlocks) {
          for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
            array[j2] = s[i2];
          }
          if (j2 % blockCount === 0) {
            f(s);
          }
        }
        if (extraBytes) {
          array[i2] = s[i2];
          buffer = buffer.slice(0, bytes);
        }
        return buffer;
      };
      Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
      Keccak.prototype.digest = Keccak.prototype.array = function() {
        this.finalize();
        var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
        var array = [], offset, block;
        while (j2 < outputBlocks) {
          for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
            offset = j2 << 2;
            block = s[i2];
            array[offset] = block & 255;
            array[offset + 1] = block >> 8 & 255;
            array[offset + 2] = block >> 16 & 255;
            array[offset + 3] = block >> 24 & 255;
          }
          if (j2 % blockCount === 0) {
            f(s);
          }
        }
        if (extraBytes) {
          offset = j2 << 2;
          block = s[i2];
          array[offset] = block & 255;
          if (extraBytes > 1) {
            array[offset + 1] = block >> 8 & 255;
          }
          if (extraBytes > 2) {
            array[offset + 2] = block >> 16 & 255;
          }
        }
        return array;
      };
      function Kmac(bits2, padding2, outputBits) {
        Keccak.call(this, bits2, padding2, outputBits);
      }
      Kmac.prototype = new Keccak();
      Kmac.prototype.finalize = function() {
        this.encode(this.outputBits, true);
        return Keccak.prototype.finalize.call(this);
      };
      var f = function(s) {
        var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
        for (n = 0; n < 48; n += 2) {
          c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
          c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
          c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
          c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
          c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
          c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
          c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
          c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
          c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
          c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
          h = c8 ^ (c2 << 1 | c3 >>> 31);
          l = c9 ^ (c3 << 1 | c2 >>> 31);
          s[0] ^= h;
          s[1] ^= l;
          s[10] ^= h;
          s[11] ^= l;
          s[20] ^= h;
          s[21] ^= l;
          s[30] ^= h;
          s[31] ^= l;
          s[40] ^= h;
          s[41] ^= l;
          h = c0 ^ (c4 << 1 | c5 >>> 31);
          l = c1 ^ (c5 << 1 | c4 >>> 31);
          s[2] ^= h;
          s[3] ^= l;
          s[12] ^= h;
          s[13] ^= l;
          s[22] ^= h;
          s[23] ^= l;
          s[32] ^= h;
          s[33] ^= l;
          s[42] ^= h;
          s[43] ^= l;
          h = c2 ^ (c6 << 1 | c7 >>> 31);
          l = c3 ^ (c7 << 1 | c6 >>> 31);
          s[4] ^= h;
          s[5] ^= l;
          s[14] ^= h;
          s[15] ^= l;
          s[24] ^= h;
          s[25] ^= l;
          s[34] ^= h;
          s[35] ^= l;
          s[44] ^= h;
          s[45] ^= l;
          h = c4 ^ (c8 << 1 | c9 >>> 31);
          l = c5 ^ (c9 << 1 | c8 >>> 31);
          s[6] ^= h;
          s[7] ^= l;
          s[16] ^= h;
          s[17] ^= l;
          s[26] ^= h;
          s[27] ^= l;
          s[36] ^= h;
          s[37] ^= l;
          s[46] ^= h;
          s[47] ^= l;
          h = c6 ^ (c0 << 1 | c1 >>> 31);
          l = c7 ^ (c1 << 1 | c0 >>> 31);
          s[8] ^= h;
          s[9] ^= l;
          s[18] ^= h;
          s[19] ^= l;
          s[28] ^= h;
          s[29] ^= l;
          s[38] ^= h;
          s[39] ^= l;
          s[48] ^= h;
          s[49] ^= l;
          b0 = s[0];
          b1 = s[1];
          b32 = s[11] << 4 | s[10] >>> 28;
          b33 = s[10] << 4 | s[11] >>> 28;
          b14 = s[20] << 3 | s[21] >>> 29;
          b15 = s[21] << 3 | s[20] >>> 29;
          b46 = s[31] << 9 | s[30] >>> 23;
          b47 = s[30] << 9 | s[31] >>> 23;
          b28 = s[40] << 18 | s[41] >>> 14;
          b29 = s[41] << 18 | s[40] >>> 14;
          b20 = s[2] << 1 | s[3] >>> 31;
          b21 = s[3] << 1 | s[2] >>> 31;
          b2 = s[13] << 12 | s[12] >>> 20;
          b3 = s[12] << 12 | s[13] >>> 20;
          b34 = s[22] << 10 | s[23] >>> 22;
          b35 = s[23] << 10 | s[22] >>> 22;
          b16 = s[33] << 13 | s[32] >>> 19;
          b17 = s[32] << 13 | s[33] >>> 19;
          b48 = s[42] << 2 | s[43] >>> 30;
          b49 = s[43] << 2 | s[42] >>> 30;
          b40 = s[5] << 30 | s[4] >>> 2;
          b41 = s[4] << 30 | s[5] >>> 2;
          b22 = s[14] << 6 | s[15] >>> 26;
          b23 = s[15] << 6 | s[14] >>> 26;
          b4 = s[25] << 11 | s[24] >>> 21;
          b5 = s[24] << 11 | s[25] >>> 21;
          b36 = s[34] << 15 | s[35] >>> 17;
          b37 = s[35] << 15 | s[34] >>> 17;
          b18 = s[45] << 29 | s[44] >>> 3;
          b19 = s[44] << 29 | s[45] >>> 3;
          b10 = s[6] << 28 | s[7] >>> 4;
          b11 = s[7] << 28 | s[6] >>> 4;
          b42 = s[17] << 23 | s[16] >>> 9;
          b43 = s[16] << 23 | s[17] >>> 9;
          b24 = s[26] << 25 | s[27] >>> 7;
          b25 = s[27] << 25 | s[26] >>> 7;
          b6 = s[36] << 21 | s[37] >>> 11;
          b7 = s[37] << 21 | s[36] >>> 11;
          b38 = s[47] << 24 | s[46] >>> 8;
          b39 = s[46] << 24 | s[47] >>> 8;
          b30 = s[8] << 27 | s[9] >>> 5;
          b31 = s[9] << 27 | s[8] >>> 5;
          b12 = s[18] << 20 | s[19] >>> 12;
          b13 = s[19] << 20 | s[18] >>> 12;
          b44 = s[29] << 7 | s[28] >>> 25;
          b45 = s[28] << 7 | s[29] >>> 25;
          b26 = s[38] << 8 | s[39] >>> 24;
          b27 = s[39] << 8 | s[38] >>> 24;
          b8 = s[48] << 14 | s[49] >>> 18;
          b9 = s[49] << 14 | s[48] >>> 18;
          s[0] = b0 ^ ~b2 & b4;
          s[1] = b1 ^ ~b3 & b5;
          s[10] = b10 ^ ~b12 & b14;
          s[11] = b11 ^ ~b13 & b15;
          s[20] = b20 ^ ~b22 & b24;
          s[21] = b21 ^ ~b23 & b25;
          s[30] = b30 ^ ~b32 & b34;
          s[31] = b31 ^ ~b33 & b35;
          s[40] = b40 ^ ~b42 & b44;
          s[41] = b41 ^ ~b43 & b45;
          s[2] = b2 ^ ~b4 & b6;
          s[3] = b3 ^ ~b5 & b7;
          s[12] = b12 ^ ~b14 & b16;
          s[13] = b13 ^ ~b15 & b17;
          s[22] = b22 ^ ~b24 & b26;
          s[23] = b23 ^ ~b25 & b27;
          s[32] = b32 ^ ~b34 & b36;
          s[33] = b33 ^ ~b35 & b37;
          s[42] = b42 ^ ~b44 & b46;
          s[43] = b43 ^ ~b45 & b47;
          s[4] = b4 ^ ~b6 & b8;
          s[5] = b5 ^ ~b7 & b9;
          s[14] = b14 ^ ~b16 & b18;
          s[15] = b15 ^ ~b17 & b19;
          s[24] = b24 ^ ~b26 & b28;
          s[25] = b25 ^ ~b27 & b29;
          s[34] = b34 ^ ~b36 & b38;
          s[35] = b35 ^ ~b37 & b39;
          s[44] = b44 ^ ~b46 & b48;
          s[45] = b45 ^ ~b47 & b49;
          s[6] = b6 ^ ~b8 & b0;
          s[7] = b7 ^ ~b9 & b1;
          s[16] = b16 ^ ~b18 & b10;
          s[17] = b17 ^ ~b19 & b11;
          s[26] = b26 ^ ~b28 & b20;
          s[27] = b27 ^ ~b29 & b21;
          s[36] = b36 ^ ~b38 & b30;
          s[37] = b37 ^ ~b39 & b31;
          s[46] = b46 ^ ~b48 & b40;
          s[47] = b47 ^ ~b49 & b41;
          s[8] = b8 ^ ~b0 & b2;
          s[9] = b9 ^ ~b1 & b3;
          s[18] = b18 ^ ~b10 & b12;
          s[19] = b19 ^ ~b11 & b13;
          s[28] = b28 ^ ~b20 & b22;
          s[29] = b29 ^ ~b21 & b23;
          s[38] = b38 ^ ~b30 & b32;
          s[39] = b39 ^ ~b31 & b33;
          s[48] = b48 ^ ~b40 & b42;
          s[49] = b49 ^ ~b41 & b43;
          s[0] ^= RC[n];
          s[1] ^= RC[n + 1];
        }
      };
      if (COMMON_JS) {
        module.exports = methods;
      } else {
        for (i = 0; i < methodNames.length; ++i) {
          root[methodNames[i]] = methods[methodNames[i]];
        }
        if (AMD) {
          define(function() {
            return methods;
          });
        }
      }
    })();
  }
});

// node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js
var require_bn9 = __commonJS({
  "node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js"(exports, module) {
    init_shim();
    (function(module2, exports2) {
      "use strict";
      function assert2(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN3(number, base2, endian) {
        if (BN3.isBN(number)) {
          return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number !== null) {
          if (base2 === "le" || base2 === "be") {
            endian = base2;
            base2 = 10;
          }
          this._init(number || 0, base2 || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN3;
      } else {
        exports2.BN = BN3;
      }
      BN3.BN = BN3;
      BN3.wordSize = 26;
      var Buffer3;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer3 = window.Buffer;
        } else {
          Buffer3 = require_buffer2().Buffer;
        }
      } catch (e) {
      }
      BN3.isBN = function isBN(num) {
        if (num instanceof BN3) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN3.wordSize && Array.isArray(num.words);
      };
      BN3.max = function max(left, right) {
        if (left.cmp(right) > 0)
          return left;
        return right;
      };
      BN3.min = function min(left, right) {
        if (left.cmp(right) < 0)
          return left;
        return right;
      };
      BN3.prototype._init = function init2(number, base2, endian) {
        if (typeof number === "number") {
          return this._initNumber(number, base2, endian);
        }
        if (typeof number === "object") {
          return this._initArray(number, base2, endian);
        }
        if (base2 === "hex") {
          base2 = 16;
        }
        assert2(base2 === (base2 | 0) && base2 >= 2 && base2 <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        if (number[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number.length) {
          if (base2 === 16) {
            this._parseHex(number, start, endian);
          } else {
            this._parseBase(number, base2, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base2, endian);
            }
          }
        }
      };
      BN3.prototype._initNumber = function _initNumber(number, base2, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [number & 67108863];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert2(number < 9007199254740992);
          this.words = [
            number & 67108863,
            number / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le")
          return;
        this._initArray(this.toArray(), base2, endian);
      };
      BN3.prototype._initArray = function _initArray(number, base2, endian) {
        assert2(typeof number.length === "number");
        if (number.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i = 0, j = 0; i < number.length; i += 3) {
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
          r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
      }
      BN3.prototype._parseHex = function _parseHex(number, start, endian) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          this.words[i] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i = number.length - 1; i >= start; i -= 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number.length - start;
          for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul3) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul3;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN3.prototype._parseBase = function _parseBase(number, base2, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base2) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base2 | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base2);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod !== 0) {
          var pow = 1;
          word = parseBase(number, i, number.length, base2);
          for (i = 0; i < mod; i++) {
            pow *= base2;
          }
          this.imuln(pow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN3.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) {
          dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN3.prototype.clone = function clone() {
        var r = new BN3(null);
        this.copy(r);
        return r;
      };
      BN3.prototype._expand = function _expand(size) {
        while (this.length < size) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN3.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN3.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN3.prototype.inspect = function inspect4() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN3.prototype.toString = function toString(base2, padding2) {
        base2 = base2 || 10;
        padding2 = padding2 | 0 || 1;
        var out;
        if (base2 === 16 || base2 === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            if (carry !== 0 || i !== this.length - 1) {
              out = zeros[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base2 === (base2 | 0) && base2 >= 2 && base2 <= 36) {
          var groupSize = groupSizes[base2];
          var groupBase = groupBases[base2];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base2);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding2 !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert2(false, "Base should be between 2 and 36");
      };
      BN3.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert2(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN3.prototype.toJSON = function toJSON2() {
        return this.toString(16);
      };
      BN3.prototype.toBuffer = function toBuffer(endian, length) {
        assert2(typeof Buffer3 !== "undefined");
        return this.toArrayLike(Buffer3, endian, length);
      };
      BN3.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN3.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert2(byteLength <= reqLength, "byte array longer than desired length");
        assert2(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (!littleEndian) {
          for (i = 0; i < reqLength - byteLength; i++) {
            res[i] = 0;
          }
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        } else {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (; i < reqLength; i++) {
            res[i] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN3.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN3.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN3.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0)
          return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN3.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN3.prototype.zeroBits = function zeroBits() {
        if (this.isZero())
          return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (b !== 26)
            break;
        }
        return r;
      };
      BN3.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN3.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN3.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN3.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN3.prototype.neg = function neg3() {
        return this.clone().ineg();
      };
      BN3.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN3.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i = 0; i < num.length; i++) {
          this.words[i] = this.words[i] | num.words[i];
        }
        return this.strip();
      };
      BN3.prototype.ior = function ior(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN3.prototype.or = function or(num) {
        if (this.length > num.length)
          return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN3.prototype.uor = function uor(num) {
        if (this.length > num.length)
          return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN3.prototype.iuand = function iuand(num) {
        var b;
        if (this.length > num.length) {
          b = num;
        } else {
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this.strip();
      };
      BN3.prototype.iand = function iand(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN3.prototype.and = function and(num) {
        if (this.length > num.length)
          return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN3.prototype.uand = function uand(num) {
        if (this.length > num.length)
          return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN3.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) {
          this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN3.prototype.ixor = function ixor(num) {
        assert2((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN3.prototype.xor = function xor(num) {
        if (this.length > num.length)
          return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN3.prototype.uxor = function uxor(num) {
        if (this.length > num.length)
          return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN3.prototype.inotn = function inotn(width) {
        assert2(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i = 0; i < bytesNeeded; i++) {
          this.words[i] = ~this.words[i] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN3.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN3.prototype.setn = function setn(bit, val) {
        assert2(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN3.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          this.words[i] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        return this;
      };
      BN3.prototype.add = function add3(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length)
          return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN3.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        for (; carry !== 0 && i < a.length; i++) {
          r = (a.words[i] | 0) + carry;
          carry = r >> 26;
          this.words[i] = r & 67108863;
        }
        if (carry === 0 && i < a.length && a !== this) {
          for (; i < a.length; i++) {
            this.words[i] = a.words[i];
          }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN3.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = self2.words[i] | 0;
            b = num.words[j] | 0;
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = self2.words[i] | 0;
            var b = num.words[j] | 0;
            var r = a * b;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN3.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N2) {
        var t = new Array(N2);
        var l = BN3.prototype._countBits(N2) - 1;
        for (var i = 0; i < N2; i++) {
          t[i] = this.revBin(i, l, N2);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N2) {
        if (x === 0 || x === N2 - 1)
          return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (x & 1) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
        for (var i = 0; i < N2; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N2);
        for (var s = 1; s < N2; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N2; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N2 = Math.max(m, n) | 1;
        var odd = N2 & 1;
        var i = 0;
        for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
          i++;
        }
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
        if (N2 <= 1)
          return;
        for (var i = 0; i < N2 / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N2 - i - 1];
          rws[N2 - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N2 - i - 1];
          iws[N2 - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
        var carry = 0;
        for (var i = 0; i < N2 / 2; i++) {
          var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
          ws[i] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry = carry + (ws[i] | 0);
          rws[2 * i] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i = 2 * len; i < N2; ++i) {
          rws[i] = 0;
        }
        assert2(carry === 0);
        assert2((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N2) {
        var ph = new Array(N2);
        for (var i = 0; i < N2; i++) {
          ph[i] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N2 = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N2);
        var _ = this.stub(N2);
        var rws = new Array(N2);
        var rwst = new Array(N2);
        var iwst = new Array(N2);
        var nrws = new Array(N2);
        var nrwst = new Array(N2);
        var niwst = new Array(N2);
        var rmws = out.words;
        rmws.length = N2;
        this.convert13b(x.words, x.length, rws, N2);
        this.convert13b(y.words, y.length, nrws, N2);
        this.transform(rws, _, rwst, iwst, N2, rbt);
        this.transform(nrws, _, nrwst, niwst, N2, rbt);
        for (var i = 0; i < N2; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N2);
        this.transform(rwst, iwst, rmws, _, N2, rbt);
        this.conjugate(rmws, _, N2);
        this.normalize13b(rmws, N2);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN3.prototype.mul = function mul3(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN3.prototype.mulf = function mulf(num) {
        var out = new BN3(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN3.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN3.prototype.imuln = function imuln(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (this.words[i] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN3.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN3.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN3.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0)
          return new BN3(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) {
          if (w[i] !== 0)
            break;
        }
        if (++i < w.length) {
          for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
            if (w[i] === 0)
              continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN3.prototype.iushln = function iushln(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (this.words[i] | 0) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i = this.length - 1; i >= 0; i--) {
            this.words[i + s] = this.words[i];
          }
          for (i = 0; i < s; i++) {
            this.words[i] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN3.prototype.ishln = function ishln(bits) {
        assert2(this.negative === 0);
        return this.iushln(bits);
      };
      BN3.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert2(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) {
            maskedWords.words[i] = this.words[i];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) {
            this.words[i] = this.words[i + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
          var word = this.words[i] | 0;
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN3.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert2(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN3.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN3.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN3.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN3.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN3.prototype.testn = function testn(bit) {
        assert2(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s)
          return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN3.prototype.imaskn = function imaskn(bits) {
        assert2(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert2(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN3.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN3.prototype.iaddn = function iaddn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN3.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          if (i === this.length - 1) {
            this.words[i + 1] = 1;
          } else {
            this.words[i + 1]++;
          }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN3.prototype.isubn = function isubn(num) {
        assert2(typeof num === "number");
        assert2(num < 67108864);
        if (num < 0)
          return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i = 0; i < this.length && this.words[i] < 0; i++) {
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN3.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN3.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN3.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN3.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN3.prototype._ishlnsubmul = function _ishlnsubmul(num, mul3, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (this.words[i + shift] | 0) + carry;
          var right = (num.words[i] | 0) * mul3;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = w & 67108863;
        }
        for (; i < this.length - shift; i++) {
          w = (this.words[i + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i + shift] = w & 67108863;
        }
        if (carry === 0)
          return this.strip();
        assert2(carry === -1);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(this.words[i] | 0) + carry;
          carry = w >> 26;
          this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN3.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = b.words[b.length - 1] | 0;
        }
        var m = a.length - b.length;
        var q;
        if (mode !== "mod") {
          q = new BN3(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) {
            q.words[i] = 0;
          }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
          a = diff;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN3.prototype.divmod = function divmod(num, mode, positive) {
        assert2(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN3(0),
            mod: new BN3(0)
          };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.iadd(num);
            }
          }
          return {
            div,
            mod
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode);
          if (mode !== "mod") {
            div = res.div.neg();
          }
          return {
            div,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode);
          if (mode !== "div") {
            mod = res.mod.neg();
            if (positive && mod.negative !== 0) {
              mod.isub(num);
            }
          }
          return {
            div: res.div,
            mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN3(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode === "mod") {
            return {
              div: null,
              mod: new BN3(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN3(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN3.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN3.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN3.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN3.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero())
          return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0)
          return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN3.prototype.modn = function modn(num) {
        assert2(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return acc;
      };
      BN3.prototype.idivn = function idivn(num) {
        assert2(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (this.words[i] | 0) + carry * 67108864;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN3.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN3.prototype.egcd = function egcd(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN3(1);
        var B = new BN3(0);
        var C = new BN3(0);
        var D = new BN3(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN3.prototype._invmp = function _invmp(p) {
        assert2(p.negative === 0);
        assert2(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN3(1);
        var x2 = new BN3(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
            ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
            ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN3.prototype.gcd = function gcd(num) {
        if (this.isZero())
          return num.abs();
        if (num.isZero())
          return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b.isEven()) {
            b.iushrn(1);
          }
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (r === 0 || b.cmpn(1) === 0) {
            break;
          }
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN3.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN3.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN3.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
      };
      BN3.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN3.prototype.bincn = function bincn(bit) {
        assert2(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; carry !== 0 && i < this.length; i++) {
          var w = this.words[i] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (carry !== 0) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN3.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN3.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative)
          return -1;
        if (this.negative === 0 && negative)
          return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert2(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0)
          return -1;
        if (this.negative === 0 && num.negative !== 0)
          return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0)
          return -res | 0;
        return res;
      };
      BN3.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length)
          return 1;
        if (this.length < num.length)
          return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = this.words[i] | 0;
          var b = num.words[i] | 0;
          if (a === b)
            continue;
          if (a < b) {
            res = -1;
          } else if (a > b) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN3.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN3.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN3.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN3.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN3.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN3.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN3.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN3.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN3.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN3.prototype.eq = function eq4(num) {
        return this.cmp(num) === 0;
      };
      BN3.red = function red(num) {
        return new Red(num);
      };
      BN3.prototype.toRed = function toRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        assert2(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN3.prototype.fromRed = function fromRed() {
        assert2(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN3.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN3.prototype.forceRed = function forceRed(ctx) {
        assert2(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN3.prototype.redAdd = function redAdd(num) {
        assert2(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN3.prototype.redIAdd = function redIAdd(num) {
        assert2(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN3.prototype.redSub = function redSub(num) {
        assert2(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN3.prototype.redISub = function redISub(num) {
        assert2(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN3.prototype.redShl = function redShl(num) {
        assert2(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN3.prototype.redMul = function redMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN3.prototype.redIMul = function redIMul(num) {
        assert2(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN3.prototype.redSqr = function redSqr() {
        assert2(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN3.prototype.redISqr = function redISqr() {
        assert2(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN3.prototype.redSqrt = function redSqrt() {
        assert2(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN3.prototype.redInvm = function redInvm() {
        assert2(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN3.prototype.redNeg = function redNeg() {
        assert2(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN3.prototype.redPow = function redPow(num) {
        assert2(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN3(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN3(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN3(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) {
          output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = input.words[i] | 0;
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = num.words[i] | 0;
          lo += w * 977;
          num.words[i] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = (num.words[i] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN3._prime = function prime(name) {
        if (primes[name])
          return primes[name];
        var prime2;
        if (name === "k256") {
          prime2 = new K256();
        } else if (name === "p224") {
          prime2 = new P224();
        } else if (name === "p192") {
          prime2 = new P192();
        } else if (name === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name);
        }
        primes[name] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN3._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert2(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert2(a.negative === 0, "red works only with positives");
        assert2(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert2((a.negative | b.negative) === 0, "red works only with positives");
        assert2(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime)
          return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg3(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add3(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul3(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero())
          return a.clone();
        var mod3 = this.m.andln(3);
        assert2(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow = this.m.add(new BN3(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert2(!q.isZero());
        var one = new BN3(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN3(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i = 0; tmp.cmp(one) !== 0; i++) {
            tmp = tmp.redSqr();
          }
          assert2(i < m);
          var b = this.pow(c, new BN3(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        } else {
          return this.imod(inv);
        }
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero())
          return new BN3(1).toRed(this);
        if (num.cmpn(1) === 0)
          return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN3(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) {
          wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i !== 0 || j !== 0))
              continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN3.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN3(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul3(a, b) {
        if (a.isZero() || b.isZero())
          return new BN3(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/aes-js/index.js
var require_aes_js = __commonJS({
  "node_modules/aes-js/index.js"(exports, module) {
    "use strict";
    init_shim();
    (function(root) {
      function checkInt(value) {
        return parseInt(value) === value;
      }
      function checkInts(arrayish) {
        if (!checkInt(arrayish.length)) {
          return false;
        }
        for (var i = 0; i < arrayish.length; i++) {
          if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
            return false;
          }
        }
        return true;
      }
      function coerceArray(arg, copy) {
        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === "Uint8Array") {
          if (copy) {
            if (arg.slice) {
              arg = arg.slice();
            } else {
              arg = Array.prototype.slice.call(arg);
            }
          }
          return arg;
        }
        if (Array.isArray(arg)) {
          if (!checkInts(arg)) {
            throw new Error("Array contains invalid value: " + arg);
          }
          return new Uint8Array(arg);
        }
        if (checkInt(arg.length) && checkInts(arg)) {
          return new Uint8Array(arg);
        }
        throw new Error("unsupported array-like object");
      }
      function createArray(length) {
        return new Uint8Array(length);
      }
      function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
        if (sourceStart != null || sourceEnd != null) {
          if (sourceArray.slice) {
            sourceArray = sourceArray.slice(sourceStart, sourceEnd);
          } else {
            sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
          }
        }
        targetArray.set(sourceArray, targetStart);
      }
      var convertUtf8 = function() {
        function toBytes(text) {
          var result = [], i = 0;
          text = encodeURI(text);
          while (i < text.length) {
            var c = text.charCodeAt(i++);
            if (c === 37) {
              result.push(parseInt(text.substr(i, 2), 16));
              i += 2;
            } else {
              result.push(c);
            }
          }
          return coerceArray(result);
        }
        function fromBytes(bytes) {
          var result = [], i = 0;
          while (i < bytes.length) {
            var c = bytes[i];
            if (c < 128) {
              result.push(String.fromCharCode(c));
              i++;
            } else if (c > 191 && c < 224) {
              result.push(String.fromCharCode((c & 31) << 6 | bytes[i + 1] & 63));
              i += 2;
            } else {
              result.push(String.fromCharCode((c & 15) << 12 | (bytes[i + 1] & 63) << 6 | bytes[i + 2] & 63));
              i += 3;
            }
          }
          return result.join("");
        }
        return {
          toBytes,
          fromBytes
        };
      }();
      var convertHex = function() {
        function toBytes(text) {
          var result = [];
          for (var i = 0; i < text.length; i += 2) {
            result.push(parseInt(text.substr(i, 2), 16));
          }
          return result;
        }
        var Hex = "0123456789abcdef";
        function fromBytes(bytes) {
          var result = [];
          for (var i = 0; i < bytes.length; i++) {
            var v = bytes[i];
            result.push(Hex[(v & 240) >> 4] + Hex[v & 15]);
          }
          return result.join("");
        }
        return {
          toBytes,
          fromBytes
        };
      }();
      var numberOfRounds = { 16: 10, 24: 12, 32: 14 };
      var rcon = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145];
      var S = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];
      var Si = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];
      var T1 = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986];
      var T2 = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766];
      var T3 = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126];
      var T4 = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436];
      var T5 = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890];
      var T6 = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935];
      var T7 = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600];
      var T8 = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480];
      var U1 = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795];
      var U2 = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855];
      var U3 = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150];
      var U4 = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
      function convertToInt32(bytes) {
        var result = [];
        for (var i = 0; i < bytes.length; i += 4) {
          result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);
        }
        return result;
      }
      var AES = function(key2) {
        if (!(this instanceof AES)) {
          throw Error("AES must be instanitated with `new`");
        }
        Object.defineProperty(this, "key", {
          value: coerceArray(key2, true)
        });
        this._prepare();
      };
      AES.prototype._prepare = function() {
        var rounds = numberOfRounds[this.key.length];
        if (rounds == null) {
          throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
        }
        this._Ke = [];
        this._Kd = [];
        for (var i = 0; i <= rounds; i++) {
          this._Ke.push([0, 0, 0, 0]);
          this._Kd.push([0, 0, 0, 0]);
        }
        var roundKeyCount = (rounds + 1) * 4;
        var KC = this.key.length / 4;
        var tk = convertToInt32(this.key);
        var index;
        for (var i = 0; i < KC; i++) {
          index = i >> 2;
          this._Ke[index][i % 4] = tk[i];
          this._Kd[rounds - index][i % 4] = tk[i];
        }
        var rconpointer = 0;
        var t = KC, tt;
        while (t < roundKeyCount) {
          tt = tk[KC - 1];
          tk[0] ^= S[tt >> 16 & 255] << 24 ^ S[tt >> 8 & 255] << 16 ^ S[tt & 255] << 8 ^ S[tt >> 24 & 255] ^ rcon[rconpointer] << 24;
          rconpointer += 1;
          if (KC != 8) {
            for (var i = 1; i < KC; i++) {
              tk[i] ^= tk[i - 1];
            }
          } else {
            for (var i = 1; i < KC / 2; i++) {
              tk[i] ^= tk[i - 1];
            }
            tt = tk[KC / 2 - 1];
            tk[KC / 2] ^= S[tt & 255] ^ S[tt >> 8 & 255] << 8 ^ S[tt >> 16 & 255] << 16 ^ S[tt >> 24 & 255] << 24;
            for (var i = KC / 2 + 1; i < KC; i++) {
              tk[i] ^= tk[i - 1];
            }
          }
          var i = 0, r, c;
          while (i < KC && t < roundKeyCount) {
            r = t >> 2;
            c = t % 4;
            this._Ke[r][c] = tk[i];
            this._Kd[rounds - r][c] = tk[i++];
            t++;
          }
        }
        for (var r = 1; r < rounds; r++) {
          for (var c = 0; c < 4; c++) {
            tt = this._Kd[r][c];
            this._Kd[r][c] = U1[tt >> 24 & 255] ^ U2[tt >> 16 & 255] ^ U3[tt >> 8 & 255] ^ U4[tt & 255];
          }
        }
      };
      AES.prototype.encrypt = function(plaintext) {
        if (plaintext.length != 16) {
          throw new Error("invalid plaintext size (must be 16 bytes)");
        }
        var rounds = this._Ke.length - 1;
        var a = [0, 0, 0, 0];
        var t = convertToInt32(plaintext);
        for (var i = 0; i < 4; i++) {
          t[i] ^= this._Ke[0][i];
        }
        for (var r = 1; r < rounds; r++) {
          for (var i = 0; i < 4; i++) {
            a[i] = T1[t[i] >> 24 & 255] ^ T2[t[(i + 1) % 4] >> 16 & 255] ^ T3[t[(i + 2) % 4] >> 8 & 255] ^ T4[t[(i + 3) % 4] & 255] ^ this._Ke[r][i];
          }
          t = a.slice();
        }
        var result = createArray(16), tt;
        for (var i = 0; i < 4; i++) {
          tt = this._Ke[rounds][i];
          result[4 * i] = (S[t[i] >> 24 & 255] ^ tt >> 24) & 255;
          result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 255] ^ tt >> 16) & 255;
          result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;
          result[4 * i + 3] = (S[t[(i + 3) % 4] & 255] ^ tt) & 255;
        }
        return result;
      };
      AES.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length != 16) {
          throw new Error("invalid ciphertext size (must be 16 bytes)");
        }
        var rounds = this._Kd.length - 1;
        var a = [0, 0, 0, 0];
        var t = convertToInt32(ciphertext);
        for (var i = 0; i < 4; i++) {
          t[i] ^= this._Kd[0][i];
        }
        for (var r = 1; r < rounds; r++) {
          for (var i = 0; i < 4; i++) {
            a[i] = T5[t[i] >> 24 & 255] ^ T6[t[(i + 3) % 4] >> 16 & 255] ^ T7[t[(i + 2) % 4] >> 8 & 255] ^ T8[t[(i + 1) % 4] & 255] ^ this._Kd[r][i];
          }
          t = a.slice();
        }
        var result = createArray(16), tt;
        for (var i = 0; i < 4; i++) {
          tt = this._Kd[rounds][i];
          result[4 * i] = (Si[t[i] >> 24 & 255] ^ tt >> 24) & 255;
          result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 255] ^ tt >> 16) & 255;
          result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;
          result[4 * i + 3] = (Si[t[(i + 1) % 4] & 255] ^ tt) & 255;
        }
        return result;
      };
      var ModeOfOperationECB = function(key2) {
        if (!(this instanceof ModeOfOperationECB)) {
          throw Error("AES must be instanitated with `new`");
        }
        this.description = "Electronic Code Block";
        this.name = "ecb";
        this._aes = new AES(key2);
      };
      ModeOfOperationECB.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);
        if (plaintext.length % 16 !== 0) {
          throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
        }
        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);
        for (var i = 0; i < plaintext.length; i += 16) {
          copyArray(plaintext, block, 0, i, i + 16);
          block = this._aes.encrypt(block);
          copyArray(block, ciphertext, i);
        }
        return ciphertext;
      };
      ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);
        if (ciphertext.length % 16 !== 0) {
          throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
        }
        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);
        for (var i = 0; i < ciphertext.length; i += 16) {
          copyArray(ciphertext, block, 0, i, i + 16);
          block = this._aes.decrypt(block);
          copyArray(block, plaintext, i);
        }
        return plaintext;
      };
      var ModeOfOperationCBC = function(key2, iv) {
        if (!(this instanceof ModeOfOperationCBC)) {
          throw Error("AES must be instanitated with `new`");
        }
        this.description = "Cipher Block Chaining";
        this.name = "cbc";
        if (!iv) {
          iv = createArray(16);
        } else if (iv.length != 16) {
          throw new Error("invalid initialation vector size (must be 16 bytes)");
        }
        this._lastCipherblock = coerceArray(iv, true);
        this._aes = new AES(key2);
      };
      ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
        plaintext = coerceArray(plaintext);
        if (plaintext.length % 16 !== 0) {
          throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
        }
        var ciphertext = createArray(plaintext.length);
        var block = createArray(16);
        for (var i = 0; i < plaintext.length; i += 16) {
          copyArray(plaintext, block, 0, i, i + 16);
          for (var j = 0; j < 16; j++) {
            block[j] ^= this._lastCipherblock[j];
          }
          this._lastCipherblock = this._aes.encrypt(block);
          copyArray(this._lastCipherblock, ciphertext, i);
        }
        return ciphertext;
      };
      ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
        ciphertext = coerceArray(ciphertext);
        if (ciphertext.length % 16 !== 0) {
          throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
        }
        var plaintext = createArray(ciphertext.length);
        var block = createArray(16);
        for (var i = 0; i < ciphertext.length; i += 16) {
          copyArray(ciphertext, block, 0, i, i + 16);
          block = this._aes.decrypt(block);
          for (var j = 0; j < 16; j++) {
            plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
          }
          copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
        }
        return plaintext;
      };
      var ModeOfOperationCFB = function(key2, iv, segmentSize) {
        if (!(this instanceof ModeOfOperationCFB)) {
          throw Error("AES must be instanitated with `new`");
        }
        this.description = "Cipher Feedback";
        this.name = "cfb";
        if (!iv) {
          iv = createArray(16);
        } else if (iv.length != 16) {
          throw new Error("invalid initialation vector size (must be 16 size)");
        }
        if (!segmentSize) {
          segmentSize = 1;
        }
        this.segmentSize = segmentSize;
        this._shiftRegister = coerceArray(iv, true);
        this._aes = new AES(key2);
      };
      ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
        if (plaintext.length % this.segmentSize != 0) {
          throw new Error("invalid plaintext size (must be segmentSize bytes)");
        }
        var encrypted = coerceArray(plaintext, true);
        var xorSegment;
        for (var i = 0; i < encrypted.length; i += this.segmentSize) {
          xorSegment = this._aes.encrypt(this._shiftRegister);
          for (var j = 0; j < this.segmentSize; j++) {
            encrypted[i + j] ^= xorSegment[j];
          }
          copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
          copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }
        return encrypted;
      };
      ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
        if (ciphertext.length % this.segmentSize != 0) {
          throw new Error("invalid ciphertext size (must be segmentSize bytes)");
        }
        var plaintext = coerceArray(ciphertext, true);
        var xorSegment;
        for (var i = 0; i < plaintext.length; i += this.segmentSize) {
          xorSegment = this._aes.encrypt(this._shiftRegister);
          for (var j = 0; j < this.segmentSize; j++) {
            plaintext[i + j] ^= xorSegment[j];
          }
          copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
          copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
        }
        return plaintext;
      };
      var ModeOfOperationOFB = function(key2, iv) {
        if (!(this instanceof ModeOfOperationOFB)) {
          throw Error("AES must be instanitated with `new`");
        }
        this.description = "Output Feedback";
        this.name = "ofb";
        if (!iv) {
          iv = createArray(16);
        } else if (iv.length != 16) {
          throw new Error("invalid initialation vector size (must be 16 bytes)");
        }
        this._lastPrecipher = coerceArray(iv, true);
        this._lastPrecipherIndex = 16;
        this._aes = new AES(key2);
      };
      ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);
        for (var i = 0; i < encrypted.length; i++) {
          if (this._lastPrecipherIndex === 16) {
            this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
            this._lastPrecipherIndex = 0;
          }
          encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
        }
        return encrypted;
      };
      ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;
      var Counter = function(initialValue) {
        if (!(this instanceof Counter)) {
          throw Error("Counter must be instanitated with `new`");
        }
        if (initialValue !== 0 && !initialValue) {
          initialValue = 1;
        }
        if (typeof initialValue === "number") {
          this._counter = createArray(16);
          this.setValue(initialValue);
        } else {
          this.setBytes(initialValue);
        }
      };
      Counter.prototype.setValue = function(value) {
        if (typeof value !== "number" || parseInt(value) != value) {
          throw new Error("invalid counter value (must be an integer)");
        }
        for (var index = 15; index >= 0; --index) {
          this._counter[index] = value % 256;
          value = value >> 8;
        }
      };
      Counter.prototype.setBytes = function(bytes) {
        bytes = coerceArray(bytes, true);
        if (bytes.length != 16) {
          throw new Error("invalid counter bytes size (must be 16 bytes)");
        }
        this._counter = bytes;
      };
      Counter.prototype.increment = function() {
        for (var i = 15; i >= 0; i--) {
          if (this._counter[i] === 255) {
            this._counter[i] = 0;
          } else {
            this._counter[i]++;
            break;
          }
        }
      };
      var ModeOfOperationCTR = function(key2, counter) {
        if (!(this instanceof ModeOfOperationCTR)) {
          throw Error("AES must be instanitated with `new`");
        }
        this.description = "Counter";
        this.name = "ctr";
        if (!(counter instanceof Counter)) {
          counter = new Counter(counter);
        }
        this._counter = counter;
        this._remainingCounter = null;
        this._remainingCounterIndex = 16;
        this._aes = new AES(key2);
      };
      ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
        var encrypted = coerceArray(plaintext, true);
        for (var i = 0; i < encrypted.length; i++) {
          if (this._remainingCounterIndex === 16) {
            this._remainingCounter = this._aes.encrypt(this._counter._counter);
            this._remainingCounterIndex = 0;
            this._counter.increment();
          }
          encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
        }
        return encrypted;
      };
      ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;
      function pkcs7pad(data) {
        data = coerceArray(data, true);
        var padder = 16 - data.length % 16;
        var result = createArray(data.length + padder);
        copyArray(data, result);
        for (var i = data.length; i < result.length; i++) {
          result[i] = padder;
        }
        return result;
      }
      function pkcs7strip(data) {
        data = coerceArray(data, true);
        if (data.length < 16) {
          throw new Error("PKCS#7 invalid length");
        }
        var padder = data[data.length - 1];
        if (padder > 16) {
          throw new Error("PKCS#7 padding byte out of range");
        }
        var length = data.length - padder;
        for (var i = 0; i < padder; i++) {
          if (data[length + i] !== padder) {
            throw new Error("PKCS#7 invalid padding byte");
          }
        }
        var result = createArray(length);
        copyArray(data, result, 0, 0, length);
        return result;
      }
      var aesjs = {
        AES,
        Counter,
        ModeOfOperation: {
          ecb: ModeOfOperationECB,
          cbc: ModeOfOperationCBC,
          cfb: ModeOfOperationCFB,
          ofb: ModeOfOperationOFB,
          ctr: ModeOfOperationCTR
        },
        utils: {
          hex: convertHex,
          utf8: convertUtf8
        },
        padding: {
          pkcs7: {
            pad: pkcs7pad,
            strip: pkcs7strip
          }
        },
        _arrayTest: {
          coerceArray,
          createArray,
          copyArray
        }
      };
      if (typeof exports !== "undefined") {
        module.exports = aesjs;
      } else if (typeof define === "function" && define.amd) {
        define(aesjs);
      } else {
        if (root.aesjs) {
          aesjs._aesjs = root.aesjs;
        }
        root.aesjs = aesjs;
      }
    })(exports);
  }
});

// node_modules/scrypt-js/scrypt.js
var require_scrypt = __commonJS({
  "node_modules/scrypt-js/scrypt.js"(exports, module) {
    "use strict";
    init_shim();
    (function(root) {
      const MAX_VALUE = 2147483647;
      function SHA256(m) {
        const K = new Uint32Array([
          1116352408,
          1899447441,
          3049323471,
          3921009573,
          961987163,
          1508970993,
          2453635748,
          2870763221,
          3624381080,
          310598401,
          607225278,
          1426881987,
          1925078388,
          2162078206,
          2614888103,
          3248222580,
          3835390401,
          4022224774,
          264347078,
          604807628,
          770255983,
          1249150122,
          1555081692,
          1996064986,
          2554220882,
          2821834349,
          2952996808,
          3210313671,
          3336571891,
          3584528711,
          113926993,
          338241895,
          666307205,
          773529912,
          1294757372,
          1396182291,
          1695183700,
          1986661051,
          2177026350,
          2456956037,
          2730485921,
          2820302411,
          3259730800,
          3345764771,
          3516065817,
          3600352804,
          4094571909,
          275423344,
          430227734,
          506948616,
          659060556,
          883997877,
          958139571,
          1322822218,
          1537002063,
          1747873779,
          1955562222,
          2024104815,
          2227730452,
          2361852424,
          2428436474,
          2756734187,
          3204031479,
          3329325298
        ]);
        let h0 = 1779033703, h1 = 3144134277, h2 = 1013904242, h3 = 2773480762;
        let h4 = 1359893119, h5 = 2600822924, h6 = 528734635, h7 = 1541459225;
        const w = new Uint32Array(64);
        function blocks(p2) {
          let off = 0, len = p2.length;
          while (len >= 64) {
            let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i2, j, t1, t2;
            for (i2 = 0; i2 < 16; i2++) {
              j = off + i2 * 4;
              w[i2] = (p2[j] & 255) << 24 | (p2[j + 1] & 255) << 16 | (p2[j + 2] & 255) << 8 | p2[j + 3] & 255;
            }
            for (i2 = 16; i2 < 64; i2++) {
              u = w[i2 - 2];
              t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;
              u = w[i2 - 15];
              t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;
              w[i2] = (t1 + w[i2 - 7] | 0) + (t2 + w[i2 - 16] | 0) | 0;
            }
            for (i2 = 0; i2 < 64; i2++) {
              t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i2] + w[i2] | 0) | 0) | 0;
              t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;
              h = g;
              g = f;
              f = e;
              e = d + t1 | 0;
              d = c;
              c = b;
              b = a;
              a = t1 + t2 | 0;
            }
            h0 = h0 + a | 0;
            h1 = h1 + b | 0;
            h2 = h2 + c | 0;
            h3 = h3 + d | 0;
            h4 = h4 + e | 0;
            h5 = h5 + f | 0;
            h6 = h6 + g | 0;
            h7 = h7 + h | 0;
            off += 64;
            len -= 64;
          }
        }
        blocks(m);
        let i, bytesLeft = m.length % 64, bitLenHi = m.length / 536870912 | 0, bitLenLo = m.length << 3, numZeros = bytesLeft < 56 ? 56 : 120, p = m.slice(m.length - bytesLeft, m.length);
        p.push(128);
        for (i = bytesLeft + 1; i < numZeros; i++) {
          p.push(0);
        }
        p.push(bitLenHi >>> 24 & 255);
        p.push(bitLenHi >>> 16 & 255);
        p.push(bitLenHi >>> 8 & 255);
        p.push(bitLenHi >>> 0 & 255);
        p.push(bitLenLo >>> 24 & 255);
        p.push(bitLenLo >>> 16 & 255);
        p.push(bitLenLo >>> 8 & 255);
        p.push(bitLenLo >>> 0 & 255);
        blocks(p);
        return [
          h0 >>> 24 & 255,
          h0 >>> 16 & 255,
          h0 >>> 8 & 255,
          h0 >>> 0 & 255,
          h1 >>> 24 & 255,
          h1 >>> 16 & 255,
          h1 >>> 8 & 255,
          h1 >>> 0 & 255,
          h2 >>> 24 & 255,
          h2 >>> 16 & 255,
          h2 >>> 8 & 255,
          h2 >>> 0 & 255,
          h3 >>> 24 & 255,
          h3 >>> 16 & 255,
          h3 >>> 8 & 255,
          h3 >>> 0 & 255,
          h4 >>> 24 & 255,
          h4 >>> 16 & 255,
          h4 >>> 8 & 255,
          h4 >>> 0 & 255,
          h5 >>> 24 & 255,
          h5 >>> 16 & 255,
          h5 >>> 8 & 255,
          h5 >>> 0 & 255,
          h6 >>> 24 & 255,
          h6 >>> 16 & 255,
          h6 >>> 8 & 255,
          h6 >>> 0 & 255,
          h7 >>> 24 & 255,
          h7 >>> 16 & 255,
          h7 >>> 8 & 255,
          h7 >>> 0 & 255
        ];
      }
      function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
        password = password.length <= 64 ? password : SHA256(password);
        const innerLen = 64 + salt.length + 4;
        const inner = new Array(innerLen);
        const outerKey = new Array(64);
        let i;
        let dk = [];
        for (i = 0; i < 64; i++) {
          inner[i] = 54;
        }
        for (i = 0; i < password.length; i++) {
          inner[i] ^= password[i];
        }
        for (i = 0; i < salt.length; i++) {
          inner[64 + i] = salt[i];
        }
        for (i = innerLen - 4; i < innerLen; i++) {
          inner[i] = 0;
        }
        for (i = 0; i < 64; i++)
          outerKey[i] = 92;
        for (i = 0; i < password.length; i++)
          outerKey[i] ^= password[i];
        function incrementCounter() {
          for (let i2 = innerLen - 1; i2 >= innerLen - 4; i2--) {
            inner[i2]++;
            if (inner[i2] <= 255)
              return;
            inner[i2] = 0;
          }
        }
        while (dkLen >= 32) {
          incrementCounter();
          dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
          dkLen -= 32;
        }
        if (dkLen > 0) {
          incrementCounter();
          dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
        }
        return dk;
      }
      function blockmix_salsa8(BY, Yi, r, x, _X) {
        let i;
        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);
        for (i = 0; i < 2 * r; i++) {
          blockxor(BY, i * 16, _X, 16);
          salsa20_8(_X, x);
          arraycopy(_X, 0, BY, Yi + i * 16, 16);
        }
        for (i = 0; i < r; i++) {
          arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);
        }
        for (i = 0; i < r; i++) {
          arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
        }
      }
      function R(a, b) {
        return a << b | a >>> 32 - b;
      }
      function salsa20_8(B, x) {
        arraycopy(B, 0, x, 0, 16);
        for (let i = 8; i > 0; i -= 2) {
          x[4] ^= R(x[0] + x[12], 7);
          x[8] ^= R(x[4] + x[0], 9);
          x[12] ^= R(x[8] + x[4], 13);
          x[0] ^= R(x[12] + x[8], 18);
          x[9] ^= R(x[5] + x[1], 7);
          x[13] ^= R(x[9] + x[5], 9);
          x[1] ^= R(x[13] + x[9], 13);
          x[5] ^= R(x[1] + x[13], 18);
          x[14] ^= R(x[10] + x[6], 7);
          x[2] ^= R(x[14] + x[10], 9);
          x[6] ^= R(x[2] + x[14], 13);
          x[10] ^= R(x[6] + x[2], 18);
          x[3] ^= R(x[15] + x[11], 7);
          x[7] ^= R(x[3] + x[15], 9);
          x[11] ^= R(x[7] + x[3], 13);
          x[15] ^= R(x[11] + x[7], 18);
          x[1] ^= R(x[0] + x[3], 7);
          x[2] ^= R(x[1] + x[0], 9);
          x[3] ^= R(x[2] + x[1], 13);
          x[0] ^= R(x[3] + x[2], 18);
          x[6] ^= R(x[5] + x[4], 7);
          x[7] ^= R(x[6] + x[5], 9);
          x[4] ^= R(x[7] + x[6], 13);
          x[5] ^= R(x[4] + x[7], 18);
          x[11] ^= R(x[10] + x[9], 7);
          x[8] ^= R(x[11] + x[10], 9);
          x[9] ^= R(x[8] + x[11], 13);
          x[10] ^= R(x[9] + x[8], 18);
          x[12] ^= R(x[15] + x[14], 7);
          x[13] ^= R(x[12] + x[15], 9);
          x[14] ^= R(x[13] + x[12], 13);
          x[15] ^= R(x[14] + x[13], 18);
        }
        for (let i = 0; i < 16; ++i) {
          B[i] += x[i];
        }
      }
      function blockxor(S, Si, D, len) {
        for (let i = 0; i < len; i++) {
          D[i] ^= S[Si + i];
        }
      }
      function arraycopy(src, srcPos, dest, destPos, length) {
        while (length--) {
          dest[destPos++] = src[srcPos++];
        }
      }
      function checkBufferish(o) {
        if (!o || typeof o.length !== "number") {
          return false;
        }
        for (let i = 0; i < o.length; i++) {
          const v = o[i];
          if (typeof v !== "number" || v % 1 || v < 0 || v >= 256) {
            return false;
          }
        }
        return true;
      }
      function ensureInteger(value, name) {
        if (typeof value !== "number" || value % 1) {
          throw new Error("invalid " + name);
        }
        return value;
      }
      function _scrypt(password, salt, N2, r, p, dkLen, callback) {
        N2 = ensureInteger(N2, "N");
        r = ensureInteger(r, "r");
        p = ensureInteger(p, "p");
        dkLen = ensureInteger(dkLen, "dkLen");
        if (N2 === 0 || (N2 & N2 - 1) !== 0) {
          throw new Error("N must be power of 2");
        }
        if (N2 > MAX_VALUE / 128 / r) {
          throw new Error("N too large");
        }
        if (r > MAX_VALUE / 128 / p) {
          throw new Error("r too large");
        }
        if (!checkBufferish(password)) {
          throw new Error("password must be an array or buffer");
        }
        password = Array.prototype.slice.call(password);
        if (!checkBufferish(salt)) {
          throw new Error("salt must be an array or buffer");
        }
        salt = Array.prototype.slice.call(salt);
        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
        const B = new Uint32Array(p * 32 * r);
        for (let i = 0; i < B.length; i++) {
          const j = i * 4;
          B[i] = (b[j + 3] & 255) << 24 | (b[j + 2] & 255) << 16 | (b[j + 1] & 255) << 8 | (b[j + 0] & 255) << 0;
        }
        const XY = new Uint32Array(64 * r);
        const V = new Uint32Array(32 * r * N2);
        const Yi = 32 * r;
        const x = new Uint32Array(16);
        const _X = new Uint32Array(16);
        const totalOps = p * N2 * 2;
        let currentOp = 0;
        let lastPercent10 = null;
        let stop = false;
        let state = 0;
        let i0 = 0, i1;
        let Bi;
        const limit = callback ? parseInt(1e3 / r) : 4294967295;
        const nextTick = typeof setImmediate !== "undefined" ? setImmediate : setTimeout;
        const incrementalSMix = function() {
          if (stop) {
            return callback(new Error("cancelled"), currentOp / totalOps);
          }
          let steps;
          switch (state) {
            case 0:
              Bi = i0 * 32 * r;
              arraycopy(B, Bi, XY, 0, Yi);
              state = 1;
              i1 = 0;
            case 1:
              steps = N2 - i1;
              if (steps > limit) {
                steps = limit;
              }
              for (let i = 0; i < steps; i++) {
                arraycopy(XY, 0, V, (i1 + i) * Yi, Yi);
                blockmix_salsa8(XY, Yi, r, x, _X);
              }
              i1 += steps;
              currentOp += steps;
              if (callback) {
                const percent10 = parseInt(1e3 * currentOp / totalOps);
                if (percent10 !== lastPercent10) {
                  stop = callback(null, currentOp / totalOps);
                  if (stop) {
                    break;
                  }
                  lastPercent10 = percent10;
                }
              }
              if (i1 < N2) {
                break;
              }
              i1 = 0;
              state = 2;
            case 2:
              steps = N2 - i1;
              if (steps > limit) {
                steps = limit;
              }
              for (let i = 0; i < steps; i++) {
                const offset = (2 * r - 1) * 16;
                const j = XY[offset] & N2 - 1;
                blockxor(V, j * Yi, XY, Yi);
                blockmix_salsa8(XY, Yi, r, x, _X);
              }
              i1 += steps;
              currentOp += steps;
              if (callback) {
                const percent10 = parseInt(1e3 * currentOp / totalOps);
                if (percent10 !== lastPercent10) {
                  stop = callback(null, currentOp / totalOps);
                  if (stop) {
                    break;
                  }
                  lastPercent10 = percent10;
                }
              }
              if (i1 < N2) {
                break;
              }
              arraycopy(XY, 0, B, Bi, Yi);
              i0++;
              if (i0 < p) {
                state = 0;
                break;
              }
              b = [];
              for (let i = 0; i < B.length; i++) {
                b.push(B[i] >> 0 & 255);
                b.push(B[i] >> 8 & 255);
                b.push(B[i] >> 16 & 255);
                b.push(B[i] >> 24 & 255);
              }
              const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);
              if (callback) {
                callback(null, 1, derivedKey);
              }
              return derivedKey;
          }
          if (callback) {
            nextTick(incrementalSMix);
          }
        };
        if (!callback) {
          while (true) {
            const derivedKey = incrementalSMix();
            if (derivedKey != void 0) {
              return derivedKey;
            }
          }
        }
        incrementalSMix();
      }
      const lib = {
        scrypt: function(password, salt, N2, r, p, dkLen, progressCallback) {
          return new Promise(function(resolve, reject) {
            let lastProgress = 0;
            if (progressCallback) {
              progressCallback(0);
            }
            _scrypt(password, salt, N2, r, p, dkLen, function(error, progress, key2) {
              if (error) {
                reject(error);
              } else if (key2) {
                if (progressCallback && lastProgress !== 1) {
                  progressCallback(1);
                }
                resolve(new Uint8Array(key2));
              } else if (progressCallback && progress !== lastProgress) {
                lastProgress = progress;
                return progressCallback(progress);
              }
            });
          });
        },
        syncScrypt: function(password, salt, N2, r, p, dkLen) {
          return new Uint8Array(_scrypt(password, salt, N2, r, p, dkLen));
        }
      };
      if (typeof exports !== "undefined") {
        module.exports = lib;
      } else if (typeof define === "function" && define.amd) {
        define(lib);
      } else if (root) {
        if (root.scrypt) {
          root._scrypt = root.scrypt;
        }
        root.scrypt = lib;
      }
    })(exports);
  }
});

// src/wallet.js
init_shim();
var import_libsodium_wrappers_sumo = __toESM(require_libsodium_wrappers(), 1);
var import_bs58check = __toESM(require_bs58check(), 1);
var import_bip39_light = __toESM(require_bip39_light(), 1);
var import_bip39_light2 = __toESM(require_bip39_light(), 1);

// node_modules/@ethersproject/wallet/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/address/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/bytes/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/logger/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/logger/lib.esm/_version.js
init_shim();
var version = "logger/5.6.0";

// node_modules/@ethersproject/logger/lib.esm/index.js
var _permanentCensorErrors = false;
var _censorErrors = false;
var LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
var _logLevel = LogLevels["default"];
var _globalLogger = null;
function _checkNormalize() {
  try {
    const missing = [];
    ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
      try {
        if ("test".normalize(form) !== "test") {
          throw new Error("bad normalize");
        }
        ;
      } catch (error) {
        missing.push(form);
      }
    });
    if (missing.length) {
      throw new Error("missing " + missing.join(", "));
    }
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) {
      throw new Error("broken implementation");
    }
  } catch (error) {
    return error.message;
  }
  return null;
}
var _normalizeError = _checkNormalize();
var LogLevel;
(function(LogLevel2) {
  LogLevel2["DEBUG"] = "DEBUG";
  LogLevel2["INFO"] = "INFO";
  LogLevel2["WARNING"] = "WARNING";
  LogLevel2["ERROR"] = "ERROR";
  LogLevel2["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
  ErrorCode2["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
  ErrorCode2["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
  ErrorCode2["NETWORK_ERROR"] = "NETWORK_ERROR";
  ErrorCode2["SERVER_ERROR"] = "SERVER_ERROR";
  ErrorCode2["TIMEOUT"] = "TIMEOUT";
  ErrorCode2["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
  ErrorCode2["NUMERIC_FAULT"] = "NUMERIC_FAULT";
  ErrorCode2["MISSING_NEW"] = "MISSING_NEW";
  ErrorCode2["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
  ErrorCode2["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
  ErrorCode2["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
  ErrorCode2["CALL_EXCEPTION"] = "CALL_EXCEPTION";
  ErrorCode2["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
  ErrorCode2["NONCE_EXPIRED"] = "NONCE_EXPIRED";
  ErrorCode2["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
  ErrorCode2["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
  ErrorCode2["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
})(ErrorCode || (ErrorCode = {}));
var HEX = "0123456789abcdef";
var Logger = class {
  constructor(version19) {
    Object.defineProperty(this, "version", {
      enumerable: true,
      value: version19,
      writable: false
    });
  }
  _log(logLevel, args) {
    const level = logLevel.toLowerCase();
    if (LogLevels[level] == null) {
      this.throwArgumentError("invalid log level name", "logLevel", logLevel);
    }
    if (_logLevel > LogLevels[level]) {
      return;
    }
    console.log.apply(console, args);
  }
  debug(...args) {
    this._log(Logger.levels.DEBUG, args);
  }
  info(...args) {
    this._log(Logger.levels.INFO, args);
  }
  warn(...args) {
    this._log(Logger.levels.WARNING, args);
  }
  makeError(message, code, params) {
    if (_censorErrors) {
      return this.makeError("censored error", code, {});
    }
    if (!code) {
      code = Logger.errors.UNKNOWN_ERROR;
    }
    if (!params) {
      params = {};
    }
    const messageDetails = [];
    Object.keys(params).forEach((key2) => {
      const value = params[key2];
      try {
        if (value instanceof Uint8Array) {
          let hex = "";
          for (let i = 0; i < value.length; i++) {
            hex += HEX[value[i] >> 4];
            hex += HEX[value[i] & 15];
          }
          messageDetails.push(key2 + "=Uint8Array(0x" + hex + ")");
        } else {
          messageDetails.push(key2 + "=" + JSON.stringify(value));
        }
      } catch (error2) {
        messageDetails.push(key2 + "=" + JSON.stringify(params[key2].toString()));
      }
    });
    messageDetails.push(`code=${code}`);
    messageDetails.push(`version=${this.version}`);
    const reason = message;
    let url = "";
    switch (code) {
      case ErrorCode.NUMERIC_FAULT: {
        url = "NUMERIC_FAULT";
        const fault = message;
        switch (fault) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            url += "-" + fault;
            break;
          case "negative-power":
          case "negative-width":
            url += "-unsupported";
            break;
          case "unbound-bitwise-result":
            url += "-unbound-result";
            break;
        }
        break;
      }
      case ErrorCode.CALL_EXCEPTION:
      case ErrorCode.INSUFFICIENT_FUNDS:
      case ErrorCode.MISSING_NEW:
      case ErrorCode.NONCE_EXPIRED:
      case ErrorCode.REPLACEMENT_UNDERPRICED:
      case ErrorCode.TRANSACTION_REPLACED:
      case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
        url = code;
        break;
    }
    if (url) {
      message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]";
    }
    if (messageDetails.length) {
      message += " (" + messageDetails.join(", ") + ")";
    }
    const error = new Error(message);
    error.reason = reason;
    error.code = code;
    Object.keys(params).forEach(function(key2) {
      error[key2] = params[key2];
    });
    return error;
  }
  throwError(message, code, params) {
    throw this.makeError(message, code, params);
  }
  throwArgumentError(message, name, value) {
    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
      argument: name,
      value
    });
  }
  assert(condition, message, code, params) {
    if (!!condition) {
      return;
    }
    this.throwError(message, code, params);
  }
  assertArgument(condition, message, name, value) {
    if (!!condition) {
      return;
    }
    this.throwArgumentError(message, name, value);
  }
  checkNormalize(message) {
    if (message == null) {
      message = "platform missing String.prototype.normalize";
    }
    if (_normalizeError) {
      this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "String.prototype.normalize",
        form: _normalizeError
      });
    }
  }
  checkSafeUint53(value, message) {
    if (typeof value !== "number") {
      return;
    }
    if (message == null) {
      message = "value not safe";
    }
    if (value < 0 || value >= 9007199254740991) {
      this.throwError(message, Logger.errors.NUMERIC_FAULT, {
        operation: "checkSafeInteger",
        fault: "out-of-safe-range",
        value
      });
    }
    if (value % 1) {
      this.throwError(message, Logger.errors.NUMERIC_FAULT, {
        operation: "checkSafeInteger",
        fault: "non-integer",
        value
      });
    }
  }
  checkArgumentCount(count, expectedCount, message) {
    if (message) {
      message = ": " + message;
    } else {
      message = "";
    }
    if (count < expectedCount) {
      this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
        count,
        expectedCount
      });
    }
    if (count > expectedCount) {
      this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
        count,
        expectedCount
      });
    }
  }
  checkNew(target, kind) {
    if (target === Object || target == null) {
      this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
    }
  }
  checkAbstract(target, kind) {
    if (target === kind) {
      this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
    } else if (target === Object || target == null) {
      this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
    }
  }
  static globalLogger() {
    if (!_globalLogger) {
      _globalLogger = new Logger(version);
    }
    return _globalLogger;
  }
  static setCensorship(censorship, permanent) {
    if (!censorship && permanent) {
      this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    if (_permanentCensorErrors) {
      if (!censorship) {
        return;
      }
      this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    _censorErrors = !!censorship;
    _permanentCensorErrors = !!permanent;
  }
  static setLogLevel(logLevel) {
    const level = LogLevels[logLevel.toLowerCase()];
    if (level == null) {
      Logger.globalLogger().warn("invalid log level - " + logLevel);
      return;
    }
    _logLevel = level;
  }
  static from(version19) {
    return new Logger(version19);
  }
};
Logger.errors = ErrorCode;
Logger.levels = LogLevel;

// node_modules/@ethersproject/bytes/lib.esm/_version.js
init_shim();
var version2 = "bytes/5.6.0";

// node_modules/@ethersproject/bytes/lib.esm/index.js
var logger = new Logger(version2);
function isHexable(value) {
  return !!value.toHexString;
}
function addSlice(array) {
  if (array.slice) {
    return array;
  }
  array.slice = function() {
    const args = Array.prototype.slice.call(arguments);
    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
  };
  return array;
}
function isBytesLike(value) {
  return isHexString(value) && !(value.length % 2) || isBytes(value);
}
function isInteger(value) {
  return typeof value === "number" && value == value && value % 1 === 0;
}
function isBytes(value) {
  if (value == null) {
    return false;
  }
  if (value.constructor === Uint8Array) {
    return true;
  }
  if (typeof value === "string") {
    return false;
  }
  if (!isInteger(value.length) || value.length < 0) {
    return false;
  }
  for (let i = 0; i < value.length; i++) {
    const v = value[i];
    if (!isInteger(v) || v < 0 || v >= 256) {
      return false;
    }
  }
  return true;
}
function arrayify(value, options) {
  if (!options) {
    options = {};
  }
  if (typeof value === "number") {
    logger.checkSafeUint53(value, "invalid arrayify value");
    const result = [];
    while (value) {
      result.unshift(value & 255);
      value = parseInt(String(value / 256));
    }
    if (result.length === 0) {
      result.push(0);
    }
    return addSlice(new Uint8Array(result));
  }
  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    value = value.toHexString();
  }
  if (isHexString(value)) {
    let hex = value.substring(2);
    if (hex.length % 2) {
      if (options.hexPad === "left") {
        hex = "0x0" + hex.substring(2);
      } else if (options.hexPad === "right") {
        hex += "0";
      } else {
        logger.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    const result = [];
    for (let i = 0; i < hex.length; i += 2) {
      result.push(parseInt(hex.substring(i, i + 2), 16));
    }
    return addSlice(new Uint8Array(result));
  }
  if (isBytes(value)) {
    return addSlice(new Uint8Array(value));
  }
  return logger.throwArgumentError("invalid arrayify value", "value", value);
}
function concat(items) {
  const objects = items.map((item) => arrayify(item));
  const length = objects.reduce((accum, item) => accum + item.length, 0);
  const result = new Uint8Array(length);
  objects.reduce((offset, object) => {
    result.set(object, offset);
    return offset + object.length;
  }, 0);
  return addSlice(result);
}
function stripZeros(value) {
  let result = arrayify(value);
  if (result.length === 0) {
    return result;
  }
  let start = 0;
  while (start < result.length && result[start] === 0) {
    start++;
  }
  if (start) {
    result = result.slice(start);
  }
  return result;
}
function zeroPad(value, length) {
  value = arrayify(value);
  if (value.length > length) {
    logger.throwArgumentError("value out of range", "value", arguments[0]);
  }
  const result = new Uint8Array(length);
  result.set(value, length - value.length);
  return addSlice(result);
}
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (length && value.length !== 2 + 2 * length) {
    return false;
  }
  return true;
}
var HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
  if (!options) {
    options = {};
  }
  if (typeof value === "number") {
    logger.checkSafeUint53(value, "invalid hexlify value");
    let hex = "";
    while (value) {
      hex = HexCharacters[value & 15] + hex;
      value = Math.floor(value / 16);
    }
    if (hex.length) {
      if (hex.length % 2) {
        hex = "0" + hex;
      }
      return "0x" + hex;
    }
    return "0x00";
  }
  if (typeof value === "bigint") {
    value = value.toString(16);
    if (value.length % 2) {
      return "0x0" + value;
    }
    return "0x" + value;
  }
  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    return value.toHexString();
  }
  if (isHexString(value)) {
    if (value.length % 2) {
      if (options.hexPad === "left") {
        value = "0x0" + value.substring(2);
      } else if (options.hexPad === "right") {
        value += "0";
      } else {
        logger.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    return value.toLowerCase();
  }
  if (isBytes(value)) {
    let result = "0x";
    for (let i = 0; i < value.length; i++) {
      let v = value[i];
      result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];
    }
    return result;
  }
  return logger.throwArgumentError("invalid hexlify value", "value", value);
}
function hexDataLength(data) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    return null;
  }
  return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    logger.throwArgumentError("invalid hexData", "value", data);
  }
  offset = 2 + 2 * offset;
  if (endOffset != null) {
    return "0x" + data.substring(offset, 2 + 2 * endOffset);
  }
  return "0x" + data.substring(offset);
}
function hexConcat(items) {
  let result = "0x";
  items.forEach((item) => {
    result += hexlify(item).substring(2);
  });
  return result;
}
function hexZeroPad(value, length) {
  if (typeof value !== "string") {
    value = hexlify(value);
  } else if (!isHexString(value)) {
    logger.throwArgumentError("invalid hex string", "value", value);
  }
  if (value.length > 2 * length + 2) {
    logger.throwArgumentError("value out of range", "value", arguments[1]);
  }
  while (value.length < 2 * length + 2) {
    value = "0x0" + value.substring(2);
  }
  return value;
}
function splitSignature(signature2) {
  const result = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0,
    yParityAndS: "0x",
    compact: "0x"
  };
  if (isBytesLike(signature2)) {
    let bytes = arrayify(signature2);
    if (bytes.length === 64) {
      result.v = 27 + (bytes[32] >> 7);
      bytes[32] &= 127;
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
    } else if (bytes.length === 65) {
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
      result.v = bytes[64];
    } else {
      logger.throwArgumentError("invalid signature string", "signature", signature2);
    }
    if (result.v < 27) {
      if (result.v === 0 || result.v === 1) {
        result.v += 27;
      } else {
        logger.throwArgumentError("signature invalid v byte", "signature", signature2);
      }
    }
    result.recoveryParam = 1 - result.v % 2;
    if (result.recoveryParam) {
      bytes[32] |= 128;
    }
    result._vs = hexlify(bytes.slice(32, 64));
  } else {
    result.r = signature2.r;
    result.s = signature2.s;
    result.v = signature2.v;
    result.recoveryParam = signature2.recoveryParam;
    result._vs = signature2._vs;
    if (result._vs != null) {
      const vs2 = zeroPad(arrayify(result._vs), 32);
      result._vs = hexlify(vs2);
      const recoveryParam = vs2[0] >= 128 ? 1 : 0;
      if (result.recoveryParam == null) {
        result.recoveryParam = recoveryParam;
      } else if (result.recoveryParam !== recoveryParam) {
        logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature2);
      }
      vs2[0] &= 127;
      const s = hexlify(vs2);
      if (result.s == null) {
        result.s = s;
      } else if (result.s !== s) {
        logger.throwArgumentError("signature v mismatch _vs", "signature", signature2);
      }
    }
    if (result.recoveryParam == null) {
      if (result.v == null) {
        logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature2);
      } else if (result.v === 0 || result.v === 1) {
        result.recoveryParam = result.v;
      } else {
        result.recoveryParam = 1 - result.v % 2;
      }
    } else {
      if (result.v == null) {
        result.v = 27 + result.recoveryParam;
      } else {
        const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
        if (result.recoveryParam !== recId) {
          logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature2);
        }
      }
    }
    if (result.r == null || !isHexString(result.r)) {
      logger.throwArgumentError("signature missing or invalid r", "signature", signature2);
    } else {
      result.r = hexZeroPad(result.r, 32);
    }
    if (result.s == null || !isHexString(result.s)) {
      logger.throwArgumentError("signature missing or invalid s", "signature", signature2);
    } else {
      result.s = hexZeroPad(result.s, 32);
    }
    const vs = arrayify(result.s);
    if (vs[0] >= 128) {
      logger.throwArgumentError("signature s out of range", "signature", signature2);
    }
    if (result.recoveryParam) {
      vs[0] |= 128;
    }
    const _vs = hexlify(vs);
    if (result._vs) {
      if (!isHexString(result._vs)) {
        logger.throwArgumentError("signature invalid _vs", "signature", signature2);
      }
      result._vs = hexZeroPad(result._vs, 32);
    }
    if (result._vs == null) {
      result._vs = _vs;
    } else if (result._vs !== _vs) {
      logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature2);
    }
  }
  result.yParityAndS = result._vs;
  result.compact = result.r + result.yParityAndS.substring(2);
  return result;
}
function joinSignature(signature2) {
  signature2 = splitSignature(signature2);
  return hexlify(concat([
    signature2.r,
    signature2.s,
    signature2.recoveryParam ? "0x1c" : "0x1b"
  ]));
}

// node_modules/@ethersproject/bignumber/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/bignumber/lib.esm/bignumber.js
init_shim();
var import_bn = __toESM(require_bn8());

// node_modules/@ethersproject/bignumber/lib.esm/_version.js
init_shim();
var version3 = "bignumber/5.6.0";

// node_modules/@ethersproject/bignumber/lib.esm/bignumber.js
var BN = import_bn.default.BN;
var logger2 = new Logger(version3);
var _constructorGuard = {};
var MAX_SAFE = 9007199254740991;
var _warnedToStringRadix = false;
var BigNumber = class {
  constructor(constructorGuard, hex) {
    logger2.checkNew(new.target, BigNumber);
    if (constructorGuard !== _constructorGuard) {
      logger2.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new (BigNumber)"
      });
    }
    this._hex = hex;
    this._isBigNumber = true;
    Object.freeze(this);
  }
  fromTwos(value) {
    return toBigNumber(toBN(this).fromTwos(value));
  }
  toTwos(value) {
    return toBigNumber(toBN(this).toTwos(value));
  }
  abs() {
    if (this._hex[0] === "-") {
      return BigNumber.from(this._hex.substring(1));
    }
    return this;
  }
  add(other) {
    return toBigNumber(toBN(this).add(toBN(other)));
  }
  sub(other) {
    return toBigNumber(toBN(this).sub(toBN(other)));
  }
  div(other) {
    const o = BigNumber.from(other);
    if (o.isZero()) {
      throwFault("division-by-zero", "div");
    }
    return toBigNumber(toBN(this).div(toBN(other)));
  }
  mul(other) {
    return toBigNumber(toBN(this).mul(toBN(other)));
  }
  mod(other) {
    const value = toBN(other);
    if (value.isNeg()) {
      throwFault("division-by-zero", "mod");
    }
    return toBigNumber(toBN(this).umod(value));
  }
  pow(other) {
    const value = toBN(other);
    if (value.isNeg()) {
      throwFault("negative-power", "pow");
    }
    return toBigNumber(toBN(this).pow(value));
  }
  and(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault("unbound-bitwise-result", "and");
    }
    return toBigNumber(toBN(this).and(value));
  }
  or(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault("unbound-bitwise-result", "or");
    }
    return toBigNumber(toBN(this).or(value));
  }
  xor(other) {
    const value = toBN(other);
    if (this.isNegative() || value.isNeg()) {
      throwFault("unbound-bitwise-result", "xor");
    }
    return toBigNumber(toBN(this).xor(value));
  }
  mask(value) {
    if (this.isNegative() || value < 0) {
      throwFault("negative-width", "mask");
    }
    return toBigNumber(toBN(this).maskn(value));
  }
  shl(value) {
    if (this.isNegative() || value < 0) {
      throwFault("negative-width", "shl");
    }
    return toBigNumber(toBN(this).shln(value));
  }
  shr(value) {
    if (this.isNegative() || value < 0) {
      throwFault("negative-width", "shr");
    }
    return toBigNumber(toBN(this).shrn(value));
  }
  eq(other) {
    return toBN(this).eq(toBN(other));
  }
  lt(other) {
    return toBN(this).lt(toBN(other));
  }
  lte(other) {
    return toBN(this).lte(toBN(other));
  }
  gt(other) {
    return toBN(this).gt(toBN(other));
  }
  gte(other) {
    return toBN(this).gte(toBN(other));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return toBN(this).isZero();
  }
  toNumber() {
    try {
      return toBN(this).toNumber();
    } catch (error) {
      throwFault("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch (e) {
    }
    return logger2.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
      value: this.toString()
    });
  }
  toString() {
    if (arguments.length > 0) {
      if (arguments[0] === 10) {
        if (!_warnedToStringRadix) {
          _warnedToStringRadix = true;
          logger2.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
        }
      } else if (arguments[0] === 16) {
        logger2.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
      } else {
        logger2.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
      }
    }
    return toBN(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(key2) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(value) {
    if (value instanceof BigNumber) {
      return value;
    }
    if (typeof value === "string") {
      if (value.match(/^-?0x[0-9a-f]+$/i)) {
        return new BigNumber(_constructorGuard, toHex(value));
      }
      if (value.match(/^-?[0-9]+$/)) {
        return new BigNumber(_constructorGuard, toHex(new BN(value)));
      }
      return logger2.throwArgumentError("invalid BigNumber string", "value", value);
    }
    if (typeof value === "number") {
      if (value % 1) {
        throwFault("underflow", "BigNumber.from", value);
      }
      if (value >= MAX_SAFE || value <= -MAX_SAFE) {
        throwFault("overflow", "BigNumber.from", value);
      }
      return BigNumber.from(String(value));
    }
    const anyValue = value;
    if (typeof anyValue === "bigint") {
      return BigNumber.from(anyValue.toString());
    }
    if (isBytes(anyValue)) {
      return BigNumber.from(hexlify(anyValue));
    }
    if (anyValue) {
      if (anyValue.toHexString) {
        const hex = anyValue.toHexString();
        if (typeof hex === "string") {
          return BigNumber.from(hex);
        }
      } else {
        let hex = anyValue._hex;
        if (hex == null && anyValue.type === "BigNumber") {
          hex = anyValue.hex;
        }
        if (typeof hex === "string") {
          if (isHexString(hex) || hex[0] === "-" && isHexString(hex.substring(1))) {
            return BigNumber.from(hex);
          }
        }
      }
    }
    return logger2.throwArgumentError("invalid BigNumber value", "value", value);
  }
  static isBigNumber(value) {
    return !!(value && value._isBigNumber);
  }
};
function toHex(value) {
  if (typeof value !== "string") {
    return toHex(value.toString(16));
  }
  if (value[0] === "-") {
    value = value.substring(1);
    if (value[0] === "-") {
      logger2.throwArgumentError("invalid hex", "value", value);
    }
    value = toHex(value);
    if (value === "0x00") {
      return value;
    }
    return "-" + value;
  }
  if (value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (value === "0x") {
    return "0x00";
  }
  if (value.length % 2) {
    value = "0x0" + value.substring(2);
  }
  while (value.length > 4 && value.substring(0, 4) === "0x00") {
    value = "0x" + value.substring(4);
  }
  return value;
}
function toBigNumber(value) {
  return BigNumber.from(toHex(value));
}
function toBN(value) {
  const hex = BigNumber.from(value).toHexString();
  if (hex[0] === "-") {
    return new BN("-" + hex.substring(3), 16);
  }
  return new BN(hex.substring(2), 16);
}
function throwFault(fault, operation, value) {
  const params = { fault, operation };
  if (value != null) {
    params.value = value;
  }
  return logger2.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
}
function _base36To16(value) {
  return new BN(value, 36).toString(16);
}

// node_modules/@ethersproject/keccak256/lib.esm/index.js
init_shim();
var import_js_sha3 = __toESM(require_sha32());
function keccak256(data) {
  return "0x" + import_js_sha3.default.keccak_256(arrayify(data));
}

// node_modules/@ethersproject/rlp/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/rlp/lib.esm/_version.js
init_shim();
var version4 = "rlp/5.6.0";

// node_modules/@ethersproject/rlp/lib.esm/index.js
var logger3 = new Logger(version4);
function arrayifyInteger(value) {
  const result = [];
  while (value) {
    result.unshift(value & 255);
    value >>= 8;
  }
  return result;
}
function _encode(object) {
  if (Array.isArray(object)) {
    let payload = [];
    object.forEach(function(child) {
      payload = payload.concat(_encode(child));
    });
    if (payload.length <= 55) {
      payload.unshift(192 + payload.length);
      return payload;
    }
    const length2 = arrayifyInteger(payload.length);
    length2.unshift(247 + length2.length);
    return length2.concat(payload);
  }
  if (!isBytesLike(object)) {
    logger3.throwArgumentError("RLP object must be BytesLike", "object", object);
  }
  const data = Array.prototype.slice.call(arrayify(object));
  if (data.length === 1 && data[0] <= 127) {
    return data;
  } else if (data.length <= 55) {
    data.unshift(128 + data.length);
    return data;
  }
  const length = arrayifyInteger(data.length);
  length.unshift(183 + length.length);
  return length.concat(data);
}
function encode(object) {
  return hexlify(_encode(object));
}

// node_modules/@ethersproject/address/lib.esm/_version.js
init_shim();
var version5 = "address/5.6.0";

// node_modules/@ethersproject/address/lib.esm/index.js
var logger4 = new Logger(version5);
function getChecksumAddress(address) {
  if (!isHexString(address, 20)) {
    logger4.throwArgumentError("invalid address", "address", address);
  }
  address = address.toLowerCase();
  const chars = address.substring(2).split("");
  const expanded = new Uint8Array(40);
  for (let i = 0; i < 40; i++) {
    expanded[i] = chars[i].charCodeAt(0);
  }
  const hashed = arrayify(keccak256(expanded));
  for (let i = 0; i < 40; i += 2) {
    if (hashed[i >> 1] >> 4 >= 8) {
      chars[i] = chars[i].toUpperCase();
    }
    if ((hashed[i >> 1] & 15) >= 8) {
      chars[i + 1] = chars[i + 1].toUpperCase();
    }
  }
  return "0x" + chars.join("");
}
var MAX_SAFE_INTEGER = 9007199254740991;
function log10(x) {
  if (Math.log10) {
    return Math.log10(x);
  }
  return Math.log(x) / Math.LN10;
}
var ibanLookup = {};
for (let i = 0; i < 10; i++) {
  ibanLookup[String(i)] = String(i);
}
for (let i = 0; i < 26; i++) {
  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
var safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  let expanded = address.split("").map((c) => {
    return ibanLookup[c];
  }).join("");
  while (expanded.length >= safeDigits) {
    let block = expanded.substring(0, safeDigits);
    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
  }
  let checksum = String(98 - parseInt(expanded, 10) % 97);
  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }
  return checksum;
}
function getAddress(address) {
  let result = null;
  if (typeof address !== "string") {
    logger4.throwArgumentError("invalid address", "address", address);
  }
  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    if (address.substring(0, 2) !== "0x") {
      address = "0x" + address;
    }
    result = getChecksumAddress(address);
    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
      logger4.throwArgumentError("bad address checksum", "address", address);
    }
  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    if (address.substring(2, 4) !== ibanChecksum(address)) {
      logger4.throwArgumentError("bad icap checksum", "address", address);
    }
    result = _base36To16(address.substring(4));
    while (result.length < 40) {
      result = "0" + result;
    }
    result = getChecksumAddress("0x" + result);
  } else {
    logger4.throwArgumentError("invalid address", "address", address);
  }
  return result;
}

// node_modules/@ethersproject/abstract-provider/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/properties/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/properties/lib.esm/_version.js
init_shim();
var version6 = "properties/5.6.0";

// node_modules/@ethersproject/properties/lib.esm/index.js
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger5 = new Logger(version6);
function defineReadOnly(object, name, value) {
  Object.defineProperty(object, name, {
    enumerable: true,
    value,
    writable: false
  });
}
function resolveProperties(object) {
  return __awaiter(this, void 0, void 0, function* () {
    const promises = Object.keys(object).map((key2) => {
      const value = object[key2];
      return Promise.resolve(value).then((v) => ({ key: key2, value: v }));
    });
    const results = yield Promise.all(promises);
    return results.reduce((accum, result) => {
      accum[result.key] = result.value;
      return accum;
    }, {});
  });
}
function checkProperties(object, properties) {
  if (!object || typeof object !== "object") {
    logger5.throwArgumentError("invalid object", "object", object);
  }
  Object.keys(object).forEach((key2) => {
    if (!properties[key2]) {
      logger5.throwArgumentError("invalid object key - " + key2, "transaction:" + key2, object);
    }
  });
}
function shallowCopy(object) {
  const result = {};
  for (const key2 in object) {
    result[key2] = object[key2];
  }
  return result;
}
var opaque = { bigint: true, boolean: true, "function": true, number: true, string: true };
function _isFrozen(object) {
  if (object === void 0 || object === null || opaque[typeof object]) {
    return true;
  }
  if (Array.isArray(object) || typeof object === "object") {
    if (!Object.isFrozen(object)) {
      return false;
    }
    const keys = Object.keys(object);
    for (let i = 0; i < keys.length; i++) {
      let value = null;
      try {
        value = object[keys[i]];
      } catch (error) {
        continue;
      }
      if (!_isFrozen(value)) {
        return false;
      }
    }
    return true;
  }
  return logger5.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
function _deepCopy(object) {
  if (_isFrozen(object)) {
    return object;
  }
  if (Array.isArray(object)) {
    return Object.freeze(object.map((item) => deepCopy(item)));
  }
  if (typeof object === "object") {
    const result = {};
    for (const key2 in object) {
      const value = object[key2];
      if (value === void 0) {
        continue;
      }
      defineReadOnly(result, key2, deepCopy(value));
    }
    return result;
  }
  return logger5.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
}
function deepCopy(object) {
  return _deepCopy(object);
}
var Description = class {
  constructor(info) {
    for (const key2 in info) {
      this[key2] = deepCopy(info[key2]);
    }
  }
};

// node_modules/@ethersproject/abstract-provider/lib.esm/_version.js
init_shim();
var version7 = "abstract-provider/5.6.0";

// node_modules/@ethersproject/abstract-provider/lib.esm/index.js
var __awaiter2 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger6 = new Logger(version7);
var Provider = class {
  constructor() {
    logger6.checkAbstract(new.target, Provider);
    defineReadOnly(this, "_isProvider", true);
  }
  getFeeData() {
    return __awaiter2(this, void 0, void 0, function* () {
      const { block, gasPrice } = yield resolveProperties({
        block: this.getBlock("latest"),
        gasPrice: this.getGasPrice().catch((error) => {
          return null;
        })
      });
      let maxFeePerGas = null, maxPriorityFeePerGas = null;
      if (block && block.baseFeePerGas) {
        maxPriorityFeePerGas = BigNumber.from("1500000000");
        maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
      }
      return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };
    });
  }
  addListener(eventName, listener) {
    return this.on(eventName, listener);
  }
  removeListener(eventName, listener) {
    return this.off(eventName, listener);
  }
  static isProvider(value) {
    return !!(value && value._isProvider);
  }
};

// node_modules/@ethersproject/abstract-signer/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/abstract-signer/lib.esm/_version.js
init_shim();
var version8 = "abstract-signer/5.6.0";

// node_modules/@ethersproject/abstract-signer/lib.esm/index.js
var __awaiter3 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger7 = new Logger(version8);
var allowedTransactionKeys = [
  "accessList",
  "ccipReadEnabled",
  "chainId",
  "customData",
  "data",
  "from",
  "gasLimit",
  "gasPrice",
  "maxFeePerGas",
  "maxPriorityFeePerGas",
  "nonce",
  "to",
  "type",
  "value"
];
var forwardErrors = [
  Logger.errors.INSUFFICIENT_FUNDS,
  Logger.errors.NONCE_EXPIRED,
  Logger.errors.REPLACEMENT_UNDERPRICED
];
var Signer = class {
  constructor() {
    logger7.checkAbstract(new.target, Signer);
    defineReadOnly(this, "_isSigner", true);
  }
  getBalance(blockTag) {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("getBalance");
      return yield this.provider.getBalance(this.getAddress(), blockTag);
    });
  }
  getTransactionCount(blockTag) {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("getTransactionCount");
      return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
    });
  }
  estimateGas(transaction) {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("estimateGas");
      const tx = yield resolveProperties(this.checkTransaction(transaction));
      return yield this.provider.estimateGas(tx);
    });
  }
  call(transaction, blockTag) {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("call");
      const tx = yield resolveProperties(this.checkTransaction(transaction));
      return yield this.provider.call(tx, blockTag);
    });
  }
  sendTransaction(transaction) {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("sendTransaction");
      const tx = yield this.populateTransaction(transaction);
      const signedTx = yield this.signTransaction(tx);
      return yield this.provider.sendTransaction(signedTx);
    });
  }
  getChainId() {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("getChainId");
      const network = yield this.provider.getNetwork();
      return network.chainId;
    });
  }
  getGasPrice() {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("getGasPrice");
      return yield this.provider.getGasPrice();
    });
  }
  getFeeData() {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("getFeeData");
      return yield this.provider.getFeeData();
    });
  }
  resolveName(name) {
    return __awaiter3(this, void 0, void 0, function* () {
      this._checkProvider("resolveName");
      return yield this.provider.resolveName(name);
    });
  }
  checkTransaction(transaction) {
    for (const key2 in transaction) {
      if (allowedTransactionKeys.indexOf(key2) === -1) {
        logger7.throwArgumentError("invalid transaction key: " + key2, "transaction", transaction);
      }
    }
    const tx = shallowCopy(transaction);
    if (tx.from == null) {
      tx.from = this.getAddress();
    } else {
      tx.from = Promise.all([
        Promise.resolve(tx.from),
        this.getAddress()
      ]).then((result) => {
        if (result[0].toLowerCase() !== result[1].toLowerCase()) {
          logger7.throwArgumentError("from address mismatch", "transaction", transaction);
        }
        return result[0];
      });
    }
    return tx;
  }
  populateTransaction(transaction) {
    return __awaiter3(this, void 0, void 0, function* () {
      const tx = yield resolveProperties(this.checkTransaction(transaction));
      if (tx.to != null) {
        tx.to = Promise.resolve(tx.to).then((to) => __awaiter3(this, void 0, void 0, function* () {
          if (to == null) {
            return null;
          }
          const address = yield this.resolveName(to);
          if (address == null) {
            logger7.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
          }
          return address;
        }));
        tx.to.catch((error) => {
        });
      }
      const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;
      if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
        logger7.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
      } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
        logger7.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
      }
      if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
        tx.type = 2;
      } else if (tx.type === 0 || tx.type === 1) {
        if (tx.gasPrice == null) {
          tx.gasPrice = this.getGasPrice();
        }
      } else {
        const feeData = yield this.getFeeData();
        if (tx.type == null) {
          if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
            tx.type = 2;
            if (tx.gasPrice != null) {
              const gasPrice = tx.gasPrice;
              delete tx.gasPrice;
              tx.maxFeePerGas = gasPrice;
              tx.maxPriorityFeePerGas = gasPrice;
            } else {
              if (tx.maxFeePerGas == null) {
                tx.maxFeePerGas = feeData.maxFeePerGas;
              }
              if (tx.maxPriorityFeePerGas == null) {
                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
              }
            }
          } else if (feeData.gasPrice != null) {
            if (hasEip1559) {
              logger7.throwError("network does not support EIP-1559", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "populateTransaction"
              });
            }
            if (tx.gasPrice == null) {
              tx.gasPrice = feeData.gasPrice;
            }
            tx.type = 0;
          } else {
            logger7.throwError("failed to get consistent fee data", Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "signer.getFeeData"
            });
          }
        } else if (tx.type === 2) {
          if (tx.maxFeePerGas == null) {
            tx.maxFeePerGas = feeData.maxFeePerGas;
          }
          if (tx.maxPriorityFeePerGas == null) {
            tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
          }
        }
      }
      if (tx.nonce == null) {
        tx.nonce = this.getTransactionCount("pending");
      }
      if (tx.gasLimit == null) {
        tx.gasLimit = this.estimateGas(tx).catch((error) => {
          if (forwardErrors.indexOf(error.code) >= 0) {
            throw error;
          }
          return logger7.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
            error,
            tx
          });
        });
      }
      if (tx.chainId == null) {
        tx.chainId = this.getChainId();
      } else {
        tx.chainId = Promise.all([
          Promise.resolve(tx.chainId),
          this.getChainId()
        ]).then((results) => {
          if (results[1] !== 0 && results[0] !== results[1]) {
            logger7.throwArgumentError("chainId address mismatch", "transaction", transaction);
          }
          return results[0];
        });
      }
      return yield resolveProperties(tx);
    });
  }
  _checkProvider(operation) {
    if (!this.provider) {
      logger7.throwError("missing provider", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: operation || "_checkProvider"
      });
    }
  }
  static isSigner(value) {
    return !!(value && value._isSigner);
  }
};

// node_modules/@ethersproject/hash/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/hash/lib.esm/id.js
init_shim();

// node_modules/@ethersproject/strings/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/strings/lib.esm/utf8.js
init_shim();

// node_modules/@ethersproject/strings/lib.esm/_version.js
init_shim();
var version9 = "strings/5.6.0";

// node_modules/@ethersproject/strings/lib.esm/utf8.js
var logger8 = new Logger(version9);
var UnicodeNormalizationForm;
(function(UnicodeNormalizationForm2) {
  UnicodeNormalizationForm2["current"] = "";
  UnicodeNormalizationForm2["NFC"] = "NFC";
  UnicodeNormalizationForm2["NFD"] = "NFD";
  UnicodeNormalizationForm2["NFKC"] = "NFKC";
  UnicodeNormalizationForm2["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
var Utf8ErrorReason;
(function(Utf8ErrorReason2) {
  Utf8ErrorReason2["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
  Utf8ErrorReason2["BAD_PREFIX"] = "bad codepoint prefix";
  Utf8ErrorReason2["OVERRUN"] = "string overrun";
  Utf8ErrorReason2["MISSING_CONTINUE"] = "missing continuation byte";
  Utf8ErrorReason2["OUT_OF_RANGE"] = "out of UTF-8 range";
  Utf8ErrorReason2["UTF16_SURROGATE"] = "UTF-16 surrogate";
  Utf8ErrorReason2["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));
function errorFunc(reason, offset, bytes, output, badCodepoint) {
  return logger8.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
}
function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
    let i = 0;
    for (let o = offset + 1; o < bytes.length; o++) {
      if (bytes[o] >> 6 !== 2) {
        break;
      }
      i++;
    }
    return i;
  }
  if (reason === Utf8ErrorReason.OVERRUN) {
    return bytes.length - offset - 1;
  }
  return 0;
}
function replaceFunc(reason, offset, bytes, output, badCodepoint) {
  if (reason === Utf8ErrorReason.OVERLONG) {
    output.push(badCodepoint);
    return 0;
  }
  output.push(65533);
  return ignoreFunc(reason, offset, bytes, output, badCodepoint);
}
var Utf8ErrorFuncs = Object.freeze({
  error: errorFunc,
  ignore: ignoreFunc,
  replace: replaceFunc
});
function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
  if (form != UnicodeNormalizationForm.current) {
    logger8.checkNormalize();
    str = str.normalize(form);
  }
  let result = [];
  for (let i = 0; i < str.length; i++) {
    const c = str.charCodeAt(i);
    if (c < 128) {
      result.push(c);
    } else if (c < 2048) {
      result.push(c >> 6 | 192);
      result.push(c & 63 | 128);
    } else if ((c & 64512) == 55296) {
      i++;
      const c2 = str.charCodeAt(i);
      if (i >= str.length || (c2 & 64512) !== 56320) {
        throw new Error("invalid utf-8 string");
      }
      const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);
      result.push(pair >> 18 | 240);
      result.push(pair >> 12 & 63 | 128);
      result.push(pair >> 6 & 63 | 128);
      result.push(pair & 63 | 128);
    } else {
      result.push(c >> 12 | 224);
      result.push(c >> 6 & 63 | 128);
      result.push(c & 63 | 128);
    }
  }
  return arrayify(result);
}

// node_modules/@ethersproject/hash/lib.esm/id.js
function id(text) {
  return keccak256(toUtf8Bytes(text));
}

// node_modules/@ethersproject/hash/lib.esm/_version.js
init_shim();
var version10 = "hash/5.6.0";

// node_modules/@ethersproject/hash/lib.esm/message.js
init_shim();
var messagePrefix = "Ethereum Signed Message:\n";
function hashMessage(message) {
  if (typeof message === "string") {
    message = toUtf8Bytes(message);
  }
  return keccak256(concat([
    toUtf8Bytes(messagePrefix),
    toUtf8Bytes(String(message.length)),
    message
  ]));
}

// node_modules/@ethersproject/hash/lib.esm/typed-data.js
init_shim();
var __awaiter4 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger9 = new Logger(version10);
var padding = new Uint8Array(32);
padding.fill(0);
var NegativeOne = BigNumber.from(-1);
var Zero = BigNumber.from(0);
var One = BigNumber.from(1);
var MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function hexPadRight(value) {
  const bytes = arrayify(value);
  const padOffset = bytes.length % 32;
  if (padOffset) {
    return hexConcat([bytes, padding.slice(padOffset)]);
  }
  return hexlify(bytes);
}
var hexTrue = hexZeroPad(One.toHexString(), 32);
var hexFalse = hexZeroPad(Zero.toHexString(), 32);
var domainFieldTypes = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
};
var domainFieldNames = [
  "name",
  "version",
  "chainId",
  "verifyingContract",
  "salt"
];
function checkString(key2) {
  return function(value) {
    if (typeof value !== "string") {
      logger9.throwArgumentError(`invalid domain value for ${JSON.stringify(key2)}`, `domain.${key2}`, value);
    }
    return value;
  };
}
var domainChecks = {
  name: checkString("name"),
  version: checkString("version"),
  chainId: function(value) {
    try {
      return BigNumber.from(value).toString();
    } catch (error) {
    }
    return logger9.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
  },
  verifyingContract: function(value) {
    try {
      return getAddress(value).toLowerCase();
    } catch (error) {
    }
    return logger9.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
  },
  salt: function(value) {
    try {
      const bytes = arrayify(value);
      if (bytes.length !== 32) {
        throw new Error("bad length");
      }
      return hexlify(bytes);
    } catch (error) {
    }
    return logger9.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
  }
};
function getBaseEncoder(type) {
  {
    const match = type.match(/^(u?)int(\d*)$/);
    if (match) {
      const signed = match[1] === "";
      const width = parseInt(match[2] || "256");
      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
        logger9.throwArgumentError("invalid numeric width", "type", type);
      }
      const boundsUpper = MaxUint256.mask(signed ? width - 1 : width);
      const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
      return function(value) {
        const v = BigNumber.from(value);
        if (v.lt(boundsLower) || v.gt(boundsUpper)) {
          logger9.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
        }
        return hexZeroPad(v.toTwos(256).toHexString(), 32);
      };
    }
  }
  {
    const match = type.match(/^bytes(\d+)$/);
    if (match) {
      const width = parseInt(match[1]);
      if (width === 0 || width > 32 || match[1] !== String(width)) {
        logger9.throwArgumentError("invalid bytes width", "type", type);
      }
      return function(value) {
        const bytes = arrayify(value);
        if (bytes.length !== width) {
          logger9.throwArgumentError(`invalid length for ${type}`, "value", value);
        }
        return hexPadRight(value);
      };
    }
  }
  switch (type) {
    case "address":
      return function(value) {
        return hexZeroPad(getAddress(value), 32);
      };
    case "bool":
      return function(value) {
        return !value ? hexFalse : hexTrue;
      };
    case "bytes":
      return function(value) {
        return keccak256(value);
      };
    case "string":
      return function(value) {
        return id(value);
      };
  }
  return null;
}
function encodeType(name, fields) {
  return `${name}(${fields.map(({ name: name2, type }) => type + " " + name2).join(",")})`;
}
var TypedDataEncoder = class {
  constructor(types) {
    defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
    defineReadOnly(this, "_encoderCache", {});
    defineReadOnly(this, "_types", {});
    const links = {};
    const parents = {};
    const subtypes = {};
    Object.keys(types).forEach((type) => {
      links[type] = {};
      parents[type] = [];
      subtypes[type] = {};
    });
    for (const name in types) {
      const uniqueNames = {};
      types[name].forEach((field) => {
        if (uniqueNames[field.name]) {
          logger9.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
        }
        uniqueNames[field.name] = true;
        const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
        if (baseType === name) {
          logger9.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
        }
        const encoder = getBaseEncoder(baseType);
        if (encoder) {
          return;
        }
        if (!parents[baseType]) {
          logger9.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
        }
        parents[baseType].push(name);
        links[name][baseType] = true;
      });
    }
    const primaryTypes = Object.keys(parents).filter((n) => parents[n].length === 0);
    if (primaryTypes.length === 0) {
      logger9.throwArgumentError("missing primary type", "types", types);
    } else if (primaryTypes.length > 1) {
      logger9.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(", ")}`, "types", types);
    }
    defineReadOnly(this, "primaryType", primaryTypes[0]);
    function checkCircular(type, found) {
      if (found[type]) {
        logger9.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
      }
      found[type] = true;
      Object.keys(links[type]).forEach((child) => {
        if (!parents[child]) {
          return;
        }
        checkCircular(child, found);
        Object.keys(found).forEach((subtype) => {
          subtypes[subtype][child] = true;
        });
      });
      delete found[type];
    }
    checkCircular(this.primaryType, {});
    for (const name in subtypes) {
      const st = Object.keys(subtypes[name]);
      st.sort();
      this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join("");
    }
  }
  getEncoder(type) {
    let encoder = this._encoderCache[type];
    if (!encoder) {
      encoder = this._encoderCache[type] = this._getEncoder(type);
    }
    return encoder;
  }
  _getEncoder(type) {
    {
      const encoder = getBaseEncoder(type);
      if (encoder) {
        return encoder;
      }
    }
    const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (match) {
      const subtype = match[1];
      const subEncoder = this.getEncoder(subtype);
      const length = parseInt(match[3]);
      return (value) => {
        if (length >= 0 && value.length !== length) {
          logger9.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
        }
        let result = value.map(subEncoder);
        if (this._types[subtype]) {
          result = result.map(keccak256);
        }
        return keccak256(hexConcat(result));
      };
    }
    const fields = this.types[type];
    if (fields) {
      const encodedType = id(this._types[type]);
      return (value) => {
        const values = fields.map(({ name, type: type2 }) => {
          const result = this.getEncoder(type2)(value[name]);
          if (this._types[type2]) {
            return keccak256(result);
          }
          return result;
        });
        values.unshift(encodedType);
        return hexConcat(values);
      };
    }
    return logger9.throwArgumentError(`unknown type: ${type}`, "type", type);
  }
  encodeType(name) {
    const result = this._types[name];
    if (!result) {
      logger9.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
    }
    return result;
  }
  encodeData(type, value) {
    return this.getEncoder(type)(value);
  }
  hashStruct(name, value) {
    return keccak256(this.encodeData(name, value));
  }
  encode(value) {
    return this.encodeData(this.primaryType, value);
  }
  hash(value) {
    return this.hashStruct(this.primaryType, value);
  }
  _visit(type, value, callback) {
    {
      const encoder = getBaseEncoder(type);
      if (encoder) {
        return callback(type, value);
      }
    }
    const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (match) {
      const subtype = match[1];
      const length = parseInt(match[3]);
      if (length >= 0 && value.length !== length) {
        logger9.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
      }
      return value.map((v) => this._visit(subtype, v, callback));
    }
    const fields = this.types[type];
    if (fields) {
      return fields.reduce((accum, { name, type: type2 }) => {
        accum[name] = this._visit(type2, value[name], callback);
        return accum;
      }, {});
    }
    return logger9.throwArgumentError(`unknown type: ${type}`, "type", type);
  }
  visit(value, callback) {
    return this._visit(this.primaryType, value, callback);
  }
  static from(types) {
    return new TypedDataEncoder(types);
  }
  static getPrimaryType(types) {
    return TypedDataEncoder.from(types).primaryType;
  }
  static hashStruct(name, types, value) {
    return TypedDataEncoder.from(types).hashStruct(name, value);
  }
  static hashDomain(domain) {
    const domainFields = [];
    for (const name in domain) {
      const type = domainFieldTypes[name];
      if (!type) {
        logger9.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
      }
      domainFields.push({ name, type });
    }
    domainFields.sort((a, b) => {
      return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
    });
    return TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
  }
  static encode(domain, types, value) {
    return hexConcat([
      "0x1901",
      TypedDataEncoder.hashDomain(domain),
      TypedDataEncoder.from(types).hash(value)
    ]);
  }
  static hash(domain, types, value) {
    return keccak256(TypedDataEncoder.encode(domain, types, value));
  }
  static resolveNames(domain, types, value, resolveName) {
    return __awaiter4(this, void 0, void 0, function* () {
      domain = shallowCopy(domain);
      const ensCache = {};
      if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {
        ensCache[domain.verifyingContract] = "0x";
      }
      const encoder = TypedDataEncoder.from(types);
      encoder.visit(value, (type, value2) => {
        if (type === "address" && !isHexString(value2, 20)) {
          ensCache[value2] = "0x";
        }
        return value2;
      });
      for (const name in ensCache) {
        ensCache[name] = yield resolveName(name);
      }
      if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
        domain.verifyingContract = ensCache[domain.verifyingContract];
      }
      value = encoder.visit(value, (type, value2) => {
        if (type === "address" && ensCache[value2]) {
          return ensCache[value2];
        }
        return value2;
      });
      return { domain, value };
    });
  }
  static getPayload(domain, types, value) {
    TypedDataEncoder.hashDomain(domain);
    const domainValues = {};
    const domainTypes = [];
    domainFieldNames.forEach((name) => {
      const value2 = domain[name];
      if (value2 == null) {
        return;
      }
      domainValues[name] = domainChecks[name](value2);
      domainTypes.push({ name, type: domainFieldTypes[name] });
    });
    const encoder = TypedDataEncoder.from(types);
    const typesWithDomain = shallowCopy(types);
    if (typesWithDomain.EIP712Domain) {
      logger9.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
    } else {
      typesWithDomain.EIP712Domain = domainTypes;
    }
    encoder.encode(value);
    return {
      types: typesWithDomain,
      domain: domainValues,
      primaryType: encoder.primaryType,
      message: encoder.visit(value, (type, value2) => {
        if (type.match(/^bytes(\d*)/)) {
          return hexlify(arrayify(value2));
        }
        if (type.match(/^u?int/)) {
          return BigNumber.from(value2).toString();
        }
        switch (type) {
          case "address":
            return value2.toLowerCase();
          case "bool":
            return !!value2;
          case "string":
            if (typeof value2 !== "string") {
              logger9.throwArgumentError(`invalid string`, "value", value2);
            }
            return value2;
        }
        return logger9.throwArgumentError("unsupported type", "type", type);
      })
    };
  }
};

// node_modules/@ethersproject/hdnode/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/basex/lib.esm/index.js
init_shim();
var BaseX = class {
  constructor(alphabet) {
    defineReadOnly(this, "alphabet", alphabet);
    defineReadOnly(this, "base", alphabet.length);
    defineReadOnly(this, "_alphabetMap", {});
    defineReadOnly(this, "_leader", alphabet.charAt(0));
    for (let i = 0; i < alphabet.length; i++) {
      this._alphabetMap[alphabet.charAt(i)] = i;
    }
  }
  encode(value) {
    let source = arrayify(value);
    if (source.length === 0) {
      return "";
    }
    let digits = [0];
    for (let i = 0; i < source.length; ++i) {
      let carry = source[i];
      for (let j = 0; j < digits.length; ++j) {
        carry += digits[j] << 8;
        digits[j] = carry % this.base;
        carry = carry / this.base | 0;
      }
      while (carry > 0) {
        digits.push(carry % this.base);
        carry = carry / this.base | 0;
      }
    }
    let string = "";
    for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
      string += this._leader;
    }
    for (let q = digits.length - 1; q >= 0; --q) {
      string += this.alphabet[digits[q]];
    }
    return string;
  }
  decode(value) {
    if (typeof value !== "string") {
      throw new TypeError("Expected String");
    }
    let bytes = [];
    if (value.length === 0) {
      return new Uint8Array(bytes);
    }
    bytes.push(0);
    for (let i = 0; i < value.length; i++) {
      let byte = this._alphabetMap[value[i]];
      if (byte === void 0) {
        throw new Error("Non-base" + this.base + " character");
      }
      let carry = byte;
      for (let j = 0; j < bytes.length; ++j) {
        carry += bytes[j] * this.base;
        bytes[j] = carry & 255;
        carry >>= 8;
      }
      while (carry > 0) {
        bytes.push(carry & 255);
        carry >>= 8;
      }
    }
    for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
      bytes.push(0);
    }
    return arrayify(new Uint8Array(bytes.reverse()));
  }
};
var Base32 = new BaseX("abcdefghijklmnopqrstuvwxyz234567");
var Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");

// node_modules/@ethersproject/pbkdf2/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js
init_shim();

// node_modules/@ethersproject/sha2/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/sha2/lib.esm/sha2.js
init_shim();
var import_hash = __toESM(require_hash2());

// node_modules/@ethersproject/sha2/lib.esm/types.js
init_shim();
var SupportedAlgorithm;
(function(SupportedAlgorithm2) {
  SupportedAlgorithm2["sha256"] = "sha256";
  SupportedAlgorithm2["sha512"] = "sha512";
})(SupportedAlgorithm || (SupportedAlgorithm = {}));

// node_modules/@ethersproject/sha2/lib.esm/_version.js
init_shim();
var version11 = "sha2/5.6.0";

// node_modules/@ethersproject/sha2/lib.esm/sha2.js
var logger10 = new Logger(version11);
function ripemd160(data) {
  return "0x" + import_hash.default.ripemd160().update(arrayify(data)).digest("hex");
}
function sha256(data) {
  return "0x" + import_hash.default.sha256().update(arrayify(data)).digest("hex");
}
function computeHmac(algorithm, key2, data) {
  if (!SupportedAlgorithm[algorithm]) {
    logger10.throwError("unsupported algorithm " + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {
      operation: "hmac",
      algorithm
    });
  }
  return "0x" + import_hash.default.hmac(import_hash.default[algorithm], arrayify(key2)).update(arrayify(data)).digest("hex");
}

// node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js
function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {
  password = arrayify(password);
  salt = arrayify(salt);
  let hLen;
  let l = 1;
  const DK = new Uint8Array(keylen);
  const block1 = new Uint8Array(salt.length + 4);
  block1.set(salt);
  let r;
  let T;
  for (let i = 1; i <= l; i++) {
    block1[salt.length] = i >> 24 & 255;
    block1[salt.length + 1] = i >> 16 & 255;
    block1[salt.length + 2] = i >> 8 & 255;
    block1[salt.length + 3] = i & 255;
    let U = arrayify(computeHmac(hashAlgorithm, password, block1));
    if (!hLen) {
      hLen = U.length;
      T = new Uint8Array(hLen);
      l = Math.ceil(keylen / hLen);
      r = keylen - (l - 1) * hLen;
    }
    T.set(U);
    for (let j = 1; j < iterations; j++) {
      U = arrayify(computeHmac(hashAlgorithm, password, U));
      for (let k = 0; k < hLen; k++)
        T[k] ^= U[k];
    }
    const destPos = (i - 1) * hLen;
    const len = i === l ? r : hLen;
    DK.set(arrayify(T).slice(0, len), destPos);
  }
  return hexlify(DK);
}

// node_modules/@ethersproject/signing-key/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/signing-key/lib.esm/elliptic.js
init_shim();
var import_bn2 = __toESM(require_bn9());
var import_hash2 = __toESM(require_hash2());
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base2) {
      return commonjsRequire(path, base2 === void 0 || base2 === null ? module.path : base2);
    }
  }, fn(module, module.exports), module.exports;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var minimalisticAssert = assert;
function assert(val, msg) {
  if (!val)
    throw new Error(msg || "Assertion failed");
}
assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || "Assertion failed: " + l + " != " + r);
};
var utils_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var utils = exports;
  function toArray(msg, enc) {
    if (Array.isArray(msg))
      return msg.slice();
    if (!msg)
      return [];
    var res = [];
    if (typeof msg !== "string") {
      for (var i = 0; i < msg.length; i++)
        res[i] = msg[i] | 0;
      return res;
    }
    if (enc === "hex") {
      msg = msg.replace(/[^a-z0-9]+/ig, "");
      if (msg.length % 2 !== 0)
        msg = "0" + msg;
      for (var i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    } else {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 255;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    }
    return res;
  }
  utils.toArray = toArray;
  function zero2(word) {
    if (word.length === 1)
      return "0" + word;
    else
      return word;
  }
  utils.zero2 = zero2;
  function toHex2(msg) {
    var res = "";
    for (var i = 0; i < msg.length; i++)
      res += zero2(msg[i].toString(16));
    return res;
  }
  utils.toHex = toHex2;
  utils.encode = function encode3(arr, enc) {
    if (enc === "hex")
      return toHex2(arr);
    else
      return arr;
  };
});
var utils_1$1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var utils = exports;
  utils.assert = minimalisticAssert;
  utils.toArray = utils_1.toArray;
  utils.zero2 = utils_1.zero2;
  utils.toHex = utils_1.toHex;
  utils.encode = utils_1.encode;
  function getNAF2(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    naf.fill(0);
    var ws = 1 << w + 1;
    var k = num.clone();
    for (var i = 0; i < naf.length; i++) {
      var z;
      var mod = k.andln(ws - 1);
      if (k.isOdd()) {
        if (mod > (ws >> 1) - 1)
          z = (ws >> 1) - mod;
        else
          z = mod;
        k.isubn(z);
      } else {
        z = 0;
      }
      naf[i] = z;
      k.iushrn(1);
    }
    return naf;
  }
  utils.getNAF = getNAF2;
  function getJSF2(k1, k2) {
    var jsf = [
      [],
      []
    ];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;
    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k2.andln(3) + d2 & 3;
      if (m14 === 3)
        m14 = -1;
      if (m24 === 3)
        m24 = -1;
      var u1;
      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2)
          u1 = -m14;
        else
          u1 = m14;
      }
      jsf[0].push(u1);
      var u2;
      if ((m24 & 1) === 0) {
        u2 = 0;
      } else {
        m8 = k2.andln(7) + d2 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2)
          u2 = -m24;
        else
          u2 = m24;
      }
      jsf[1].push(u2);
      if (2 * d1 === u1 + 1)
        d1 = 1 - d1;
      if (2 * d2 === u2 + 1)
        d2 = 1 - d2;
      k1.iushrn(1);
      k2.iushrn(1);
    }
    return jsf;
  }
  utils.getJSF = getJSF2;
  function cachedProperty(obj, name, computer) {
    var key2 = "_" + name;
    obj.prototype[name] = function cachedProperty2() {
      return this[key2] !== void 0 ? this[key2] : this[key2] = computer.call(this);
    };
  }
  utils.cachedProperty = cachedProperty;
  function parseBytes(bytes) {
    return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
  }
  utils.parseBytes = parseBytes;
  function intFromLE(bytes) {
    return new import_bn2.default(bytes, "hex", "le");
  }
  utils.intFromLE = intFromLE;
});
var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;
function BaseCurve(type, conf) {
  this.type = type;
  this.p = new import_bn2.default(conf.p, 16);
  this.red = conf.prime ? import_bn2.default.red(conf.prime) : import_bn2.default.mont(this.p);
  this.zero = new import_bn2.default(0).toRed(this.red);
  this.one = new import_bn2.default(1).toRed(this.red);
  this.two = new import_bn2.default(2).toRed(this.red);
  this.n = conf.n && new import_bn2.default(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0;
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base = BaseCurve;
BaseCurve.prototype.point = function point() {
  throw new Error("Not implemented");
};
BaseCurve.prototype.validate = function validate() {
  throw new Error("Not implemented");
};
BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$1(p.precomputed);
  var doubles = p._getDoubles();
  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }
  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};
BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;
  var naf = getNAF(k, w, this._bitLength);
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);
    if (i < 0)
      break;
    var z = naf[i];
    assert$1(z !== 0);
    if (p.type === "affine") {
      if (z > 0)
        acc = acc.mixedAdd(wnd[z - 1 >> 1]);
      else
        acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
    } else {
      if (z > 0)
        acc = acc.add(wnd[z - 1 >> 1]);
      else
        acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
  }
  return p.type === "affine" ? acc.toP() : acc;
};
BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }
    var comb = [
      points[a],
      null,
      null,
      points[b]
    ];
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }
    var index = [
      -3,
      -1,
      -5,
      -7,
      0,
      7,
      5,
      1,
      3
    ];
    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;
      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }
  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;
    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;
    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][z - 1 >> 1];
      else if (z < 0)
        p = wnd[j][-z - 1 >> 1].neg();
      if (p.type === "affine")
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  for (i = 0; i < len; i++)
    wnd[i] = null;
  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};
function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function eq() {
  throw new Error("Not implemented");
};
BasePoint.prototype.validate = function validate2() {
  return this.curve.validate(this);
};
BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);
  var len = this.p.byteLength();
  if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 6)
      assert$1(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 7)
      assert$1(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
    return res;
  } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
  }
  throw new Error("Unknown point format");
};
BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};
BasePoint.prototype._encode = function _encode2(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray("be", len);
  if (compact)
    return [this.getY().isEven() ? 2 : 3].concat(x);
  return [4].concat(x, this.getY().toArray("be", len));
};
BasePoint.prototype.encode = function encode2(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};
BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};
BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;
  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;
  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step,
    points: doubles
  };
};
BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl3 = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl3);
  return {
    wnd,
    points: res
  };
};
BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};
BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};
var inherits_browser = createCommonjsModule(function(module) {
  if (typeof Object.create === "function") {
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    };
  } else {
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
    };
  }
});
var assert$2 = utils_1$1.assert;
function ShortCurve(conf) {
  base.call(this, "short", conf);
  this.a = new import_bn2.default(conf.a, 16).toRed(this.red);
  this.b = new import_bn2.default(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;
ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new import_bn2.default(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new import_bn2.default(conf.lambda, 16);
  } else {
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new import_bn2.default(vec.a, 16),
        b: new import_bn2.default(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }
  return {
    beta,
    lambda,
    basis
  };
};
ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  var red = num === this.p ? this.red : import_bn2.default.mont(num);
  var tinv = new import_bn2.default(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s = new import_bn2.default(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [l1, l2];
};
ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
  var u = lambda;
  var v = this.n.clone();
  var x1 = new import_bn2.default(1);
  var y1 = new import_bn2.default(0);
  var x2 = new import_bn2.default(0);
  var y2 = new import_bn2.default(1);
  var a0;
  var b0;
  var a1;
  var b1;
  var a2;
  var b2;
  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));
    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;
    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }
  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};
ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];
  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1, k2 };
};
ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new import_bn2.default(x, 16);
  if (!x.red)
    x = x.toRed(this.red);
  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();
  return this.point(x, y);
};
ShortCurve.prototype.validate = function validate3(point3) {
  if (point3.inf)
    return true;
  var x = point3.x;
  var y = point3.y;
  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();
    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }
    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};
function Point(curve, x, y, isRed) {
  base.BasePoint.call(this, curve, "affine");
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new import_bn2.default(x, 16);
    this.y = new import_bn2.default(y, 16);
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits_browser(Point, base.BasePoint);
ShortCurve.prototype.point = function point2(x, y, isRed) {
  return new Point(this, x, y, isRed);
};
ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};
Point.prototype._getBeta = function _getBeta2() {
  if (!this.curve.endo)
    return;
  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};
Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};
Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === "string")
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;
  function obj2point(obj2) {
    return curve.point(obj2[0], obj2[1], red);
  }
  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};
Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return "<EC Point Infinity>";
  return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};
Point.prototype.add = function add(p) {
  if (this.inf)
    return p;
  if (p.inf)
    return this;
  if (this.eq(p))
    return this.dbl();
  if (this.neg().eq(p))
    return this.curve.point(null, null);
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);
  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);
  var a = this.curve.a;
  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point.prototype.getX = function getX() {
  return this.x.fromRed();
};
Point.prototype.getY = function getY() {
  return this.y.fromRed();
};
Point.prototype.mul = function mul(k) {
  k = new import_bn2.default(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([this], [k]);
  else
    return this.curve._wnafMul(this, k);
};
Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point.prototype.eq = function eq2(p) {
  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;
  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};
Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};
function JPoint(curve, x, y, z) {
  base.BasePoint.call(this, curve, "jacobian");
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new import_bn2.default(0);
  } else {
    this.x = new import_bn2.default(x, 16);
    this.y = new import_bn2.default(y, 16);
    this.z = new import_bn2.default(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint, base.BasePoint);
ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};
JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};
JPoint.prototype.neg = function neg2() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint.prototype.add = function add2(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mixedAdd = function mixedAdd(p) {
  if (this.isInfinity())
    return p.toJ();
  if (p.isInfinity())
    return this;
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.dblp = function dblp2(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();
  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }
  var a = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }
  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint.prototype.dbl = function dbl2() {
  if (this.isInfinity())
    return this;
  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};
JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  if (this.zOne) {
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var yyyy = yy.redSqr();
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    var m = xx.redAdd(xx).redIAdd(xx);
    var t = m.redSqr().redISub(s).redISub(s);
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    nx = t;
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    nz = this.y.redAdd(this.y);
  } else {
    var a = this.x.redSqr();
    var b = this.y.redSqr();
    var c = b.redSqr();
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    var e = a.redAdd(a).redIAdd(a);
    var f = e.redSqr();
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);
    nx = f.redISub(d).redISub(d);
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  if (this.zOne) {
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var yyyy = yy.redSqr();
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    var t = m.redSqr().redISub(s).redISub(s);
    nx = t;
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    nz = this.y.redAdd(this.y);
  } else {
    var delta = this.z.redSqr();
    var gamma = this.y.redSqr();
    var beta = this.x.redMul(gamma);
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);
  var xx = this.x.redSqr();
  var yy = this.y.redSqr();
  var zz = this.z.redSqr();
  var yyyy = yy.redSqr();
  var m = xx.redAdd(xx).redIAdd(xx);
  var mm = m.redSqr();
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  var ee = e.redSqr();
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mul = function mul2(k, kbase) {
  k = new import_bn2.default(k, kbase);
  return this.curve._wnafMul(this, k);
};
JPoint.prototype.eq = function eq3(p) {
  if (p.type === "affine")
    return this.eq(p.toJ());
  if (this === p)
    return true;
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (; ; ) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};
JPoint.prototype.inspect = function inspect2() {
  if (this.isInfinity())
    return "<EC JPoint Infinity>";
  return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
JPoint.prototype.isInfinity = function isInfinity2() {
  return this.z.cmpn(0) === 0;
};
var curve_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var curve = exports;
  curve.base = base;
  curve.short = short_1;
  curve.mont = null;
  curve.edwards = null;
});
var curves_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var curves = exports;
  var assert2 = utils_1$1.assert;
  function PresetCurve(options) {
    if (options.type === "short")
      this.curve = new curve_1.short(options);
    else if (options.type === "edwards")
      this.curve = new curve_1.edwards(options);
    else
      this.curve = new curve_1.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert2(this.g.validate(), "Invalid curve");
    assert2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  curves.PresetCurve = PresetCurve;
  function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
      configurable: true,
      enumerable: true,
      get: function() {
        var curve = new PresetCurve(options);
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }
  defineCurve("p192", {
    type: "short",
    prime: "p192",
    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
    hash: import_hash2.default.sha256,
    gRed: false,
    g: [
      "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
      "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
    ]
  });
  defineCurve("p224", {
    type: "short",
    prime: "p224",
    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
    hash: import_hash2.default.sha256,
    gRed: false,
    g: [
      "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
      "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
    ]
  });
  defineCurve("p256", {
    type: "short",
    prime: null,
    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
    hash: import_hash2.default.sha256,
    gRed: false,
    g: [
      "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
      "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
    ]
  });
  defineCurve("p384", {
    type: "short",
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: import_hash2.default.sha384,
    gRed: false,
    g: [
      "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
      "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
    ]
  });
  defineCurve("p521", {
    type: "short",
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: import_hash2.default.sha512,
    gRed: false,
    g: [
      "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
      "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
    ]
  });
  defineCurve("curve25519", {
    type: "mont",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "76d06",
    b: "1",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: import_hash2.default.sha256,
    gRed: false,
    g: [
      "9"
    ]
  });
  defineCurve("ed25519", {
    type: "edwards",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "-1",
    c: "1",
    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: import_hash2.default.sha256,
    gRed: false,
    g: [
      "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
      "6666666666666666666666666666666666666666666666666666666666666658"
    ]
  });
  var pre;
  try {
    pre = null.crash();
  } catch (e) {
    pre = void 0;
  }
  defineCurve("secp256k1", {
    type: "short",
    prime: "k256",
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
    a: "0",
    b: "7",
    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
    h: "1",
    hash: import_hash2.default.sha256,
    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
    basis: [
      {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      },
      {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }
    ],
    gRed: false,
    g: [
      "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
      "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
      pre
    ]
  });
});
function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;
  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;
  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;
  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || "hex");
  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || "hex");
  var pers = utils_1.toArray(options.pers, options.persEnc || "hex");
  minimalisticAssert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
  this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG;
HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);
  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0;
    this.V[i] = 1;
  }
  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 281474976710656;
};
HmacDRBG.prototype._hmac = function hmac() {
  return new import_hash2.default.hmac(this.hash, this.K);
};
HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac().update(this.V).update([0]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;
  this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
  this.V = this._hmac().update(this.V).digest();
};
HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add3, addEnc) {
  if (typeof entropyEnc !== "string") {
    addEnc = add3;
    add3 = entropyEnc;
    entropyEnc = null;
  }
  entropy = utils_1.toArray(entropy, entropyEnc);
  add3 = utils_1.toArray(add3, addEnc);
  minimalisticAssert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
  this._update(entropy.concat(add3 || []));
  this._reseed = 1;
};
HmacDRBG.prototype.generate = function generate(len, enc, add3, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error("Reseed is required");
  if (typeof enc !== "string") {
    addEnc = add3;
    add3 = enc;
    enc = null;
  }
  if (add3) {
    add3 = utils_1.toArray(add3, addEnc || "hex");
    this._update(add3);
  }
  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }
  var res = temp.slice(0, len);
  this._update(add3);
  this._reseed++;
  return utils_1.encode(res, enc);
};
var assert$3 = utils_1$1.assert;
function KeyPair(ec2, options) {
  this.ec = ec2;
  this.priv = null;
  this.pub = null;
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
var key = KeyPair;
KeyPair.fromPublic = function fromPublic(ec2, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(ec2, {
    pub,
    pubEnc: enc
  });
};
KeyPair.fromPrivate = function fromPrivate(ec2, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;
  return new KeyPair(ec2, {
    priv,
    privEnc: enc
  });
};
KeyPair.prototype.validate = function validate4() {
  var pub = this.getPublic();
  if (pub.isInfinity())
    return { result: false, reason: "Invalid public key" };
  if (!pub.validate())
    return { result: false, reason: "Public key is not a point" };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: "Public key * N != O" };
  return { result: true, reason: null };
};
KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  if (typeof compact === "string") {
    enc = compact;
    compact = null;
  }
  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);
  if (!enc)
    return this.pub;
  return this.pub.encode(enc, compact);
};
KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === "hex")
    return this.priv.toString(16, 2);
  else
    return this.priv;
};
KeyPair.prototype._importPrivate = function _importPrivate(key2, enc) {
  this.priv = new import_bn2.default(key2, enc || 16);
  this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair.prototype._importPublic = function _importPublic(key2, enc) {
  if (key2.x || key2.y) {
    if (this.ec.curve.type === "mont") {
      assert$3(key2.x, "Need x coordinate");
    } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
      assert$3(key2.x && key2.y, "Need both x and y coordinate");
    }
    this.pub = this.ec.curve.point(key2.x, key2.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key2, enc);
};
KeyPair.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$3(pub.validate(), "public point not validated");
  }
  return pub.mul(this.priv).getX();
};
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};
KeyPair.prototype.verify = function verify(msg, signature2) {
  return this.ec.verify(msg, signature2, this);
};
KeyPair.prototype.inspect = function inspect3() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var assert$4 = utils_1$1.assert;
function Signature(options, enc) {
  if (options instanceof Signature)
    return options;
  if (this._importDER(options, enc))
    return;
  assert$4(options.r && options.s, "Signature without r or s");
  this.r = new import_bn2.default(options.r, 16);
  this.s = new import_bn2.default(options.s, 16);
  if (options.recoveryParam === void 0)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
var signature = Signature;
function Position() {
  this.place = 0;
}
function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 128)) {
    return initial;
  }
  var octetLen = initial & 15;
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }
  if (val <= 127) {
    return false;
  }
  p.place = off;
  return val;
}
function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}
Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 48) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if (len + p.place !== data.length) {
    return false;
  }
  if (data[p.place++] !== 2) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 2) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 128) {
      r = r.slice(1);
    } else {
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 128) {
      s = s.slice(1);
    } else {
      return false;
    }
  }
  this.r = new import_bn2.default(r);
  this.s = new import_bn2.default(s);
  this.recoveryParam = null;
  return true;
};
function constructLength(arr, len) {
  if (len < 128) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 128);
  while (--octets) {
    arr.push(len >>> (octets << 3) & 255);
  }
  arr.push(len);
}
Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();
  if (r[0] & 128)
    r = [0].concat(r);
  if (s[0] & 128)
    s = [0].concat(s);
  r = rmPadding(r);
  s = rmPadding(s);
  while (!s[0] && !(s[1] & 128)) {
    s = s.slice(1);
  }
  var arr = [2];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(2);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [48];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};
var rand = function() {
  throw new Error("unsupported");
};
var assert$5 = utils_1$1.assert;
function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);
  if (typeof options === "string") {
    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), "Unknown curve " + options);
    options = curves_1[options];
  }
  if (options instanceof curves_1.PresetCurve)
    options = { curve: options };
  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);
  this.hash = options.hash || options.curve.hash;
}
var ec = EC;
EC.prototype.keyPair = function keyPair(options) {
  return new key(this, options);
};
EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key.fromPrivate(this, priv, enc);
};
EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key.fromPublic(this, pub, enc);
};
EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};
  var drbg = new hmacDrbg({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || "utf8",
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || "utf8",
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new import_bn2.default(2));
  for (; ; ) {
    var priv = new import_bn2.default(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};
EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};
EC.prototype.sign = function sign2(msg, key2, enc, options) {
  if (typeof enc === "object") {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};
  key2 = this.keyFromPrivate(key2, enc);
  msg = this._truncateToN(new import_bn2.default(msg, 16));
  var bytes = this.n.byteLength();
  var bkey = key2.getPrivate().toArray("be", bytes);
  var nonce = msg.toArray("be", bytes);
  var drbg = new hmacDrbg({
    hash: this.hash,
    entropy: bkey,
    nonce,
    pers: options.pers,
    persEnc: options.persEnc || "utf8"
  });
  var ns1 = this.n.sub(new import_bn2.default(1));
  for (var iter = 0; ; iter++) {
    var k = options.k ? options.k(iter) : new import_bn2.default(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;
    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;
    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;
    var s = k.invm(this.n).mul(r.mul(key2.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }
    return new signature({ r, s, recoveryParam });
  }
};
EC.prototype.verify = function verify2(msg, signature$1, key2, enc) {
  msg = this._truncateToN(new import_bn2.default(msg, 16));
  key2 = this.keyFromPublic(key2, enc);
  signature$1 = new signature(signature$1, "hex");
  var r = signature$1.r;
  var s = signature$1.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;
  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key2.getPublic(), u2);
    if (p.isInfinity())
      return false;
    return p.getX().umod(this.n).cmp(r) === 0;
  }
  p = this.g.jmulAdd(u1, key2.getPublic(), u2);
  if (p.isInfinity())
    return false;
  return p.eqXToP(r);
};
EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
  assert$5((3 & j) === j, "The recovery param is more than two bits");
  signature$1 = new signature(signature$1, enc);
  var n = this.n;
  var e = new import_bn2.default(msg);
  var r = signature$1.r;
  var s = signature$1.s;
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error("Unable to find sencond key candinate");
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);
  var rInv = signature$1.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);
  return this.g.mulAdd(s1, r, s2);
};
EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
  signature$1 = new signature(signature$1, enc);
  if (signature$1.recoveryParam !== null)
    return signature$1.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature$1, i);
    } catch (e2) {
      continue;
    }
    if (Qprime.eq(Q))
      return i;
  }
  throw new Error("Unable to find valid recovery factor");
};
var elliptic_1 = createCommonjsModule(function(module, exports) {
  "use strict";
  var elliptic = exports;
  elliptic.version = { version: "6.5.4" }.version;
  elliptic.utils = utils_1$1;
  elliptic.rand = function() {
    throw new Error("unsupported");
  };
  elliptic.curve = curve_1;
  elliptic.curves = curves_1;
  elliptic.ec = ec;
  elliptic.eddsa = null;
});
var EC$1 = elliptic_1.ec;

// node_modules/@ethersproject/signing-key/lib.esm/_version.js
init_shim();
var version12 = "signing-key/5.6.0";

// node_modules/@ethersproject/signing-key/lib.esm/index.js
var logger11 = new Logger(version12);
var _curve = null;
function getCurve() {
  if (!_curve) {
    _curve = new EC$1("secp256k1");
  }
  return _curve;
}
var SigningKey = class {
  constructor(privateKey) {
    defineReadOnly(this, "curve", "secp256k1");
    defineReadOnly(this, "privateKey", hexlify(privateKey));
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    defineReadOnly(this, "publicKey", "0x" + keyPair2.getPublic(false, "hex"));
    defineReadOnly(this, "compressedPublicKey", "0x" + keyPair2.getPublic(true, "hex"));
    defineReadOnly(this, "_isSigningKey", true);
  }
  _addPoint(other) {
    const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
    const p1 = getCurve().keyFromPublic(arrayify(other));
    return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
  }
  signDigest(digest) {
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    const digestBytes = arrayify(digest);
    if (digestBytes.length !== 32) {
      logger11.throwArgumentError("bad digest length", "digest", digest);
    }
    const signature2 = keyPair2.sign(digestBytes, { canonical: true });
    return splitSignature({
      recoveryParam: signature2.recoveryParam,
      r: hexZeroPad("0x" + signature2.r.toString(16), 32),
      s: hexZeroPad("0x" + signature2.s.toString(16), 32)
    });
  }
  computeSharedSecret(otherKey) {
    const keyPair2 = getCurve().keyFromPrivate(arrayify(this.privateKey));
    const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
    return hexZeroPad("0x" + keyPair2.derive(otherKeyPair.getPublic()).toString(16), 32);
  }
  static isSigningKey(value) {
    return !!(value && value._isSigningKey);
  }
};
function computePublicKey(key2, compressed) {
  const bytes = arrayify(key2);
  if (bytes.length === 32) {
    const signingKey = new SigningKey(bytes);
    if (compressed) {
      return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
    }
    return signingKey.publicKey;
  } else if (bytes.length === 33) {
    if (compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
  } else if (bytes.length === 65) {
    if (!compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
  }
  return logger11.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}

// node_modules/@ethersproject/transactions/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/transactions/lib.esm/_version.js
init_shim();
var version13 = "transactions/5.6.0";

// node_modules/@ethersproject/transactions/lib.esm/index.js
var logger12 = new Logger(version13);
var TransactionTypes;
(function(TransactionTypes2) {
  TransactionTypes2[TransactionTypes2["legacy"] = 0] = "legacy";
  TransactionTypes2[TransactionTypes2["eip2930"] = 1] = "eip2930";
  TransactionTypes2[TransactionTypes2["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
var transactionFields = [
  { name: "nonce", maxLength: 32, numeric: true },
  { name: "gasPrice", maxLength: 32, numeric: true },
  { name: "gasLimit", maxLength: 32, numeric: true },
  { name: "to", length: 20 },
  { name: "value", maxLength: 32, numeric: true },
  { name: "data" }
];
var allowedTransactionKeys2 = {
  chainId: true,
  data: true,
  gasLimit: true,
  gasPrice: true,
  nonce: true,
  to: true,
  type: true,
  value: true
};
function computeAddress(key2) {
  const publicKey = computePublicKey(key2);
  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
}
function formatNumber(value, name) {
  const result = stripZeros(BigNumber.from(value).toHexString());
  if (result.length > 32) {
    logger12.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
  }
  return result;
}
function accessSetify(addr, storageKeys) {
  return {
    address: getAddress(addr),
    storageKeys: (storageKeys || []).map((storageKey, index) => {
      if (hexDataLength(storageKey) !== 32) {
        logger12.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
      }
      return storageKey.toLowerCase();
    })
  };
}
function accessListify(value) {
  if (Array.isArray(value)) {
    return value.map((set, index) => {
      if (Array.isArray(set)) {
        if (set.length > 2) {
          logger12.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
        }
        return accessSetify(set[0], set[1]);
      }
      return accessSetify(set.address, set.storageKeys);
    });
  }
  const result = Object.keys(value).map((addr) => {
    const storageKeys = value[addr].reduce((accum, storageKey) => {
      accum[storageKey] = true;
      return accum;
    }, {});
    return accessSetify(addr, Object.keys(storageKeys).sort());
  });
  result.sort((a, b) => a.address.localeCompare(b.address));
  return result;
}
function formatAccessList(value) {
  return accessListify(value).map((set) => [set.address, set.storageKeys]);
}
function _serializeEip1559(transaction, signature2) {
  if (transaction.gasPrice != null) {
    const gasPrice = BigNumber.from(transaction.gasPrice);
    const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);
    if (!gasPrice.eq(maxFeePerGas)) {
      logger12.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
        gasPrice,
        maxFeePerGas
      });
    }
  }
  const fields = [
    formatNumber(transaction.chainId || 0, "chainId"),
    formatNumber(transaction.nonce || 0, "nonce"),
    formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
    formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
    formatNumber(transaction.gasLimit || 0, "gasLimit"),
    transaction.to != null ? getAddress(transaction.to) : "0x",
    formatNumber(transaction.value || 0, "value"),
    transaction.data || "0x",
    formatAccessList(transaction.accessList || [])
  ];
  if (signature2) {
    const sig = splitSignature(signature2);
    fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
    fields.push(stripZeros(sig.r));
    fields.push(stripZeros(sig.s));
  }
  return hexConcat(["0x02", encode(fields)]);
}
function _serializeEip2930(transaction, signature2) {
  const fields = [
    formatNumber(transaction.chainId || 0, "chainId"),
    formatNumber(transaction.nonce || 0, "nonce"),
    formatNumber(transaction.gasPrice || 0, "gasPrice"),
    formatNumber(transaction.gasLimit || 0, "gasLimit"),
    transaction.to != null ? getAddress(transaction.to) : "0x",
    formatNumber(transaction.value || 0, "value"),
    transaction.data || "0x",
    formatAccessList(transaction.accessList || [])
  ];
  if (signature2) {
    const sig = splitSignature(signature2);
    fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
    fields.push(stripZeros(sig.r));
    fields.push(stripZeros(sig.s));
  }
  return hexConcat(["0x01", encode(fields)]);
}
function _serialize(transaction, signature2) {
  checkProperties(transaction, allowedTransactionKeys2);
  const raw = [];
  transactionFields.forEach(function(fieldInfo) {
    let value = transaction[fieldInfo.name] || [];
    const options = {};
    if (fieldInfo.numeric) {
      options.hexPad = "left";
    }
    value = arrayify(hexlify(value, options));
    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
      logger12.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
    }
    if (fieldInfo.maxLength) {
      value = stripZeros(value);
      if (value.length > fieldInfo.maxLength) {
        logger12.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
      }
    }
    raw.push(hexlify(value));
  });
  let chainId = 0;
  if (transaction.chainId != null) {
    chainId = transaction.chainId;
    if (typeof chainId !== "number") {
      logger12.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
    }
  } else if (signature2 && !isBytesLike(signature2) && signature2.v > 28) {
    chainId = Math.floor((signature2.v - 35) / 2);
  }
  if (chainId !== 0) {
    raw.push(hexlify(chainId));
    raw.push("0x");
    raw.push("0x");
  }
  if (!signature2) {
    return encode(raw);
  }
  const sig = splitSignature(signature2);
  let v = 27 + sig.recoveryParam;
  if (chainId !== 0) {
    raw.pop();
    raw.pop();
    raw.pop();
    v += chainId * 2 + 8;
    if (sig.v > 28 && sig.v !== v) {
      logger12.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature2);
    }
  } else if (sig.v !== v) {
    logger12.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature2);
  }
  raw.push(hexlify(v));
  raw.push(stripZeros(arrayify(sig.r)));
  raw.push(stripZeros(arrayify(sig.s)));
  return encode(raw);
}
function serialize(transaction, signature2) {
  if (transaction.type == null || transaction.type === 0) {
    if (transaction.accessList != null) {
      logger12.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
    }
    return _serialize(transaction, signature2);
  }
  switch (transaction.type) {
    case 1:
      return _serializeEip2930(transaction, signature2);
    case 2:
      return _serializeEip1559(transaction, signature2);
    default:
      break;
  }
  return logger12.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {
    operation: "serializeTransaction",
    transactionType: transaction.type
  });
}

// node_modules/@ethersproject/wordlists/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/wordlists/lib.esm/wordlist.js
init_shim();

// node_modules/@ethersproject/wordlists/lib.esm/_version.js
init_shim();
var version14 = "wordlists/5.6.0";

// node_modules/@ethersproject/wordlists/lib.esm/wordlist.js
var exportWordlist = false;
var logger13 = new Logger(version14);
var Wordlist = class {
  constructor(locale) {
    logger13.checkAbstract(new.target, Wordlist);
    defineReadOnly(this, "locale", locale);
  }
  split(mnemonic) {
    return mnemonic.toLowerCase().split(/ +/g);
  }
  join(words2) {
    return words2.join(" ");
  }
  static check(wordlist2) {
    const words2 = [];
    for (let i = 0; i < 2048; i++) {
      const word = wordlist2.getWord(i);
      if (i !== wordlist2.getWordIndex(word)) {
        return "0x";
      }
      words2.push(word);
    }
    return id(words2.join("\n") + "\n");
  }
  static register(lang, name) {
    if (!name) {
      name = lang.locale;
    }
    if (exportWordlist) {
      try {
        const anyGlobal2 = window;
        if (anyGlobal2._ethers && anyGlobal2._ethers.wordlists) {
          if (!anyGlobal2._ethers.wordlists[name]) {
            defineReadOnly(anyGlobal2._ethers.wordlists, name, lang);
          }
        }
      } catch (error) {
      }
    }
  }
};

// node_modules/@ethersproject/wordlists/lib.esm/wordlists.js
init_shim();

// node_modules/@ethersproject/wordlists/lib.esm/lang-en.js
init_shim();
var words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
var wordlist = null;
function loadWords(lang) {
  if (wordlist != null) {
    return;
  }
  wordlist = words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ");
  if (Wordlist.check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
    wordlist = null;
    throw new Error("BIP39 Wordlist for en (English) FAILED");
  }
}
var LangEn = class extends Wordlist {
  constructor() {
    super("en");
  }
  getWord(index) {
    loadWords(this);
    return wordlist[index];
  }
  getWordIndex(word) {
    loadWords(this);
    return wordlist.indexOf(word);
  }
};
var langEn = new LangEn();
Wordlist.register(langEn);

// node_modules/@ethersproject/wordlists/lib.esm/wordlists.js
var wordlists = {
  en: langEn
};

// node_modules/@ethersproject/hdnode/lib.esm/_version.js
init_shim();
var version15 = "hdnode/5.6.0";

// node_modules/@ethersproject/hdnode/lib.esm/index.js
var logger14 = new Logger(version15);
var N = BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
var MasterSecret = toUtf8Bytes("Bitcoin seed");
var HardenedBit = 2147483648;
function getUpperMask(bits) {
  return (1 << bits) - 1 << 8 - bits;
}
function getLowerMask(bits) {
  return (1 << bits) - 1;
}
function bytes32(value) {
  return hexZeroPad(hexlify(value), 32);
}
function base58check(data) {
  return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));
}
function getWordlist(wordlist2) {
  if (wordlist2 == null) {
    return wordlists["en"];
  }
  if (typeof wordlist2 === "string") {
    const words2 = wordlists[wordlist2];
    if (words2 == null) {
      logger14.throwArgumentError("unknown locale", "wordlist", wordlist2);
    }
    return words2;
  }
  return wordlist2;
}
var _constructorGuard2 = {};
var defaultPath = "m/44'/60'/0'/0/0";
var HDNode = class {
  constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {
    logger14.checkNew(new.target, HDNode);
    if (constructorGuard !== _constructorGuard2) {
      throw new Error("HDNode constructor cannot be called directly");
    }
    if (privateKey) {
      const signingKey = new SigningKey(privateKey);
      defineReadOnly(this, "privateKey", signingKey.privateKey);
      defineReadOnly(this, "publicKey", signingKey.compressedPublicKey);
    } else {
      defineReadOnly(this, "privateKey", null);
      defineReadOnly(this, "publicKey", hexlify(publicKey));
    }
    defineReadOnly(this, "parentFingerprint", parentFingerprint);
    defineReadOnly(this, "fingerprint", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));
    defineReadOnly(this, "address", computeAddress(this.publicKey));
    defineReadOnly(this, "chainCode", chainCode);
    defineReadOnly(this, "index", index);
    defineReadOnly(this, "depth", depth);
    if (mnemonicOrPath == null) {
      defineReadOnly(this, "mnemonic", null);
      defineReadOnly(this, "path", null);
    } else if (typeof mnemonicOrPath === "string") {
      defineReadOnly(this, "mnemonic", null);
      defineReadOnly(this, "path", mnemonicOrPath);
    } else {
      defineReadOnly(this, "mnemonic", mnemonicOrPath);
      defineReadOnly(this, "path", mnemonicOrPath.path);
    }
  }
  get extendedKey() {
    if (this.depth >= 256) {
      throw new Error("Depth too large!");
    }
    return base58check(concat([
      this.privateKey != null ? "0x0488ADE4" : "0x0488B21E",
      hexlify(this.depth),
      this.parentFingerprint,
      hexZeroPad(hexlify(this.index), 4),
      this.chainCode,
      this.privateKey != null ? concat(["0x00", this.privateKey]) : this.publicKey
    ]));
  }
  neuter() {
    return new HDNode(_constructorGuard2, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
  }
  _derive(index) {
    if (index > 4294967295) {
      throw new Error("invalid index - " + String(index));
    }
    let path = this.path;
    if (path) {
      path += "/" + (index & ~HardenedBit);
    }
    const data = new Uint8Array(37);
    if (index & HardenedBit) {
      if (!this.privateKey) {
        throw new Error("cannot derive child of neutered node");
      }
      data.set(arrayify(this.privateKey), 1);
      if (path) {
        path += "'";
      }
    } else {
      data.set(arrayify(this.publicKey));
    }
    for (let i = 24; i >= 0; i -= 8) {
      data[33 + (i >> 3)] = index >> 24 - i & 255;
    }
    const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));
    const IL = I.slice(0, 32);
    const IR = I.slice(32);
    let ki = null;
    let Ki = null;
    if (this.privateKey) {
      ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));
    } else {
      const ek = new SigningKey(hexlify(IL));
      Ki = ek._addPoint(this.publicKey);
    }
    let mnemonicOrPath = path;
    const srcMnemonic = this.mnemonic;
    if (srcMnemonic) {
      mnemonicOrPath = Object.freeze({
        phrase: srcMnemonic.phrase,
        path,
        locale: srcMnemonic.locale || "en"
      });
    }
    return new HDNode(_constructorGuard2, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);
  }
  derivePath(path) {
    const components = path.split("/");
    if (components.length === 0 || components[0] === "m" && this.depth !== 0) {
      throw new Error("invalid path - " + path);
    }
    if (components[0] === "m") {
      components.shift();
    }
    let result = this;
    for (let i = 0; i < components.length; i++) {
      const component = components[i];
      if (component.match(/^[0-9]+'$/)) {
        const index = parseInt(component.substring(0, component.length - 1));
        if (index >= HardenedBit) {
          throw new Error("invalid path index - " + component);
        }
        result = result._derive(HardenedBit + index);
      } else if (component.match(/^[0-9]+$/)) {
        const index = parseInt(component);
        if (index >= HardenedBit) {
          throw new Error("invalid path index - " + component);
        }
        result = result._derive(index);
      } else {
        throw new Error("invalid path component - " + component);
      }
    }
    return result;
  }
  static _fromSeed(seed, mnemonic) {
    const seedArray = arrayify(seed);
    if (seedArray.length < 16 || seedArray.length > 64) {
      throw new Error("invalid seed");
    }
    const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));
    return new HDNode(_constructorGuard2, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
  }
  static fromMnemonic(mnemonic, password, wordlist2) {
    wordlist2 = getWordlist(wordlist2);
    mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist2), wordlist2);
    return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
      phrase: mnemonic,
      path: "m",
      locale: wordlist2.locale
    });
  }
  static fromSeed(seed) {
    return HDNode._fromSeed(seed, null);
  }
  static fromExtendedKey(extendedKey) {
    const bytes = Base58.decode(extendedKey);
    if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {
      logger14.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    }
    const depth = bytes[4];
    const parentFingerprint = hexlify(bytes.slice(5, 9));
    const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);
    const chainCode = hexlify(bytes.slice(13, 45));
    const key2 = bytes.slice(45, 78);
    switch (hexlify(bytes.slice(0, 4))) {
      case "0x0488b21e":
      case "0x043587cf":
        return new HDNode(_constructorGuard2, null, hexlify(key2), parentFingerprint, chainCode, index, depth, null);
      case "0x0488ade4":
      case "0x04358394 ":
        if (key2[0] !== 0) {
          break;
        }
        return new HDNode(_constructorGuard2, hexlify(key2.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
    }
    return logger14.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
  }
};
function mnemonicToSeed(mnemonic, password) {
  if (!password) {
    password = "";
  }
  const salt = toUtf8Bytes("mnemonic" + password, UnicodeNormalizationForm.NFKD);
  return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, "sha512");
}
function mnemonicToEntropy(mnemonic, wordlist2) {
  wordlist2 = getWordlist(wordlist2);
  logger14.checkNormalize();
  const words2 = wordlist2.split(mnemonic);
  if (words2.length % 3 !== 0) {
    throw new Error("invalid mnemonic");
  }
  const entropy = arrayify(new Uint8Array(Math.ceil(11 * words2.length / 8)));
  let offset = 0;
  for (let i = 0; i < words2.length; i++) {
    let index = wordlist2.getWordIndex(words2[i].normalize("NFKD"));
    if (index === -1) {
      throw new Error("invalid mnemonic");
    }
    for (let bit = 0; bit < 11; bit++) {
      if (index & 1 << 10 - bit) {
        entropy[offset >> 3] |= 1 << 7 - offset % 8;
      }
      offset++;
    }
  }
  const entropyBits = 32 * words2.length / 3;
  const checksumBits = words2.length / 3;
  const checksumMask = getUpperMask(checksumBits);
  const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;
  if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
    throw new Error("invalid checksum");
  }
  return hexlify(entropy.slice(0, entropyBits / 8));
}
function entropyToMnemonic(entropy, wordlist2) {
  wordlist2 = getWordlist(wordlist2);
  entropy = arrayify(entropy);
  if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {
    throw new Error("invalid entropy");
  }
  const indices = [0];
  let remainingBits = 11;
  for (let i = 0; i < entropy.length; i++) {
    if (remainingBits > 8) {
      indices[indices.length - 1] <<= 8;
      indices[indices.length - 1] |= entropy[i];
      remainingBits -= 8;
    } else {
      indices[indices.length - 1] <<= remainingBits;
      indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits;
      indices.push(entropy[i] & getLowerMask(8 - remainingBits));
      remainingBits += 3;
    }
  }
  const checksumBits = entropy.length / 4;
  const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);
  indices[indices.length - 1] <<= checksumBits;
  indices[indices.length - 1] |= checksum >> 8 - checksumBits;
  return wordlist2.join(indices.map((index) => wordlist2.getWord(index)));
}

// node_modules/@ethersproject/random/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/random/lib.esm/random.js
init_shim();

// node_modules/@ethersproject/random/lib.esm/_version.js
init_shim();
var version16 = "random/5.6.0";

// node_modules/@ethersproject/random/lib.esm/random.js
var logger15 = new Logger(version16);
function getGlobal() {
  if (typeof self !== "undefined") {
    return self;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  throw new Error("unable to locate global object");
}
var anyGlobal = getGlobal();
var crypto = anyGlobal.crypto || anyGlobal.msCrypto;
if (!crypto || !crypto.getRandomValues) {
  logger15.warn("WARNING: Missing strong random number source");
  crypto = {
    getRandomValues: function(buffer) {
      return logger15.throwError("no secure random source avaialble", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "crypto.getRandomValues"
      });
    }
  };
}
function randomBytes(length) {
  if (length <= 0 || length > 1024 || length % 1 || length != length) {
    logger15.throwArgumentError("invalid length", "length", length);
  }
  const result = new Uint8Array(length);
  crypto.getRandomValues(result);
  return arrayify(result);
}

// node_modules/@ethersproject/json-wallets/lib.esm/index.js
init_shim();

// node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js
init_shim();
var import_aes_js = __toESM(require_aes_js());

// node_modules/@ethersproject/json-wallets/lib.esm/_version.js
init_shim();
var version17 = "json-wallets/5.6.0";

// node_modules/@ethersproject/json-wallets/lib.esm/utils.js
init_shim();
function looseArrayify(hexString) {
  if (typeof hexString === "string" && hexString.substring(0, 2) !== "0x") {
    hexString = "0x" + hexString;
  }
  return arrayify(hexString);
}
function zpad(value, length) {
  value = String(value);
  while (value.length < length) {
    value = "0" + value;
  }
  return value;
}
function getPassword(password) {
  if (typeof password === "string") {
    return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);
  }
  return arrayify(password);
}
function searchPath(object, path) {
  let currentChild = object;
  const comps = path.toLowerCase().split("/");
  for (let i = 0; i < comps.length; i++) {
    let matchingChild = null;
    for (const key2 in currentChild) {
      if (key2.toLowerCase() === comps[i]) {
        matchingChild = currentChild[key2];
        break;
      }
    }
    if (matchingChild === null) {
      return null;
    }
    currentChild = matchingChild;
  }
  return currentChild;
}
function uuidV4(randomBytes2) {
  const bytes = arrayify(randomBytes2);
  bytes[6] = bytes[6] & 15 | 64;
  bytes[8] = bytes[8] & 63 | 128;
  const value = hexlify(bytes);
  return [
    value.substring(2, 10),
    value.substring(10, 14),
    value.substring(14, 18),
    value.substring(18, 22),
    value.substring(22, 34)
  ].join("-");
}

// node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js
var logger16 = new Logger(version17);
var CrowdsaleAccount = class extends Description {
  isCrowdsaleAccount(value) {
    return !!(value && value._isCrowdsaleAccount);
  }
};
function decrypt(json, password) {
  const data = JSON.parse(json);
  password = getPassword(password);
  const ethaddr = getAddress(searchPath(data, "ethaddr"));
  const encseed = looseArrayify(searchPath(data, "encseed"));
  if (!encseed || encseed.length % 16 !== 0) {
    logger16.throwArgumentError("invalid encseed", "json", json);
  }
  const key2 = arrayify(pbkdf2(password, password, 2e3, 32, "sha256")).slice(0, 16);
  const iv = encseed.slice(0, 16);
  const encryptedSeed = encseed.slice(16);
  const aesCbc = new import_aes_js.default.ModeOfOperation.cbc(key2, iv);
  const seed = import_aes_js.default.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));
  let seedHex = "";
  for (let i = 0; i < seed.length; i++) {
    seedHex += String.fromCharCode(seed[i]);
  }
  const seedHexBytes = toUtf8Bytes(seedHex);
  const privateKey = keccak256(seedHexBytes);
  return new CrowdsaleAccount({
    _isCrowdsaleAccount: true,
    address: ethaddr,
    privateKey
  });
}

// node_modules/@ethersproject/json-wallets/lib.esm/inspect.js
init_shim();
function isCrowdsaleWallet(json) {
  let data = null;
  try {
    data = JSON.parse(json);
  } catch (error) {
    return false;
  }
  return data.encseed && data.ethaddr;
}
function isKeystoreWallet(json) {
  let data = null;
  try {
    data = JSON.parse(json);
  } catch (error) {
    return false;
  }
  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
    return false;
  }
  return true;
}

// node_modules/@ethersproject/json-wallets/lib.esm/keystore.js
init_shim();
var import_aes_js2 = __toESM(require_aes_js());
var import_scrypt_js = __toESM(require_scrypt());
var __awaiter5 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger17 = new Logger(version17);
function hasMnemonic(value) {
  return value != null && value.mnemonic && value.mnemonic.phrase;
}
var KeystoreAccount = class extends Description {
  isKeystoreAccount(value) {
    return !!(value && value._isKeystoreAccount);
  }
};
function _decrypt(data, key2, ciphertext) {
  const cipher = searchPath(data, "crypto/cipher");
  if (cipher === "aes-128-ctr") {
    const iv = looseArrayify(searchPath(data, "crypto/cipherparams/iv"));
    const counter = new import_aes_js2.default.Counter(iv);
    const aesCtr = new import_aes_js2.default.ModeOfOperation.ctr(key2, counter);
    return arrayify(aesCtr.decrypt(ciphertext));
  }
  return null;
}
function _getAccount(data, key2) {
  const ciphertext = looseArrayify(searchPath(data, "crypto/ciphertext"));
  const computedMAC = hexlify(keccak256(concat([key2.slice(16, 32), ciphertext]))).substring(2);
  if (computedMAC !== searchPath(data, "crypto/mac").toLowerCase()) {
    throw new Error("invalid password");
  }
  const privateKey = _decrypt(data, key2.slice(0, 16), ciphertext);
  if (!privateKey) {
    logger17.throwError("unsupported cipher", Logger.errors.UNSUPPORTED_OPERATION, {
      operation: "decrypt"
    });
  }
  const mnemonicKey = key2.slice(32, 64);
  const address = computeAddress(privateKey);
  if (data.address) {
    let check = data.address.toLowerCase();
    if (check.substring(0, 2) !== "0x") {
      check = "0x" + check;
    }
    if (getAddress(check) !== address) {
      throw new Error("address mismatch");
    }
  }
  const account = {
    _isKeystoreAccount: true,
    address,
    privateKey: hexlify(privateKey)
  };
  if (searchPath(data, "x-ethers/version") === "0.1") {
    const mnemonicCiphertext = looseArrayify(searchPath(data, "x-ethers/mnemonicCiphertext"));
    const mnemonicIv = looseArrayify(searchPath(data, "x-ethers/mnemonicCounter"));
    const mnemonicCounter = new import_aes_js2.default.Counter(mnemonicIv);
    const mnemonicAesCtr = new import_aes_js2.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
    const path = searchPath(data, "x-ethers/path") || defaultPath;
    const locale = searchPath(data, "x-ethers/locale") || "en";
    const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));
    try {
      const mnemonic = entropyToMnemonic(entropy, locale);
      const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);
      if (node.privateKey != account.privateKey) {
        throw new Error("mnemonic mismatch");
      }
      account.mnemonic = node.mnemonic;
    } catch (error) {
      if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== "wordlist") {
        throw error;
      }
    }
  }
  return new KeystoreAccount(account);
}
function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
  return arrayify(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));
}
function pbkdf22(passwordBytes, salt, count, dkLen, prfFunc) {
  return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
}
function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
  const passwordBytes = getPassword(password);
  const kdf = searchPath(data, "crypto/kdf");
  if (kdf && typeof kdf === "string") {
    const throwError = function(name, value) {
      return logger17.throwArgumentError("invalid key-derivation function parameters", name, value);
    };
    if (kdf.toLowerCase() === "scrypt") {
      const salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
      const N2 = parseInt(searchPath(data, "crypto/kdfparams/n"));
      const r = parseInt(searchPath(data, "crypto/kdfparams/r"));
      const p = parseInt(searchPath(data, "crypto/kdfparams/p"));
      if (!N2 || !r || !p) {
        throwError("kdf", kdf);
      }
      if ((N2 & N2 - 1) !== 0) {
        throwError("N", N2);
      }
      const dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
      if (dkLen !== 32) {
        throwError("dklen", dkLen);
      }
      return scryptFunc(passwordBytes, salt, N2, r, p, 64, progressCallback);
    } else if (kdf.toLowerCase() === "pbkdf2") {
      const salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
      let prfFunc = null;
      const prf = searchPath(data, "crypto/kdfparams/prf");
      if (prf === "hmac-sha256") {
        prfFunc = "sha256";
      } else if (prf === "hmac-sha512") {
        prfFunc = "sha512";
      } else {
        throwError("prf", prf);
      }
      const count = parseInt(searchPath(data, "crypto/kdfparams/c"));
      const dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
      if (dkLen !== 32) {
        throwError("dklen", dkLen);
      }
      return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);
    }
  }
  return logger17.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
}
function decryptSync(json, password) {
  const data = JSON.parse(json);
  const key2 = _computeKdfKey(data, password, pbkdf2Sync, import_scrypt_js.default.syncScrypt);
  return _getAccount(data, key2);
}
function decrypt2(json, password, progressCallback) {
  return __awaiter5(this, void 0, void 0, function* () {
    const data = JSON.parse(json);
    const key2 = yield _computeKdfKey(data, password, pbkdf22, import_scrypt_js.default.scrypt, progressCallback);
    return _getAccount(data, key2);
  });
}
function encrypt(account, password, options, progressCallback) {
  try {
    if (getAddress(account.address) !== computeAddress(account.privateKey)) {
      throw new Error("address/privateKey mismatch");
    }
    if (hasMnemonic(account)) {
      const mnemonic = account.mnemonic;
      const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);
      if (node.privateKey != account.privateKey) {
        throw new Error("mnemonic mismatch");
      }
    }
  } catch (e) {
    return Promise.reject(e);
  }
  if (typeof options === "function" && !progressCallback) {
    progressCallback = options;
    options = {};
  }
  if (!options) {
    options = {};
  }
  const privateKey = arrayify(account.privateKey);
  const passwordBytes = getPassword(password);
  let entropy = null;
  let path = null;
  let locale = null;
  if (hasMnemonic(account)) {
    const srcMnemonic = account.mnemonic;
    entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || "en"));
    path = srcMnemonic.path || defaultPath;
    locale = srcMnemonic.locale || "en";
  }
  let client = options.client;
  if (!client) {
    client = "ethers.js";
  }
  let salt = null;
  if (options.salt) {
    salt = arrayify(options.salt);
  } else {
    salt = randomBytes(32);
    ;
  }
  let iv = null;
  if (options.iv) {
    iv = arrayify(options.iv);
    if (iv.length !== 16) {
      throw new Error("invalid iv");
    }
  } else {
    iv = randomBytes(16);
  }
  let uuidRandom = null;
  if (options.uuid) {
    uuidRandom = arrayify(options.uuid);
    if (uuidRandom.length !== 16) {
      throw new Error("invalid uuid");
    }
  } else {
    uuidRandom = randomBytes(16);
  }
  let N2 = 1 << 17, r = 8, p = 1;
  if (options.scrypt) {
    if (options.scrypt.N) {
      N2 = options.scrypt.N;
    }
    if (options.scrypt.r) {
      r = options.scrypt.r;
    }
    if (options.scrypt.p) {
      p = options.scrypt.p;
    }
  }
  return import_scrypt_js.default.scrypt(passwordBytes, salt, N2, r, p, 64, progressCallback).then((key2) => {
    key2 = arrayify(key2);
    const derivedKey = key2.slice(0, 16);
    const macPrefix = key2.slice(16, 32);
    const mnemonicKey = key2.slice(32, 64);
    const counter = new import_aes_js2.default.Counter(iv);
    const aesCtr = new import_aes_js2.default.ModeOfOperation.ctr(derivedKey, counter);
    const ciphertext = arrayify(aesCtr.encrypt(privateKey));
    const mac = keccak256(concat([macPrefix, ciphertext]));
    const data = {
      address: account.address.substring(2).toLowerCase(),
      id: uuidV4(uuidRandom),
      version: 3,
      Crypto: {
        cipher: "aes-128-ctr",
        cipherparams: {
          iv: hexlify(iv).substring(2)
        },
        ciphertext: hexlify(ciphertext).substring(2),
        kdf: "scrypt",
        kdfparams: {
          salt: hexlify(salt).substring(2),
          n: N2,
          dklen: 32,
          p,
          r
        },
        mac: mac.substring(2)
      }
    };
    if (entropy) {
      const mnemonicIv = randomBytes(16);
      const mnemonicCounter = new import_aes_js2.default.Counter(mnemonicIv);
      const mnemonicAesCtr = new import_aes_js2.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
      const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));
      const now = new Date();
      const timestamp = now.getUTCFullYear() + "-" + zpad(now.getUTCMonth() + 1, 2) + "-" + zpad(now.getUTCDate(), 2) + "T" + zpad(now.getUTCHours(), 2) + "-" + zpad(now.getUTCMinutes(), 2) + "-" + zpad(now.getUTCSeconds(), 2) + ".0Z";
      data["x-ethers"] = {
        client,
        gethFilename: "UTC--" + timestamp + "--" + data.address,
        mnemonicCounter: hexlify(mnemonicIv).substring(2),
        mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),
        path,
        locale,
        version: "0.1"
      };
    }
    return JSON.stringify(data);
  });
}

// node_modules/@ethersproject/json-wallets/lib.esm/index.js
function decryptJsonWallet(json, password, progressCallback) {
  if (isCrowdsaleWallet(json)) {
    if (progressCallback) {
      progressCallback(0);
    }
    const account = decrypt(json, password);
    if (progressCallback) {
      progressCallback(1);
    }
    return Promise.resolve(account);
  }
  if (isKeystoreWallet(json)) {
    return decrypt2(json, password, progressCallback);
  }
  return Promise.reject(new Error("invalid JSON wallet"));
}
function decryptJsonWalletSync(json, password) {
  if (isCrowdsaleWallet(json)) {
    return decrypt(json, password);
  }
  if (isKeystoreWallet(json)) {
    return decryptSync(json, password);
  }
  throw new Error("invalid JSON wallet");
}

// node_modules/@ethersproject/wallet/lib.esm/_version.js
init_shim();
var version18 = "wallet/5.6.0";

// node_modules/@ethersproject/wallet/lib.esm/index.js
var __awaiter6 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger18 = new Logger(version18);
function isAccount(value) {
  return value != null && isHexString(value.privateKey, 32) && value.address != null;
}
function hasMnemonic2(value) {
  const mnemonic = value.mnemonic;
  return mnemonic && mnemonic.phrase;
}
var Wallet = class extends Signer {
  constructor(privateKey, provider) {
    logger18.checkNew(new.target, Wallet);
    super();
    if (isAccount(privateKey)) {
      const signingKey = new SigningKey(privateKey.privateKey);
      defineReadOnly(this, "_signingKey", () => signingKey);
      defineReadOnly(this, "address", computeAddress(this.publicKey));
      if (this.address !== getAddress(privateKey.address)) {
        logger18.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
      }
      if (hasMnemonic2(privateKey)) {
        const srcMnemonic = privateKey.mnemonic;
        defineReadOnly(this, "_mnemonic", () => ({
          phrase: srcMnemonic.phrase,
          path: srcMnemonic.path || defaultPath,
          locale: srcMnemonic.locale || "en"
        }));
        const mnemonic = this.mnemonic;
        const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);
        if (computeAddress(node.privateKey) !== this.address) {
          logger18.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
        }
      } else {
        defineReadOnly(this, "_mnemonic", () => null);
      }
    } else {
      if (SigningKey.isSigningKey(privateKey)) {
        if (privateKey.curve !== "secp256k1") {
          logger18.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
        }
        defineReadOnly(this, "_signingKey", () => privateKey);
      } else {
        if (typeof privateKey === "string") {
          if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {
            privateKey = "0x" + privateKey;
          }
        }
        const signingKey = new SigningKey(privateKey);
        defineReadOnly(this, "_signingKey", () => signingKey);
      }
      defineReadOnly(this, "_mnemonic", () => null);
      defineReadOnly(this, "address", computeAddress(this.publicKey));
    }
    if (provider && !Provider.isProvider(provider)) {
      logger18.throwArgumentError("invalid provider", "provider", provider);
    }
    defineReadOnly(this, "provider", provider || null);
  }
  get mnemonic() {
    return this._mnemonic();
  }
  get privateKey() {
    return this._signingKey().privateKey;
  }
  get publicKey() {
    return this._signingKey().publicKey;
  }
  getAddress() {
    return Promise.resolve(this.address);
  }
  connect(provider) {
    return new Wallet(this, provider);
  }
  signTransaction(transaction) {
    return resolveProperties(transaction).then((tx) => {
      if (tx.from != null) {
        if (getAddress(tx.from) !== this.address) {
          logger18.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
        }
        delete tx.from;
      }
      const signature2 = this._signingKey().signDigest(keccak256(serialize(tx)));
      return serialize(tx, signature2);
    });
  }
  signMessage(message) {
    return __awaiter6(this, void 0, void 0, function* () {
      return joinSignature(this._signingKey().signDigest(hashMessage(message)));
    });
  }
  _signTypedData(domain, types, value) {
    return __awaiter6(this, void 0, void 0, function* () {
      const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {
        if (this.provider == null) {
          logger18.throwError("cannot resolve ENS names without a provider", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "resolveName",
            value: name
          });
        }
        return this.provider.resolveName(name);
      });
      return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain, types, populated.value)));
    });
  }
  encrypt(password, options, progressCallback) {
    if (typeof options === "function" && !progressCallback) {
      progressCallback = options;
      options = {};
    }
    if (progressCallback && typeof progressCallback !== "function") {
      throw new Error("invalid callback");
    }
    if (!options) {
      options = {};
    }
    return encrypt(this, password, options, progressCallback);
  }
  static createRandom(options) {
    let entropy = randomBytes(16);
    if (!options) {
      options = {};
    }
    if (options.extraEntropy) {
      entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));
    }
    const mnemonic = entropyToMnemonic(entropy, options.locale);
    return Wallet.fromMnemonic(mnemonic, options.path, options.locale);
  }
  static fromEncryptedJson(json, password, progressCallback) {
    return decryptJsonWallet(json, password, progressCallback).then((account) => {
      return new Wallet(account);
    });
  }
  static fromEncryptedJsonSync(json, password) {
    return new Wallet(decryptJsonWalletSync(json, password));
  }
  static fromMnemonic(mnemonic, path, wordlist2) {
    if (!path) {
      path = defaultPath;
    }
    return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist2).derivePath(path));
  }
};

// src/wallet.js
var defaultPath2 = "m/44'/60'/0'/0/0";
var wordlists2 = import_bip39_light.default.wordlists;
var prefix = {
  tz1: new Uint8Array([6, 161, 159]),
  edsk: new Uint8Array([43, 246, 78, 7]),
  edpk: new Uint8Array([13, 15, 37, 217])
};
var b58cencode = function(payload, prefixArg) {
  var n = new Uint8Array(prefixArg.length + payload.length);
  n.set(prefixArg);
  n.set(payload, prefixArg.length);
  return import_bs58check.default.encode(Buffer2.from(n));
};
async function createEthereumWallet(phrase = (0, import_bip39_light2.generateMnemonic)(256), path = defaultPath2) {
  const w = Wallet.fromMnemonic(phrase, path);
  return {
    mnemonic: phrase,
    privateKey: w.privateKey,
    publicKey: w.publicKey,
    address: w.address
  };
}
async function createTezosWallet(mnemonic = (0, import_bip39_light2.generateMnemonic)(160)) {
  await import_libsodium_wrappers_sumo.default.ready;
  const s = (0, import_bip39_light2.mnemonicToSeed)(mnemonic).slice(0, 32);
  const kp = import_libsodium_wrappers_sumo.default.crypto_sign_seed_keypair(new Uint8Array(s));
  return {
    mnemonic,
    privateKey: b58cencode(kp.privateKey, prefix.edsk),
    publicKey: b58cencode(kp.publicKey, prefix.edpk),
    address: b58cencode(import_libsodium_wrappers_sumo.default.crypto_generichash(20, kp.publicKey), prefix.tz1)
  };
}
var export_generateMnemonic = import_bip39_light2.generateMnemonic;
var export_validateMnemonic = import_bip39_light2.validateMnemonic;
export {
  createEthereumWallet,
  createTezosWallet,
  defaultPath2 as defaultPath,
  export_generateMnemonic as generateMnemonic,
  export_validateMnemonic as validateMnemonic,
  wordlists2 as wordlists
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */
